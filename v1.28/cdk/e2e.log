  I0818 20:45:57.056106      19 e2e.go:117] Starting e2e run "d8b35882-9b68-4cc3-b1e5-a3f2fb0baf12" on Ginkgo node 1
  Aug 18 20:45:57.074: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1692391557 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Aug 18 20:45:57.211: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 20:45:57.212: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Aug 18 20:45:57.248: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Aug 18 20:45:57.254: INFO: 5 / 5 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Aug 18 20:45:57.254: INFO: e2e test version: v1.28.0
  Aug 18 20:45:57.255: INFO: kube-apiserver version: v1.28.0
  Aug 18 20:45:57.255: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 20:45:57.259: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.049 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 08/18/23 20:45:57.528
  Aug 18 20:45:57.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename cronjob @ 08/18/23 20:45:57.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:45:57.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:45:57.546
  STEP: Creating a ForbidConcurrent cronjob @ 08/18/23 20:45:57.549
  STEP: Ensuring a job is scheduled @ 08/18/23 20:45:57.553
  STEP: Ensuring exactly one is scheduled @ 08/18/23 20:46:01.557
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/18/23 20:46:01.561
  STEP: Ensuring no more jobs are scheduled @ 08/18/23 20:46:01.564
  STEP: Removing cronjob @ 08/18/23 20:51:01.573
  Aug 18 20:51:01.580: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4961" for this suite. @ 08/18/23 20:51:01.583
• [304.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 08/18/23 20:51:01.592
  Aug 18 20:51:01.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 20:51:01.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:51:01.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:51:01.613
  STEP: Setting up server cert @ 08/18/23 20:51:01.679
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 20:51:01.983
  STEP: Deploying the webhook pod @ 08/18/23 20:51:01.991
  STEP: Wait for the deployment to be ready @ 08/18/23 20:51:02.004
  Aug 18 20:51:02.013: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Aug 18 20:51:04.024: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 20:51:06.028: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 20, 51, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/18/23 20:51:08.028
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 20:51:08.038
  Aug 18 20:51:09.039: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 08/18/23 20:51:09.048
  STEP: Creating a custom resource definition that should be denied by the webhook @ 08/18/23 20:51:09.063
  Aug 18 20:51:09.063: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 20:51:09.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9724" for this suite. @ 08/18/23 20:51:09.12
  STEP: Destroying namespace "webhook-markers-161" for this suite. @ 08/18/23 20:51:09.127
• [7.542 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 08/18/23 20:51:09.133
  Aug 18 20:51:09.133: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption @ 08/18/23 20:51:09.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:51:09.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:51:09.15
  Aug 18 20:51:09.167: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 20:52:09.185: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/18/23 20:52:09.19
  Aug 18 20:52:09.211: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 18 20:52:09.217: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 18 20:52:09.236: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 18 20:52:09.245: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 18 20:52:09.261: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 18 20:52:09.267: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/18/23 20:52:09.267
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 08/18/23 20:52:13.301
  Aug 18 20:52:17.343: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1208" for this suite. @ 08/18/23 20:52:17.38
• [68.254 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 08/18/23 20:52:17.388
  Aug 18 20:52:17.388: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 20:52:17.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:17.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:17.407
  STEP: Creating a job @ 08/18/23 20:52:17.409
  STEP: Ensuring job reaches completions @ 08/18/23 20:52:17.416
  Aug 18 20:52:27.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1157" for this suite. @ 08/18/23 20:52:27.424
• [10.042 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 08/18/23 20:52:27.431
  Aug 18 20:52:27.431: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/18/23 20:52:27.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:27.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:27.449
  Aug 18 20:52:27.451: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 20:52:28.475: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2110" for this suite. @ 08/18/23 20:52:28.48
• [1.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 08/18/23 20:52:28.488
  Aug 18 20:52:28.488: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context @ 08/18/23 20:52:28.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:28.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:28.507
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/18/23 20:52:28.51
  STEP: Saw pod success @ 08/18/23 20:52:32.536
  Aug 18 20:52:32.540: INFO: Trying to get logs from node ip-172-31-15-95 pod security-context-25c8e61e-5883-49fe-b79a-a430037f5005 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 20:52:32.556
  Aug 18 20:52:32.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-6298" for this suite. @ 08/18/23 20:52:32.576
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 08/18/23 20:52:32.583
  Aug 18 20:52:32.583: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 20:52:32.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:32.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:32.601
  STEP: Creating projection with secret that has name projected-secret-test-6af68493-7c19-4f2d-845c-f4509d781f11 @ 08/18/23 20:52:32.603
  STEP: Creating a pod to test consume secrets @ 08/18/23 20:52:32.607
  STEP: Saw pod success @ 08/18/23 20:52:38.639
  Aug 18 20:52:38.642: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-secrets-5355e445-aafe-47d7-9299-8a2b4f447a80 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 20:52:38.65
  Aug 18 20:52:38.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9124" for this suite. @ 08/18/23 20:52:38.671
• [6.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 08/18/23 20:52:38.679
  Aug 18 20:52:38.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 20:52:38.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:38.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:38.696
  STEP: Counting existing ResourceQuota @ 08/18/23 20:52:38.699
  STEP: Creating a ResourceQuota @ 08/18/23 20:52:43.702
  STEP: Ensuring resource quota status is calculated @ 08/18/23 20:52:43.71
  STEP: Creating a Pod that fits quota @ 08/18/23 20:52:45.714
  STEP: Ensuring ResourceQuota status captures the pod usage @ 08/18/23 20:52:45.731
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 08/18/23 20:52:47.736
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 08/18/23 20:52:47.739
  STEP: Ensuring a pod cannot update its resource requirements @ 08/18/23 20:52:47.74
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 08/18/23 20:52:47.745
  STEP: Deleting the pod @ 08/18/23 20:52:49.749
  STEP: Ensuring resource quota status released the pod usage @ 08/18/23 20:52:49.766
  Aug 18 20:52:51.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3311" for this suite. @ 08/18/23 20:52:51.775
• [13.103 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 08/18/23 20:52:51.783
  Aug 18 20:52:51.783: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 20:52:51.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:52:51.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:52:51.8
  STEP: create the rc @ 08/18/23 20:52:51.807
  W0818 20:52:51.811123      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/18/23 20:52:55.826
  STEP: wait for the rc to be deleted @ 08/18/23 20:52:55.833
  Aug 18 20:52:56.855: INFO: 80 pods remaining
  Aug 18 20:52:56.855: INFO: 80 pods has nil DeletionTimestamp
  Aug 18 20:52:56.855: INFO: 
  Aug 18 20:52:57.852: INFO: 71 pods remaining
  Aug 18 20:52:57.852: INFO: 71 pods has nil DeletionTimestamp
  Aug 18 20:52:57.852: INFO: 
  Aug 18 20:52:58.848: INFO: 60 pods remaining
  Aug 18 20:52:58.848: INFO: 60 pods has nil DeletionTimestamp
  Aug 18 20:52:58.848: INFO: 
  Aug 18 20:52:59.848: INFO: 40 pods remaining
  Aug 18 20:52:59.848: INFO: 40 pods has nil DeletionTimestamp
  Aug 18 20:52:59.849: INFO: 
  Aug 18 20:53:00.852: INFO: 31 pods remaining
  Aug 18 20:53:00.852: INFO: 30 pods has nil DeletionTimestamp
  Aug 18 20:53:00.852: INFO: 
  Aug 18 20:53:01.843: INFO: 20 pods remaining
  Aug 18 20:53:01.843: INFO: 20 pods has nil DeletionTimestamp
  Aug 18 20:53:01.843: INFO: 
  STEP: Gathering metrics @ 08/18/23 20:53:02.858
  W0818 20:53:02.863536      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 20:53:02.863: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 20:53:02.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6548" for this suite. @ 08/18/23 20:53:02.868
• [11.092 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 08/18/23 20:53:02.876
  Aug 18 20:53:02.876: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 20:53:02.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:02.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:02.897
  STEP: Creating a pod to test downward api env vars @ 08/18/23 20:53:02.927
  STEP: Saw pod success @ 08/18/23 20:53:06.954
  Aug 18 20:53:06.957: INFO: Trying to get logs from node ip-172-31-15-95 pod downward-api-503d02da-bb90-4fd2-9a4d-9f8af03d8106 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 20:53:06.963
  Aug 18 20:53:06.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9023" for this suite. @ 08/18/23 20:53:06.983
• [4.115 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 08/18/23 20:53:06.991
  Aug 18 20:53:06.991: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 20:53:06.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:07.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:07.008
  STEP: Creating projection with secret that has name secret-emptykey-test-1aecb843-79dd-497b-9b52-4be4368972a4 @ 08/18/23 20:53:07.011
  Aug 18 20:53:07.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7308" for this suite. @ 08/18/23 20:53:07.017
• [0.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 08/18/23 20:53:07.025
  Aug 18 20:53:07.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 20:53:07.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:07.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:07.04
  STEP: creating a collection of services @ 08/18/23 20:53:07.043
  Aug 18 20:53:07.043: INFO: Creating e2e-svc-a-qbq9b
  Aug 18 20:53:07.054: INFO: Creating e2e-svc-b-hnbv6
  Aug 18 20:53:07.066: INFO: Creating e2e-svc-c-lv4j5
  STEP: deleting service collection @ 08/18/23 20:53:07.08
  Aug 18 20:53:07.110: INFO: Collection of services has been deleted
  Aug 18 20:53:07.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-993" for this suite. @ 08/18/23 20:53:07.114
• [0.095 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 08/18/23 20:53:07.12
  Aug 18 20:53:07.120: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 20:53:07.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:07.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:07.136
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 20:53:07.138
  STEP: Saw pod success @ 08/18/23 20:53:11.157
  Aug 18 20:53:11.160: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-afa15311-0e2f-45fd-b953-cc12956eef0c container client-container: <nil>
  STEP: delete the pod @ 08/18/23 20:53:11.169
  Aug 18 20:53:11.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5415" for this suite. @ 08/18/23 20:53:11.188
• [4.073 seconds]
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 08/18/23 20:53:11.194
  Aug 18 20:53:11.194: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename runtimeclass @ 08/18/23 20:53:11.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:11.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:11.215
  Aug 18 20:53:13.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4876" for this suite. @ 08/18/23 20:53:13.247
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 08/18/23 20:53:13.254
  Aug 18 20:53:13.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 20:53:13.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:13.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:13.272
  STEP: Creating a test externalName service @ 08/18/23 20:53:13.275
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:13.28
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:13.28
  STEP: creating a pod to probe DNS @ 08/18/23 20:53:13.28
  STEP: submitting the pod to kubernetes @ 08/18/23 20:53:13.28
  STEP: retrieving the pod @ 08/18/23 20:53:23.316
  STEP: looking for the results for each expected name from probers @ 08/18/23 20:53:23.32
  Aug 18 20:53:23.328: INFO: DNS probes using dns-test-92a4b00f-7729-47d8-93e4-53f0facc9330 succeeded

  STEP: changing the externalName to bar.example.com @ 08/18/23 20:53:23.328
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:23.336
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:23.336
  STEP: creating a second pod to probe DNS @ 08/18/23 20:53:23.336
  STEP: submitting the pod to kubernetes @ 08/18/23 20:53:23.336
  STEP: retrieving the pod @ 08/18/23 20:53:29.364
  STEP: looking for the results for each expected name from probers @ 08/18/23 20:53:29.369
  Aug 18 20:53:29.377: INFO: DNS probes using dns-test-d8ac8804-4228-417d-bbd6-cbe4fe41d8c3 succeeded

  STEP: changing the service to type=ClusterIP @ 08/18/23 20:53:29.377
  W0818 20:53:29.389922      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:29.389
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-2208.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-2208.svc.cluster.local; sleep 1; done
   @ 08/18/23 20:53:29.39
  STEP: creating a third pod to probe DNS @ 08/18/23 20:53:29.39
  STEP: submitting the pod to kubernetes @ 08/18/23 20:53:29.394
  STEP: retrieving the pod @ 08/18/23 20:53:31.414
  STEP: looking for the results for each expected name from probers @ 08/18/23 20:53:31.417
  Aug 18 20:53:31.427: INFO: DNS probes using dns-test-a8196994-3eca-407a-9a0e-80444fb7605e succeeded

  Aug 18 20:53:31.427: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 20:53:31.431
  STEP: deleting the pod @ 08/18/23 20:53:31.447
  STEP: deleting the pod @ 08/18/23 20:53:31.459
  STEP: deleting the test externalName service @ 08/18/23 20:53:31.472
  STEP: Destroying namespace "dns-2208" for this suite. @ 08/18/23 20:53:31.492
• [18.245 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 08/18/23 20:53:31.5
  Aug 18 20:53:31.500: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 20:53:31.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:31.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:31.518
  Aug 18 20:53:31.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  W0818 20:53:31.521947      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0015c36e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0818 20:53:34.067831      19 warnings.go:70] unknown field "alpha"
  W0818 20:53:34.067854      19 warnings.go:70] unknown field "beta"
  W0818 20:53:34.067860      19 warnings.go:70] unknown field "delta"
  W0818 20:53:34.067864      19 warnings.go:70] unknown field "epsilon"
  W0818 20:53:34.067873      19 warnings.go:70] unknown field "gamma"
  Aug 18 20:53:34.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7973" for this suite. @ 08/18/23 20:53:34.614
• [3.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 08/18/23 20:53:34.624
  Aug 18 20:53:34.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context-test @ 08/18/23 20:53:34.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:34.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:34.643
  Aug 18 20:53:40.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8638" for this suite. @ 08/18/23 20:53:40.676
• [6.059 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 08/18/23 20:53:40.684
  Aug 18 20:53:40.684: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 20:53:40.685
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:40.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:40.702
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 20:53:40.705
  STEP: Saw pod success @ 08/18/23 20:53:44.73
  Aug 18 20:53:44.734: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-af02647c-7951-41a5-8ed7-a312741cdf46 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 20:53:44.74
  Aug 18 20:53:44.754: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8245" for this suite. @ 08/18/23 20:53:44.759
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 08/18/23 20:53:44.768
  Aug 18 20:53:44.768: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 20:53:44.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:44.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:44.787
  STEP: Creating simple DaemonSet "daemon-set" @ 08/18/23 20:53:44.807
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 20:53:44.812
  Aug 18 20:53:44.816: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:44.817: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:44.820: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 20:53:44.820: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 20:53:45.824: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:45.824: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:45.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 20:53:45.830: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 20:53:46.825: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:46.825: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:46.829: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 20:53:46.829: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 20:53:47.826: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:47.826: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:47.829: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 20:53:47.829: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 20:53:48.825: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:48.825: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:48.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 18 20:53:48.830: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 20:53:49.825: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:49.825: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:49.828: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 20:53:49.828: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 08/18/23 20:53:49.832
  STEP: DeleteCollection of the DaemonSets @ 08/18/23 20:53:49.835
  STEP: Verify that ReplicaSets have been deleted @ 08/18/23 20:53:49.847
  Aug 18 20:53:49.866: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6617"},"items":null}

  Aug 18 20:53:49.872: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6619"},"items":[{"metadata":{"name":"daemon-set-qhddd","generateName":"daemon-set-","namespace":"daemonsets-9556","uid":"46118e2e-fa5e-46f6-8ca7-b5e835f625e1","resourceVersion":"6616","creationTimestamp":"2023-08-18T20:53:44Z","deletionTimestamp":"2023-08-18T20:54:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47b74b47-1402-4254-bf0c-b2f209f6e781","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47b74b47-1402-4254-bf0c-b2f209f6e781\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.165.105\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mdjgb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mdjgb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-82-98","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-82-98"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"}],"hostIP":"172.31.82.98","podIP":"192.168.165.105","podIPs":[{"ip":"192.168.165.105"}],"startTime":"2023-08-18T20:53:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-18T20:53:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://cd71303afa5f2eb06b5aee01ef54f6a9a4bf293cc31345f9c73702f0de4c9b7c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qxg2x","generateName":"daemon-set-","namespace":"daemonsets-9556","uid":"323c6aad-e305-4bbe-addb-8f9cf7445a38","resourceVersion":"6619","creationTimestamp":"2023-08-18T20:53:44Z","deletionTimestamp":"2023-08-18T20:54:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47b74b47-1402-4254-bf0c-b2f209f6e781","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47b74b47-1402-4254-bf0c-b2f209f6e781\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:49Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.159.167\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-9btdt","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-9btdt","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-20-82","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-20-82"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:49Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:49Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"}],"hostIP":"172.31.20.82","podIP":"192.168.159.167","podIPs":[{"ip":"192.168.159.167"}],"startTime":"2023-08-18T20:53:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-18T20:53:49Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://65796437217129cea6df073adb7868fd4214c7c0132cbbe7b568ba9988febd7c","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-sljd4","generateName":"daemon-set-","namespace":"daemonsets-9556","uid":"2b50f23c-fcad-4bbd-ac8d-1576e0826dae","resourceVersion":"6618","creationTimestamp":"2023-08-18T20:53:44Z","deletionTimestamp":"2023-08-18T20:54:19Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"47b74b47-1402-4254-bf0c-b2f209f6e781","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:44Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"47b74b47-1402-4254-bf0c-b2f209f6e781\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-08-18T20:53:47Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"192.168.189.241\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-7rcsc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-7rcsc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-15-95","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-15-95"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:47Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:47Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-08-18T20:53:44Z"}],"hostIP":"172.31.15.95","podIP":"192.168.189.241","podIPs":[{"ip":"192.168.189.241"}],"startTime":"2023-08-18T20:53:44Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-08-18T20:53:47Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://887dbbfe093bb67ae7d9b959ca94e8fc80d108f810fcaf7a51ffc80586681ccd","started":true}],"qosClass":"BestEffort"}}]}

  Aug 18 20:53:49.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9556" for this suite. @ 08/18/23 20:53:49.89
• [5.128 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 08/18/23 20:53:49.896
  Aug 18 20:53:49.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 20:53:49.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:49.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:49.915
  STEP: Creating simple DaemonSet "daemon-set" @ 08/18/23 20:53:49.943
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 20:53:49.949
  Aug 18 20:53:49.956: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:49.956: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:49.959: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 20:53:49.959: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 20:53:50.962: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:50.962: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 20:53:50.966: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 20:53:50.966: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 08/18/23 20:53:50.968
  Aug 18 20:53:50.973: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 08/18/23 20:53:50.973
  Aug 18 20:53:50.980: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 08/18/23 20:53:50.98
  Aug 18 20:53:50.983: INFO: Observed &DaemonSet event: ADDED
  Aug 18 20:53:50.983: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.983: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.983: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.984: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.984: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.984: INFO: Found daemon set daemon-set in namespace daemonsets-8420 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 18 20:53:50.984: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 08/18/23 20:53:50.984
  STEP: watching for the daemon set status to be patched @ 08/18/23 20:53:50.991
  Aug 18 20:53:50.993: INFO: Observed &DaemonSet event: ADDED
  Aug 18 20:53:50.993: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.993: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.993: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.993: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.994: INFO: Observed daemon set daemon-set in namespace daemonsets-8420 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 18 20:53:50.994: INFO: Observed &DaemonSet event: MODIFIED
  Aug 18 20:53:50.994: INFO: Found daemon set daemon-set in namespace daemonsets-8420 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Aug 18 20:53:50.994: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 20:53:50.997
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8420, will wait for the garbage collector to delete the pods @ 08/18/23 20:53:50.997
  Aug 18 20:53:51.058: INFO: Deleting DaemonSet.extensions daemon-set took: 6.058503ms
  Aug 18 20:53:51.159: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.611368ms
  Aug 18 20:53:54.962: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 20:53:54.962: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 20:53:54.966: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6737"},"items":null}

  Aug 18 20:53:54.968: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6737"},"items":null}

  Aug 18 20:53:54.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8420" for this suite. @ 08/18/23 20:53:54.987
• [5.098 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 08/18/23 20:53:54.995
  Aug 18 20:53:54.995: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sysctl @ 08/18/23 20:53:54.996
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:55.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:55.013
  STEP: Creating a pod with one valid and two invalid sysctls @ 08/18/23 20:53:55.016
  Aug 18 20:53:55.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-8427" for this suite. @ 08/18/23 20:53:55.024
• [0.035 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 08/18/23 20:53:55.031
  Aug 18 20:53:55.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 20:53:55.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:53:55.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:53:55.051
  STEP: Creating pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793 @ 08/18/23 20:53:55.054
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 20:53:57.075
  Aug 18 20:53:57.078: INFO: Initial restart count of pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 is 0
  Aug 18 20:53:57.081: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:53:59.087: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:01.091: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:03.095: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:05.102: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:07.105: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:09.110: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:11.116: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:13.120: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:15.126: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:17.131: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:19.137: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:21.141: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:23.146: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:25.153: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:27.158: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:29.164: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:31.169: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:33.174: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:35.180: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:37.185: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:39.191: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:41.195: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:43.201: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:45.206: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:47.211: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:49.215: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:51.220: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:53.227: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:55.231: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:57.237: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:54:59.242: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:55:01.247: INFO: Get pod test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 in namespace container-probe-7793
  Aug 18 20:55:01.247: INFO: Restart count of pod container-probe-7793/test-grpc-f63137ce-c431-4218-a812-a325cddcbbf3 is now 1 (1m4.169597406s elapsed)
  Aug 18 20:55:01.247: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 20:55:01.251
  STEP: Destroying namespace "container-probe-7793" for this suite. @ 08/18/23 20:55:01.262
• [66.238 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 08/18/23 20:55:01.27
  Aug 18 20:55:01.270: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename limitrange @ 08/18/23 20:55:01.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:55:01.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:55:01.289
  STEP: Creating a LimitRange @ 08/18/23 20:55:01.291
  STEP: Setting up watch @ 08/18/23 20:55:01.291
  STEP: Submitting a LimitRange @ 08/18/23 20:55:01.395
  STEP: Verifying LimitRange creation was observed @ 08/18/23 20:55:01.4
  STEP: Fetching the LimitRange to ensure it has proper values @ 08/18/23 20:55:01.4
  Aug 18 20:55:01.403: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 18 20:55:01.403: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 08/18/23 20:55:01.403
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 08/18/23 20:55:01.408
  Aug 18 20:55:01.416: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Aug 18 20:55:01.416: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 08/18/23 20:55:01.416
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 08/18/23 20:55:01.422
  Aug 18 20:55:01.427: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Aug 18 20:55:01.427: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 08/18/23 20:55:01.427
  STEP: Failing to create a Pod with more than max resources @ 08/18/23 20:55:01.429
  STEP: Updating a LimitRange @ 08/18/23 20:55:01.43
  STEP: Verifying LimitRange updating is effective @ 08/18/23 20:55:01.436
  STEP: Creating a Pod with less than former min resources @ 08/18/23 20:55:03.44
  STEP: Failing to create a Pod with more than max resources @ 08/18/23 20:55:03.447
  STEP: Deleting a LimitRange @ 08/18/23 20:55:03.449
  STEP: Verifying the LimitRange was deleted @ 08/18/23 20:55:03.458
  Aug 18 20:55:08.465: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 08/18/23 20:55:08.466
  Aug 18 20:55:08.473: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6166" for this suite. @ 08/18/23 20:55:08.477
• [7.213 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 08/18/23 20:55:08.483
  Aug 18 20:55:08.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 20:55:08.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:55:08.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:55:08.499
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 20:55:08.501
  STEP: Saw pod success @ 08/18/23 20:55:12.526
  Aug 18 20:55:12.530: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-9abc3e09-13b1-40a9-9458-317320bd4615 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 20:55:12.535
  Aug 18 20:55:12.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1850" for this suite. @ 08/18/23 20:55:12.553
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 08/18/23 20:55:12.561
  Aug 18 20:55:12.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 20:55:12.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:55:12.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:55:12.581
  STEP: Creating secret with name s-test-opt-del-67fdbacf-703b-4686-91a6-dc270acf3e6c @ 08/18/23 20:55:12.588
  STEP: Creating secret with name s-test-opt-upd-52790843-1e56-4778-85e0-9b5b2a688ef5 @ 08/18/23 20:55:12.593
  STEP: Creating the pod @ 08/18/23 20:55:12.595
  STEP: Deleting secret s-test-opt-del-67fdbacf-703b-4686-91a6-dc270acf3e6c @ 08/18/23 20:55:14.639
  STEP: Updating secret s-test-opt-upd-52790843-1e56-4778-85e0-9b5b2a688ef5 @ 08/18/23 20:55:14.644
  STEP: Creating secret with name s-test-opt-create-5d784e6a-3ff8-4bff-bdd8-f4aca3f91302 @ 08/18/23 20:55:14.65
  STEP: waiting to observe update in volume @ 08/18/23 20:55:14.653
  Aug 18 20:56:45.097: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1841" for this suite. @ 08/18/23 20:56:45.101
• [92.548 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 08/18/23 20:56:45.108
  Aug 18 20:56:45.108: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 20:56:45.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:45.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:45.129
  STEP: Creating the pod @ 08/18/23 20:56:45.131
  Aug 18 20:56:47.680: INFO: Successfully updated pod "labelsupdate1d914d54-4f32-4d93-972e-25fddb66ae05"
  Aug 18 20:56:51.701: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4726" for this suite. @ 08/18/23 20:56:51.705
• [6.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 08/18/23 20:56:51.713
  Aug 18 20:56:51.713: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-runtime @ 08/18/23 20:56:51.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:51.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:51.73
  STEP: create the container @ 08/18/23 20:56:51.732
  W0818 20:56:51.740735      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/18/23 20:56:51.74
  STEP: get the container status @ 08/18/23 20:56:54.758
  STEP: the container should be terminated @ 08/18/23 20:56:54.762
  STEP: the termination message should be set @ 08/18/23 20:56:54.762
  Aug 18 20:56:54.762: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 08/18/23 20:56:54.762
  Aug 18 20:56:54.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-335" for this suite. @ 08/18/23 20:56:54.777
• [3.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 08/18/23 20:56:54.788
  Aug 18 20:56:54.789: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename lease-test @ 08/18/23 20:56:54.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:54.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:54.805
  Aug 18 20:56:54.860: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-7385" for this suite. @ 08/18/23 20:56:54.863
• [0.082 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 08/18/23 20:56:54.871
  Aug 18 20:56:54.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 20:56:54.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:54.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:54.889
  Aug 18 20:56:54.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3612" for this suite. @ 08/18/23 20:56:54.899
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 08/18/23 20:56:54.906
  Aug 18 20:56:54.906: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename csistoragecapacity @ 08/18/23 20:56:54.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:54.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:54.923
  STEP: getting /apis @ 08/18/23 20:56:54.925
  STEP: getting /apis/storage.k8s.io @ 08/18/23 20:56:54.929
  STEP: getting /apis/storage.k8s.io/v1 @ 08/18/23 20:56:54.93
  STEP: creating @ 08/18/23 20:56:54.931
  STEP: watching @ 08/18/23 20:56:54.944
  Aug 18 20:56:54.944: INFO: starting watch
  STEP: getting @ 08/18/23 20:56:54.949
  STEP: listing in namespace @ 08/18/23 20:56:54.952
  STEP: listing across namespaces @ 08/18/23 20:56:54.956
  STEP: patching @ 08/18/23 20:56:54.958
  STEP: updating @ 08/18/23 20:56:54.963
  Aug 18 20:56:54.969: INFO: waiting for watch events with expected annotations in namespace
  Aug 18 20:56:54.969: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 08/18/23 20:56:54.969
  STEP: deleting a collection @ 08/18/23 20:56:54.98
  Aug 18 20:56:54.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3638" for this suite. @ 08/18/23 20:56:54.999
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 08/18/23 20:56:55.007
  Aug 18 20:56:55.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename cronjob @ 08/18/23 20:56:55.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 20:56:55.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 20:56:55.022
  STEP: Creating a suspended cronjob @ 08/18/23 20:56:55.024
  STEP: Ensuring no jobs are scheduled @ 08/18/23 20:56:55.03
  STEP: Ensuring no job exists by listing jobs explicitly @ 08/18/23 21:01:55.037
  STEP: Removing cronjob @ 08/18/23 21:01:55.042
  Aug 18 21:01:55.049: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5184" for this suite. @ 08/18/23 21:01:55.053
• [300.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 08/18/23 21:01:55.062
  Aug 18 21:01:55.062: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 21:01:55.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:01:55.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:01:55.082
  STEP: Creating namespace "e2e-ns-h7679" @ 08/18/23 21:01:55.084
  Aug 18 21:01:55.096: INFO: Namespace "e2e-ns-h7679-3355" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-h7679-3355" @ 08/18/23 21:01:55.096
  Aug 18 21:01:55.104: INFO: Namespace "e2e-ns-h7679-3355" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-h7679-3355" @ 08/18/23 21:01:55.104
  Aug 18 21:01:55.113: INFO: Namespace "e2e-ns-h7679-3355" has []v1.FinalizerName{"kubernetes"}
  Aug 18 21:01:55.113: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3788" for this suite. @ 08/18/23 21:01:55.116
  STEP: Destroying namespace "e2e-ns-h7679-3355" for this suite. @ 08/18/23 21:01:55.128
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 08/18/23 21:01:55.135
  Aug 18 21:01:55.135: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:01:55.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:01:55.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:01:55.153
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/18/23 21:01:55.156
  STEP: Saw pod success @ 08/18/23 21:01:59.178
  Aug 18 21:01:59.183: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-7c412bd4-ec4f-4474-8d4a-4cae398755e3 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:01:59.199
  Aug 18 21:01:59.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2606" for this suite. @ 08/18/23 21:01:59.216
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 08/18/23 21:01:59.222
  Aug 18 21:01:59.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:01:59.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:01:59.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:01:59.239
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/18/23 21:01:59.241
  Aug 18 21:01:59.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6965 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 18 21:01:59.300: INFO: stderr: ""
  Aug 18 21:01:59.300: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 08/18/23 21:01:59.3
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/18/23 21:02:04.352
  Aug 18 21:02:04.352: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6965 get pod e2e-test-httpd-pod -o json'
  Aug 18 21:02:04.398: INFO: stderr: ""
  Aug 18 21:02:04.398: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2023-08-18T21:01:59Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6965\",\n        \"resourceVersion\": \"8098\",\n        \"uid\": \"22c76d79-e944-4bd6-abb4-ae5f2ea55c15\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-2tcqx\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-15-95\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-2tcqx\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-18T21:01:59Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-18T21:02:00Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-18T21:02:00Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-08-18T21:01:59Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://2ef1df8ba785234f58a1dc41f3acdac4ba63f08e3dc299fb6df6f2b7cd09b935\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-08-18T21:01:59Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.15.95\",\n        \"phase\": \"Running\",\n        \"podIP\": \"192.168.189.248\",\n        \"podIPs\": [\n            {\n                \"ip\": \"192.168.189.248\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-08-18T21:01:59Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 08/18/23 21:02:04.398
  Aug 18 21:02:04.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6965 replace -f -'
  Aug 18 21:02:04.803: INFO: stderr: ""
  Aug 18 21:02:04.803: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 08/18/23 21:02:04.803
  Aug 18 21:02:04.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6965 delete pods e2e-test-httpd-pod'
  Aug 18 21:02:06.731: INFO: stderr: ""
  Aug 18 21:02:06.731: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 18 21:02:06.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6965" for this suite. @ 08/18/23 21:02:06.736
• [7.521 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 08/18/23 21:02:06.744
  Aug 18 21:02:06.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pod-network-test @ 08/18/23 21:02:06.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:02:06.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:02:06.762
  STEP: Performing setup for networking test in namespace pod-network-test-9401 @ 08/18/23 21:02:06.765
  STEP: creating a selector @ 08/18/23 21:02:06.765
  STEP: Creating the service pods in kubernetes @ 08/18/23 21:02:06.765
  Aug 18 21:02:06.765: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/18/23 21:02:28.865
  Aug 18 21:02:30.883: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 18 21:02:30.883: INFO: Breadth first check of 192.168.189.249 on host 172.31.15.95...
  Aug 18 21:02:30.887: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.250:9080/dial?request=hostname&protocol=http&host=192.168.189.249&port=8083&tries=1'] Namespace:pod-network-test-9401 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:02:30.887: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:02:30.888: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:02:30.888: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9401/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.189.249%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:02:30.969: INFO: Waiting for responses: map[]
  Aug 18 21:02:30.969: INFO: reached 192.168.189.249 after 0/1 tries
  Aug 18 21:02:30.969: INFO: Breadth first check of 192.168.159.170 on host 172.31.20.82...
  Aug 18 21:02:30.972: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.250:9080/dial?request=hostname&protocol=http&host=192.168.159.170&port=8083&tries=1'] Namespace:pod-network-test-9401 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:02:30.972: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:02:30.972: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:02:30.972: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9401/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.159.170%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:02:31.053: INFO: Waiting for responses: map[]
  Aug 18 21:02:31.053: INFO: reached 192.168.159.170 after 0/1 tries
  Aug 18 21:02:31.053: INFO: Breadth first check of 192.168.165.107 on host 172.31.82.98...
  Aug 18 21:02:31.057: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.250:9080/dial?request=hostname&protocol=http&host=192.168.165.107&port=8083&tries=1'] Namespace:pod-network-test-9401 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:02:31.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:02:31.058: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:02:31.058: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9401/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D192.168.165.107%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:02:31.117: INFO: Waiting for responses: map[]
  Aug 18 21:02:31.117: INFO: reached 192.168.165.107 after 0/1 tries
  Aug 18 21:02:31.117: INFO: Going to retry 0 out of 3 pods....
  Aug 18 21:02:31.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9401" for this suite. @ 08/18/23 21:02:31.121
• [24.386 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 08/18/23 21:02:31.13
  Aug 18 21:02:31.130: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 21:02:31.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:02:31.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:02:31.146
  Aug 18 21:02:31.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  W0818 21:02:33.695894      19 warnings.go:70] unknown field "alpha"
  W0818 21:02:33.695914      19 warnings.go:70] unknown field "beta"
  W0818 21:02:33.695919      19 warnings.go:70] unknown field "delta"
  W0818 21:02:33.695922      19 warnings.go:70] unknown field "epsilon"
  W0818 21:02:33.695925      19 warnings.go:70] unknown field "gamma"
  Aug 18 21:02:34.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4913" for this suite. @ 08/18/23 21:02:34.248
• [3.127 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 08/18/23 21:02:34.258
  Aug 18 21:02:34.258: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename init-container @ 08/18/23 21:02:34.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:02:34.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:02:34.276
  STEP: creating the pod @ 08/18/23 21:02:34.279
  Aug 18 21:02:34.279: INFO: PodSpec: initContainers in spec.initContainers
  Aug 18 21:03:20.856: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-bdaf3615-1789-4e7b-b180-2bf724f9b33d", GenerateName:"", Namespace:"init-container-5984", SelfLink:"", UID:"0cc61247-d2da-45c9-a317-7d05cb8be3d3", ResourceVersion:"8458", Generation:0, CreationTimestamp:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"279128990"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c98558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.August, 18, 21, 3, 20, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000c98588), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-vgjz7", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00329e360), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vgjz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vgjz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-vgjz7", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002abcab8), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-15-95", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0007e05b0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002abcb40)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002abcb60)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002abcb68), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc002abcb6c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000bfa2f0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.15.95", HostIPs:[]v1.HostIP(nil), PodIP:"192.168.189.251", PodIPs:[]v1.PodIP{v1.PodIP{IP:"192.168.189.251"}}, StartTime:time.Date(2023, time.August, 18, 21, 2, 34, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0007e0690)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0007e0700)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://13ec3281fc0a038a9f9ee74a8edce766a18abf41ba27555f9eca58b16d0fc81b", Started:(*bool)(0xc002abcc2a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00329e3e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc002abcc3f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00329e3c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc002abcc0f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Aug 18 21:03:20.857: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5984" for this suite. @ 08/18/23 21:03:20.861
• [46.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 08/18/23 21:03:20.869
  Aug 18 21:03:20.869: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:03:20.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:20.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:20.884
  STEP: fetching services @ 08/18/23 21:03:20.887
  Aug 18 21:03:20.889: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3850" for this suite. @ 08/18/23 21:03:20.894
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 08/18/23 21:03:20.902
  Aug 18 21:03:20.902: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:03:20.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:20.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:20.918
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 08/18/23 21:03:20.923
  Aug 18 21:03:20.924: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:03:22.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:03:27.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9515" for this suite. @ 08/18/23 21:03:27.492
• [6.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 08/18/23 21:03:27.501
  Aug 18 21:03:27.501: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename endpointslice @ 08/18/23 21:03:27.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:27.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:27.517
  Aug 18 21:03:27.568: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3049" for this suite. @ 08/18/23 21:03:27.571
• [0.079 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 08/18/23 21:03:27.58
  Aug 18 21:03:27.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:03:27.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:27.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:27.595
  STEP: Setting up server cert @ 08/18/23 21:03:27.617
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:03:27.855
  STEP: Deploying the webhook pod @ 08/18/23 21:03:27.861
  STEP: Wait for the deployment to be ready @ 08/18/23 21:03:27.87
  Aug 18 21:03:27.878: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:03:29.889
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:03:29.902
  Aug 18 21:03:30.903: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 08/18/23 21:03:30.911
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/18/23 21:03:30.926
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 08/18/23 21:03:30.933
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/18/23 21:03:30.943
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 08/18/23 21:03:30.953
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/18/23 21:03:30.96
  Aug 18 21:03:30.968: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2589" for this suite. @ 08/18/23 21:03:31.015
  STEP: Destroying namespace "webhook-markers-5661" for this suite. @ 08/18/23 21:03:31.027
• [3.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 08/18/23 21:03:31.036
  Aug 18 21:03:31.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:03:31.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:31.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:31.057
  STEP: set up a multi version CRD @ 08/18/23 21:03:31.059
  Aug 18 21:03:31.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: mark a version not serverd @ 08/18/23 21:03:34.247
  STEP: check the unserved version gets removed @ 08/18/23 21:03:34.265
  STEP: check the other version is not changed @ 08/18/23 21:03:34.997
  Aug 18 21:03:37.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6257" for this suite. @ 08/18/23 21:03:37.524
• [6.497 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 08/18/23 21:03:37.533
  Aug 18 21:03:37.533: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:03:37.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:37.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:37.547
  STEP: set up a multi version CRD @ 08/18/23 21:03:37.55
  Aug 18 21:03:37.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: rename a version @ 08/18/23 21:03:40.758
  STEP: check the new version name is served @ 08/18/23 21:03:40.77
  STEP: check the old version name is removed @ 08/18/23 21:03:41.495
  STEP: check the other version is not changed @ 08/18/23 21:03:42.112
  Aug 18 21:03:44.679: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4458" for this suite. @ 08/18/23 21:03:44.689
• [7.163 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 08/18/23 21:03:44.697
  Aug 18 21:03:44.697: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 21:03:44.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:44.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:44.717
  STEP: Updating Namespace "namespaces-5990" @ 08/18/23 21:03:44.719
  Aug 18 21:03:44.728: INFO: Namespace "namespaces-5990" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"d8b35882-9b68-4cc3-b1e5-a3f2fb0baf12", "kubernetes.io/metadata.name":"namespaces-5990", "namespaces-5990":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Aug 18 21:03:44.728: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5990" for this suite. @ 08/18/23 21:03:44.731
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 08/18/23 21:03:44.739
  Aug 18 21:03:44.739: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/18/23 21:03:44.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:44.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:44.757
  STEP: creating @ 08/18/23 21:03:44.76
  STEP: getting @ 08/18/23 21:03:44.776
  STEP: listing in namespace @ 08/18/23 21:03:44.78
  STEP: patching @ 08/18/23 21:03:44.784
  STEP: deleting @ 08/18/23 21:03:44.795
  Aug 18 21:03:44.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-588" for this suite. @ 08/18/23 21:03:44.809
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 08/18/23 21:03:44.818
  Aug 18 21:03:44.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:03:44.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:44.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:44.884
  STEP: Creating secret with name projected-secret-test-3d0748c9-8875-4c35-99e7-d2ad1f3833a3 @ 08/18/23 21:03:44.887
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:03:44.893
  STEP: Saw pod success @ 08/18/23 21:03:48.931
  Aug 18 21:03:48.934: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-secrets-bee1aaea-387b-41e5-9d17-7b005348541d container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:03:48.948
  Aug 18 21:03:48.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9002" for this suite. @ 08/18/23 21:03:48.966
• [4.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 08/18/23 21:03:48.977
  Aug 18 21:03:48.978: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 21:03:48.979
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:48.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:48.998
  Aug 18 21:03:49.001: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:03:52.071: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5124" for this suite. @ 08/18/23 21:03:52.087
• [3.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 08/18/23 21:03:52.094
  Aug 18 21:03:52.094: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 21:03:52.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:52.113
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:52.116
  Aug 18 21:03:52.118: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  W0818 21:03:54.662397      19 warnings.go:70] unknown field "alpha"
  W0818 21:03:54.662422      19 warnings.go:70] unknown field "beta"
  W0818 21:03:54.662426      19 warnings.go:70] unknown field "delta"
  W0818 21:03:54.662430      19 warnings.go:70] unknown field "epsilon"
  W0818 21:03:54.662437      19 warnings.go:70] unknown field "gamma"
  Aug 18 21:03:55.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3702" for this suite. @ 08/18/23 21:03:55.206
• [3.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 08/18/23 21:03:55.219
  Aug 18 21:03:55.219: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption @ 08/18/23 21:03:55.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:55.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:55.248
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:03:55.254
  STEP: Updating PodDisruptionBudget status @ 08/18/23 21:03:57.263
  STEP: Waiting for all pods to be running @ 08/18/23 21:03:57.269
  Aug 18 21:03:57.273: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 08/18/23 21:03:59.278
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:03:59.289
  STEP: Patching PodDisruptionBudget status @ 08/18/23 21:03:59.296
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:03:59.306
  Aug 18 21:03:59.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6446" for this suite. @ 08/18/23 21:03:59.312
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 08/18/23 21:03:59.319
  Aug 18 21:03:59.319: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:03:59.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:03:59.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:03:59.343
  STEP: Creating configMap with name configmap-test-volume-d99cebb5-d57f-4536-aa9f-93c8617fac1b @ 08/18/23 21:03:59.345
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:03:59.349
  STEP: Saw pod success @ 08/18/23 21:04:03.369
  Aug 18 21:04:03.373: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-configmaps-7b2e763c-3581-46f9-a36d-1433449fb5a2 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:04:03.393
  Aug 18 21:04:03.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6807" for this suite. @ 08/18/23 21:04:03.414
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 08/18/23 21:04:03.423
  Aug 18 21:04:03.424: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption @ 08/18/23 21:04:03.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:04:03.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:04:03.445
  STEP: Creating a kubernetes client @ 08/18/23 21:04:03.449
  Aug 18 21:04:03.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption-2 @ 08/18/23 21:04:03.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:04:03.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:04:03.474
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:04:03.483
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:04:05.499
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:04:07.518
  STEP: listing a collection of PDBs across all namespaces @ 08/18/23 21:04:09.526
  STEP: listing a collection of PDBs in namespace disruption-5633 @ 08/18/23 21:04:09.529
  STEP: deleting a collection of PDBs @ 08/18/23 21:04:09.533
  STEP: Waiting for the PDB collection to be deleted @ 08/18/23 21:04:09.547
  Aug 18 21:04:09.551: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:04:09.555: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9579" for this suite. @ 08/18/23 21:04:09.559
  STEP: Destroying namespace "disruption-5633" for this suite. @ 08/18/23 21:04:09.567
• [6.151 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 08/18/23 21:04:09.574
  Aug 18 21:04:09.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:04:09.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:04:09.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:04:09.596
  STEP: creating the pod @ 08/18/23 21:04:09.598
  STEP: setting up watch @ 08/18/23 21:04:09.598
  STEP: submitting the pod to kubernetes @ 08/18/23 21:04:09.702
  STEP: verifying the pod is in kubernetes @ 08/18/23 21:04:09.713
  STEP: verifying pod creation was observed @ 08/18/23 21:04:09.717
  STEP: deleting the pod gracefully @ 08/18/23 21:04:11.73
  STEP: verifying pod deletion was observed @ 08/18/23 21:04:11.736
  Aug 18 21:04:12.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6900" for this suite. @ 08/18/23 21:04:12.981
• [3.413 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 08/18/23 21:04:12.989
  Aug 18 21:04:12.989: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename watch @ 08/18/23 21:04:12.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:04:13.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:04:13.009
  STEP: creating a watch on configmaps with label A @ 08/18/23 21:04:13.012
  STEP: creating a watch on configmaps with label B @ 08/18/23 21:04:13.014
  STEP: creating a watch on configmaps with label A or B @ 08/18/23 21:04:13.015
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 08/18/23 21:04:13.016
  Aug 18 21:04:13.024: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9034 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:13.024: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9034 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 08/18/23 21:04:13.024
  Aug 18 21:04:13.035: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9035 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:13.035: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9035 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 08/18/23 21:04:13.035
  Aug 18 21:04:13.045: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9036 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:13.045: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9036 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 08/18/23 21:04:13.046
  Aug 18 21:04:13.055: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9037 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:13.055: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8305  12517258-f303-4dc5-b4a2-1308cd125459 9037 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 08/18/23 21:04:13.055
  Aug 18 21:04:13.062: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8305  c952a55a-a8b4-4af2-8690-d21bf87182f5 9038 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:13.062: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8305  c952a55a-a8b4-4af2-8690-d21bf87182f5 9038 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 08/18/23 21:04:23.062
  Aug 18 21:04:23.073: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8305  c952a55a-a8b4-4af2-8690-d21bf87182f5 9086 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:23.074: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8305  c952a55a-a8b4-4af2-8690-d21bf87182f5 9086 0 2023-08-18 21:04:13 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-08-18 21:04:13 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:04:33.074: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8305" for this suite. @ 08/18/23 21:04:33.081
• [20.101 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 08/18/23 21:04:33.09
  Aug 18 21:04:33.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:04:33.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:04:33.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:04:33.113
  STEP: Creating service test in namespace statefulset-7799 @ 08/18/23 21:04:33.115
  STEP: Creating a new StatefulSet @ 08/18/23 21:04:33.121
  Aug 18 21:04:33.131: INFO: Found 0 stateful pods, waiting for 3
  Aug 18 21:04:43.135: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:04:43.135: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:04:43.135: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:04:43.145: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-7799 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:04:43.278: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:04:43.279: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:04:43.279: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/18/23 21:04:53.297
  Aug 18 21:04:53.315: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/18/23 21:04:53.315
  STEP: Updating Pods in reverse ordinal order @ 08/18/23 21:05:03.33
  Aug 18 21:05:03.334: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-7799 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:05:03.458: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:05:03.458: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:05:03.458: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:05:13.479: INFO: Waiting for StatefulSet statefulset-7799/ss2 to complete update
  Aug 18 21:05:13.479: INFO: Waiting for Pod statefulset-7799/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 08/18/23 21:05:23.489
  Aug 18 21:05:23.489: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-7799 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:05:23.615: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:05:23.615: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:05:23.615: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:05:33.650: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 08/18/23 21:05:43.666
  Aug 18 21:05:43.669: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-7799 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:05:43.788: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:05:43.788: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:05:43.788: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:05:53.810: INFO: Deleting all statefulset in ns statefulset-7799
  Aug 18 21:05:53.815: INFO: Scaling statefulset ss2 to 0
  Aug 18 21:06:03.833: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:06:03.837: INFO: Deleting statefulset ss2
  Aug 18 21:06:03.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7799" for this suite. @ 08/18/23 21:06:03.854
• [90.771 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 08/18/23 21:06:03.861
  Aug 18 21:06:03.861: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:06:03.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:06:03.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:06:03.883
  STEP: Creating secret with name s-test-opt-del-848e97f4-10cc-4f12-9f56-4e9a2d5cb31c @ 08/18/23 21:06:03.89
  STEP: Creating secret with name s-test-opt-upd-dd7d901b-e009-4602-8ef7-ef92a9360e84 @ 08/18/23 21:06:03.895
  STEP: Creating the pod @ 08/18/23 21:06:03.901
  STEP: Deleting secret s-test-opt-del-848e97f4-10cc-4f12-9f56-4e9a2d5cb31c @ 08/18/23 21:06:05.949
  STEP: Updating secret s-test-opt-upd-dd7d901b-e009-4602-8ef7-ef92a9360e84 @ 08/18/23 21:06:05.955
  STEP: Creating secret with name s-test-opt-create-2e8c428b-4a14-4e3c-b734-d71cb4d50c71 @ 08/18/23 21:06:05.962
  STEP: waiting to observe update in volume @ 08/18/23 21:06:05.966
  Aug 18 21:07:14.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7336" for this suite. @ 08/18/23 21:07:14.28
• [70.427 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 08/18/23 21:07:14.289
  Aug 18 21:07:14.289: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:07:14.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:07:14.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:07:14.308
  STEP: Creating resourceQuota "e2e-rq-status-5p8pl" @ 08/18/23 21:07:14.314
  Aug 18 21:07:14.321: INFO: Resource quota "e2e-rq-status-5p8pl" reports spec: hard cpu limit of 500m
  Aug 18 21:07:14.321: INFO: Resource quota "e2e-rq-status-5p8pl" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-5p8pl" /status @ 08/18/23 21:07:14.321
  STEP: Confirm /status for "e2e-rq-status-5p8pl" resourceQuota via watch @ 08/18/23 21:07:14.331
  Aug 18 21:07:14.332: INFO: observed resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList(nil)
  Aug 18 21:07:14.332: INFO: Found resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 18 21:07:14.333: INFO: ResourceQuota "e2e-rq-status-5p8pl" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 08/18/23 21:07:14.335
  Aug 18 21:07:14.340: INFO: Resource quota "e2e-rq-status-5p8pl" reports spec: hard cpu limit of 1
  Aug 18 21:07:14.340: INFO: Resource quota "e2e-rq-status-5p8pl" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-5p8pl" /status @ 08/18/23 21:07:14.34
  STEP: Confirm /status for "e2e-rq-status-5p8pl" resourceQuota via watch @ 08/18/23 21:07:14.346
  Aug 18 21:07:14.347: INFO: observed resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Aug 18 21:07:14.347: INFO: Found resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 18 21:07:14.347: INFO: ResourceQuota "e2e-rq-status-5p8pl" /status was patched
  STEP: Get "e2e-rq-status-5p8pl" /status @ 08/18/23 21:07:14.347
  Aug 18 21:07:14.350: INFO: Resourcequota "e2e-rq-status-5p8pl" reports status: hard cpu of 1
  Aug 18 21:07:14.350: INFO: Resourcequota "e2e-rq-status-5p8pl" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-5p8pl" /status before checking Spec is unchanged @ 08/18/23 21:07:14.353
  Aug 18 21:07:14.363: INFO: Resourcequota "e2e-rq-status-5p8pl" reports status: hard cpu of 2
  Aug 18 21:07:14.363: INFO: Resourcequota "e2e-rq-status-5p8pl" reports status: hard memory of 2Gi
  Aug 18 21:07:14.364: INFO: observed resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Aug 18 21:07:14.364: INFO: Found resourceQuota "e2e-rq-status-5p8pl" in namespace "resourcequota-5266" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  Aug 18 21:12:04.371: INFO: ResourceQuota "e2e-rq-status-5p8pl" Spec was unchanged and /status reset
  Aug 18 21:12:04.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5266" for this suite. @ 08/18/23 21:12:04.375
• [290.093 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 08/18/23 21:12:04.383
  Aug 18 21:12:04.383: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:12:04.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:04.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:04.407
  STEP: Creating a pod to test downward api env vars @ 08/18/23 21:12:04.409
  STEP: Saw pod success @ 08/18/23 21:12:08.434
  Aug 18 21:12:08.437: INFO: Trying to get logs from node ip-172-31-15-95 pod downward-api-5131c903-3aa0-4f47-8c3a-f81d68034732 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:12:08.453
  Aug 18 21:12:08.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9499" for this suite. @ 08/18/23 21:12:08.475
• [4.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 08/18/23 21:12:08.482
  Aug 18 21:12:08.482: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 21:12:08.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:08.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:08.502
  Aug 18 21:12:08.526: INFO: created pod pod-service-account-defaultsa
  Aug 18 21:12:08.526: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Aug 18 21:12:08.532: INFO: created pod pod-service-account-mountsa
  Aug 18 21:12:08.532: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Aug 18 21:12:08.538: INFO: created pod pod-service-account-nomountsa
  Aug 18 21:12:08.538: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Aug 18 21:12:08.542: INFO: created pod pod-service-account-defaultsa-mountspec
  Aug 18 21:12:08.542: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Aug 18 21:12:08.549: INFO: created pod pod-service-account-mountsa-mountspec
  Aug 18 21:12:08.549: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Aug 18 21:12:08.558: INFO: created pod pod-service-account-nomountsa-mountspec
  Aug 18 21:12:08.558: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Aug 18 21:12:08.564: INFO: created pod pod-service-account-defaultsa-nomountspec
  Aug 18 21:12:08.564: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Aug 18 21:12:08.571: INFO: created pod pod-service-account-mountsa-nomountspec
  Aug 18 21:12:08.571: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Aug 18 21:12:08.577: INFO: created pod pod-service-account-nomountsa-nomountspec
  Aug 18 21:12:08.577: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Aug 18 21:12:08.577: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5178" for this suite. @ 08/18/23 21:12:08.582
• [0.108 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 08/18/23 21:12:08.591
  Aug 18 21:12:08.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename endpointslice @ 08/18/23 21:12:08.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:08.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:08.616
  STEP: referencing a single matching pod @ 08/18/23 21:12:13.689
  STEP: referencing matching pods with named port @ 08/18/23 21:12:18.699
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 08/18/23 21:12:23.709
  STEP: recreating EndpointSlices after they've been deleted @ 08/18/23 21:12:28.718
  Aug 18 21:12:28.737: INFO: EndpointSlice for Service endpointslice-1869/example-named-port not found
  Aug 18 21:12:38.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1869" for this suite. @ 08/18/23 21:12:38.751
• [30.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 08/18/23 21:12:38.759
  Aug 18 21:12:38.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubelet-test @ 08/18/23 21:12:38.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:38.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:38.779
  Aug 18 21:12:42.798: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7798" for this suite. @ 08/18/23 21:12:42.803
• [4.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 08/18/23 21:12:42.812
  Aug 18 21:12:42.812: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:12:42.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:42.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:42.829
  STEP: Creating the pod @ 08/18/23 21:12:42.831
  Aug 18 21:12:45.369: INFO: Successfully updated pod "annotationupdate2a8472ec-cf0a-4fe5-aca0-da3c8cb0fa87"
  Aug 18 21:12:47.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3345" for this suite. @ 08/18/23 21:12:47.388
• [4.583 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 08/18/23 21:12:47.395
  Aug 18 21:12:47.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:12:47.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:12:47.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:12:47.415
  STEP: Setting up server cert @ 08/18/23 21:12:47.437
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:12:47.576
  STEP: Deploying the webhook pod @ 08/18/23 21:12:47.585
  STEP: Wait for the deployment to be ready @ 08/18/23 21:12:47.597
  Aug 18 21:12:47.605: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:12:49.617
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:12:49.629
  Aug 18 21:12:50.629: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/18/23 21:12:50.638
  STEP: create a pod that should be denied by the webhook @ 08/18/23 21:12:50.653
  STEP: create a pod that causes the webhook to hang @ 08/18/23 21:12:50.664
  STEP: create a configmap that should be denied by the webhook @ 08/18/23 21:13:00.673
  STEP: create a configmap that should be admitted by the webhook @ 08/18/23 21:13:00.833
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/18/23 21:13:00.843
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 08/18/23 21:13:00.851
  STEP: create a namespace that bypass the webhook @ 08/18/23 21:13:00.857
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 08/18/23 21:13:00.874
  Aug 18 21:13:00.882: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-250" for this suite. @ 08/18/23 21:13:00.934
  STEP: Destroying namespace "webhook-markers-4725" for this suite. @ 08/18/23 21:13:00.944
  STEP: Destroying namespace "exempted-namespace-753" for this suite. @ 08/18/23 21:13:00.949
• [13.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 08/18/23 21:13:00.956
  Aug 18 21:13:00.956: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:13:00.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:13:00.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:13:00.977
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 08/18/23 21:13:00.983
  Aug 18 21:13:00.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 08/18/23 21:13:06.128
  Aug 18 21:13:06.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:13:07.395: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:13:12.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8837" for this suite. @ 08/18/23 21:13:12.481
• [11.536 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 08/18/23 21:13:12.493
  Aug 18 21:13:12.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename csiinlinevolumes @ 08/18/23 21:13:12.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:13:12.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:13:12.513
  STEP: Creating two CSIDrivers @ 08/18/23 21:13:12.518
  STEP: Getting "inline-driver-deab8ecc-e37b-4f98-8e56-e66483d861e5" & "inline-driver-9aed2ded-84f8-4c6c-8e7a-90b3bad6c432" @ 08/18/23 21:13:12.534
  STEP: Patching the CSIDriver "inline-driver-9aed2ded-84f8-4c6c-8e7a-90b3bad6c432" @ 08/18/23 21:13:12.539
  STEP: Updating the CSIDriver "inline-driver-9aed2ded-84f8-4c6c-8e7a-90b3bad6c432" @ 08/18/23 21:13:12.546
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1392" @ 08/18/23 21:13:12.553
  STEP: Deleting CSIDriver "inline-driver-deab8ecc-e37b-4f98-8e56-e66483d861e5" @ 08/18/23 21:13:12.557
  STEP: Confirm deletion of CSIDriver "inline-driver-deab8ecc-e37b-4f98-8e56-e66483d861e5" @ 08/18/23 21:13:12.562
  STEP: Deleting CSIDriver "inline-driver-9aed2ded-84f8-4c6c-8e7a-90b3bad6c432" via DeleteCollection @ 08/18/23 21:13:12.566
  STEP: Confirm deletion of CSIDriver "inline-driver-9aed2ded-84f8-4c6c-8e7a-90b3bad6c432" @ 08/18/23 21:13:12.574
  Aug 18 21:13:12.576: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1392" for this suite. @ 08/18/23 21:13:12.58
• [0.092 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 08/18/23 21:13:12.586
  Aug 18 21:13:12.586: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:13:12.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:13:12.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:13:12.606
  Aug 18 21:13:12.617: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Aug 18 21:13:17.621: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 21:13:17.621
  Aug 18 21:13:17.622: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 08/18/23 21:13:17.631
  Aug 18 21:13:17.642: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1675",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21b855b1-a8bc-4930-b8c0-db547d18106e",
      ResourceVersion: (string) (len=5) "11153",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827989997,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 21:13:17.646: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Aug 18 21:13:17.646: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Aug 18 21:13:17.647: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1675",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a0b3e8b-cbe1-467f-acdb-95605af6b0ae",
      ResourceVersion: (string) (len=5) "11154",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827989992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "21b855b1-a8bc-4930-b8c0-db547d18106e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 32 31 62 38 35 35 62  |"uid\":\"21b855b|
              00000040  31 2d 61 38 62 63 2d 34  39 33 30 2d 62 38 63 30  |1-a8bc-4930-b8c0|
              00000050  2d 64 62 35 34 37 64 31  38 31 30 36 65 5c 22 7d  |-db547d18106e\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:13:17.652: INFO: Pod "test-cleanup-controller-5pt8q" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-5pt8q",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-1675",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5031fb4-4b36-49ce-a139-94a5faa98aca",
      ResourceVersion: (string) (len=5) "11143",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827989992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "1a0b3e8b-cbe1-467f-acdb-95605af6b0ae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  31 61 30 62 33 65 38 62  |uid\":\"1a0b3e8b|
              00000080  2d 63 62 65 31 2d 34 36  37 66 2d 61 63 64 62 2d  |-cbe1-467f-acdb-|
              00000090  39 35 36 30 35 61 66 36  62 30 61 65 5c 22 7d 22  |95605af6b0ae\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 32 34 5c  |192.168.189.224\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8462x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8462x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827989992,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.224",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.224"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827989992,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827989993,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://77d9ed46c1e4909102938d31c8ac30baf65599c66b20cc636a148bda5b597bef",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:13:17.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1675" for this suite. @ 08/18/23 21:13:17.662
• [5.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 08/18/23 21:13:17.672
  Aug 18 21:13:17.672: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:13:17.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:13:17.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:13:17.695
  Aug 18 21:13:17.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/18/23 21:13:18.94
  Aug 18 21:13:18.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9346 --namespace=crd-publish-openapi-9346 create -f -'
  Aug 18 21:13:19.273: INFO: stderr: ""
  Aug 18 21:13:19.273: INFO: stdout: "e2e-test-crd-publish-openapi-8734-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 18 21:13:19.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9346 --namespace=crd-publish-openapi-9346 delete e2e-test-crd-publish-openapi-8734-crds test-cr'
  Aug 18 21:13:19.327: INFO: stderr: ""
  Aug 18 21:13:19.327: INFO: stdout: "e2e-test-crd-publish-openapi-8734-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Aug 18 21:13:19.327: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9346 --namespace=crd-publish-openapi-9346 apply -f -'
  Aug 18 21:13:19.434: INFO: stderr: ""
  Aug 18 21:13:19.434: INFO: stdout: "e2e-test-crd-publish-openapi-8734-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Aug 18 21:13:19.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9346 --namespace=crd-publish-openapi-9346 delete e2e-test-crd-publish-openapi-8734-crds test-cr'
  Aug 18 21:13:19.487: INFO: stderr: ""
  Aug 18 21:13:19.487: INFO: stdout: "e2e-test-crd-publish-openapi-8734-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/18/23 21:13:19.487
  Aug 18 21:13:19.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9346 explain e2e-test-crd-publish-openapi-8734-crds'
  Aug 18 21:13:19.578: INFO: stderr: ""
  Aug 18 21:13:19.578: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8734-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Aug 18 21:13:20.877: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9346" for this suite. @ 08/18/23 21:13:20.887
• [3.222 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 08/18/23 21:13:20.895
  Aug 18 21:13:20.895: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:13:20.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:13:20.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:13:20.912
  STEP: Creating service test in namespace statefulset-7890 @ 08/18/23 21:13:20.915
  STEP: Creating a new StatefulSet @ 08/18/23 21:13:20.922
  Aug 18 21:13:20.931: INFO: Found 0 stateful pods, waiting for 3
  Aug 18 21:13:30.936: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:13:30.936: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:13:30.936: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 08/18/23 21:13:30.947
  Aug 18 21:13:30.966: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 08/18/23 21:13:30.966
  STEP: Not applying an update when the partition is greater than the number of replicas @ 08/18/23 21:13:40.984
  STEP: Performing a canary update @ 08/18/23 21:13:40.984
  Aug 18 21:13:41.005: INFO: Updating stateful set ss2
  Aug 18 21:13:41.011: INFO: Waiting for Pod statefulset-7890/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 08/18/23 21:13:51.023
  Aug 18 21:13:51.064: INFO: Found 2 stateful pods, waiting for 3
  Aug 18 21:14:01.070: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:14:01.070: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:14:01.070: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 08/18/23 21:14:01.078
  Aug 18 21:14:01.098: INFO: Updating stateful set ss2
  Aug 18 21:14:01.108: INFO: Waiting for Pod statefulset-7890/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 18 21:14:11.139: INFO: Updating stateful set ss2
  Aug 18 21:14:11.146: INFO: Waiting for StatefulSet statefulset-7890/ss2 to complete update
  Aug 18 21:14:11.146: INFO: Waiting for Pod statefulset-7890/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Aug 18 21:14:21.154: INFO: Deleting all statefulset in ns statefulset-7890
  Aug 18 21:14:21.158: INFO: Scaling statefulset ss2 to 0
  Aug 18 21:14:31.179: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:14:31.182: INFO: Deleting statefulset ss2
  Aug 18 21:14:31.197: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7890" for this suite. @ 08/18/23 21:14:31.201
• [70.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 08/18/23 21:14:31.208
  Aug 18 21:14:31.208: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename proxy @ 08/18/23 21:14:31.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:14:31.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:14:31.226
  STEP: starting an echo server on multiple ports @ 08/18/23 21:14:31.243
  STEP: creating replication controller proxy-service-vszzg in namespace proxy-6585 @ 08/18/23 21:14:31.243
  I0818 21:14:31.249953      19 runners.go:197] Created replication controller with name: proxy-service-vszzg, namespace: proxy-6585, replica count: 1
  I0818 21:14:32.300945      19 runners.go:197] proxy-service-vszzg Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 21:14:32.308: INFO: setup took 1.079173098s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 08/18/23 21:14:32.308
  Aug 18 21:14:32.331: INFO: (0) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 22.873188ms)
  Aug 18 21:14:32.334: INFO: (0) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 26.149979ms)
  Aug 18 21:14:32.336: INFO: (0) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 27.614576ms)
  Aug 18 21:14:32.337: INFO: (0) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 28.962192ms)
  Aug 18 21:14:32.344: INFO: (0) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 36.35741ms)
  Aug 18 21:14:32.344: INFO: (0) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 36.249658ms)
  Aug 18 21:14:32.346: INFO: (0) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 37.949381ms)
  Aug 18 21:14:32.347: INFO: (0) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 38.856867ms)
  Aug 18 21:14:32.347: INFO: (0) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 39.406537ms)
  Aug 18 21:14:32.347: INFO: (0) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 39.223924ms)
  Aug 18 21:14:32.348: INFO: (0) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 39.476039ms)
  Aug 18 21:14:32.348: INFO: (0) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 39.752804ms)
  Aug 18 21:14:32.348: INFO: (0) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 40.257943ms)
  Aug 18 21:14:32.349: INFO: (0) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 41.031078ms)
  Aug 18 21:14:32.351: INFO: (0) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 43.018045ms)
  Aug 18 21:14:32.351: INFO: (0) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 43.453433ms)
  Aug 18 21:14:32.366: INFO: (1) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 14.789606ms)
  Aug 18 21:14:32.367: INFO: (1) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 14.9662ms)
  Aug 18 21:14:32.367: INFO: (1) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 15.291786ms)
  Aug 18 21:14:32.367: INFO: (1) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 15.822626ms)
  Aug 18 21:14:32.368: INFO: (1) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 16.604861ms)
  Aug 18 21:14:32.369: INFO: (1) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 17.789684ms)
  Aug 18 21:14:32.372: INFO: (1) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 20.620986ms)
  Aug 18 21:14:32.373: INFO: (1) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 21.446052ms)
  Aug 18 21:14:32.373: INFO: (1) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 21.541763ms)
  Aug 18 21:14:32.377: INFO: (1) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 24.842685ms)
  Aug 18 21:14:32.377: INFO: (1) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 25.289173ms)
  Aug 18 21:14:32.377: INFO: (1) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 25.023088ms)
  Aug 18 21:14:32.377: INFO: (1) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 25.281013ms)
  Aug 18 21:14:32.377: INFO: (1) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 25.312964ms)
  Aug 18 21:14:32.379: INFO: (1) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 27.767649ms)
  Aug 18 21:14:32.380: INFO: (1) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 27.926813ms)
  Aug 18 21:14:32.390: INFO: (2) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 10.066478ms)
  Aug 18 21:14:32.394: INFO: (2) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 14.554652ms)
  Aug 18 21:14:32.396: INFO: (2) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 16.02847ms)
  Aug 18 21:14:32.403: INFO: (2) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 22.811067ms)
  Aug 18 21:14:32.403: INFO: (2) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 23.703594ms)
  Aug 18 21:14:32.404: INFO: (2) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 23.856166ms)
  Aug 18 21:14:32.404: INFO: (2) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 24.302825ms)
  Aug 18 21:14:32.405: INFO: (2) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 25.355154ms)
  Aug 18 21:14:32.406: INFO: (2) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 25.855324ms)
  Aug 18 21:14:32.406: INFO: (2) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 25.968155ms)
  Aug 18 21:14:32.407: INFO: (2) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 26.586007ms)
  Aug 18 21:14:32.407: INFO: (2) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 27.736139ms)
  Aug 18 21:14:32.407: INFO: (2) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 27.598836ms)
  Aug 18 21:14:32.408: INFO: (2) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 27.549406ms)
  Aug 18 21:14:32.408: INFO: (2) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 27.434783ms)
  Aug 18 21:14:32.408: INFO: (2) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 27.449414ms)
  Aug 18 21:14:32.416: INFO: (3) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.249664ms)
  Aug 18 21:14:32.417: INFO: (3) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 9.559119ms)
  Aug 18 21:14:32.418: INFO: (3) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 10.353174ms)
  Aug 18 21:14:32.419: INFO: (3) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 11.082497ms)
  Aug 18 21:14:32.421: INFO: (3) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 12.905282ms)
  Aug 18 21:14:32.421: INFO: (3) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 12.865181ms)
  Aug 18 21:14:32.421: INFO: (3) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 12.83859ms)
  Aug 18 21:14:32.422: INFO: (3) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 13.818309ms)
  Aug 18 21:14:32.423: INFO: (3) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 14.767367ms)
  Aug 18 21:14:32.423: INFO: (3) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 15.563031ms)
  Aug 18 21:14:32.424: INFO: (3) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 16.312575ms)
  Aug 18 21:14:32.424: INFO: (3) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 16.56104ms)
  Aug 18 21:14:32.425: INFO: (3) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 16.993978ms)
  Aug 18 21:14:32.425: INFO: (3) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 17.246263ms)
  Aug 18 21:14:32.426: INFO: (3) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 18.22671ms)
  Aug 18 21:14:32.427: INFO: (3) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 19.089788ms)
  Aug 18 21:14:32.434: INFO: (4) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 7.156254ms)
  Aug 18 21:14:32.435: INFO: (4) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 7.753466ms)
  Aug 18 21:14:32.435: INFO: (4) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 8.370627ms)
  Aug 18 21:14:32.435: INFO: (4) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.317646ms)
  Aug 18 21:14:32.437: INFO: (4) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 9.678961ms)
  Aug 18 21:14:32.437: INFO: (4) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 10.363405ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 10.621388ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 10.454005ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 10.599859ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 10.811513ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 10.875784ms)
  Aug 18 21:14:32.438: INFO: (4) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 10.928065ms)
  Aug 18 21:14:32.439: INFO: (4) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 11.794521ms)
  Aug 18 21:14:32.439: INFO: (4) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 12.035745ms)
  Aug 18 21:14:32.439: INFO: (4) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 12.2624ms)
  Aug 18 21:14:32.440: INFO: (4) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 13.211258ms)
  Aug 18 21:14:32.444: INFO: (5) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 3.472025ms)
  Aug 18 21:14:32.444: INFO: (5) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 3.75168ms)
  Aug 18 21:14:32.445: INFO: (5) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 4.734519ms)
  Aug 18 21:14:32.445: INFO: (5) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 4.84265ms)
  Aug 18 21:14:32.446: INFO: (5) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.164976ms)
  Aug 18 21:14:32.446: INFO: (5) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 5.762558ms)
  Aug 18 21:14:32.447: INFO: (5) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 6.224486ms)
  Aug 18 21:14:32.447: INFO: (5) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 6.40825ms)
  Aug 18 21:14:32.448: INFO: (5) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 7.199725ms)
  Aug 18 21:14:32.448: INFO: (5) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.359758ms)
  Aug 18 21:14:32.448: INFO: (5) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 7.656784ms)
  Aug 18 21:14:32.448: INFO: (5) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 7.942918ms)
  Aug 18 21:14:32.449: INFO: (5) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 8.342686ms)
  Aug 18 21:14:32.449: INFO: (5) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.802385ms)
  Aug 18 21:14:32.450: INFO: (5) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 9.093331ms)
  Aug 18 21:14:32.451: INFO: (5) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 10.287853ms)
  Aug 18 21:14:32.454: INFO: (6) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 3.297072ms)
  Aug 18 21:14:32.456: INFO: (6) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 4.965313ms)
  Aug 18 21:14:32.456: INFO: (6) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 4.914852ms)
  Aug 18 21:14:32.457: INFO: (6) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 5.642846ms)
  Aug 18 21:14:32.457: INFO: (6) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 5.825669ms)
  Aug 18 21:14:32.457: INFO: (6) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.928361ms)
  Aug 18 21:14:32.458: INFO: (6) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 6.542753ms)
  Aug 18 21:14:32.458: INFO: (6) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.170004ms)
  Aug 18 21:14:32.459: INFO: (6) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 7.625043ms)
  Aug 18 21:14:32.459: INFO: (6) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 7.804217ms)
  Aug 18 21:14:32.459: INFO: (6) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 8.242644ms)
  Aug 18 21:14:32.459: INFO: (6) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.351716ms)
  Aug 18 21:14:32.460: INFO: (6) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 8.527449ms)
  Aug 18 21:14:32.460: INFO: (6) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.776834ms)
  Aug 18 21:14:32.461: INFO: (6) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 9.346775ms)
  Aug 18 21:14:32.461: INFO: (6) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 10.13152ms)
  Aug 18 21:14:32.464: INFO: (7) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 2.983866ms)
  Aug 18 21:14:32.466: INFO: (7) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 4.337261ms)
  Aug 18 21:14:32.466: INFO: (7) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 4.915812ms)
  Aug 18 21:14:32.467: INFO: (7) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 4.953942ms)
  Aug 18 21:14:32.467: INFO: (7) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 5.448692ms)
  Aug 18 21:14:32.468: INFO: (7) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 6.152324ms)
  Aug 18 21:14:32.468: INFO: (7) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 6.375849ms)
  Aug 18 21:14:32.469: INFO: (7) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 7.129963ms)
  Aug 18 21:14:32.469: INFO: (7) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 7.006061ms)
  Aug 18 21:14:32.469: INFO: (7) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 7.369198ms)
  Aug 18 21:14:32.469: INFO: (7) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 7.667824ms)
  Aug 18 21:14:32.470: INFO: (7) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.324136ms)
  Aug 18 21:14:32.470: INFO: (7) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.55678ms)
  Aug 18 21:14:32.470: INFO: (7) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 8.816305ms)
  Aug 18 21:14:32.471: INFO: (7) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 9.07068ms)
  Aug 18 21:14:32.472: INFO: (7) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.933806ms)
  Aug 18 21:14:32.476: INFO: (8) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 4.196529ms)
  Aug 18 21:14:32.477: INFO: (8) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 5.462842ms)
  Aug 18 21:14:32.477: INFO: (8) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.519644ms)
  Aug 18 21:14:32.479: INFO: (8) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.752497ms)
  Aug 18 21:14:32.479: INFO: (8) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 6.663865ms)
  Aug 18 21:14:32.479: INFO: (8) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 7.040971ms)
  Aug 18 21:14:32.479: INFO: (8) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 7.036332ms)
  Aug 18 21:14:32.480: INFO: (8) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 7.918359ms)
  Aug 18 21:14:32.480: INFO: (8) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.968119ms)
  Aug 18 21:14:32.480: INFO: (8) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 7.97867ms)
  Aug 18 21:14:32.480: INFO: (8) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 8.124493ms)
  Aug 18 21:14:32.481: INFO: (8) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 8.723053ms)
  Aug 18 21:14:32.481: INFO: (8) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.54284ms)
  Aug 18 21:14:32.481: INFO: (8) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.334075ms)
  Aug 18 21:14:32.482: INFO: (8) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 9.431106ms)
  Aug 18 21:14:32.482: INFO: (8) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.709831ms)
  Aug 18 21:14:32.486: INFO: (9) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 4.30734ms)
  Aug 18 21:14:32.487: INFO: (9) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 5.099645ms)
  Aug 18 21:14:32.487: INFO: (9) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.784478ms)
  Aug 18 21:14:32.488: INFO: (9) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 5.997042ms)
  Aug 18 21:14:32.488: INFO: (9) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 5.88952ms)
  Aug 18 21:14:32.489: INFO: (9) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 7.208365ms)
  Aug 18 21:14:32.489: INFO: (9) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 7.273236ms)
  Aug 18 21:14:32.490: INFO: (9) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.925238ms)
  Aug 18 21:14:32.490: INFO: (9) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.052381ms)
  Aug 18 21:14:32.490: INFO: (9) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.00809ms)
  Aug 18 21:14:32.490: INFO: (9) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.225465ms)
  Aug 18 21:14:32.490: INFO: (9) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 8.456669ms)
  Aug 18 21:14:32.491: INFO: (9) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 8.958467ms)
  Aug 18 21:14:32.491: INFO: (9) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.111331ms)
  Aug 18 21:14:32.491: INFO: (9) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 9.463157ms)
  Aug 18 21:14:32.492: INFO: (9) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 10.102289ms)
  Aug 18 21:14:32.496: INFO: (10) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 4.044395ms)
  Aug 18 21:14:32.497: INFO: (10) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 4.377242ms)
  Aug 18 21:14:32.498: INFO: (10) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.571415ms)
  Aug 18 21:14:32.498: INFO: (10) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 6.029803ms)
  Aug 18 21:14:32.499: INFO: (10) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 7.005972ms)
  Aug 18 21:14:32.499: INFO: (10) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 6.724316ms)
  Aug 18 21:14:32.500: INFO: (10) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 7.369588ms)
  Aug 18 21:14:32.500: INFO: (10) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 7.598322ms)
  Aug 18 21:14:32.500: INFO: (10) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.756716ms)
  Aug 18 21:14:32.500: INFO: (10) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 7.779316ms)
  Aug 18 21:14:32.501: INFO: (10) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 8.135542ms)
  Aug 18 21:14:32.501: INFO: (10) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.115982ms)
  Aug 18 21:14:32.501: INFO: (10) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.843846ms)
  Aug 18 21:14:32.501: INFO: (10) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 8.923527ms)
  Aug 18 21:14:32.502: INFO: (10) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.675061ms)
  Aug 18 21:14:32.503: INFO: (10) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 10.16478ms)
  Aug 18 21:14:32.507: INFO: (11) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 4.546725ms)
  Aug 18 21:14:32.508: INFO: (11) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 4.83328ms)
  Aug 18 21:14:32.508: INFO: (11) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 5.232538ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 6.889759ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 7.277806ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.604372ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 7.528351ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.370988ms)
  Aug 18 21:14:32.510: INFO: (11) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 7.357218ms)
  Aug 18 21:14:32.511: INFO: (11) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 8.140693ms)
  Aug 18 21:14:32.511: INFO: (11) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 8.284636ms)
  Aug 18 21:14:32.512: INFO: (11) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 8.52418ms)
  Aug 18 21:14:32.512: INFO: (11) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 8.935618ms)
  Aug 18 21:14:32.512: INFO: (11) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 9.518628ms)
  Aug 18 21:14:32.512: INFO: (11) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.481398ms)
  Aug 18 21:14:32.513: INFO: (11) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 10.077859ms)
  Aug 18 21:14:32.517: INFO: (12) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 3.79033ms)
  Aug 18 21:14:32.518: INFO: (12) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 4.333301ms)
  Aug 18 21:14:32.518: INFO: (12) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 5.086425ms)
  Aug 18 21:14:32.519: INFO: (12) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 5.122856ms)
  Aug 18 21:14:32.519: INFO: (12) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.152075ms)
  Aug 18 21:14:32.520: INFO: (12) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 6.674725ms)
  Aug 18 21:14:32.520: INFO: (12) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.925059ms)
  Aug 18 21:14:32.520: INFO: (12) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 6.884979ms)
  Aug 18 21:14:32.521: INFO: (12) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.703894ms)
  Aug 18 21:14:32.521: INFO: (12) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 7.901288ms)
  Aug 18 21:14:32.522: INFO: (12) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 8.509309ms)
  Aug 18 21:14:32.522: INFO: (12) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.014429ms)
  Aug 18 21:14:32.522: INFO: (12) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.757034ms)
  Aug 18 21:14:32.522: INFO: (12) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.929057ms)
  Aug 18 21:14:32.524: INFO: (12) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 10.435246ms)
  Aug 18 21:14:32.524: INFO: (12) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 10.926054ms)
  Aug 18 21:14:32.528: INFO: (13) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 3.613198ms)
  Aug 18 21:14:32.530: INFO: (13) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 5.294149ms)
  Aug 18 21:14:32.530: INFO: (13) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 4.943102ms)
  Aug 18 21:14:32.530: INFO: (13) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 5.531824ms)
  Aug 18 21:14:32.530: INFO: (13) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 5.862301ms)
  Aug 18 21:14:32.531: INFO: (13) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 6.226257ms)
  Aug 18 21:14:32.531: INFO: (13) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.810798ms)
  Aug 18 21:14:32.532: INFO: (13) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.578372ms)
  Aug 18 21:14:32.533: INFO: (13) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.076021ms)
  Aug 18 21:14:32.533: INFO: (13) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 8.120492ms)
  Aug 18 21:14:32.533: INFO: (13) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 9.060949ms)
  Aug 18 21:14:32.533: INFO: (13) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 8.785794ms)
  Aug 18 21:14:32.534: INFO: (13) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.363645ms)
  Aug 18 21:14:32.534: INFO: (13) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 9.274524ms)
  Aug 18 21:14:32.534: INFO: (13) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 9.770543ms)
  Aug 18 21:14:32.535: INFO: (13) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 10.733961ms)
  Aug 18 21:14:32.540: INFO: (14) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 4.510394ms)
  Aug 18 21:14:32.540: INFO: (14) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 4.737389ms)
  Aug 18 21:14:32.541: INFO: (14) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 5.252218ms)
  Aug 18 21:14:32.541: INFO: (14) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 5.643726ms)
  Aug 18 21:14:32.542: INFO: (14) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 6.510252ms)
  Aug 18 21:14:32.542: INFO: (14) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.96799ms)
  Aug 18 21:14:32.543: INFO: (14) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 6.845919ms)
  Aug 18 21:14:32.543: INFO: (14) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 7.870088ms)
  Aug 18 21:14:32.544: INFO: (14) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 8.157173ms)
  Aug 18 21:14:32.544: INFO: (14) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.329856ms)
  Aug 18 21:14:32.545: INFO: (14) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 8.878676ms)
  Aug 18 21:14:32.545: INFO: (14) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 9.156891ms)
  Aug 18 21:14:32.545: INFO: (14) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 9.368886ms)
  Aug 18 21:14:32.545: INFO: (14) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 9.395176ms)
  Aug 18 21:14:32.545: INFO: (14) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.516128ms)
  Aug 18 21:14:32.546: INFO: (14) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.888035ms)
  Aug 18 21:14:32.550: INFO: (15) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 4.101067ms)
  Aug 18 21:14:32.551: INFO: (15) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 4.659767ms)
  Aug 18 21:14:32.551: INFO: (15) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 4.838051ms)
  Aug 18 21:14:32.551: INFO: (15) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 5.204038ms)
  Aug 18 21:14:32.552: INFO: (15) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 5.690596ms)
  Aug 18 21:14:32.552: INFO: (15) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 6.325368ms)
  Aug 18 21:14:32.553: INFO: (15) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 6.799858ms)
  Aug 18 21:14:32.553: INFO: (15) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 7.456959ms)
  Aug 18 21:14:32.554: INFO: (15) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 7.676684ms)
  Aug 18 21:14:32.554: INFO: (15) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.807256ms)
  Aug 18 21:14:32.554: INFO: (15) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.96488ms)
  Aug 18 21:14:32.554: INFO: (15) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 8.285905ms)
  Aug 18 21:14:32.555: INFO: (15) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.408777ms)
  Aug 18 21:14:32.555: INFO: (15) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 8.607921ms)
  Aug 18 21:14:32.555: INFO: (15) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 9.09098ms)
  Aug 18 21:14:32.557: INFO: (15) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 10.492466ms)
  Aug 18 21:14:32.560: INFO: (16) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 3.779181ms)
  Aug 18 21:14:32.562: INFO: (16) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 5.030494ms)
  Aug 18 21:14:32.563: INFO: (16) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 6.219387ms)
  Aug 18 21:14:32.563: INFO: (16) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 6.103554ms)
  Aug 18 21:14:32.563: INFO: (16) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 6.613634ms)
  Aug 18 21:14:32.564: INFO: (16) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 7.238366ms)
  Aug 18 21:14:32.564: INFO: (16) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 7.400999ms)
  Aug 18 21:14:32.564: INFO: (16) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 7.687344ms)
  Aug 18 21:14:32.565: INFO: (16) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 7.800306ms)
  Aug 18 21:14:32.565: INFO: (16) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 8.199694ms)
  Aug 18 21:14:32.566: INFO: (16) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.623552ms)
  Aug 18 21:14:32.566: INFO: (16) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 9.436647ms)
  Aug 18 21:14:32.566: INFO: (16) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.477557ms)
  Aug 18 21:14:32.567: INFO: (16) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.762813ms)
  Aug 18 21:14:32.567: INFO: (16) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 9.850855ms)
  Aug 18 21:14:32.568: INFO: (16) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 10.736601ms)
  Aug 18 21:14:32.572: INFO: (17) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 3.974654ms)
  Aug 18 21:14:32.572: INFO: (17) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 4.472094ms)
  Aug 18 21:14:32.573: INFO: (17) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 5.034224ms)
  Aug 18 21:14:32.573: INFO: (17) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 5.471282ms)
  Aug 18 21:14:32.574: INFO: (17) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 5.990702ms)
  Aug 18 21:14:32.574: INFO: (17) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 6.41955ms)
  Aug 18 21:14:32.575: INFO: (17) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 6.881459ms)
  Aug 18 21:14:32.576: INFO: (17) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.00134ms)
  Aug 18 21:14:32.576: INFO: (17) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.286535ms)
  Aug 18 21:14:32.576: INFO: (17) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.126691ms)
  Aug 18 21:14:32.576: INFO: (17) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 8.321495ms)
  Aug 18 21:14:32.577: INFO: (17) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 8.518599ms)
  Aug 18 21:14:32.577: INFO: (17) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.644412ms)
  Aug 18 21:14:32.577: INFO: (17) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 9.247693ms)
  Aug 18 21:14:32.577: INFO: (17) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 9.299294ms)
  Aug 18 21:14:32.578: INFO: (17) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.866304ms)
  Aug 18 21:14:32.581: INFO: (18) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 3.625988ms)
  Aug 18 21:14:32.582: INFO: (18) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 4.7324ms)
  Aug 18 21:14:32.583: INFO: (18) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 5.382612ms)
  Aug 18 21:14:32.584: INFO: (18) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 6.255137ms)
  Aug 18 21:14:32.584: INFO: (18) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 6.367869ms)
  Aug 18 21:14:32.584: INFO: (18) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 6.41524ms)
  Aug 18 21:14:32.584: INFO: (18) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 6.555994ms)
  Aug 18 21:14:32.585: INFO: (18) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 6.622744ms)
  Aug 18 21:14:32.585: INFO: (18) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 7.247606ms)
  Aug 18 21:14:32.586: INFO: (18) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 8.482819ms)
  Aug 18 21:14:32.586: INFO: (18) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 8.427218ms)
  Aug 18 21:14:32.586: INFO: (18) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 8.294196ms)
  Aug 18 21:14:32.586: INFO: (18) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.294605ms)
  Aug 18 21:14:32.587: INFO: (18) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 8.609182ms)
  Aug 18 21:14:32.587: INFO: (18) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.049049ms)
  Aug 18 21:14:32.588: INFO: (18) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 10.353264ms)
  Aug 18 21:14:32.592: INFO: (19) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:462/proxy/: tls qux (200; 3.626688ms)
  Aug 18 21:14:32.594: INFO: (19) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:1080/proxy/rewriteme">... (200; 5.275858ms)
  Aug 18 21:14:32.595: INFO: (19) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:443/proxy/tlsrewritem... (200; 6.311638ms)
  Aug 18 21:14:32.595: INFO: (19) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:162/proxy/: bar (200; 6.124195ms)
  Aug 18 21:14:32.595: INFO: (19) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname1/proxy/: foo (200; 6.346229ms)
  Aug 18 21:14:32.596: INFO: (19) /api/v1/namespaces/proxy-6585/pods/https:proxy-service-vszzg-2llwr:460/proxy/: tls baz (200; 7.223355ms)
  Aug 18 21:14:32.596: INFO: (19) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr/proxy/rewriteme">test</a> (200; 7.336187ms)
  Aug 18 21:14:32.597: INFO: (19) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:162/proxy/: bar (200; 8.04304ms)
  Aug 18 21:14:32.597: INFO: (19) /api/v1/namespaces/proxy-6585/pods/http:proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.220193ms)
  Aug 18 21:14:32.597: INFO: (19) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname2/proxy/: tls qux (200; 8.53137ms)
  Aug 18 21:14:32.597: INFO: (19) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/: <a href="/api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:1080/proxy/rewriteme">test<... (200; 8.515599ms)
  Aug 18 21:14:32.598: INFO: (19) /api/v1/namespaces/proxy-6585/pods/proxy-service-vszzg-2llwr:160/proxy/: foo (200; 8.976208ms)
  Aug 18 21:14:32.598: INFO: (19) /api/v1/namespaces/proxy-6585/services/http:proxy-service-vszzg:portname2/proxy/: bar (200; 9.557949ms)
  Aug 18 21:14:32.599: INFO: (19) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname2/proxy/: bar (200; 9.685951ms)
  Aug 18 21:14:32.599: INFO: (19) /api/v1/namespaces/proxy-6585/services/https:proxy-service-vszzg:tlsportname1/proxy/: tls baz (200; 9.914355ms)
  Aug 18 21:14:32.599: INFO: (19) /api/v1/namespaces/proxy-6585/services/proxy-service-vszzg:portname1/proxy/: foo (200; 10.67396ms)
  Aug 18 21:14:32.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-vszzg in namespace proxy-6585, will wait for the garbage collector to delete the pods @ 08/18/23 21:14:32.603
  Aug 18 21:14:32.664: INFO: Deleting ReplicationController proxy-service-vszzg took: 6.182246ms
  Aug 18 21:14:32.765: INFO: Terminating ReplicationController proxy-service-vszzg pods took: 100.620133ms
  STEP: Destroying namespace "proxy-6585" for this suite. @ 08/18/23 21:14:35.066
• [3.865 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 08/18/23 21:14:35.073
  Aug 18 21:14:35.073: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 21:14:35.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:14:35.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:14:35.087
  STEP: creating the pod @ 08/18/23 21:14:35.089
  STEP: waiting for pod running @ 08/18/23 21:14:35.096
  STEP: creating a file in subpath @ 08/18/23 21:14:37.108
  Aug 18 21:14:37.111: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-5076 PodName:var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:14:37.111: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:14:37.112: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:14:37.112: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5076/pods/var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 08/18/23 21:14:37.189
  Aug 18 21:14:37.192: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-5076 PodName:var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:14:37.192: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:14:37.192: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:14:37.192: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-5076/pods/var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 08/18/23 21:14:37.265
  Aug 18 21:14:37.779: INFO: Successfully updated pod "var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9"
  STEP: waiting for annotated pod running @ 08/18/23 21:14:37.779
  STEP: deleting the pod gracefully @ 08/18/23 21:14:37.781
  Aug 18 21:14:37.781: INFO: Deleting pod "var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9" in namespace "var-expansion-5076"
  Aug 18 21:14:37.789: INFO: Wait up to 5m0s for pod "var-expansion-23b63940-a2c7-4087-8e73-2017c4268ce9" to be fully deleted
  Aug 18 21:15:09.872: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5076" for this suite. @ 08/18/23 21:15:09.877
• [34.811 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 08/18/23 21:15:09.885
  Aug 18 21:15:09.885: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:15:09.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:15:09.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:15:09.904
  STEP: Creating secret with name secret-test-map-8a35a6d1-25a0-4e07-9b83-6a82b7080197 @ 08/18/23 21:15:09.906
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:15:09.912
  STEP: Saw pod success @ 08/18/23 21:15:13.93
  Aug 18 21:15:13.934: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-4d067abb-6b3e-490e-88f1-5c79294c8797 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:15:13.948
  Aug 18 21:15:13.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7409" for this suite. @ 08/18/23 21:15:13.967
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 08/18/23 21:15:13.975
  Aug 18 21:15:13.975: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:15:13.976
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:15:14.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:15:14.043
  STEP: creating a ConfigMap @ 08/18/23 21:15:14.045
  STEP: fetching the ConfigMap @ 08/18/23 21:15:14.051
  STEP: patching the ConfigMap @ 08/18/23 21:15:14.053
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 08/18/23 21:15:14.058
  STEP: deleting the ConfigMap by collection with a label selector @ 08/18/23 21:15:14.063
  STEP: listing all ConfigMaps in test namespace @ 08/18/23 21:15:14.071
  Aug 18 21:15:14.073: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-811" for this suite. @ 08/18/23 21:15:14.076
• [0.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 08/18/23 21:15:14.082
  Aug 18 21:15:14.082: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:15:14.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:15:14.095
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:15:14.097
  STEP: creating all guestbook components @ 08/18/23 21:15:14.1
  Aug 18 21:15:14.100: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Aug 18 21:15:14.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:14.286: INFO: stderr: ""
  Aug 18 21:15:14.286: INFO: stdout: "service/agnhost-replica created\n"
  Aug 18 21:15:14.286: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Aug 18 21:15:14.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:14.574: INFO: stderr: ""
  Aug 18 21:15:14.574: INFO: stdout: "service/agnhost-primary created\n"
  Aug 18 21:15:14.574: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Aug 18 21:15:14.574: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:14.723: INFO: stderr: ""
  Aug 18 21:15:14.723: INFO: stdout: "service/frontend created\n"
  Aug 18 21:15:14.723: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Aug 18 21:15:14.723: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:14.836: INFO: stderr: ""
  Aug 18 21:15:14.836: INFO: stdout: "deployment.apps/frontend created\n"
  Aug 18 21:15:14.836: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 18 21:15:14.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:14.962: INFO: stderr: ""
  Aug 18 21:15:14.962: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Aug 18 21:15:14.962: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Aug 18 21:15:14.962: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 create -f -'
  Aug 18 21:15:15.085: INFO: stderr: ""
  Aug 18 21:15:15.085: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 08/18/23 21:15:15.085
  Aug 18 21:15:15.085: INFO: Waiting for all frontend pods to be Running.
  Aug 18 21:15:20.138: INFO: Waiting for frontend to serve content.
  Aug 18 21:15:20.148: INFO: Trying to add a new entry to the guestbook.
  Aug 18 21:15:20.160: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.17
  Aug 18 21:15:20.170: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.232: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.232: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.232
  Aug 18 21:15:20.232: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.304: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.304: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.304
  Aug 18 21:15:20.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.373: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.373: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.373
  Aug 18 21:15:20.373: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.424: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.424: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.424
  Aug 18 21:15:20.424: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.492: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.492: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 08/18/23 21:15:20.492
  Aug 18 21:15:20.492: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6681 delete --grace-period=0 --force -f -'
  Aug 18 21:15:20.588: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 21:15:20.588: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Aug 18 21:15:20.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6681" for this suite. @ 08/18/23 21:15:20.593
• [6.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 08/18/23 21:15:20.608
  Aug 18 21:15:20.608: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:15:20.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:15:20.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:15:20.639
  STEP: Creating service test in namespace statefulset-3684 @ 08/18/23 21:15:20.641
  STEP: Creating statefulset ss in namespace statefulset-3684 @ 08/18/23 21:15:20.652
  Aug 18 21:15:20.662: INFO: Found 0 stateful pods, waiting for 1
  Aug 18 21:15:30.665: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 08/18/23 21:15:30.672
  STEP: Getting /status @ 08/18/23 21:15:30.681
  Aug 18 21:15:30.686: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 08/18/23 21:15:30.686
  Aug 18 21:15:30.697: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 08/18/23 21:15:30.697
  Aug 18 21:15:30.699: INFO: Observed &StatefulSet event: ADDED
  Aug 18 21:15:30.699: INFO: Found Statefulset ss in namespace statefulset-3684 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 21:15:30.699: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 08/18/23 21:15:30.7
  Aug 18 21:15:30.700: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 18 21:15:30.707: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 08/18/23 21:15:30.707
  Aug 18 21:15:30.709: INFO: Observed &StatefulSet event: ADDED
  Aug 18 21:15:30.709: INFO: Deleting all statefulset in ns statefulset-3684
  Aug 18 21:15:30.711: INFO: Scaling statefulset ss to 0
  Aug 18 21:15:40.734: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:15:40.740: INFO: Deleting statefulset ss
  Aug 18 21:15:40.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3684" for this suite. @ 08/18/23 21:15:40.767
• [20.167 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 08/18/23 21:15:40.774
  Aug 18 21:15:40.774: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:15:40.774
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:15:40.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:15:40.792
  STEP: Creating pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402 @ 08/18/23 21:15:40.795
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 21:15:42.814
  Aug 18 21:15:42.817: INFO: Initial restart count of pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 is 0
  Aug 18 21:15:42.822: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:44.826: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:46.831: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:48.834: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:50.839: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:52.845: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:54.849: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:56.855: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:15:58.860: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:00.865: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:02.871: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:04.874: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:06.878: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:08.884: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:10.888: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:12.893: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:14.897: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:16.902: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:18.909: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:20.915: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:22.920: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:24.924: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:26.928: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:28.934: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:30.938: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:32.944: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:34.948: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:36.954: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:38.959: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:40.963: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:42.969: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:44.973: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:46.977: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:48.983: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:50.986: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:52.991: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:54.996: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:57.000: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:16:59.005: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:01.010: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:03.016: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:05.022: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:07.025: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:09.029: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:11.033: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:13.038: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:15.041: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:17.047: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:19.051: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:21.055: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:23.063: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:25.066: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:27.070: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:29.076: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:31.080: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:33.085: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:35.091: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:37.096: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:39.102: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:41.105: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:43.111: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:45.114: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:47.119: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:49.125: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:51.129: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:53.134: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:55.139: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:57.144: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:17:59.149: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:01.154: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:03.159: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:05.164: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:07.169: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:09.173: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:11.180: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:13.184: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:15.190: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:17.194: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:19.200: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:21.204: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:23.210: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:25.216: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:27.220: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:29.225: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:31.232: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:33.236: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:35.240: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:37.244: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:39.248: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:41.254: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:43.260: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:45.266: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:47.270: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:49.275: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:51.281: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:53.285: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:55.289: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:57.293: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:18:59.298: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:01.304: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:03.308: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:05.313: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:07.317: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:09.322: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:11.329: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:13.333: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:15.338: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:17.343: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:19.348: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:21.352: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:23.358: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:25.363: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:27.367: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:29.372: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:31.377: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:33.381: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:35.386: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:37.390: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:39.396: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:41.403: INFO: Get pod test-grpc-2a3eae65-538a-48e9-80ce-6a7c005d6fe9 in namespace container-probe-5402
  Aug 18 21:19:43.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:19:43.407
  STEP: Destroying namespace "container-probe-5402" for this suite. @ 08/18/23 21:19:43.421
• [242.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 08/18/23 21:19:43.429
  Aug 18 21:19:43.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:19:43.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:19:43.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:19:43.45
  STEP: Setting up server cert @ 08/18/23 21:19:43.476
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:19:43.677
  STEP: Deploying the webhook pod @ 08/18/23 21:19:43.687
  STEP: Wait for the deployment to be ready @ 08/18/23 21:19:43.702
  Aug 18 21:19:43.731: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Aug 18 21:19:45.744: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 21, 19, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 21, 19, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 21, 19, 43, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 21, 19, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 08/18/23 21:19:47.748
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:19:47.758
  Aug 18 21:19:48.758: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 18 21:19:48.765: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9077-crds.webhook.example.com via the AdmissionRegistration API @ 08/18/23 21:19:49.281
  STEP: Creating a custom resource while v1 is storage version @ 08/18/23 21:19:49.296
  STEP: Patching Custom Resource Definition to set v2 as storage @ 08/18/23 21:19:51.39
  STEP: Patching the custom resource while v2 is storage version @ 08/18/23 21:19:51.414
  Aug 18 21:19:51.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2657" for this suite. @ 08/18/23 21:19:52.009
  STEP: Destroying namespace "webhook-markers-1837" for this suite. @ 08/18/23 21:19:52.017
• [8.594 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 08/18/23 21:19:52.023
  Aug 18 21:19:52.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:19:52.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:19:52.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:19:52.044
  STEP: Discovering how many secrets are in namespace by default @ 08/18/23 21:19:52.046
  STEP: Counting existing ResourceQuota @ 08/18/23 21:19:57.051
  STEP: Creating a ResourceQuota @ 08/18/23 21:20:02.057
  STEP: Ensuring resource quota status is calculated @ 08/18/23 21:20:02.061
  STEP: Creating a Secret @ 08/18/23 21:20:04.067
  STEP: Ensuring resource quota status captures secret creation @ 08/18/23 21:20:04.077
  STEP: Deleting a secret @ 08/18/23 21:20:06.081
  STEP: Ensuring resource quota status released usage @ 08/18/23 21:20:06.088
  Aug 18 21:20:08.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2335" for this suite. @ 08/18/23 21:20:08.096
• [16.080 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 08/18/23 21:20:08.104
  Aug 18 21:20:08.104: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename watch @ 08/18/23 21:20:08.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:20:08.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:20:08.121
  STEP: getting a starting resourceVersion @ 08/18/23 21:20:08.126
  STEP: starting a background goroutine to produce watch events @ 08/18/23 21:20:08.13
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 08/18/23 21:20:08.13
  Aug 18 21:20:10.911: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8022" for this suite. @ 08/18/23 21:20:10.959
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 08/18/23 21:20:11.014
  Aug 18 21:20:11.014: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:20:11.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:20:11.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:20:11.031
  STEP: Setting up server cert @ 08/18/23 21:20:11.051
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:20:11.503
  STEP: Deploying the webhook pod @ 08/18/23 21:20:11.509
  STEP: Wait for the deployment to be ready @ 08/18/23 21:20:11.521
  Aug 18 21:20:11.531: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:20:13.544
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:20:13.556
  Aug 18 21:20:14.556: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 08/18/23 21:20:14.565
  STEP: create a pod @ 08/18/23 21:20:14.579
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 08/18/23 21:20:16.596
  Aug 18 21:20:16.596: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=webhook-7907 attach --namespace=webhook-7907 to-be-attached-pod -i -c=container1'
  Aug 18 21:20:16.653: INFO: rc: 1
  Aug 18 21:20:16.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7907" for this suite. @ 08/18/23 21:20:16.706
  STEP: Destroying namespace "webhook-markers-4853" for this suite. @ 08/18/23 21:20:16.713
• [5.710 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 08/18/23 21:20:16.724
  Aug 18 21:20:16.724: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename taint-multiple-pods @ 08/18/23 21:20:16.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:20:16.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:20:16.743
  Aug 18 21:20:16.745: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 21:21:16.760: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 21:21:16.762: INFO: Starting informer...
  STEP: Starting pods... @ 08/18/23 21:21:16.763
  Aug 18 21:21:16.981: INFO: Pod1 is running on ip-172-31-15-95. Tainting Node
  Aug 18 21:21:19.201: INFO: Pod2 is running on ip-172-31-15-95. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/18/23 21:21:19.201
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/18/23 21:21:19.209
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 08/18/23 21:21:19.217
  Aug 18 21:21:24.774: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Aug 18 21:21:44.811: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Aug 18 21:21:44.811: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/18/23 21:21:44.826
  STEP: Destroying namespace "taint-multiple-pods-2757" for this suite. @ 08/18/23 21:21:44.829
• [88.114 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 08/18/23 21:21:44.838
  Aug 18 21:21:44.838: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename watch @ 08/18/23 21:21:44.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:44.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:44.916
  STEP: creating a watch on configmaps @ 08/18/23 21:21:44.918
  STEP: creating a new configmap @ 08/18/23 21:21:44.919
  STEP: modifying the configmap once @ 08/18/23 21:21:44.924
  STEP: closing the watch once it receives two notifications @ 08/18/23 21:21:44.931
  Aug 18 21:21:44.931: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-450  851390f9-cf98-4816-bca8-54016202d295 13477 0 2023-08-18 21:21:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-18 21:21:44 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:21:44.931: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-450  851390f9-cf98-4816-bca8-54016202d295 13478 0 2023-08-18 21:21:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-18 21:21:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 08/18/23 21:21:44.932
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 08/18/23 21:21:44.94
  STEP: deleting the configmap @ 08/18/23 21:21:44.941
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 08/18/23 21:21:44.947
  Aug 18 21:21:44.947: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-450  851390f9-cf98-4816-bca8-54016202d295 13479 0 2023-08-18 21:21:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-18 21:21:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:21:44.947: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-450  851390f9-cf98-4816-bca8-54016202d295 13480 0 2023-08-18 21:21:44 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-08-18 21:21:44 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:21:44.947: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-450" for this suite. @ 08/18/23 21:21:44.951
• [0.119 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 08/18/23 21:21:44.957
  Aug 18 21:21:44.957: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:21:44.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:44.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:44.971
  STEP: Creating configMap with name configmap-test-volume-map-d7b22830-62fc-4c7b-bc63-d3a72ac6e9fc @ 08/18/23 21:21:44.973
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:21:44.977
  STEP: Saw pod success @ 08/18/23 21:21:46.993
  Aug 18 21:21:46.996: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-ce765443-9b1b-4f03-90be-30536e89deb3 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:21:47.011
  Aug 18 21:21:47.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2369" for this suite. @ 08/18/23 21:21:47.028
• [2.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 08/18/23 21:21:47.036
  Aug 18 21:21:47.036: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename containers @ 08/18/23 21:21:47.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:47.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:47.052
  Aug 18 21:21:49.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8023" for this suite. @ 08/18/23 21:21:49.083
• [2.053 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 08/18/23 21:21:49.09
  Aug 18 21:21:49.090: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:21:49.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:49.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:49.104
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/18/23 21:21:49.108
  STEP: Saw pod success @ 08/18/23 21:21:53.131
  Aug 18 21:21:53.135: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-086202d3-9f9b-4fbb-b1ec-89de90fa4452 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:21:53.151
  Aug 18 21:21:53.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3593" for this suite. @ 08/18/23 21:21:53.17
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 08/18/23 21:21:53.179
  Aug 18 21:21:53.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:21:53.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:53.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:53.195
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:21:53.198
  STEP: Saw pod success @ 08/18/23 21:21:57.221
  Aug 18 21:21:57.224: INFO: Trying to get logs from node ip-172-31-20-82 pod downwardapi-volume-600d1730-55f9-4f14-9ac7-ecbe42d002ea container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:21:57.23
  Aug 18 21:21:57.248: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7956" for this suite. @ 08/18/23 21:21:57.252
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 08/18/23 21:21:57.259
  Aug 18 21:21:57.259: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:21:57.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:21:57.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:21:57.276
  STEP: Creating a pod to test emptydir volume type on node default medium @ 08/18/23 21:21:57.279
  STEP: Saw pod success @ 08/18/23 21:22:01.302
  Aug 18 21:22:01.305: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-bf62b3b0-0654-46f9-ba8b-ddb1b7a99bec container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:22:01.311
  Aug 18 21:22:01.328: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6225" for this suite. @ 08/18/23 21:22:01.332
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 08/18/23 21:22:01.34
  Aug 18 21:22:01.340: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:22:01.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:01.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:01.357
  Aug 18 21:22:01.359: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 08/18/23 21:22:02.69
  Aug 18 21:22:02.690: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 create -f -'
  Aug 18 21:22:04.964: INFO: stderr: ""
  Aug 18 21:22:04.964: INFO: stdout: "e2e-test-crd-publish-openapi-4200-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 18 21:22:04.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 delete e2e-test-crd-publish-openapi-4200-crds test-foo'
  Aug 18 21:22:05.031: INFO: stderr: ""
  Aug 18 21:22:05.031: INFO: stdout: "e2e-test-crd-publish-openapi-4200-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Aug 18 21:22:05.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 apply -f -'
  Aug 18 21:22:05.332: INFO: stderr: ""
  Aug 18 21:22:05.332: INFO: stdout: "e2e-test-crd-publish-openapi-4200-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Aug 18 21:22:05.332: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 delete e2e-test-crd-publish-openapi-4200-crds test-foo'
  Aug 18 21:22:05.385: INFO: stderr: ""
  Aug 18 21:22:05.385: INFO: stdout: "e2e-test-crd-publish-openapi-4200-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 08/18/23 21:22:05.385
  Aug 18 21:22:05.385: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 create -f -'
  Aug 18 21:22:05.483: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 08/18/23 21:22:05.483
  Aug 18 21:22:05.483: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 create -f -'
  Aug 18 21:22:05.573: INFO: rc: 1
  Aug 18 21:22:05.573: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 apply -f -'
  Aug 18 21:22:05.684: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 08/18/23 21:22:05.684
  Aug 18 21:22:05.684: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 create -f -'
  Aug 18 21:22:05.802: INFO: rc: 1
  Aug 18 21:22:05.802: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 --namespace=crd-publish-openapi-8473 apply -f -'
  Aug 18 21:22:05.921: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 08/18/23 21:22:05.921
  Aug 18 21:22:05.921: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 explain e2e-test-crd-publish-openapi-4200-crds'
  Aug 18 21:22:06.040: INFO: stderr: ""
  Aug 18 21:22:06.040: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4200-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 08/18/23 21:22:06.04
  Aug 18 21:22:06.040: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 explain e2e-test-crd-publish-openapi-4200-crds.metadata'
  Aug 18 21:22:06.135: INFO: stderr: ""
  Aug 18 21:22:06.135: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4200-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Aug 18 21:22:06.136: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 explain e2e-test-crd-publish-openapi-4200-crds.spec'
  Aug 18 21:22:06.231: INFO: stderr: ""
  Aug 18 21:22:06.231: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4200-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Aug 18 21:22:06.231: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 explain e2e-test-crd-publish-openapi-4200-crds.spec.bars'
  Aug 18 21:22:06.325: INFO: stderr: ""
  Aug 18 21:22:06.325: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4200-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 08/18/23 21:22:06.325
  Aug 18 21:22:06.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-8473 explain e2e-test-crd-publish-openapi-4200-crds.spec.bars2'
  Aug 18 21:22:06.417: INFO: rc: 1
  Aug 18 21:22:07.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8473" for this suite. @ 08/18/23 21:22:07.653
• [6.322 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 08/18/23 21:22:07.663
  Aug 18 21:22:07.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/18/23 21:22:07.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:07.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:07.685
  Aug 18 21:22:07.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:22:10.778: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4121" for this suite. @ 08/18/23 21:22:10.781
• [3.125 seconds]
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 08/18/23 21:22:10.788
  Aug 18 21:22:10.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:22:10.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:10.804
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:10.807
  STEP: creating a Service @ 08/18/23 21:22:10.813
  STEP: watching for the Service to be added @ 08/18/23 21:22:10.823
  Aug 18 21:22:10.827: INFO: Found Service test-service-fc4tm in namespace services-6631 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Aug 18 21:22:10.828: INFO: Service test-service-fc4tm created
  STEP: Getting /status @ 08/18/23 21:22:10.828
  Aug 18 21:22:10.832: INFO: Service test-service-fc4tm has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 08/18/23 21:22:10.832
  STEP: watching for the Service to be patched @ 08/18/23 21:22:10.839
  Aug 18 21:22:10.840: INFO: observed Service test-service-fc4tm in namespace services-6631 with annotations: map[] & LoadBalancer: {[]}
  Aug 18 21:22:10.840: INFO: Found Service test-service-fc4tm in namespace services-6631 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Aug 18 21:22:10.841: INFO: Service test-service-fc4tm has service status patched
  STEP: updating the ServiceStatus @ 08/18/23 21:22:10.841
  Aug 18 21:22:10.849: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 08/18/23 21:22:10.849
  Aug 18 21:22:10.850: INFO: Observed Service test-service-fc4tm in namespace services-6631 with annotations: map[] & Conditions: {[]}
  Aug 18 21:22:10.850: INFO: Observed event: &Service{ObjectMeta:{test-service-fc4tm  services-6631  97ba3416-640c-4ecf-bd3d-edfb0ee7fef4 13787 0 2023-08-18 21:22:10 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-08-18 21:22:10 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-08-18 21:22:10 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.52,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.52],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Aug 18 21:22:10.850: INFO: Found Service test-service-fc4tm in namespace services-6631 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 18 21:22:10.850: INFO: Service test-service-fc4tm has service status updated
  STEP: patching the service @ 08/18/23 21:22:10.85
  STEP: watching for the Service to be patched @ 08/18/23 21:22:10.86
  Aug 18 21:22:10.862: INFO: observed Service test-service-fc4tm in namespace services-6631 with labels: map[test-service-static:true]
  Aug 18 21:22:10.862: INFO: observed Service test-service-fc4tm in namespace services-6631 with labels: map[test-service-static:true]
  Aug 18 21:22:10.862: INFO: observed Service test-service-fc4tm in namespace services-6631 with labels: map[test-service-static:true]
  Aug 18 21:22:10.862: INFO: Found Service test-service-fc4tm in namespace services-6631 with labels: map[test-service:patched test-service-static:true]
  Aug 18 21:22:10.862: INFO: Service test-service-fc4tm patched
  STEP: deleting the service @ 08/18/23 21:22:10.862
  STEP: watching for the Service to be deleted @ 08/18/23 21:22:10.876
  Aug 18 21:22:10.877: INFO: Observed event: ADDED
  Aug 18 21:22:10.877: INFO: Observed event: MODIFIED
  Aug 18 21:22:10.878: INFO: Observed event: MODIFIED
  Aug 18 21:22:10.878: INFO: Observed event: MODIFIED
  Aug 18 21:22:10.878: INFO: Found Service test-service-fc4tm in namespace services-6631 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Aug 18 21:22:10.878: INFO: Service test-service-fc4tm deleted
  Aug 18 21:22:10.878: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6631" for this suite. @ 08/18/23 21:22:10.883
• [0.102 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 08/18/23 21:22:10.891
  Aug 18 21:22:10.891: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/18/23 21:22:10.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:10.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:10.909
  STEP: Creating 50 configmaps @ 08/18/23 21:22:10.911
  STEP: Creating RC which spawns configmap-volume pods @ 08/18/23 21:22:11.157
  Aug 18 21:22:11.255: INFO: Pod name wrapped-volume-race-60db09bc-b511-42a2-8580-3518da25952a: Found 3 pods out of 5
  Aug 18 21:22:16.263: INFO: Pod name wrapped-volume-race-60db09bc-b511-42a2-8580-3518da25952a: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/18/23 21:22:16.263
  STEP: Creating RC which spawns configmap-volume pods @ 08/18/23 21:22:16.284
  Aug 18 21:22:16.295: INFO: Pod name wrapped-volume-race-a056bbd8-bf89-46c1-a102-b3ae40edc221: Found 0 pods out of 5
  Aug 18 21:22:21.304: INFO: Pod name wrapped-volume-race-a056bbd8-bf89-46c1-a102-b3ae40edc221: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/18/23 21:22:21.304
  STEP: Creating RC which spawns configmap-volume pods @ 08/18/23 21:22:21.328
  Aug 18 21:22:21.341: INFO: Pod name wrapped-volume-race-70caa056-466d-468f-8ce2-671527d5c221: Found 0 pods out of 5
  Aug 18 21:22:26.351: INFO: Pod name wrapped-volume-race-70caa056-466d-468f-8ce2-671527d5c221: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 08/18/23 21:22:26.351
  Aug 18 21:22:26.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-70caa056-466d-468f-8ce2-671527d5c221 in namespace emptydir-wrapper-7520, will wait for the garbage collector to delete the pods @ 08/18/23 21:22:26.375
  Aug 18 21:22:26.436: INFO: Deleting ReplicationController wrapped-volume-race-70caa056-466d-468f-8ce2-671527d5c221 took: 8.286924ms
  Aug 18 21:22:26.536: INFO: Terminating ReplicationController wrapped-volume-race-70caa056-466d-468f-8ce2-671527d5c221 pods took: 100.443218ms
  STEP: deleting ReplicationController wrapped-volume-race-a056bbd8-bf89-46c1-a102-b3ae40edc221 in namespace emptydir-wrapper-7520, will wait for the garbage collector to delete the pods @ 08/18/23 21:22:28.137
  Aug 18 21:22:28.200: INFO: Deleting ReplicationController wrapped-volume-race-a056bbd8-bf89-46c1-a102-b3ae40edc221 took: 8.527218ms
  Aug 18 21:22:28.301: INFO: Terminating ReplicationController wrapped-volume-race-a056bbd8-bf89-46c1-a102-b3ae40edc221 pods took: 100.930307ms
  STEP: deleting ReplicationController wrapped-volume-race-60db09bc-b511-42a2-8580-3518da25952a in namespace emptydir-wrapper-7520, will wait for the garbage collector to delete the pods @ 08/18/23 21:22:29.501
  Aug 18 21:22:29.563: INFO: Deleting ReplicationController wrapped-volume-race-60db09bc-b511-42a2-8580-3518da25952a took: 7.739034ms
  Aug 18 21:22:29.664: INFO: Terminating ReplicationController wrapped-volume-race-60db09bc-b511-42a2-8580-3518da25952a pods took: 100.387897ms
  STEP: Cleaning up the configMaps @ 08/18/23 21:22:31.364
  STEP: Destroying namespace "emptydir-wrapper-7520" for this suite. @ 08/18/23 21:22:31.655
• [20.770 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 08/18/23 21:22:31.663
  Aug 18 21:22:31.663: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:22:31.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:31.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:31.683
  STEP: Creating configMap with name projected-configmap-test-volume-6c80f14f-9682-416c-b0ba-56ce998af443 @ 08/18/23 21:22:31.686
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:22:31.69
  STEP: Saw pod success @ 08/18/23 21:22:35.711
  Aug 18 21:22:35.715: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-configmaps-37089bf7-3a90-4ea5-abbf-e11e6a5c0f60 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:22:35.728
  Aug 18 21:22:35.744: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8834" for this suite. @ 08/18/23 21:22:35.747
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 08/18/23 21:22:35.754
  Aug 18 21:22:35.754: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:22:35.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:35.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:35.773
  STEP: creating secret secrets-7626/secret-test-c5cd7ad4-8c24-442b-b95e-40aad9206484 @ 08/18/23 21:22:35.775
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:22:35.778
  STEP: Saw pod success @ 08/18/23 21:22:39.801
  Aug 18 21:22:39.804: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-d3f1d82b-a267-42a1-bef5-1a9ba85620b6 container env-test: <nil>
  STEP: delete the pod @ 08/18/23 21:22:39.812
  Aug 18 21:22:39.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7626" for this suite. @ 08/18/23 21:22:39.842
• [4.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 08/18/23 21:22:39.848
  Aug 18 21:22:39.848: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:22:39.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:39.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:39.87
  STEP: creating the pod @ 08/18/23 21:22:39.873
  STEP: submitting the pod to kubernetes @ 08/18/23 21:22:39.873
  W0818 21:22:39.881227      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 08/18/23 21:22:41.892
  STEP: updating the pod @ 08/18/23 21:22:41.895
  Aug 18 21:22:42.407: INFO: Successfully updated pod "pod-update-activedeadlineseconds-32c4d260-3873-4bdf-a30a-78fa31e1d3ba"
  Aug 18 21:22:46.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7791" for this suite. @ 08/18/23 21:22:46.423
• [6.583 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 08/18/23 21:22:46.433
  Aug 18 21:22:46.433: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:22:46.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:46.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:46.453
  STEP: Counting existing ResourceQuota @ 08/18/23 21:22:46.455
  STEP: Creating a ResourceQuota @ 08/18/23 21:22:51.459
  STEP: Ensuring resource quota status is calculated @ 08/18/23 21:22:51.464
  STEP: Creating a ReplicationController @ 08/18/23 21:22:53.469
  STEP: Ensuring resource quota status captures replication controller creation @ 08/18/23 21:22:53.481
  STEP: Deleting a ReplicationController @ 08/18/23 21:22:55.486
  STEP: Ensuring resource quota status released usage @ 08/18/23 21:22:55.493
  Aug 18 21:22:57.498: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9531" for this suite. @ 08/18/23 21:22:57.503
• [11.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 08/18/23 21:22:57.511
  Aug 18 21:22:57.511: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 21:22:57.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:57.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:57.533
  STEP: Creating ServiceAccount "e2e-sa-br5pg"  @ 08/18/23 21:22:57.535
  Aug 18 21:22:57.539: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-br5pg"  @ 08/18/23 21:22:57.541
  Aug 18 21:22:57.549: INFO: AutomountServiceAccountToken: true
  Aug 18 21:22:57.549: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3340" for this suite. @ 08/18/23 21:22:57.552
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 08/18/23 21:22:57.561
  Aug 18 21:22:57.561: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption @ 08/18/23 21:22:57.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:22:57.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:22:57.582
  Aug 18 21:22:57.598: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 21:23:57.616: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 08/18/23 21:23:57.62
  Aug 18 21:23:57.638: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Aug 18 21:23:57.644: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Aug 18 21:23:57.660: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Aug 18 21:23:57.667: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Aug 18 21:23:57.685: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Aug 18 21:23:57.698: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 08/18/23 21:23:57.698
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 08/18/23 21:23:59.724
  Aug 18 21:24:03.788: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8701" for this suite. @ 08/18/23 21:24:03.835
• [66.281 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 08/18/23 21:24:03.842
  Aug 18 21:24:03.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:24:03.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:03.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:03.861
  STEP: creating a Pod with a static label @ 08/18/23 21:24:03.867
  STEP: watching for Pod to be ready @ 08/18/23 21:24:03.875
  Aug 18 21:24:03.876: INFO: observed Pod pod-test in namespace pods-2870 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Aug 18 21:24:03.880: INFO: observed Pod pod-test in namespace pods-2870 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC  }]
  Aug 18 21:24:03.893: INFO: observed Pod pod-test in namespace pods-2870 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC  }]
  Aug 18 21:24:05.089: INFO: Found Pod pod-test in namespace pods-2870 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:05 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:05 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:03 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 08/18/23 21:24:05.093
  STEP: getting the Pod and ensuring that it's patched @ 08/18/23 21:24:05.1
  STEP: replacing the Pod's status Ready condition to False @ 08/18/23 21:24:05.103
  STEP: check the Pod again to ensure its Ready conditions are False @ 08/18/23 21:24:05.114
  STEP: deleting the Pod via a Collection with a LabelSelector @ 08/18/23 21:24:05.114
  STEP: watching for the Pod to be deleted @ 08/18/23 21:24:05.123
  Aug 18 21:24:05.124: INFO: observed event type MODIFIED
  Aug 18 21:24:07.095: INFO: observed event type MODIFIED
  Aug 18 21:24:07.264: INFO: observed event type MODIFIED
  Aug 18 21:24:08.097: INFO: observed event type MODIFIED
  Aug 18 21:24:08.109: INFO: observed event type MODIFIED
  Aug 18 21:24:08.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2870" for this suite. @ 08/18/23 21:24:08.121
• [4.285 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 08/18/23 21:24:08.128
  Aug 18 21:24:08.128: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename watch @ 08/18/23 21:24:08.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:08.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:08.148
  STEP: creating a new configmap @ 08/18/23 21:24:08.15
  STEP: modifying the configmap once @ 08/18/23 21:24:08.155
  STEP: modifying the configmap a second time @ 08/18/23 21:24:08.164
  STEP: deleting the configmap @ 08/18/23 21:24:08.172
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 08/18/23 21:24:08.177
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 08/18/23 21:24:08.179
  Aug 18 21:24:08.179: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4942  968a9dc7-1bd7-4b09-8ddc-0701244e0b91 14879 0 2023-08-18 21:24:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-18 21:24:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:24:08.179: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-4942  968a9dc7-1bd7-4b09-8ddc-0701244e0b91 14880 0 2023-08-18 21:24:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-08-18 21:24:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 21:24:08.179: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4942" for this suite. @ 08/18/23 21:24:08.183
• [0.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 08/18/23 21:24:08.19
  Aug 18 21:24:08.190: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 21:24:08.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:08.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:08.211
  STEP: create the rc @ 08/18/23 21:24:08.213
  W0818 21:24:08.219247      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/18/23 21:24:13.223
  STEP: wait for all pods to be garbage collected @ 08/18/23 21:24:13.229
  STEP: Gathering metrics @ 08/18/23 21:24:18.238
  W0818 21:24:18.243082      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 21:24:18.243: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 21:24:18.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4110" for this suite. @ 08/18/23 21:24:18.247
• [10.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 08/18/23 21:24:18.256
  Aug 18 21:24:18.256: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:24:18.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:18.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:18.275
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:24:18.278
  STEP: Saw pod success @ 08/18/23 21:24:22.302
  Aug 18 21:24:22.306: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-119d7290-0eb1-4295-be17-3231590566a0 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:24:22.319
  Aug 18 21:24:22.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7817" for this suite. @ 08/18/23 21:24:22.335
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 08/18/23 21:24:22.344
  Aug 18 21:24:22.344: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename limitrange @ 08/18/23 21:24:22.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:22.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:22.364
  STEP: Creating LimitRange "e2e-limitrange-g87wl" in namespace "limitrange-782" @ 08/18/23 21:24:22.367
  STEP: Creating another limitRange in another namespace @ 08/18/23 21:24:22.371
  Aug 18 21:24:22.388: INFO: Namespace "e2e-limitrange-g87wl-8004" created
  Aug 18 21:24:22.388: INFO: Creating LimitRange "e2e-limitrange-g87wl" in namespace "e2e-limitrange-g87wl-8004"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-g87wl" @ 08/18/23 21:24:22.392
  Aug 18 21:24:22.396: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-g87wl" in "limitrange-782" namespace @ 08/18/23 21:24:22.396
  Aug 18 21:24:22.401: INFO: LimitRange "e2e-limitrange-g87wl" has been patched
  STEP: Delete LimitRange "e2e-limitrange-g87wl" by Collection with labelSelector: "e2e-limitrange-g87wl=patched" @ 08/18/23 21:24:22.401
  STEP: Confirm that the limitRange "e2e-limitrange-g87wl" has been deleted @ 08/18/23 21:24:22.409
  Aug 18 21:24:22.409: INFO: Requesting list of LimitRange to confirm quantity
  Aug 18 21:24:22.412: INFO: Found 0 LimitRange with label "e2e-limitrange-g87wl=patched"
  Aug 18 21:24:22.412: INFO: LimitRange "e2e-limitrange-g87wl" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-g87wl" @ 08/18/23 21:24:22.412
  Aug 18 21:24:22.415: INFO: Found 1 limitRange
  Aug 18 21:24:22.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-782" for this suite. @ 08/18/23 21:24:22.419
  STEP: Destroying namespace "e2e-limitrange-g87wl-8004" for this suite. @ 08/18/23 21:24:22.425
• [0.088 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 08/18/23 21:24:22.432
  Aug 18 21:24:22.432: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svc-latency @ 08/18/23 21:24:22.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:22.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:22.45
  Aug 18 21:24:22.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-2281 @ 08/18/23 21:24:22.453
  I0818 21:24:22.458306      19 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-2281, replica count: 1
  I0818 21:24:23.509830      19 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 21:24:23.620: INFO: Created: latency-svc-22qx6
  Aug 18 21:24:23.629: INFO: Got endpoints: latency-svc-22qx6 [19.510366ms]
  Aug 18 21:24:23.642: INFO: Created: latency-svc-554gl
  Aug 18 21:24:23.647: INFO: Got endpoints: latency-svc-554gl [17.793974ms]
  Aug 18 21:24:23.648: INFO: Created: latency-svc-j2m8c
  Aug 18 21:24:23.652: INFO: Created: latency-svc-fg26j
  Aug 18 21:24:23.657: INFO: Got endpoints: latency-svc-j2m8c [27.798292ms]
  Aug 18 21:24:23.660: INFO: Got endpoints: latency-svc-fg26j [30.086045ms]
  Aug 18 21:24:23.663: INFO: Created: latency-svc-nzmfk
  Aug 18 21:24:23.666: INFO: Got endpoints: latency-svc-nzmfk [36.034066ms]
  Aug 18 21:24:23.669: INFO: Created: latency-svc-9kh9w
  Aug 18 21:24:23.675: INFO: Got endpoints: latency-svc-9kh9w [45.077866ms]
  Aug 18 21:24:23.679: INFO: Created: latency-svc-r8wrl
  Aug 18 21:24:23.683: INFO: Got endpoints: latency-svc-r8wrl [52.971874ms]
  Aug 18 21:24:23.687: INFO: Created: latency-svc-424jn
  Aug 18 21:24:23.690: INFO: Got endpoints: latency-svc-424jn [60.008996ms]
  Aug 18 21:24:23.694: INFO: Created: latency-svc-rxhxs
  Aug 18 21:24:23.697: INFO: Got endpoints: latency-svc-rxhxs [66.863325ms]
  Aug 18 21:24:23.700: INFO: Created: latency-svc-cmg2k
  Aug 18 21:24:23.705: INFO: Got endpoints: latency-svc-cmg2k [74.976727ms]
  Aug 18 21:24:23.709: INFO: Created: latency-svc-gjqq8
  Aug 18 21:24:23.713: INFO: Got endpoints: latency-svc-gjqq8 [82.836595ms]
  Aug 18 21:24:23.716: INFO: Created: latency-svc-2qmnh
  Aug 18 21:24:23.721: INFO: Created: latency-svc-dmwss
  Aug 18 21:24:23.722: INFO: Got endpoints: latency-svc-2qmnh [92.068538ms]
  Aug 18 21:24:23.728: INFO: Got endpoints: latency-svc-dmwss [98.206473ms]
  Aug 18 21:24:23.731: INFO: Created: latency-svc-8jmkf
  Aug 18 21:24:23.734: INFO: Got endpoints: latency-svc-8jmkf [104.096433ms]
  Aug 18 21:24:23.738: INFO: Created: latency-svc-4w77j
  Aug 18 21:24:23.744: INFO: Got endpoints: latency-svc-4w77j [114.973287ms]
  Aug 18 21:24:23.749: INFO: Created: latency-svc-z7xpm
  Aug 18 21:24:23.752: INFO: Got endpoints: latency-svc-z7xpm [121.481579ms]
  Aug 18 21:24:23.758: INFO: Created: latency-svc-ph5v8
  Aug 18 21:24:23.760: INFO: Got endpoints: latency-svc-ph5v8 [112.952209ms]
  Aug 18 21:24:23.763: INFO: Created: latency-svc-kh9sx
  Aug 18 21:24:23.767: INFO: Got endpoints: latency-svc-kh9sx [110.032474ms]
  Aug 18 21:24:23.772: INFO: Created: latency-svc-zgrns
  Aug 18 21:24:23.775: INFO: Got endpoints: latency-svc-zgrns [115.240042ms]
  Aug 18 21:24:23.779: INFO: Created: latency-svc-ppn58
  Aug 18 21:24:23.784: INFO: Got endpoints: latency-svc-ppn58 [118.211398ms]
  Aug 18 21:24:23.787: INFO: Created: latency-svc-zfkwg
  Aug 18 21:24:23.793: INFO: Got endpoints: latency-svc-zfkwg [117.828161ms]
  Aug 18 21:24:23.796: INFO: Created: latency-svc-lb8n7
  Aug 18 21:24:23.799: INFO: Got endpoints: latency-svc-lb8n7 [116.834511ms]
  Aug 18 21:24:23.804: INFO: Created: latency-svc-xpx8q
  Aug 18 21:24:23.806: INFO: Got endpoints: latency-svc-xpx8q [115.946745ms]
  Aug 18 21:24:23.809: INFO: Created: latency-svc-rhcqn
  Aug 18 21:24:23.815: INFO: Created: latency-svc-sf2cx
  Aug 18 21:24:23.822: INFO: Created: latency-svc-4cr5r
  Aug 18 21:24:23.822: INFO: Got endpoints: latency-svc-rhcqn [125.194709ms]
  Aug 18 21:24:23.824: INFO: Got endpoints: latency-svc-sf2cx [119.45274ms]
  Aug 18 21:24:23.827: INFO: Got endpoints: latency-svc-4cr5r [113.787384ms]
  Aug 18 21:24:23.830: INFO: Created: latency-svc-m7f6t
  Aug 18 21:24:23.833: INFO: Got endpoints: latency-svc-m7f6t [110.733148ms]
  Aug 18 21:24:23.836: INFO: Created: latency-svc-974hc
  Aug 18 21:24:23.841: INFO: Got endpoints: latency-svc-974hc [112.848867ms]
  Aug 18 21:24:23.848: INFO: Created: latency-svc-llmj2
  Aug 18 21:24:23.849: INFO: Got endpoints: latency-svc-llmj2 [114.943296ms]
  Aug 18 21:24:23.853: INFO: Created: latency-svc-2mjwc
  Aug 18 21:24:23.857: INFO: Got endpoints: latency-svc-2mjwc [112.640403ms]
  Aug 18 21:24:23.859: INFO: Created: latency-svc-lh8pf
  Aug 18 21:24:23.864: INFO: Got endpoints: latency-svc-lh8pf [111.95941ms]
  Aug 18 21:24:23.869: INFO: Created: latency-svc-rv25q
  Aug 18 21:24:23.872: INFO: Got endpoints: latency-svc-rv25q [111.309108ms]
  Aug 18 21:24:23.875: INFO: Created: latency-svc-phnjc
  Aug 18 21:24:23.883: INFO: Created: latency-svc-xl5rp
  Aug 18 21:24:23.883: INFO: Got endpoints: latency-svc-phnjc [115.394585ms]
  Aug 18 21:24:23.888: INFO: Got endpoints: latency-svc-xl5rp [112.562052ms]
  Aug 18 21:24:23.890: INFO: Created: latency-svc-thflj
  Aug 18 21:24:23.895: INFO: Got endpoints: latency-svc-thflj [110.486732ms]
  Aug 18 21:24:23.898: INFO: Created: latency-svc-7nmv5
  Aug 18 21:24:23.900: INFO: Created: latency-svc-jbkd6
  Aug 18 21:24:23.907: INFO: Created: latency-svc-zb9qf
  Aug 18 21:24:23.913: INFO: Created: latency-svc-w7vfp
  Aug 18 21:24:23.917: INFO: Created: latency-svc-srzcz
  Aug 18 21:24:23.924: INFO: Created: latency-svc-b7c2p
  Aug 18 21:24:23.928: INFO: Got endpoints: latency-svc-7nmv5 [135.794107ms]
  Aug 18 21:24:23.931: INFO: Created: latency-svc-xl6cj
  Aug 18 21:24:23.938: INFO: Created: latency-svc-gm9m4
  Aug 18 21:24:23.940: INFO: Created: latency-svc-b6fz9
  Aug 18 21:24:23.944: INFO: Created: latency-svc-xdj4k
  Aug 18 21:24:23.948: INFO: Created: latency-svc-4m7xp
  Aug 18 21:24:23.954: INFO: Created: latency-svc-7vmm6
  Aug 18 21:24:23.960: INFO: Created: latency-svc-4gf4k
  Aug 18 21:24:23.965: INFO: Created: latency-svc-5b2cl
  Aug 18 21:24:23.971: INFO: Created: latency-svc-fcrd8
  Aug 18 21:24:23.977: INFO: Created: latency-svc-lj6xs
  Aug 18 21:24:23.978: INFO: Got endpoints: latency-svc-jbkd6 [177.754345ms]
  Aug 18 21:24:23.992: INFO: Created: latency-svc-lfbct
  Aug 18 21:24:24.027: INFO: Got endpoints: latency-svc-zb9qf [221.267221ms]
  Aug 18 21:24:24.037: INFO: Created: latency-svc-2lfgz
  Aug 18 21:24:24.077: INFO: Got endpoints: latency-svc-w7vfp [254.588856ms]
  Aug 18 21:24:24.087: INFO: Created: latency-svc-krwpx
  Aug 18 21:24:24.127: INFO: Got endpoints: latency-svc-srzcz [302.902522ms]
  Aug 18 21:24:24.137: INFO: Created: latency-svc-2vv9w
  Aug 18 21:24:24.176: INFO: Got endpoints: latency-svc-b7c2p [349.475577ms]
  Aug 18 21:24:24.187: INFO: Created: latency-svc-n22vd
  Aug 18 21:24:24.227: INFO: Got endpoints: latency-svc-xl6cj [393.96969ms]
  Aug 18 21:24:24.237: INFO: Created: latency-svc-mkwdp
  Aug 18 21:24:24.277: INFO: Got endpoints: latency-svc-gm9m4 [348.917886ms]
  Aug 18 21:24:24.292: INFO: Created: latency-svc-scbjt
  Aug 18 21:24:24.326: INFO: Got endpoints: latency-svc-b6fz9 [484.454308ms]
  Aug 18 21:24:24.337: INFO: Created: latency-svc-w6j4v
  Aug 18 21:24:24.377: INFO: Got endpoints: latency-svc-xdj4k [520.433673ms]
  Aug 18 21:24:24.387: INFO: Created: latency-svc-hzc8v
  Aug 18 21:24:24.428: INFO: Got endpoints: latency-svc-4m7xp [564.363298ms]
  Aug 18 21:24:24.437: INFO: Created: latency-svc-twbsg
  Aug 18 21:24:24.477: INFO: Got endpoints: latency-svc-7vmm6 [605.076291ms]
  Aug 18 21:24:24.489: INFO: Created: latency-svc-vtcpd
  Aug 18 21:24:24.526: INFO: Got endpoints: latency-svc-4gf4k [642.969261ms]
  Aug 18 21:24:24.539: INFO: Created: latency-svc-zq5pr
  Aug 18 21:24:24.576: INFO: Got endpoints: latency-svc-5b2cl [688.577906ms]
  Aug 18 21:24:24.586: INFO: Created: latency-svc-89mff
  Aug 18 21:24:24.626: INFO: Got endpoints: latency-svc-fcrd8 [731.345599ms]
  Aug 18 21:24:24.638: INFO: Created: latency-svc-mgs8c
  Aug 18 21:24:24.677: INFO: Got endpoints: latency-svc-lj6xs [828.026553ms]
  Aug 18 21:24:24.687: INFO: Created: latency-svc-pqt9c
  Aug 18 21:24:24.727: INFO: Got endpoints: latency-svc-lfbct [749.663333ms]
  Aug 18 21:24:24.738: INFO: Created: latency-svc-vqwxp
  Aug 18 21:24:24.776: INFO: Got endpoints: latency-svc-2lfgz [749.381187ms]
  Aug 18 21:24:24.787: INFO: Created: latency-svc-vcrkr
  Aug 18 21:24:24.828: INFO: Got endpoints: latency-svc-krwpx [751.476097ms]
  Aug 18 21:24:24.838: INFO: Created: latency-svc-j57n6
  Aug 18 21:24:24.877: INFO: Got endpoints: latency-svc-2vv9w [749.489751ms]
  Aug 18 21:24:24.888: INFO: Created: latency-svc-kcfh2
  Aug 18 21:24:24.926: INFO: Got endpoints: latency-svc-n22vd [749.783136ms]
  Aug 18 21:24:24.937: INFO: Created: latency-svc-4znl5
  Aug 18 21:24:24.978: INFO: Got endpoints: latency-svc-mkwdp [749.963579ms]
  Aug 18 21:24:24.990: INFO: Created: latency-svc-lkhl8
  Aug 18 21:24:25.027: INFO: Got endpoints: latency-svc-scbjt [749.688543ms]
  Aug 18 21:24:25.037: INFO: Created: latency-svc-28j6b
  Aug 18 21:24:25.079: INFO: Got endpoints: latency-svc-w6j4v [752.798041ms]
  Aug 18 21:24:25.091: INFO: Created: latency-svc-lvwc9
  Aug 18 21:24:25.127: INFO: Got endpoints: latency-svc-hzc8v [749.223665ms]
  Aug 18 21:24:25.137: INFO: Created: latency-svc-8tbjg
  Aug 18 21:24:25.178: INFO: Got endpoints: latency-svc-twbsg [749.315057ms]
  Aug 18 21:24:25.186: INFO: Created: latency-svc-d8h6q
  Aug 18 21:24:25.229: INFO: Got endpoints: latency-svc-vtcpd [751.565789ms]
  Aug 18 21:24:25.240: INFO: Created: latency-svc-pzfsp
  Aug 18 21:24:25.278: INFO: Got endpoints: latency-svc-zq5pr [752.252572ms]
  Aug 18 21:24:25.289: INFO: Created: latency-svc-k8gfz
  Aug 18 21:24:25.329: INFO: Got endpoints: latency-svc-89mff [752.793482ms]
  Aug 18 21:24:25.340: INFO: Created: latency-svc-csvr7
  Aug 18 21:24:25.376: INFO: Got endpoints: latency-svc-mgs8c [750.074711ms]
  Aug 18 21:24:25.388: INFO: Created: latency-svc-85hpz
  Aug 18 21:24:25.428: INFO: Got endpoints: latency-svc-pqt9c [750.372796ms]
  Aug 18 21:24:25.438: INFO: Created: latency-svc-9nx99
  Aug 18 21:24:25.477: INFO: Got endpoints: latency-svc-vqwxp [750.254584ms]
  Aug 18 21:24:25.487: INFO: Created: latency-svc-m4mqv
  Aug 18 21:24:25.526: INFO: Got endpoints: latency-svc-vcrkr [749.977739ms]
  Aug 18 21:24:25.536: INFO: Created: latency-svc-w5z4f
  Aug 18 21:24:25.576: INFO: Got endpoints: latency-svc-j57n6 [748.063094ms]
  Aug 18 21:24:25.590: INFO: Created: latency-svc-ssspc
  Aug 18 21:24:25.628: INFO: Got endpoints: latency-svc-kcfh2 [750.803434ms]
  Aug 18 21:24:25.640: INFO: Created: latency-svc-mn7pj
  Aug 18 21:24:25.676: INFO: Got endpoints: latency-svc-4znl5 [749.46417ms]
  Aug 18 21:24:25.689: INFO: Created: latency-svc-nftnc
  Aug 18 21:24:25.728: INFO: Got endpoints: latency-svc-lkhl8 [750.469118ms]
  Aug 18 21:24:25.739: INFO: Created: latency-svc-489nx
  Aug 18 21:24:25.778: INFO: Got endpoints: latency-svc-28j6b [751.09013ms]
  Aug 18 21:24:25.788: INFO: Created: latency-svc-wfddw
  Aug 18 21:24:25.827: INFO: Got endpoints: latency-svc-lvwc9 [748.280917ms]
  Aug 18 21:24:25.838: INFO: Created: latency-svc-9fb6s
  Aug 18 21:24:25.877: INFO: Got endpoints: latency-svc-8tbjg [749.961328ms]
  Aug 18 21:24:25.889: INFO: Created: latency-svc-q7v8l
  Aug 18 21:24:25.928: INFO: Got endpoints: latency-svc-d8h6q [750.199044ms]
  Aug 18 21:24:25.939: INFO: Created: latency-svc-nl2k6
  Aug 18 21:24:25.975: INFO: Got endpoints: latency-svc-pzfsp [746.746529ms]
  Aug 18 21:24:25.987: INFO: Created: latency-svc-7n6d8
  Aug 18 21:24:26.027: INFO: Got endpoints: latency-svc-k8gfz [749.314587ms]
  Aug 18 21:24:26.039: INFO: Created: latency-svc-mrnnh
  Aug 18 21:24:26.082: INFO: Got endpoints: latency-svc-csvr7 [752.957575ms]
  Aug 18 21:24:26.093: INFO: Created: latency-svc-xwrbb
  Aug 18 21:24:26.126: INFO: Got endpoints: latency-svc-85hpz [749.257125ms]
  Aug 18 21:24:26.137: INFO: Created: latency-svc-tcxmx
  Aug 18 21:24:26.177: INFO: Got endpoints: latency-svc-9nx99 [749.492199ms]
  Aug 18 21:24:26.187: INFO: Created: latency-svc-mgj8c
  Aug 18 21:24:26.229: INFO: Got endpoints: latency-svc-m4mqv [751.213112ms]
  Aug 18 21:24:26.238: INFO: Created: latency-svc-bgcll
  Aug 18 21:24:26.277: INFO: Got endpoints: latency-svc-w5z4f [750.089491ms]
  Aug 18 21:24:26.287: INFO: Created: latency-svc-xkzjl
  Aug 18 21:24:26.327: INFO: Got endpoints: latency-svc-ssspc [750.638781ms]
  Aug 18 21:24:26.337: INFO: Created: latency-svc-sgpvx
  Aug 18 21:24:26.377: INFO: Got endpoints: latency-svc-mn7pj [749.53144ms]
  Aug 18 21:24:26.388: INFO: Created: latency-svc-9c4f9
  Aug 18 21:24:26.427: INFO: Got endpoints: latency-svc-nftnc [751.12338ms]
  Aug 18 21:24:26.438: INFO: Created: latency-svc-rwjg7
  Aug 18 21:24:26.477: INFO: Got endpoints: latency-svc-489nx [748.873478ms]
  Aug 18 21:24:26.487: INFO: Created: latency-svc-pzj4j
  Aug 18 21:24:26.528: INFO: Got endpoints: latency-svc-wfddw [749.420538ms]
  Aug 18 21:24:26.537: INFO: Created: latency-svc-shgzw
  Aug 18 21:24:26.576: INFO: Got endpoints: latency-svc-9fb6s [748.812967ms]
  Aug 18 21:24:26.587: INFO: Created: latency-svc-gchxw
  Aug 18 21:24:26.628: INFO: Got endpoints: latency-svc-q7v8l [751.59614ms]
  Aug 18 21:24:26.639: INFO: Created: latency-svc-m8psd
  Aug 18 21:24:26.679: INFO: Got endpoints: latency-svc-nl2k6 [751.430276ms]
  Aug 18 21:24:26.688: INFO: Created: latency-svc-qndmq
  Aug 18 21:24:26.728: INFO: Got endpoints: latency-svc-7n6d8 [752.403385ms]
  Aug 18 21:24:26.739: INFO: Created: latency-svc-868wt
  Aug 18 21:24:26.778: INFO: Got endpoints: latency-svc-mrnnh [750.829458ms]
  Aug 18 21:24:26.788: INFO: Created: latency-svc-9wcmt
  Aug 18 21:24:26.827: INFO: Got endpoints: latency-svc-xwrbb [745.077959ms]
  Aug 18 21:24:26.837: INFO: Created: latency-svc-fd5q9
  Aug 18 21:24:26.877: INFO: Got endpoints: latency-svc-tcxmx [751.203599ms]
  Aug 18 21:24:26.888: INFO: Created: latency-svc-b8kwd
  Aug 18 21:24:26.927: INFO: Got endpoints: latency-svc-mgj8c [750.00709ms]
  Aug 18 21:24:26.938: INFO: Created: latency-svc-9k6sb
  Aug 18 21:24:26.978: INFO: Got endpoints: latency-svc-bgcll [748.950322ms]
  Aug 18 21:24:26.988: INFO: Created: latency-svc-4fbbn
  Aug 18 21:24:27.027: INFO: Got endpoints: latency-svc-xkzjl [750.186984ms]
  Aug 18 21:24:27.038: INFO: Created: latency-svc-bjmrv
  Aug 18 21:24:27.078: INFO: Got endpoints: latency-svc-sgpvx [750.801296ms]
  Aug 18 21:24:27.090: INFO: Created: latency-svc-jxvtl
  Aug 18 21:24:27.127: INFO: Got endpoints: latency-svc-9c4f9 [749.692252ms]
  Aug 18 21:24:27.137: INFO: Created: latency-svc-p52mb
  Aug 18 21:24:27.177: INFO: Got endpoints: latency-svc-rwjg7 [749.942242ms]
  Aug 18 21:24:27.187: INFO: Created: latency-svc-d2qvh
  Aug 18 21:24:27.227: INFO: Got endpoints: latency-svc-pzj4j [750.340062ms]
  Aug 18 21:24:27.238: INFO: Created: latency-svc-blrgd
  Aug 18 21:24:27.277: INFO: Got endpoints: latency-svc-shgzw [749.48103ms]
  Aug 18 21:24:27.286: INFO: Created: latency-svc-5snxq
  Aug 18 21:24:27.327: INFO: Got endpoints: latency-svc-gchxw [750.261772ms]
  Aug 18 21:24:27.338: INFO: Created: latency-svc-lgkmv
  Aug 18 21:24:27.376: INFO: Got endpoints: latency-svc-m8psd [748.061925ms]
  Aug 18 21:24:27.387: INFO: Created: latency-svc-872c7
  Aug 18 21:24:27.426: INFO: Got endpoints: latency-svc-qndmq [746.97562ms]
  Aug 18 21:24:27.437: INFO: Created: latency-svc-cxstp
  Aug 18 21:24:27.476: INFO: Got endpoints: latency-svc-868wt [748.050706ms]
  Aug 18 21:24:27.486: INFO: Created: latency-svc-vklrq
  Aug 18 21:24:27.526: INFO: Got endpoints: latency-svc-9wcmt [747.70755ms]
  Aug 18 21:24:27.536: INFO: Created: latency-svc-cn45w
  Aug 18 21:24:27.578: INFO: Got endpoints: latency-svc-fd5q9 [749.958903ms]
  Aug 18 21:24:27.588: INFO: Created: latency-svc-zjnkw
  Aug 18 21:24:27.628: INFO: Got endpoints: latency-svc-b8kwd [750.938207ms]
  Aug 18 21:24:27.639: INFO: Created: latency-svc-5qwn8
  Aug 18 21:24:27.677: INFO: Got endpoints: latency-svc-9k6sb [749.146561ms]
  Aug 18 21:24:27.687: INFO: Created: latency-svc-7kqz5
  Aug 18 21:24:27.726: INFO: Got endpoints: latency-svc-4fbbn [747.73687ms]
  Aug 18 21:24:27.736: INFO: Created: latency-svc-vwwg7
  Aug 18 21:24:27.777: INFO: Got endpoints: latency-svc-bjmrv [750.337129ms]
  Aug 18 21:24:27.788: INFO: Created: latency-svc-7rrs8
  Aug 18 21:24:27.827: INFO: Got endpoints: latency-svc-jxvtl [749.550857ms]
  Aug 18 21:24:27.837: INFO: Created: latency-svc-vxk7d
  Aug 18 21:24:27.877: INFO: Got endpoints: latency-svc-p52mb [749.505336ms]
  Aug 18 21:24:27.886: INFO: Created: latency-svc-lkfxx
  Aug 18 21:24:27.927: INFO: Got endpoints: latency-svc-d2qvh [749.902772ms]
  Aug 18 21:24:27.937: INFO: Created: latency-svc-gjrtf
  Aug 18 21:24:27.979: INFO: Got endpoints: latency-svc-blrgd [751.055289ms]
  Aug 18 21:24:27.989: INFO: Created: latency-svc-np2hr
  Aug 18 21:24:28.027: INFO: Got endpoints: latency-svc-5snxq [749.883921ms]
  Aug 18 21:24:28.037: INFO: Created: latency-svc-nnfkd
  Aug 18 21:24:28.078: INFO: Got endpoints: latency-svc-lgkmv [751.16689ms]
  Aug 18 21:24:28.088: INFO: Created: latency-svc-sq68t
  Aug 18 21:24:28.128: INFO: Got endpoints: latency-svc-872c7 [751.165081ms]
  Aug 18 21:24:28.138: INFO: Created: latency-svc-9gwpd
  Aug 18 21:24:28.177: INFO: Got endpoints: latency-svc-cxstp [750.42978ms]
  Aug 18 21:24:28.189: INFO: Created: latency-svc-gg9bl
  Aug 18 21:24:28.228: INFO: Got endpoints: latency-svc-vklrq [751.660468ms]
  Aug 18 21:24:28.238: INFO: Created: latency-svc-spmgn
  Aug 18 21:24:28.277: INFO: Got endpoints: latency-svc-cn45w [751.376474ms]
  Aug 18 21:24:28.288: INFO: Created: latency-svc-czjx7
  Aug 18 21:24:28.327: INFO: Got endpoints: latency-svc-zjnkw [748.814596ms]
  Aug 18 21:24:28.337: INFO: Created: latency-svc-4jwvf
  Aug 18 21:24:28.377: INFO: Got endpoints: latency-svc-5qwn8 [748.704324ms]
  Aug 18 21:24:28.388: INFO: Created: latency-svc-czq7r
  Aug 18 21:24:28.427: INFO: Got endpoints: latency-svc-7kqz5 [750.834475ms]
  Aug 18 21:24:28.437: INFO: Created: latency-svc-wx82z
  Aug 18 21:24:28.477: INFO: Got endpoints: latency-svc-vwwg7 [751.204731ms]
  Aug 18 21:24:28.487: INFO: Created: latency-svc-v56g7
  Aug 18 21:24:28.528: INFO: Got endpoints: latency-svc-7rrs8 [750.760424ms]
  Aug 18 21:24:28.540: INFO: Created: latency-svc-jsgqm
  Aug 18 21:24:28.577: INFO: Got endpoints: latency-svc-vxk7d [749.465766ms]
  Aug 18 21:24:28.587: INFO: Created: latency-svc-kfh4c
  Aug 18 21:24:28.626: INFO: Got endpoints: latency-svc-lkfxx [748.895447ms]
  Aug 18 21:24:28.638: INFO: Created: latency-svc-9m84l
  Aug 18 21:24:28.677: INFO: Got endpoints: latency-svc-gjrtf [750.032554ms]
  Aug 18 21:24:28.687: INFO: Created: latency-svc-bbrvl
  Aug 18 21:24:28.727: INFO: Got endpoints: latency-svc-np2hr [748.744235ms]
  Aug 18 21:24:28.740: INFO: Created: latency-svc-zpvvb
  Aug 18 21:24:28.777: INFO: Got endpoints: latency-svc-nnfkd [749.338564ms]
  Aug 18 21:24:28.788: INFO: Created: latency-svc-vxzjs
  Aug 18 21:24:28.828: INFO: Got endpoints: latency-svc-sq68t [750.528721ms]
  Aug 18 21:24:28.839: INFO: Created: latency-svc-zwvmn
  Aug 18 21:24:28.877: INFO: Got endpoints: latency-svc-9gwpd [749.279623ms]
  Aug 18 21:24:28.893: INFO: Created: latency-svc-5c9pq
  Aug 18 21:24:28.926: INFO: Got endpoints: latency-svc-gg9bl [748.589743ms]
  Aug 18 21:24:28.935: INFO: Created: latency-svc-tz6vp
  Aug 18 21:24:28.979: INFO: Got endpoints: latency-svc-spmgn [751.567846ms]
  Aug 18 21:24:28.990: INFO: Created: latency-svc-ccsf8
  Aug 18 21:24:29.027: INFO: Got endpoints: latency-svc-czjx7 [749.527857ms]
  Aug 18 21:24:29.038: INFO: Created: latency-svc-6lw7t
  Aug 18 21:24:29.076: INFO: Got endpoints: latency-svc-4jwvf [749.938392ms]
  Aug 18 21:24:29.093: INFO: Created: latency-svc-rhvxk
  Aug 18 21:24:29.126: INFO: Got endpoints: latency-svc-czq7r [749.582058ms]
  Aug 18 21:24:29.139: INFO: Created: latency-svc-lrsx4
  Aug 18 21:24:29.176: INFO: Got endpoints: latency-svc-wx82z [748.3701ms]
  Aug 18 21:24:29.186: INFO: Created: latency-svc-6rbv5
  Aug 18 21:24:29.227: INFO: Got endpoints: latency-svc-v56g7 [749.989343ms]
  Aug 18 21:24:29.236: INFO: Created: latency-svc-v76pl
  Aug 18 21:24:29.277: INFO: Got endpoints: latency-svc-jsgqm [749.230052ms]
  Aug 18 21:24:29.288: INFO: Created: latency-svc-ldl8d
  Aug 18 21:24:29.327: INFO: Got endpoints: latency-svc-kfh4c [749.680339ms]
  Aug 18 21:24:29.338: INFO: Created: latency-svc-9p2pr
  Aug 18 21:24:29.376: INFO: Got endpoints: latency-svc-9m84l [749.714969ms]
  Aug 18 21:24:29.386: INFO: Created: latency-svc-jb9g5
  Aug 18 21:24:29.426: INFO: Got endpoints: latency-svc-bbrvl [748.647263ms]
  Aug 18 21:24:29.436: INFO: Created: latency-svc-7fwn4
  Aug 18 21:24:29.478: INFO: Got endpoints: latency-svc-zpvvb [750.44309ms]
  Aug 18 21:24:29.487: INFO: Created: latency-svc-lvsgh
  Aug 18 21:24:29.527: INFO: Got endpoints: latency-svc-vxzjs [750.265377ms]
  Aug 18 21:24:29.537: INFO: Created: latency-svc-5hnc6
  Aug 18 21:24:29.576: INFO: Got endpoints: latency-svc-zwvmn [748.144876ms]
  Aug 18 21:24:29.588: INFO: Created: latency-svc-5w2kw
  Aug 18 21:24:29.626: INFO: Got endpoints: latency-svc-5c9pq [749.05549ms]
  Aug 18 21:24:29.644: INFO: Created: latency-svc-tr49q
  Aug 18 21:24:29.679: INFO: Got endpoints: latency-svc-tz6vp [753.330462ms]
  Aug 18 21:24:29.688: INFO: Created: latency-svc-fwhsn
  Aug 18 21:24:29.728: INFO: Got endpoints: latency-svc-ccsf8 [748.394019ms]
  Aug 18 21:24:29.738: INFO: Created: latency-svc-kwqd4
  Aug 18 21:24:29.778: INFO: Got endpoints: latency-svc-6lw7t [750.348848ms]
  Aug 18 21:24:29.787: INFO: Created: latency-svc-8q4vc
  Aug 18 21:24:29.827: INFO: Got endpoints: latency-svc-rhvxk [750.276058ms]
  Aug 18 21:24:29.835: INFO: Created: latency-svc-bbwtl
  Aug 18 21:24:29.876: INFO: Got endpoints: latency-svc-lrsx4 [750.104544ms]
  Aug 18 21:24:29.887: INFO: Created: latency-svc-5jcpt
  Aug 18 21:24:29.926: INFO: Got endpoints: latency-svc-6rbv5 [749.937892ms]
  Aug 18 21:24:29.936: INFO: Created: latency-svc-sshf5
  Aug 18 21:24:29.975: INFO: Got endpoints: latency-svc-v76pl [748.40177ms]
  Aug 18 21:24:29.984: INFO: Created: latency-svc-m9bk5
  Aug 18 21:24:30.028: INFO: Got endpoints: latency-svc-ldl8d [750.231757ms]
  Aug 18 21:24:30.037: INFO: Created: latency-svc-78dsf
  Aug 18 21:24:30.077: INFO: Got endpoints: latency-svc-9p2pr [750.014033ms]
  Aug 18 21:24:30.086: INFO: Created: latency-svc-vd8w7
  Aug 18 21:24:30.126: INFO: Got endpoints: latency-svc-jb9g5 [750.041054ms]
  Aug 18 21:24:30.136: INFO: Created: latency-svc-9lcvf
  Aug 18 21:24:30.176: INFO: Got endpoints: latency-svc-7fwn4 [749.891262ms]
  Aug 18 21:24:30.186: INFO: Created: latency-svc-pw4vd
  Aug 18 21:24:30.228: INFO: Got endpoints: latency-svc-lvsgh [749.615728ms]
  Aug 18 21:24:30.237: INFO: Created: latency-svc-nfwjk
  Aug 18 21:24:30.277: INFO: Got endpoints: latency-svc-5hnc6 [749.437065ms]
  Aug 18 21:24:30.286: INFO: Created: latency-svc-xlt64
  Aug 18 21:24:30.328: INFO: Got endpoints: latency-svc-5w2kw [751.84543ms]
  Aug 18 21:24:30.339: INFO: Created: latency-svc-24tm8
  Aug 18 21:24:30.378: INFO: Got endpoints: latency-svc-tr49q [751.761539ms]
  Aug 18 21:24:30.388: INFO: Created: latency-svc-z2x65
  Aug 18 21:24:30.425: INFO: Got endpoints: latency-svc-fwhsn [746.255589ms]
  Aug 18 21:24:30.436: INFO: Created: latency-svc-srgcj
  Aug 18 21:24:30.478: INFO: Got endpoints: latency-svc-kwqd4 [750.060834ms]
  Aug 18 21:24:30.488: INFO: Created: latency-svc-s5mnz
  Aug 18 21:24:30.528: INFO: Got endpoints: latency-svc-8q4vc [750.433309ms]
  Aug 18 21:24:30.539: INFO: Created: latency-svc-ds627
  Aug 18 21:24:30.578: INFO: Got endpoints: latency-svc-bbwtl [751.11523ms]
  Aug 18 21:24:30.587: INFO: Created: latency-svc-bjxl4
  Aug 18 21:24:30.627: INFO: Got endpoints: latency-svc-5jcpt [750.747055ms]
  Aug 18 21:24:30.644: INFO: Created: latency-svc-7db5f
  Aug 18 21:24:30.677: INFO: Got endpoints: latency-svc-sshf5 [750.881306ms]
  Aug 18 21:24:30.686: INFO: Created: latency-svc-nbmps
  Aug 18 21:24:30.728: INFO: Got endpoints: latency-svc-m9bk5 [753.121549ms]
  Aug 18 21:24:30.740: INFO: Created: latency-svc-xjlss
  Aug 18 21:24:30.778: INFO: Got endpoints: latency-svc-78dsf [750.615413ms]
  Aug 18 21:24:30.788: INFO: Created: latency-svc-qjcvl
  Aug 18 21:24:30.828: INFO: Got endpoints: latency-svc-vd8w7 [751.7991ms]
  Aug 18 21:24:30.839: INFO: Created: latency-svc-n7zqx
  Aug 18 21:24:30.876: INFO: Got endpoints: latency-svc-9lcvf [750.484561ms]
  Aug 18 21:24:30.888: INFO: Created: latency-svc-js5ff
  Aug 18 21:24:30.928: INFO: Got endpoints: latency-svc-pw4vd [752.734433ms]
  Aug 18 21:24:30.939: INFO: Created: latency-svc-g68db
  Aug 18 21:24:30.979: INFO: Got endpoints: latency-svc-nfwjk [751.274402ms]
  Aug 18 21:24:30.989: INFO: Created: latency-svc-xpgv5
  Aug 18 21:24:31.029: INFO: Got endpoints: latency-svc-xlt64 [752.098514ms]
  Aug 18 21:24:31.039: INFO: Created: latency-svc-hwv85
  Aug 18 21:24:31.076: INFO: Got endpoints: latency-svc-24tm8 [748.025335ms]
  Aug 18 21:24:31.089: INFO: Created: latency-svc-8bbp5
  Aug 18 21:24:31.126: INFO: Got endpoints: latency-svc-z2x65 [748.292408ms]
  Aug 18 21:24:31.138: INFO: Created: latency-svc-l6dfs
  Aug 18 21:24:31.177: INFO: Got endpoints: latency-svc-srgcj [751.14067ms]
  Aug 18 21:24:31.187: INFO: Created: latency-svc-pggzh
  Aug 18 21:24:31.230: INFO: Got endpoints: latency-svc-s5mnz [752.168655ms]
  Aug 18 21:24:31.240: INFO: Created: latency-svc-gclxp
  Aug 18 21:24:31.279: INFO: Got endpoints: latency-svc-ds627 [750.897437ms]
  Aug 18 21:24:31.289: INFO: Created: latency-svc-6dp6f
  Aug 18 21:24:31.329: INFO: Got endpoints: latency-svc-bjxl4 [750.892987ms]
  Aug 18 21:24:31.339: INFO: Created: latency-svc-66xmb
  Aug 18 21:24:31.377: INFO: Got endpoints: latency-svc-7db5f [749.417665ms]
  Aug 18 21:24:31.389: INFO: Created: latency-svc-mjzhn
  Aug 18 21:24:31.427: INFO: Got endpoints: latency-svc-nbmps [750.330879ms]
  Aug 18 21:24:31.438: INFO: Created: latency-svc-95hkp
  Aug 18 21:24:31.478: INFO: Got endpoints: latency-svc-xjlss [749.580917ms]
  Aug 18 21:24:31.527: INFO: Got endpoints: latency-svc-qjcvl [748.297199ms]
  Aug 18 21:24:31.578: INFO: Got endpoints: latency-svc-n7zqx [749.437545ms]
  Aug 18 21:24:31.626: INFO: Got endpoints: latency-svc-js5ff [749.610827ms]
  Aug 18 21:24:31.679: INFO: Got endpoints: latency-svc-g68db [750.919066ms]
  Aug 18 21:24:31.733: INFO: Got endpoints: latency-svc-xpgv5 [753.386703ms]
  Aug 18 21:24:31.777: INFO: Got endpoints: latency-svc-hwv85 [748.381729ms]
  Aug 18 21:24:31.828: INFO: Got endpoints: latency-svc-8bbp5 [751.462155ms]
  Aug 18 21:24:31.878: INFO: Got endpoints: latency-svc-l6dfs [751.326813ms]
  Aug 18 21:24:31.927: INFO: Got endpoints: latency-svc-pggzh [750.393499ms]
  Aug 18 21:24:31.977: INFO: Got endpoints: latency-svc-gclxp [746.731335ms]
  Aug 18 21:24:32.027: INFO: Got endpoints: latency-svc-6dp6f [747.659199ms]
  Aug 18 21:24:32.077: INFO: Got endpoints: latency-svc-66xmb [748.254228ms]
  Aug 18 21:24:32.127: INFO: Got endpoints: latency-svc-mjzhn [750.555892ms]
  Aug 18 21:24:32.178: INFO: Got endpoints: latency-svc-95hkp [750.42093ms]
  Aug 18 21:24:32.178: INFO: Latencies: [17.793974ms 27.798292ms 30.086045ms 36.034066ms 45.077866ms 52.971874ms 60.008996ms 66.863325ms 74.976727ms 82.836595ms 92.068538ms 98.206473ms 104.096433ms 110.032474ms 110.486732ms 110.733148ms 111.309108ms 111.95941ms 112.562052ms 112.640403ms 112.848867ms 112.952209ms 113.787384ms 114.943296ms 114.973287ms 115.240042ms 115.394585ms 115.946745ms 116.834511ms 117.828161ms 118.211398ms 119.45274ms 121.481579ms 125.194709ms 135.794107ms 177.754345ms 221.267221ms 254.588856ms 302.902522ms 348.917886ms 349.475577ms 393.96969ms 484.454308ms 520.433673ms 564.363298ms 605.076291ms 642.969261ms 688.577906ms 731.345599ms 745.077959ms 746.255589ms 746.731335ms 746.746529ms 746.97562ms 747.659199ms 747.70755ms 747.73687ms 748.025335ms 748.050706ms 748.061925ms 748.063094ms 748.144876ms 748.254228ms 748.280917ms 748.292408ms 748.297199ms 748.3701ms 748.381729ms 748.394019ms 748.40177ms 748.589743ms 748.647263ms 748.704324ms 748.744235ms 748.812967ms 748.814596ms 748.873478ms 748.895447ms 748.950322ms 749.05549ms 749.146561ms 749.223665ms 749.230052ms 749.257125ms 749.279623ms 749.314587ms 749.315057ms 749.338564ms 749.381187ms 749.417665ms 749.420538ms 749.437065ms 749.437545ms 749.46417ms 749.465766ms 749.48103ms 749.489751ms 749.492199ms 749.505336ms 749.527857ms 749.53144ms 749.550857ms 749.580917ms 749.582058ms 749.610827ms 749.615728ms 749.663333ms 749.680339ms 749.688543ms 749.692252ms 749.714969ms 749.783136ms 749.883921ms 749.891262ms 749.902772ms 749.937892ms 749.938392ms 749.942242ms 749.958903ms 749.961328ms 749.963579ms 749.977739ms 749.989343ms 750.00709ms 750.014033ms 750.032554ms 750.041054ms 750.060834ms 750.074711ms 750.089491ms 750.104544ms 750.186984ms 750.199044ms 750.231757ms 750.254584ms 750.261772ms 750.265377ms 750.276058ms 750.330879ms 750.337129ms 750.340062ms 750.348848ms 750.372796ms 750.393499ms 750.42093ms 750.42978ms 750.433309ms 750.44309ms 750.469118ms 750.484561ms 750.528721ms 750.555892ms 750.615413ms 750.638781ms 750.747055ms 750.760424ms 750.801296ms 750.803434ms 750.829458ms 750.834475ms 750.881306ms 750.892987ms 750.897437ms 750.919066ms 750.938207ms 751.055289ms 751.09013ms 751.11523ms 751.12338ms 751.14067ms 751.165081ms 751.16689ms 751.203599ms 751.204731ms 751.213112ms 751.274402ms 751.326813ms 751.376474ms 751.430276ms 751.462155ms 751.476097ms 751.565789ms 751.567846ms 751.59614ms 751.660468ms 751.761539ms 751.7991ms 751.84543ms 752.098514ms 752.168655ms 752.252572ms 752.403385ms 752.734433ms 752.793482ms 752.798041ms 752.957575ms 753.121549ms 753.330462ms 753.386703ms 828.026553ms]
  Aug 18 21:24:32.178: INFO: 50 %ile: 749.53144ms
  Aug 18 21:24:32.178: INFO: 90 %ile: 751.476097ms
  Aug 18 21:24:32.178: INFO: 99 %ile: 753.386703ms
  Aug 18 21:24:32.178: INFO: Total sample count: 200
  Aug 18 21:24:32.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-2281" for this suite. @ 08/18/23 21:24:32.183
• [9.757 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 08/18/23 21:24:32.189
  Aug 18 21:24:32.189: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:24:32.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:32.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:32.209
  Aug 18 21:24:32.211: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Aug 18 21:24:32.221: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 18 21:24:37.227: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 21:24:37.227
  Aug 18 21:24:37.227: INFO: Creating deployment "test-rolling-update-deployment"
  Aug 18 21:24:37.233: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Aug 18 21:24:37.240: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Aug 18 21:24:39.247: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Aug 18 21:24:39.250: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Aug 18 21:24:39.262: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eb3d24bf-3ef2-43d4-9be9-4e2e0c2fd712",
      ResourceVersion: (string) (len=5) "16320",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 21:24:39.266: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ad1a909-0af5-485c-a9f0-2f5276c721f6",
      ResourceVersion: (string) (len=5) "16300",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "eb3d24bf-3ef2-43d4-9be9-4e2e0c2fd712",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 62 33 64 32 34  62 66 2d 33 65 66 32 2d  |\"eb3d24bf-3ef2-|
              00000120  34 33 64 34 2d 39 62 65  39 2d 34 65 32 65 30 63  |43d4-9be9-4e2e0c|
              00000130  32 66 64 37 31 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |2fd712\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:24:39.267: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Aug 18 21:24:39.267: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dce06405-2abf-40aa-a039-19a0cedbe85d",
      ResourceVersion: (string) (len=5) "16318",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990672,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "eb3d24bf-3ef2-43d4-9be9-4e2e0c2fd712",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990672,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 65 62 33 64 32 34 62  |"uid\":\"eb3d24b|
              000000b0  66 2d 33 65 66 32 2d 34  33 64 34 2d 39 62 65 39  |f-3ef2-43d4-9be9|
              000000c0  2d 34 65 32 65 30 63 32  66 64 37 31 32 5c 22 7d  |-4e2e0c2fd712\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:24:39.273: INFO: Pod "test-rolling-update-deployment-7f5c55c64-qfh7r" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-qfh7r",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-6030",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c0a53d9-32a5-40c3-b3e1-57bf708cc831",
      ResourceVersion: (string) (len=5) "16298",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "1ad1a909-0af5-485c-a9f0-2f5276c721f6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 61  64 31 61 39 30 39 2d 30  |d\":\"1ad1a909-0|
              00000090  61 66 35 2d 34 38 35 63  2d 61 39 66 30 2d 32 66  |af5-485c-a9f0-2f|
              000000a0  35 32 37 36 63 37 32 31  66 36 5c 22 7d 22 3a 7b  |5276c721f6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 33 38 5c  |192.168.189.238\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4f89b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4f89b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990678,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990677,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990677,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827990677,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://fca2288203d0c7b02faa780c5a201cac495a96340ff5f676956b3cfcd8060463",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:24:39.275: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6030" for this suite. @ 08/18/23 21:24:39.279
• [7.098 seconds]
------------------------------
SSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 08/18/23 21:24:39.288
  Aug 18 21:24:39.288: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename podtemplate @ 08/18/23 21:24:39.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:39.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:39.311
  STEP: Create set of pod templates @ 08/18/23 21:24:39.314
  Aug 18 21:24:39.323: INFO: created test-podtemplate-1
  Aug 18 21:24:39.327: INFO: created test-podtemplate-2
  Aug 18 21:24:39.333: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 08/18/23 21:24:39.333
  STEP: delete collection of pod templates @ 08/18/23 21:24:39.337
  Aug 18 21:24:39.337: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 08/18/23 21:24:39.357
  Aug 18 21:24:39.357: INFO: requesting list of pod templates to confirm quantity
  Aug 18 21:24:39.360: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-1249" for this suite. @ 08/18/23 21:24:39.365
• [0.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 08/18/23 21:24:39.376
  Aug 18 21:24:39.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 21:24:39.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:39.398
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:39.4
  STEP: Create a ReplicaSet @ 08/18/23 21:24:39.403
  STEP: Verify that the required pods have come up @ 08/18/23 21:24:39.409
  Aug 18 21:24:39.413: INFO: Pod name sample-pod: Found 0 pods out of 3
  Aug 18 21:24:44.418: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 08/18/23 21:24:44.418
  Aug 18 21:24:44.422: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 08/18/23 21:24:44.422
  STEP: DeleteCollection of the ReplicaSets @ 08/18/23 21:24:44.425
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 08/18/23 21:24:44.435
  Aug 18 21:24:44.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3408" for this suite. @ 08/18/23 21:24:44.442
• [5.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 08/18/23 21:24:44.45
  Aug 18 21:24:44.450: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:24:44.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:24:44.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:24:44.502
  STEP: Creating service test in namespace statefulset-4135 @ 08/18/23 21:24:44.504
  STEP: Creating stateful set ss in namespace statefulset-4135 @ 08/18/23 21:24:44.51
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4135 @ 08/18/23 21:24:44.515
  Aug 18 21:24:44.521: INFO: Found 0 stateful pods, waiting for 1
  Aug 18 21:24:54.526: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 08/18/23 21:24:54.526
  Aug 18 21:24:54.530: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:24:54.663: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:24:54.663: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:24:54.663: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:24:54.666: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Aug 18 21:25:04.671: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:25:04.671: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 18 21:25:04.688: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Aug 18 21:25:04.688: INFO: ss-0  ip-172-31-15-95  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:44 +0000 UTC  }]
  Aug 18 21:25:04.688: INFO: 
  Aug 18 21:25:04.688: INFO: StatefulSet ss has not reached scale 3, at 1
  Aug 18 21:25:05.693: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995958155s
  Aug 18 21:25:06.700: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.990512305s
  Aug 18 21:25:07.704: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.984033176s
  Aug 18 21:25:08.708: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.979509362s
  Aug 18 21:25:09.712: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975721463s
  Aug 18 21:25:10.718: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.971358233s
  Aug 18 21:25:11.722: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.966090796s
  Aug 18 21:25:12.726: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.962025191s
  Aug 18 21:25:13.732: INFO: Verifying statefulset ss doesn't scale past 3 for another 956.805625ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4135 @ 08/18/23 21:25:14.733
  Aug 18 21:25:14.738: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:25:14.847: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:25:14.847: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:25:14.847: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:25:14.847: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:25:14.973: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 18 21:25:14.973: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:25:14.973: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:25:14.973: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:25:15.087: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Aug 18 21:25:15.087: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:25:15.087: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:25:15.091: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:25:15.091: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:25:15.091: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 08/18/23 21:25:15.091
  Aug 18 21:25:15.096: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:25:15.211: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:25:15.211: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:25:15.211: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:25:15.211: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:25:15.339: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:25:15.339: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:25:15.339: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:25:15.339: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-4135 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:25:15.458: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:25:15.458: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:25:15.458: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:25:15.458: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 18 21:25:15.461: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Aug 18 21:25:25.471: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:25:25.471: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:25:25.471: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:25:25.484: INFO: POD   NODE             PHASE    GRACE  CONDITIONS
  Aug 18 21:25:25.484: INFO: ss-0  ip-172-31-15-95  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:15 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:24:44 +0000 UTC  }]
  Aug 18 21:25:25.484: INFO: ss-1  ip-172-31-20-82  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC  }]
  Aug 18 21:25:25.484: INFO: ss-2  ip-172-31-82-98  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC  }]
  Aug 18 21:25:25.484: INFO: 
  Aug 18 21:25:25.484: INFO: StatefulSet ss has not reached scale 0, at 3
  Aug 18 21:25:26.488: INFO: POD   NODE             PHASE      GRACE  CONDITIONS
  Aug 18 21:25:26.488: INFO: ss-2  ip-172-31-82-98  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:16 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-08-18 21:25:04 +0000 UTC  }]
  Aug 18 21:25:26.488: INFO: 
  Aug 18 21:25:26.488: INFO: StatefulSet ss has not reached scale 0, at 1
  Aug 18 21:25:27.492: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.992294933s
  Aug 18 21:25:28.497: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.988314092s
  Aug 18 21:25:29.502: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.982924044s
  Aug 18 21:25:30.506: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.978483734s
  Aug 18 21:25:31.514: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.975207362s
  Aug 18 21:25:32.520: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965846893s
  Aug 18 21:25:33.525: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.960880296s
  Aug 18 21:25:34.529: INFO: Verifying statefulset ss doesn't scale past 0 for another 956.236935ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4135 @ 08/18/23 21:25:35.529
  Aug 18 21:25:35.533: INFO: Scaling statefulset ss to 0
  Aug 18 21:25:35.545: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:25:35.548: INFO: Deleting all statefulset in ns statefulset-4135
  Aug 18 21:25:35.551: INFO: Scaling statefulset ss to 0
  Aug 18 21:25:35.561: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:25:35.564: INFO: Deleting statefulset ss
  Aug 18 21:25:35.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4135" for this suite. @ 08/18/23 21:25:35.581
• [51.137 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 08/18/23 21:25:35.587
  Aug 18 21:25:35.587: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename init-container @ 08/18/23 21:25:35.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:35.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:35.618
  STEP: creating the pod @ 08/18/23 21:25:35.62
  Aug 18 21:25:35.620: INFO: PodSpec: initContainers in spec.initContainers
  Aug 18 21:25:39.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-681" for this suite. @ 08/18/23 21:25:39.309
• [3.729 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 08/18/23 21:25:39.318
  Aug 18 21:25:39.318: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-runtime @ 08/18/23 21:25:39.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:39.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:39.338
  STEP: create the container @ 08/18/23 21:25:39.34
  W0818 21:25:39.348549      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 08/18/23 21:25:39.348
  STEP: get the container status @ 08/18/23 21:25:41.364
  STEP: the container should be terminated @ 08/18/23 21:25:41.368
  STEP: the termination message should be set @ 08/18/23 21:25:41.368
  Aug 18 21:25:41.368: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/18/23 21:25:41.368
  Aug 18 21:25:41.378: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7158" for this suite. @ 08/18/23 21:25:41.384
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 08/18/23 21:25:41.393
  Aug 18 21:25:41.393: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context-test @ 08/18/23 21:25:41.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:41.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:41.414
  Aug 18 21:25:45.454: INFO: Got logs for pod "busybox-privileged-false-925b3027-c62d-4de7-9b0f-81da8f01ad7e": "ip: RTNETLINK answers: Operation not permitted\n"
  Aug 18 21:25:45.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1053" for this suite. @ 08/18/23 21:25:45.457
• [4.071 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 08/18/23 21:25:45.464
  Aug 18 21:25:45.464: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:25:45.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:45.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:45.487
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:25:45.49
  STEP: Saw pod success @ 08/18/23 21:25:47.506
  Aug 18 21:25:47.509: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-68e1be77-eacd-41ee-b9ef-a09b7217b7a1 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:25:47.517
  Aug 18 21:25:47.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9382" for this suite. @ 08/18/23 21:25:47.536
• [2.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 08/18/23 21:25:47.545
  Aug 18 21:25:47.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:25:47.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:47.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:47.564
  STEP: Setting up server cert @ 08/18/23 21:25:47.586
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:25:47.759
  STEP: Deploying the webhook pod @ 08/18/23 21:25:47.77
  STEP: Wait for the deployment to be ready @ 08/18/23 21:25:47.781
  Aug 18 21:25:47.787: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/18/23 21:25:49.798
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:25:49.809
  Aug 18 21:25:50.809: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/18/23 21:25:50.876
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/18/23 21:25:50.915
  STEP: Deleting the collection of validation webhooks @ 08/18/23 21:25:50.95
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 08/18/23 21:25:51.009
  Aug 18 21:25:51.021: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5359" for this suite. @ 08/18/23 21:25:51.06
  STEP: Destroying namespace "webhook-markers-5253" for this suite. @ 08/18/23 21:25:51.065
• [3.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 08/18/23 21:25:51.077
  Aug 18 21:25:51.077: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 21:25:51.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:25:51.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:25:51.096
  Aug 18 21:25:51.114: INFO: created pod
  STEP: Saw pod success @ 08/18/23 21:25:55.129
  Aug 18 21:26:25.130: INFO: polling logs
  Aug 18 21:26:25.138: INFO: Pod logs: 
  I0818 21:25:51.777159       1 log.go:194] OK: Got token
  I0818 21:25:51.777207       1 log.go:194] validating with in-cluster discovery
  I0818 21:25:51.777436       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0818 21:25:51.777467       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9784:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00016e3f0), NotBefore:(*jwt.NumericDate)(0xc00016e4f8), IssuedAt:(*jwt.NumericDate)(0xc00016e400), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9784", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"21da216d-cc7a-483c-b8b1-0076132e59b0"}}}
  I0818 21:25:51.785752       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0818 21:25:51.790389       1 log.go:194] OK: Validated signature on JWT
  I0818 21:25:51.790480       1 log.go:194] OK: Got valid claims from token!
  I0818 21:25:51.790524       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-9784:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000fa0b0), NotBefore:(*jwt.NumericDate)(0xc0000fa0d8), IssuedAt:(*jwt.NumericDate)(0xc0000fa0b8), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-9784", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"21da216d-cc7a-483c-b8b1-0076132e59b0"}}}

  Aug 18 21:26:25.138: INFO: completed pod
  Aug 18 21:26:25.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9784" for this suite. @ 08/18/23 21:26:25.15
• [34.080 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 08/18/23 21:26:25.157
  Aug 18 21:26:25.157: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 08/18/23 21:26:25.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:25.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:25.178
  STEP: Setting up the test @ 08/18/23 21:26:25.181
  STEP: Creating hostNetwork=false pod @ 08/18/23 21:26:25.181
  STEP: Creating hostNetwork=true pod @ 08/18/23 21:26:27.203
  STEP: Running the test @ 08/18/23 21:26:29.221
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 08/18/23 21:26:29.221
  Aug 18 21:26:29.222: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.222: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.222: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.222: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 18 21:26:29.293: INFO: Exec stderr: ""
  Aug 18 21:26:29.293: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.293: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.294: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.294: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 18 21:26:29.357: INFO: Exec stderr: ""
  Aug 18 21:26:29.357: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.357: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.358: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.358: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 18 21:26:29.425: INFO: Exec stderr: ""
  Aug 18 21:26:29.426: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.426: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.426: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.427: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 18 21:26:29.497: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 08/18/23 21:26:29.497
  Aug 18 21:26:29.497: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.497: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.498: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.498: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 18 21:26:29.569: INFO: Exec stderr: ""
  Aug 18 21:26:29.569: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.569: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.570: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.570: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Aug 18 21:26:29.645: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 08/18/23 21:26:29.645
  Aug 18 21:26:29.645: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.645: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.646: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.646: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 18 21:26:29.719: INFO: Exec stderr: ""
  Aug 18 21:26:29.719: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.719: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.719: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Aug 18 21:26:29.799: INFO: Exec stderr: ""
  Aug 18 21:26:29.799: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.800: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.800: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 18 21:26:29.871: INFO: Exec stderr: ""
  Aug 18 21:26:29.871: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5883 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:26:29.871: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:26:29.872: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:26:29.872: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5883/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Aug 18 21:26:29.951: INFO: Exec stderr: ""
  Aug 18 21:26:29.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5883" for this suite. @ 08/18/23 21:26:29.956
• [4.807 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 08/18/23 21:26:29.965
  Aug 18 21:26:29.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:26:29.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:29.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:29.984
  STEP: creating service in namespace services-8813 @ 08/18/23 21:26:29.987
  STEP: creating service affinity-nodeport-transition in namespace services-8813 @ 08/18/23 21:26:29.987
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8813 @ 08/18/23 21:26:30.002
  I0818 21:26:30.009196      19 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-8813, replica count: 3
  I0818 21:26:33.059928      19 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 21:26:33.069: INFO: Creating new exec pod
  Aug 18 21:26:36.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Aug 18 21:26:36.210: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Aug 18 21:26:36.210: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:26:36.210: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.42 80'
  Aug 18 21:26:36.338: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.42 80\nConnection to 10.152.183.42 80 port [tcp/http] succeeded!\n"
  Aug 18 21:26:36.338: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:26:36.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.95 31156'
  Aug 18 21:26:36.458: INFO: stderr: "+ nc -v -t -w 2 172.31.15.95 31156\n+ echo hostName\nConnection to 172.31.15.95 31156 port [tcp/*] succeeded!\n"
  Aug 18 21:26:36.458: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:26:36.458: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.82 31156'
  Aug 18 21:26:36.573: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.20.82 31156\nConnection to 172.31.20.82 31156 port [tcp/*] succeeded!\n"
  Aug 18 21:26:36.573: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:26:36.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.95:31156/ ; done'
  Aug 18 21:26:36.767: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n"
  Aug 18 21:26:36.767: INFO: stdout: "\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-wlk2v\naffinity-nodeport-transition-wlk2v\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-wlk2v\naffinity-nodeport-transition-5559d\naffinity-nodeport-transition-wlk2v"
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-wlk2v
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-wlk2v
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-wlk2v
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-5559d
  Aug 18 21:26:36.767: INFO: Received response from host: affinity-nodeport-transition-wlk2v
  Aug 18 21:26:36.777: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8813 exec execpod-affinitywjnwk -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.95:31156/ ; done'
  Aug 18 21:26:36.964: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31156/\n"
  Aug 18 21:26:36.964: INFO: stdout: "\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6\naffinity-nodeport-transition-947p6"
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.964: INFO: Received response from host: affinity-nodeport-transition-947p6
  Aug 18 21:26:36.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:26:36.968: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8813, will wait for the garbage collector to delete the pods @ 08/18/23 21:26:36.979
  Aug 18 21:26:37.041: INFO: Deleting ReplicationController affinity-nodeport-transition took: 7.481018ms
  Aug 18 21:26:37.142: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.676024ms
  STEP: Destroying namespace "services-8813" for this suite. @ 08/18/23 21:26:40.365
• [10.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 08/18/23 21:26:40.373
  Aug 18 21:26:40.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename events @ 08/18/23 21:26:40.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:40.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:40.393
  STEP: creating a test event @ 08/18/23 21:26:40.396
  STEP: listing all events in all namespaces @ 08/18/23 21:26:40.4
  STEP: patching the test event @ 08/18/23 21:26:40.408
  STEP: fetching the test event @ 08/18/23 21:26:40.417
  STEP: updating the test event @ 08/18/23 21:26:40.423
  STEP: getting the test event @ 08/18/23 21:26:40.433
  STEP: deleting the test event @ 08/18/23 21:26:40.437
  STEP: listing all events in all namespaces @ 08/18/23 21:26:40.445
  Aug 18 21:26:40.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4183" for this suite. @ 08/18/23 21:26:40.457
• [0.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 08/18/23 21:26:40.465
  Aug 18 21:26:40.465: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:26:40.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:40.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:40.485
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-5574 @ 08/18/23 21:26:40.488
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/18/23 21:26:40.503
  STEP: creating service externalsvc in namespace services-5574 @ 08/18/23 21:26:40.503
  STEP: creating replication controller externalsvc in namespace services-5574 @ 08/18/23 21:26:40.515
  I0818 21:26:40.522872      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5574, replica count: 2
  I0818 21:26:43.574440      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 08/18/23 21:26:43.578
  Aug 18 21:26:43.596: INFO: Creating new exec pod
  Aug 18 21:26:45.616: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-5574 exec execpodkqqx8 -- /bin/sh -x -c nslookup nodeport-service.services-5574.svc.cluster.local'
  Aug 18 21:26:45.755: INFO: stderr: "+ nslookup nodeport-service.services-5574.svc.cluster.local\n"
  Aug 18 21:26:45.755: INFO: stdout: "Server:\t\t10.152.183.183\nAddress:\t10.152.183.183#53\n\nnodeport-service.services-5574.svc.cluster.local\tcanonical name = externalsvc.services-5574.svc.cluster.local.\nName:\texternalsvc.services-5574.svc.cluster.local\nAddress: 10.152.183.85\n\n"
  Aug 18 21:26:45.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5574, will wait for the garbage collector to delete the pods @ 08/18/23 21:26:45.759
  Aug 18 21:26:45.820: INFO: Deleting ReplicationController externalsvc took: 5.918959ms
  Aug 18 21:26:45.920: INFO: Terminating ReplicationController externalsvc pods took: 100.285657ms
  Aug 18 21:26:48.535: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-5574" for this suite. @ 08/18/23 21:26:48.547
• [8.090 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 08/18/23 21:26:48.556
  Aug 18 21:26:48.556: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 21:26:48.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:48.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:48.577
  Aug 18 21:26:48.602: INFO: Create a RollingUpdate DaemonSet
  Aug 18 21:26:48.608: INFO: Check that daemon pods launch on every node of the cluster
  Aug 18 21:26:48.611: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:48.611: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:48.613: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:26:48.613: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:26:49.618: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:49.618: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:49.622: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 21:26:49.622: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 21:26:50.619: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:50.619: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:50.623: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 21:26:50.623: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  Aug 18 21:26:50.623: INFO: Update the DaemonSet to trigger a rollout
  Aug 18 21:26:50.631: INFO: Updating DaemonSet daemon-set
  Aug 18 21:26:52.647: INFO: Roll back the DaemonSet before rollout is complete
  Aug 18 21:26:52.657: INFO: Updating DaemonSet daemon-set
  Aug 18 21:26:52.657: INFO: Make sure DaemonSet rollback is complete
  Aug 18 21:26:52.659: INFO: Wrong image for pod: daemon-set-cgd26. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Aug 18 21:26:52.659: INFO: Pod daemon-set-cgd26 is not available
  Aug 18 21:26:52.663: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:52.663: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:53.672: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:53.672: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:54.671: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:54.671: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:55.667: INFO: Pod daemon-set-6zzwt is not available
  Aug 18 21:26:55.673: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:55.673: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 21:26:55.682
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5065, will wait for the garbage collector to delete the pods @ 08/18/23 21:26:55.682
  Aug 18 21:26:55.745: INFO: Deleting DaemonSet.extensions daemon-set took: 9.522549ms
  Aug 18 21:26:55.847: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.085025ms
  Aug 18 21:26:57.351: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:26:57.351: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 21:26:57.355: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18409"},"items":null}

  Aug 18 21:26:57.360: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18409"},"items":null}

  Aug 18 21:26:57.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5065" for this suite. @ 08/18/23 21:26:57.376
• [8.827 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 08/18/23 21:26:57.384
  Aug 18 21:26:57.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 21:26:57.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:26:57.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:26:57.403
  STEP: Creating simple DaemonSet "daemon-set" @ 08/18/23 21:26:57.425
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 21:26:57.43
  Aug 18 21:26:57.433: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:57.433: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:57.437: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:26:57.437: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:26:58.443: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:58.443: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:58.446: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 21:26:58.446: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:26:59.444: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:59.444: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:59.448: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 21:26:59.448: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 08/18/23 21:26:59.451
  Aug 18 21:26:59.465: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:59.465: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:26:59.468: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 18 21:26:59.468: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:27:00.472: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:27:00.472: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:27:00.477: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 18 21:27:00.477: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:27:01.474: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:27:01.474: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:27:01.478: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 21:27:01.478: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 21:27:01.482
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1387, will wait for the garbage collector to delete the pods @ 08/18/23 21:27:01.482
  Aug 18 21:27:01.542: INFO: Deleting DaemonSet.extensions daemon-set took: 6.981264ms
  Aug 18 21:27:01.642: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.540636ms
  Aug 18 21:27:02.548: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:27:02.548: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 21:27:02.550: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18534"},"items":null}

  Aug 18 21:27:02.553: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18534"},"items":null}

  Aug 18 21:27:02.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1387" for this suite. @ 08/18/23 21:27:02.57
• [5.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 08/18/23 21:27:02.58
  Aug 18 21:27:02.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 21:27:02.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:27:02.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:27:02.605
  Aug 18 21:27:02.607: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/18/23 21:27:03.961
  Aug 18 21:27:03.961: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9785 --namespace=crd-publish-openapi-9785 create -f -'
  Aug 18 21:27:04.222: INFO: stderr: ""
  Aug 18 21:27:04.222: INFO: stdout: "e2e-test-crd-publish-openapi-1853-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 18 21:27:04.222: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9785 --namespace=crd-publish-openapi-9785 delete e2e-test-crd-publish-openapi-1853-crds test-cr'
  Aug 18 21:27:04.274: INFO: stderr: ""
  Aug 18 21:27:04.274: INFO: stdout: "e2e-test-crd-publish-openapi-1853-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Aug 18 21:27:04.274: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9785 --namespace=crd-publish-openapi-9785 apply -f -'
  Aug 18 21:27:04.379: INFO: stderr: ""
  Aug 18 21:27:04.379: INFO: stdout: "e2e-test-crd-publish-openapi-1853-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Aug 18 21:27:04.379: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9785 --namespace=crd-publish-openapi-9785 delete e2e-test-crd-publish-openapi-1853-crds test-cr'
  Aug 18 21:27:04.429: INFO: stderr: ""
  Aug 18 21:27:04.429: INFO: stdout: "e2e-test-crd-publish-openapi-1853-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 08/18/23 21:27:04.429
  Aug 18 21:27:04.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-9785 explain e2e-test-crd-publish-openapi-1853-crds'
  Aug 18 21:27:04.660: INFO: stderr: ""
  Aug 18 21:27:04.660: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1853-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Aug 18 21:27:05.901: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9785" for this suite. @ 08/18/23 21:27:05.91
• [3.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 08/18/23 21:27:05.925
  Aug 18 21:27:05.925: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:27:05.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:27:05.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:27:05.945
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/18/23 21:27:05.948
  STEP: Saw pod success @ 08/18/23 21:27:09.97
  Aug 18 21:27:09.974: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-3a6045e7-f3d0-47e8-8930-b8c94dc1cb41 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:27:09.983
  Aug 18 21:27:09.996: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4191" for this suite. @ 08/18/23 21:27:10.001
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 08/18/23 21:27:10.007
  Aug 18 21:27:10.007: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:27:10.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:27:10.025
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:27:10.028
  STEP: Creating configMap with name configmap-test-upd-e0eec50d-b173-4456-8771-c7bb4cd34d1f @ 08/18/23 21:27:10.033
  STEP: Creating the pod @ 08/18/23 21:27:10.036
  STEP: Waiting for pod with text data @ 08/18/23 21:27:12.053
  STEP: Waiting for pod with binary data @ 08/18/23 21:27:12.06
  Aug 18 21:27:12.067: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3588" for this suite. @ 08/18/23 21:27:12.07
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 08/18/23 21:27:12.078
  Aug 18 21:27:12.078: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:27:12.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:27:12.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:27:12.1
  STEP: creating a secret @ 08/18/23 21:27:12.102
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 08/18/23 21:27:12.107
  STEP: patching the secret @ 08/18/23 21:27:12.111
  STEP: deleting the secret using a LabelSelector @ 08/18/23 21:27:12.12
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 08/18/23 21:27:12.128
  Aug 18 21:27:12.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-907" for this suite. @ 08/18/23 21:27:12.134
• [0.062 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 08/18/23 21:27:12.141
  Aug 18 21:27:12.141: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:27:12.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:27:12.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:27:12.161
  STEP: Creating service test in namespace statefulset-9287 @ 08/18/23 21:27:12.164
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 08/18/23 21:27:12.17
  STEP: Creating stateful set ss in namespace statefulset-9287 @ 08/18/23 21:27:12.173
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9287 @ 08/18/23 21:27:12.18
  Aug 18 21:27:12.185: INFO: Found 0 stateful pods, waiting for 1
  Aug 18 21:27:22.189: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 08/18/23 21:27:22.189
  Aug 18 21:27:22.194: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:27:22.315: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:27:22.315: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:27:22.315: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:27:22.320: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Aug 18 21:27:32.326: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:27:32.326: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 18 21:27:32.342: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.99999985s
  Aug 18 21:27:33.346: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.996805856s
  Aug 18 21:27:34.352: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.991923301s
  Aug 18 21:27:35.357: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.985891425s
  Aug 18 21:27:36.364: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.98045121s
  Aug 18 21:27:37.369: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.974070937s
  Aug 18 21:27:38.374: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.969362575s
  Aug 18 21:27:39.380: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.963872509s
  Aug 18 21:27:40.385: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.95827058s
  Aug 18 21:27:41.390: INFO: Verifying statefulset ss doesn't scale past 1 for another 954.152108ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9287 @ 08/18/23 21:27:42.391
  Aug 18 21:27:42.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:27:42.516: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:27:42.516: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:27:42.517: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:27:42.521: INFO: Found 1 stateful pods, waiting for 3
  Aug 18 21:27:52.527: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:27:52.527: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:27:52.527: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 08/18/23 21:27:52.527
  STEP: Scale down will halt with unhealthy stateful pod @ 08/18/23 21:27:52.527
  Aug 18 21:27:52.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:27:52.660: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:27:52.660: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:27:52.660: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:27:52.660: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:27:52.789: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:27:52.789: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:27:52.789: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:27:52.789: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Aug 18 21:27:52.914: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Aug 18 21:27:52.914: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Aug 18 21:27:52.914: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Aug 18 21:27:52.914: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Aug 18 21:27:52.917: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Aug 18 21:28:02.927: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:28:02.927: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:28:02.927: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Aug 18 21:28:02.937: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999983s
  Aug 18 21:28:03.941: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.997162522s
  Aug 18 21:28:04.946: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.992654632s
  Aug 18 21:28:05.950: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988780544s
  Aug 18 21:28:06.956: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.983692294s
  Aug 18 21:28:07.960: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.978104254s
  Aug 18 21:28:08.966: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.973129896s
  Aug 18 21:28:09.969: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.969056025s
  Aug 18 21:28:10.977: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.965288628s
  Aug 18 21:28:11.982: INFO: Verifying statefulset ss doesn't scale past 3 for another 956.481739ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9287 @ 08/18/23 21:28:12.983
  Aug 18 21:28:12.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:28:13.100: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:28:13.100: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:28:13.100: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:28:13.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:28:13.215: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:28:13.215: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:28:13.215: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:28:13.215: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=statefulset-9287 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Aug 18 21:28:13.328: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Aug 18 21:28:13.328: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Aug 18 21:28:13.328: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Aug 18 21:28:13.328: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 08/18/23 21:28:23.345
  Aug 18 21:28:23.345: INFO: Deleting all statefulset in ns statefulset-9287
  Aug 18 21:28:23.348: INFO: Scaling statefulset ss to 0
  Aug 18 21:28:23.360: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:28:23.363: INFO: Deleting statefulset ss
  Aug 18 21:28:23.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9287" for this suite. @ 08/18/23 21:28:23.379
• [71.244 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 08/18/23 21:28:23.385
  Aug 18 21:28:23.385: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-webhook @ 08/18/23 21:28:23.386
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:23.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:23.405
  STEP: Setting up server cert @ 08/18/23 21:28:23.408
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/18/23 21:28:23.711
  STEP: Deploying the custom resource conversion webhook pod @ 08/18/23 21:28:23.718
  STEP: Wait for the deployment to be ready @ 08/18/23 21:28:23.729
  Aug 18 21:28:23.736: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:28:25.748
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:28:25.761
  Aug 18 21:28:26.762: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 18 21:28:26.769: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Creating a v1 custom resource @ 08/18/23 21:28:29.328
  STEP: v2 custom resource should be converted @ 08/18/23 21:28:29.333
  Aug 18 21:28:29.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1981" for this suite. @ 08/18/23 21:28:29.891
• [6.511 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 08/18/23 21:28:29.898
  Aug 18 21:28:29.898: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:28:29.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:29.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:29.923
  STEP: Creating projection with secret that has name projected-secret-test-0e64d20f-3a81-41ef-bea1-3fb9b140e5a4 @ 08/18/23 21:28:29.926
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:28:29.931
  STEP: Saw pod success @ 08/18/23 21:28:33.954
  Aug 18 21:28:33.958: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-secrets-095201f8-7d9b-41b9-80d8-cb5621ab4a6b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:28:33.966
  Aug 18 21:28:33.980: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3133" for this suite. @ 08/18/23 21:28:33.984
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 08/18/23 21:28:33.992
  Aug 18 21:28:33.992: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:28:33.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:34.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:34.014
  STEP: creating the pod @ 08/18/23 21:28:34.017
  STEP: submitting the pod to kubernetes @ 08/18/23 21:28:34.017
  STEP: verifying QOS class is set on the pod @ 08/18/23 21:28:34.026
  Aug 18 21:28:34.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5297" for this suite. @ 08/18/23 21:28:34.035
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 08/18/23 21:28:34.045
  Aug 18 21:28:34.045: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 21:28:34.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:34.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:34.066
  STEP: Creating a pod to test substitution in container's args @ 08/18/23 21:28:34.069
  STEP: Saw pod success @ 08/18/23 21:28:38.091
  Aug 18 21:28:38.094: INFO: Trying to get logs from node ip-172-31-20-82 pod var-expansion-1d8d5776-5584-4103-92b7-2d08f5193523 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:28:38.113
  Aug 18 21:28:38.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-736" for this suite. @ 08/18/23 21:28:38.133
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 08/18/23 21:28:38.142
  Aug 18 21:28:38.142: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:28:38.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:38.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:38.163
  Aug 18 21:28:38.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3541" for this suite. @ 08/18/23 21:28:38.217
• [0.083 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 08/18/23 21:28:38.225
  Aug 18 21:28:38.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename server-version @ 08/18/23 21:28:38.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:38.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:38.246
  STEP: Request ServerVersion @ 08/18/23 21:28:38.251
  STEP: Confirm major version @ 08/18/23 21:28:38.253
  Aug 18 21:28:38.253: INFO: Major version: 1
  STEP: Confirm minor version @ 08/18/23 21:28:38.253
  Aug 18 21:28:38.253: INFO: cleanMinorVersion: 28
  Aug 18 21:28:38.253: INFO: Minor version: 28
  Aug 18 21:28:38.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-9365" for this suite. @ 08/18/23 21:28:38.257
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 08/18/23 21:28:38.267
  Aug 18 21:28:38.267: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:28:38.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:38.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:38.287
  STEP: creating service endpoint-test2 in namespace services-4548 @ 08/18/23 21:28:38.29
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4548 to expose endpoints map[] @ 08/18/23 21:28:38.3
  Aug 18 21:28:38.306: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Aug 18 21:28:39.313: INFO: successfully validated that service endpoint-test2 in namespace services-4548 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4548 @ 08/18/23 21:28:39.313
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4548 to expose endpoints map[pod1:[80]] @ 08/18/23 21:28:41.333
  Aug 18 21:28:41.345: INFO: successfully validated that service endpoint-test2 in namespace services-4548 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 08/18/23 21:28:41.345
  Aug 18 21:28:41.345: INFO: Creating new exec pod
  Aug 18 21:28:44.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 18 21:28:44.490: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:44.490: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:28:44.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.122 80'
  Aug 18 21:28:44.640: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.122 80\nConnection to 10.152.183.122 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:44.640: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4548 @ 08/18/23 21:28:44.641
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4548 to expose endpoints map[pod1:[80] pod2:[80]] @ 08/18/23 21:28:46.661
  Aug 18 21:28:46.674: INFO: successfully validated that service endpoint-test2 in namespace services-4548 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 08/18/23 21:28:46.674
  Aug 18 21:28:47.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 18 21:28:47.792: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:47.792: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:28:47.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.122 80'
  Aug 18 21:28:47.916: INFO: stderr: "+ nc -v -t -w 2 10.152.183.122 80\n+ echo hostName\nConnection to 10.152.183.122 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:47.916: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4548 @ 08/18/23 21:28:47.916
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4548 to expose endpoints map[pod2:[80]] @ 08/18/23 21:28:47.938
  Aug 18 21:28:48.965: INFO: successfully validated that service endpoint-test2 in namespace services-4548 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 08/18/23 21:28:48.965
  Aug 18 21:28:49.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Aug 18 21:28:50.147: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:50.147: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:28:50.147: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-4548 exec execpod8rmzb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.122 80'
  Aug 18 21:28:50.301: INFO: stderr: "+ nc -v -t -w 2 10.152.183.122 80\n+ echo hostName\nConnection to 10.152.183.122 80 port [tcp/http] succeeded!\n"
  Aug 18 21:28:50.301: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4548 @ 08/18/23 21:28:50.301
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4548 to expose endpoints map[] @ 08/18/23 21:28:50.318
  Aug 18 21:28:50.327: INFO: successfully validated that service endpoint-test2 in namespace services-4548 exposes endpoints map[]
  Aug 18 21:28:50.327: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4548" for this suite. @ 08/18/23 21:28:50.348
• [12.088 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 08/18/23 21:28:50.355
  Aug 18 21:28:50.355: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:28:50.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:50.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:50.376
  Aug 18 21:28:50.381: INFO: Creating deployment "test-recreate-deployment"
  Aug 18 21:28:50.385: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Aug 18 21:28:50.392: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Aug 18 21:28:52.400: INFO: Waiting deployment "test-recreate-deployment" to complete
  Aug 18 21:28:52.403: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Aug 18 21:28:52.412: INFO: Updating deployment test-recreate-deployment
  Aug 18 21:28:52.412: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Aug 18 21:28:52.485: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "482bc373-0f8c-4e66-96fe-c670111df98f",
      ResourceVersion: (string) (len=5) "19474",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 21:28:52.490: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "765a6047-bd31-4a45-a6d8-c59b12462aa3",
      ResourceVersion: (string) (len=5) "19472",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "482bc373-0f8c-4e66-96fe-c670111df98f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 32 62 63 33  37 33 2d 30 66 38 63 2d  |\"482bc373-0f8c-|
              00000120  34 65 36 36 2d 39 36 66  65 2d 63 36 37 30 31 31  |4e66-96fe-c67011|
              00000130  31 64 66 39 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1df98f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:28:52.495: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Aug 18 21:28:52.495: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02ad277c-0ecd-4d46-8482-51b6915a92fa",
      ResourceVersion: (string) (len=5) "19462",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "482bc373-0f8c-4e66-96fe-c670111df98f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 38 32 62 63 33  37 33 2d 30 66 38 63 2d  |\"482bc373-0f8c-|
              00000120  34 65 36 36 2d 39 36 66  65 2d 63 36 37 30 31 31  |4e66-96fe-c67011|
              00000130  31 64 66 39 38 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1df98f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:28:52.502: INFO: Pod "test-recreate-deployment-76fb77d45-v4nml" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-v4nml",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-4290",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72f0bcf7-fe5b-4780-b69a-723eda6c584b",
      ResourceVersion: (string) (len=5) "19473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "765a6047-bd31-4a45-a6d8-c59b12462aa3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 36  35 61 36 30 34 37 2d 62  |d\":\"765a6047-b|
              00000090  64 33 31 2d 34 61 34 35  2d 61 36 64 38 2d 63 35  |d31-4a45-a6d8-c5|
              000000a0  39 62 31 32 34 36 32 61  61 33 5c 22 7d 22 3a 7b  |9b12462aa3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6tpmb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6tpmb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827990932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827990932,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:28:52.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4290" for this suite. @ 08/18/23 21:28:52.506
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 08/18/23 21:28:52.513
  Aug 18 21:28:52.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:28:52.513
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:52.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:52.535
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:28:52.538
  STEP: Saw pod success @ 08/18/23 21:28:56.56
  Aug 18 21:28:56.563: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-e8a3160b-000f-4cdf-9b01-2842802710f8 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:28:56.569
  Aug 18 21:28:56.585: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2347" for this suite. @ 08/18/23 21:28:56.589
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 08/18/23 21:28:56.597
  Aug 18 21:28:56.597: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename ingress @ 08/18/23 21:28:56.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:56.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:56.617
  STEP: getting /apis @ 08/18/23 21:28:56.62
  STEP: getting /apis/networking.k8s.io @ 08/18/23 21:28:56.623
  STEP: getting /apis/networking.k8s.iov1 @ 08/18/23 21:28:56.624
  STEP: creating @ 08/18/23 21:28:56.625
  STEP: getting @ 08/18/23 21:28:56.642
  STEP: listing @ 08/18/23 21:28:56.647
  STEP: watching @ 08/18/23 21:28:56.65
  Aug 18 21:28:56.650: INFO: starting watch
  STEP: cluster-wide listing @ 08/18/23 21:28:56.651
  STEP: cluster-wide watching @ 08/18/23 21:28:56.654
  Aug 18 21:28:56.654: INFO: starting watch
  STEP: patching @ 08/18/23 21:28:56.655
  STEP: updating @ 08/18/23 21:28:56.66
  Aug 18 21:28:56.672: INFO: waiting for watch events with expected annotations
  Aug 18 21:28:56.672: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/18/23 21:28:56.672
  STEP: updating /status @ 08/18/23 21:28:56.679
  STEP: get /status @ 08/18/23 21:28:56.689
  STEP: deleting @ 08/18/23 21:28:56.691
  STEP: deleting a collection @ 08/18/23 21:28:56.704
  Aug 18 21:28:56.720: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-7827" for this suite. @ 08/18/23 21:28:56.724
• [0.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 08/18/23 21:28:56.73
  Aug 18 21:28:56.730: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/18/23 21:28:56.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:56.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:56.749
  STEP: fetching the /apis discovery document @ 08/18/23 21:28:56.751
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 08/18/23 21:28:56.753
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 08/18/23 21:28:56.753
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 08/18/23 21:28:56.753
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 08/18/23 21:28:56.754
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 08/18/23 21:28:56.754
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 08/18/23 21:28:56.755
  Aug 18 21:28:56.755: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4583" for this suite. @ 08/18/23 21:28:56.759
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 08/18/23 21:28:56.766
  Aug 18 21:28:56.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption @ 08/18/23 21:28:56.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:28:56.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:28:56.786
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:28:56.794
  STEP: Waiting for all pods to be running @ 08/18/23 21:28:58.823
  Aug 18 21:28:58.826: INFO: running pods: 0 < 3
  Aug 18 21:29:00.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1899" for this suite. @ 08/18/23 21:29:00.84
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 08/18/23 21:29:00.849
  Aug 18 21:29:00.849: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename taint-single-pod @ 08/18/23 21:29:00.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:29:00.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:29:00.874
  Aug 18 21:29:00.877: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 21:30:00.892: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 21:30:00.895: INFO: Starting informer...
  STEP: Starting pod... @ 08/18/23 21:30:00.895
  Aug 18 21:30:01.110: INFO: Pod is running on ip-172-31-15-95. Tainting Node
  STEP: Trying to apply a taint on the Node @ 08/18/23 21:30:01.11
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/18/23 21:30:01.119
  STEP: Waiting short time to make sure Pod is queued for deletion @ 08/18/23 21:30:01.123
  Aug 18 21:30:01.123: INFO: Pod wasn't evicted. Proceeding
  Aug 18 21:30:01.123: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 08/18/23 21:30:01.134
  STEP: Waiting some time to make sure that toleration time passed. @ 08/18/23 21:30:01.136
  Aug 18 21:31:16.138: INFO: Pod wasn't evicted. Test successful
  Aug 18 21:31:16.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-6284" for this suite. @ 08/18/23 21:31:16.144
• [135.302 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 08/18/23 21:31:16.151
  Aug 18 21:31:16.151: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:31:16.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:16.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:16.173
  STEP: validating api versions @ 08/18/23 21:31:16.175
  Aug 18 21:31:16.175: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-679 api-versions'
  Aug 18 21:31:16.219: INFO: stderr: ""
  Aug 18 21:31:16.219: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Aug 18 21:31:16.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-679" for this suite. @ 08/18/23 21:31:16.223
• [0.078 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 08/18/23 21:31:16.23
  Aug 18 21:31:16.230: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 21:31:16.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:16.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:16.25
  STEP: Creating replication controller my-hostname-basic-881259a0-e0af-404b-b8f6-4352ad3fc00e @ 08/18/23 21:31:16.252
  Aug 18 21:31:16.261: INFO: Pod name my-hostname-basic-881259a0-e0af-404b-b8f6-4352ad3fc00e: Found 0 pods out of 1
  Aug 18 21:31:21.267: INFO: Pod name my-hostname-basic-881259a0-e0af-404b-b8f6-4352ad3fc00e: Found 1 pods out of 1
  Aug 18 21:31:21.267: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-881259a0-e0af-404b-b8f6-4352ad3fc00e" are running
  Aug 18 21:31:21.271: INFO: Pod "my-hostname-basic-881259a0-e0af-404b-b8f6-4352ad3fc00e-nmnnr" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 21:31:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 21:31:17 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 21:31:17 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 21:31:16 +0000 UTC Reason: Message:}])
  Aug 18 21:31:21.271: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/18/23 21:31:21.271
  Aug 18 21:31:21.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-233" for this suite. @ 08/18/23 21:31:21.286
• [5.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 08/18/23 21:31:21.296
  Aug 18 21:31:21.296: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:31:21.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:21.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:21.319
  Aug 18 21:31:21.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7404" for this suite. @ 08/18/23 21:31:21.369
• [0.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 08/18/23 21:31:21.376
  Aug 18 21:31:21.376: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:31:21.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:21.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:21.397
  STEP: Creating a pod to test downward api env vars @ 08/18/23 21:31:21.401
  STEP: Saw pod success @ 08/18/23 21:31:25.423
  Aug 18 21:31:25.427: INFO: Trying to get logs from node ip-172-31-15-95 pod downward-api-3daac0ed-e63e-41a2-b404-16f5e43f62d2 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:31:25.441
  Aug 18 21:31:25.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2816" for this suite. @ 08/18/23 21:31:25.461
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 08/18/23 21:31:25.47
  Aug 18 21:31:25.470: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pod-network-test @ 08/18/23 21:31:25.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:25.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:25.495
  STEP: Performing setup for networking test in namespace pod-network-test-3664 @ 08/18/23 21:31:25.498
  STEP: creating a selector @ 08/18/23 21:31:25.498
  STEP: Creating the service pods in kubernetes @ 08/18/23 21:31:25.498
  Aug 18 21:31:25.498: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/18/23 21:31:47.603
  Aug 18 21:31:49.633: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 18 21:31:49.633: INFO: Going to poll 192.168.189.220 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 21:31:49.636: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.189.220 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3664 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:31:49.636: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:31:49.636: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:31:49.637: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3664/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.189.220+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 21:31:50.715: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 18 21:31:50.715: INFO: Going to poll 192.168.159.139 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 21:31:50.719: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.159.139 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3664 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:31:50.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:31:50.720: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:31:50.720: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3664/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.159.139+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 21:31:51.791: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 18 21:31:51.791: INFO: Going to poll 192.168.165.86 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 21:31:51.796: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 192.168.165.86 8081 | grep -v '^\s*$'] Namespace:pod-network-test-3664 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:31:51.796: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:31:51.796: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:31:51.796: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3664/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+192.168.165.86+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 21:31:52.867: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 18 21:31:52.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3664" for this suite. @ 08/18/23 21:31:52.871
• [27.409 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 08/18/23 21:31:52.879
  Aug 18 21:31:52.879: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 21:31:52.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:52.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:52.901
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/18/23 21:31:52.904
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 08/18/23 21:31:52.904
  STEP: creating a pod to probe DNS @ 08/18/23 21:31:52.904
  STEP: submitting the pod to kubernetes @ 08/18/23 21:31:52.904
  STEP: retrieving the pod @ 08/18/23 21:31:54.92
  STEP: looking for the results for each expected name from probers @ 08/18/23 21:31:54.927
  Aug 18 21:31:54.944: INFO: DNS probes using dns-5941/dns-test-24f59c64-5183-43a9-8c8e-fb21c6945dba succeeded

  Aug 18 21:31:54.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:31:54.949
  STEP: Destroying namespace "dns-5941" for this suite. @ 08/18/23 21:31:54.96
• [2.087 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 08/18/23 21:31:54.967
  Aug 18 21:31:54.967: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:31:54.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:31:54.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:31:54.985
  STEP: Saw pod success @ 08/18/23 21:32:01.036
  Aug 18 21:32:01.040: INFO: Trying to get logs from node ip-172-31-15-95 pod client-envvars-eeadb7d7-0e53-40a8-8444-d5421eac89ae container env3cont: <nil>
  STEP: delete the pod @ 08/18/23 21:32:01.047
  Aug 18 21:32:01.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6608" for this suite. @ 08/18/23 21:32:01.067
• [6.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 08/18/23 21:32:01.074
  Aug 18 21:32:01.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption @ 08/18/23 21:32:01.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:32:01.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:32:01.093
  Aug 18 21:32:01.108: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 21:33:01.126: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/18/23 21:33:01.129
  Aug 18 21:33:01.129: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/18/23 21:33:01.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:01.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:01.154
  Aug 18 21:33:01.170: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Aug 18 21:33:01.175: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Aug 18 21:33:01.194: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:33:01.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-6292" for this suite. @ 08/18/23 21:33:01.246
  STEP: Destroying namespace "sched-preemption-7496" for this suite. @ 08/18/23 21:33:01.254
• [60.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 08/18/23 21:33:01.264
  Aug 18 21:33:01.264: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:33:01.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:01.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:01.288
  STEP: Counting existing ResourceQuota @ 08/18/23 21:33:01.291
  STEP: Creating a ResourceQuota @ 08/18/23 21:33:06.297
  STEP: Ensuring resource quota status is calculated @ 08/18/23 21:33:06.302
  STEP: Creating a Service @ 08/18/23 21:33:08.307
  STEP: Creating a NodePort Service @ 08/18/23 21:33:08.325
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 08/18/23 21:33:08.347
  STEP: Ensuring resource quota status captures service creation @ 08/18/23 21:33:08.368
  STEP: Deleting Services @ 08/18/23 21:33:10.372
  STEP: Ensuring resource quota status released usage @ 08/18/23 21:33:10.409
  Aug 18 21:33:12.414: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8891" for this suite. @ 08/18/23 21:33:12.418
• [11.161 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 08/18/23 21:33:12.427
  Aug 18 21:33:12.427: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 21:33:12.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:12.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:12.451
  STEP: Creating a job @ 08/18/23 21:33:12.453
  STEP: Ensure pods equal to parallelism count is attached to the job @ 08/18/23 21:33:12.46
  STEP: patching /status @ 08/18/23 21:33:14.465
  STEP: updating /status @ 08/18/23 21:33:14.471
  STEP: get /status @ 08/18/23 21:33:14.48
  Aug 18 21:33:14.483: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9452" for this suite. @ 08/18/23 21:33:14.487
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 08/18/23 21:33:14.494
  Aug 18 21:33:14.494: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 21:33:14.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:14.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:14.517
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 08/18/23 21:33:14.52
  STEP: When a replication controller with a matching selector is created @ 08/18/23 21:33:16.542
  STEP: Then the orphan pod is adopted @ 08/18/23 21:33:16.546
  Aug 18 21:33:17.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-899" for this suite. @ 08/18/23 21:33:17.558
• [3.069 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 08/18/23 21:33:17.564
  Aug 18 21:33:17.564: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:33:17.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:17.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:17.585
  Aug 18 21:33:17.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: creating the pod @ 08/18/23 21:33:17.592
  STEP: submitting the pod to kubernetes @ 08/18/23 21:33:17.592
  Aug 18 21:33:19.682: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4143" for this suite. @ 08/18/23 21:33:19.686
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 08/18/23 21:33:19.695
  Aug 18 21:33:19.695: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 21:33:19.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:33:19.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:33:19.718
  STEP: create the rc @ 08/18/23 21:33:19.726
  W0818 21:33:19.731439      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 08/18/23 21:33:25.736
  STEP: wait for the rc to be deleted @ 08/18/23 21:33:25.744
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 08/18/23 21:33:30.748
  STEP: Gathering metrics @ 08/18/23 21:34:00.759
  W0818 21:34:00.765464      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 21:34:00.765: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 21:34:00.765: INFO: Deleting pod "simpletest.rc-24z4g" in namespace "gc-1772"
  Aug 18 21:34:00.779: INFO: Deleting pod "simpletest.rc-26klg" in namespace "gc-1772"
  Aug 18 21:34:00.793: INFO: Deleting pod "simpletest.rc-28p5m" in namespace "gc-1772"
  Aug 18 21:34:00.803: INFO: Deleting pod "simpletest.rc-2kw4n" in namespace "gc-1772"
  Aug 18 21:34:00.820: INFO: Deleting pod "simpletest.rc-2mzn4" in namespace "gc-1772"
  Aug 18 21:34:00.829: INFO: Deleting pod "simpletest.rc-2ztt6" in namespace "gc-1772"
  Aug 18 21:34:00.842: INFO: Deleting pod "simpletest.rc-4hlvr" in namespace "gc-1772"
  Aug 18 21:34:00.852: INFO: Deleting pod "simpletest.rc-4zr4q" in namespace "gc-1772"
  Aug 18 21:34:00.868: INFO: Deleting pod "simpletest.rc-5bh7w" in namespace "gc-1772"
  Aug 18 21:34:00.879: INFO: Deleting pod "simpletest.rc-5cx8b" in namespace "gc-1772"
  Aug 18 21:34:00.890: INFO: Deleting pod "simpletest.rc-5fw6x" in namespace "gc-1772"
  Aug 18 21:34:00.901: INFO: Deleting pod "simpletest.rc-5gpdk" in namespace "gc-1772"
  Aug 18 21:34:00.914: INFO: Deleting pod "simpletest.rc-5l7db" in namespace "gc-1772"
  Aug 18 21:34:00.925: INFO: Deleting pod "simpletest.rc-5pp4m" in namespace "gc-1772"
  Aug 18 21:34:00.942: INFO: Deleting pod "simpletest.rc-64cvv" in namespace "gc-1772"
  Aug 18 21:34:00.954: INFO: Deleting pod "simpletest.rc-65v9k" in namespace "gc-1772"
  Aug 18 21:34:00.978: INFO: Deleting pod "simpletest.rc-6hcq6" in namespace "gc-1772"
  Aug 18 21:34:00.989: INFO: Deleting pod "simpletest.rc-6k7jr" in namespace "gc-1772"
  Aug 18 21:34:01.008: INFO: Deleting pod "simpletest.rc-6td9z" in namespace "gc-1772"
  Aug 18 21:34:01.032: INFO: Deleting pod "simpletest.rc-6z5h9" in namespace "gc-1772"
  Aug 18 21:34:01.048: INFO: Deleting pod "simpletest.rc-74zlg" in namespace "gc-1772"
  Aug 18 21:34:01.061: INFO: Deleting pod "simpletest.rc-7wrkq" in namespace "gc-1772"
  Aug 18 21:34:01.076: INFO: Deleting pod "simpletest.rc-85jrd" in namespace "gc-1772"
  Aug 18 21:34:01.087: INFO: Deleting pod "simpletest.rc-8dhh7" in namespace "gc-1772"
  Aug 18 21:34:01.099: INFO: Deleting pod "simpletest.rc-8nxk9" in namespace "gc-1772"
  Aug 18 21:34:01.111: INFO: Deleting pod "simpletest.rc-95n6r" in namespace "gc-1772"
  Aug 18 21:34:01.124: INFO: Deleting pod "simpletest.rc-97568" in namespace "gc-1772"
  Aug 18 21:34:01.140: INFO: Deleting pod "simpletest.rc-bxj62" in namespace "gc-1772"
  Aug 18 21:34:01.152: INFO: Deleting pod "simpletest.rc-cpkjc" in namespace "gc-1772"
  Aug 18 21:34:01.163: INFO: Deleting pod "simpletest.rc-cpprf" in namespace "gc-1772"
  Aug 18 21:34:01.175: INFO: Deleting pod "simpletest.rc-cxhzn" in namespace "gc-1772"
  Aug 18 21:34:01.186: INFO: Deleting pod "simpletest.rc-dhghj" in namespace "gc-1772"
  Aug 18 21:34:01.203: INFO: Deleting pod "simpletest.rc-f6qlv" in namespace "gc-1772"
  Aug 18 21:34:01.215: INFO: Deleting pod "simpletest.rc-f7hlb" in namespace "gc-1772"
  Aug 18 21:34:01.231: INFO: Deleting pod "simpletest.rc-fbxb6" in namespace "gc-1772"
  Aug 18 21:34:01.246: INFO: Deleting pod "simpletest.rc-fd6l6" in namespace "gc-1772"
  Aug 18 21:34:01.274: INFO: Deleting pod "simpletest.rc-gtqdk" in namespace "gc-1772"
  Aug 18 21:34:01.306: INFO: Deleting pod "simpletest.rc-h5r98" in namespace "gc-1772"
  Aug 18 21:34:01.320: INFO: Deleting pod "simpletest.rc-j5fct" in namespace "gc-1772"
  Aug 18 21:34:01.334: INFO: Deleting pod "simpletest.rc-j7xs4" in namespace "gc-1772"
  Aug 18 21:34:01.345: INFO: Deleting pod "simpletest.rc-jd8rc" in namespace "gc-1772"
  Aug 18 21:34:01.355: INFO: Deleting pod "simpletest.rc-jfs8w" in namespace "gc-1772"
  Aug 18 21:34:01.369: INFO: Deleting pod "simpletest.rc-jllfj" in namespace "gc-1772"
  Aug 18 21:34:01.380: INFO: Deleting pod "simpletest.rc-jnlc6" in namespace "gc-1772"
  Aug 18 21:34:01.395: INFO: Deleting pod "simpletest.rc-jqk79" in namespace "gc-1772"
  Aug 18 21:34:01.409: INFO: Deleting pod "simpletest.rc-jv6r6" in namespace "gc-1772"
  Aug 18 21:34:01.418: INFO: Deleting pod "simpletest.rc-kh4hm" in namespace "gc-1772"
  Aug 18 21:34:01.466: INFO: Deleting pod "simpletest.rc-ktcwv" in namespace "gc-1772"
  Aug 18 21:34:01.477: INFO: Deleting pod "simpletest.rc-kwcbf" in namespace "gc-1772"
  Aug 18 21:34:01.490: INFO: Deleting pod "simpletest.rc-ld89r" in namespace "gc-1772"
  Aug 18 21:34:01.504: INFO: Deleting pod "simpletest.rc-lkzwl" in namespace "gc-1772"
  Aug 18 21:34:01.517: INFO: Deleting pod "simpletest.rc-lzhzd" in namespace "gc-1772"
  Aug 18 21:34:01.533: INFO: Deleting pod "simpletest.rc-m5wcz" in namespace "gc-1772"
  Aug 18 21:34:01.545: INFO: Deleting pod "simpletest.rc-m8h74" in namespace "gc-1772"
  Aug 18 21:34:01.555: INFO: Deleting pod "simpletest.rc-mbf4s" in namespace "gc-1772"
  Aug 18 21:34:01.566: INFO: Deleting pod "simpletest.rc-mdg7l" in namespace "gc-1772"
  Aug 18 21:34:01.579: INFO: Deleting pod "simpletest.rc-mn9bj" in namespace "gc-1772"
  Aug 18 21:34:01.588: INFO: Deleting pod "simpletest.rc-mphmc" in namespace "gc-1772"
  Aug 18 21:34:01.598: INFO: Deleting pod "simpletest.rc-mrd2g" in namespace "gc-1772"
  Aug 18 21:34:01.611: INFO: Deleting pod "simpletest.rc-mrtvl" in namespace "gc-1772"
  Aug 18 21:34:01.620: INFO: Deleting pod "simpletest.rc-mwfzn" in namespace "gc-1772"
  Aug 18 21:34:01.633: INFO: Deleting pod "simpletest.rc-np77s" in namespace "gc-1772"
  Aug 18 21:34:01.644: INFO: Deleting pod "simpletest.rc-nwlsv" in namespace "gc-1772"
  Aug 18 21:34:01.655: INFO: Deleting pod "simpletest.rc-p7822" in namespace "gc-1772"
  Aug 18 21:34:01.666: INFO: Deleting pod "simpletest.rc-ppd8s" in namespace "gc-1772"
  Aug 18 21:34:01.677: INFO: Deleting pod "simpletest.rc-pqlhs" in namespace "gc-1772"
  Aug 18 21:34:01.689: INFO: Deleting pod "simpletest.rc-ptrcd" in namespace "gc-1772"
  Aug 18 21:34:01.715: INFO: Deleting pod "simpletest.rc-pvhlf" in namespace "gc-1772"
  Aug 18 21:34:01.766: INFO: Deleting pod "simpletest.rc-q6tt8" in namespace "gc-1772"
  Aug 18 21:34:01.815: INFO: Deleting pod "simpletest.rc-qjg77" in namespace "gc-1772"
  Aug 18 21:34:01.868: INFO: Deleting pod "simpletest.rc-qp84m" in namespace "gc-1772"
  Aug 18 21:34:01.912: INFO: Deleting pod "simpletest.rc-qqf5h" in namespace "gc-1772"
  Aug 18 21:34:01.964: INFO: Deleting pod "simpletest.rc-r86bg" in namespace "gc-1772"
  Aug 18 21:34:02.036: INFO: Deleting pod "simpletest.rc-rds5x" in namespace "gc-1772"
  Aug 18 21:34:02.067: INFO: Deleting pod "simpletest.rc-rhjmk" in namespace "gc-1772"
  Aug 18 21:34:02.118: INFO: Deleting pod "simpletest.rc-rss7z" in namespace "gc-1772"
  Aug 18 21:34:02.160: INFO: Deleting pod "simpletest.rc-s5mq8" in namespace "gc-1772"
  Aug 18 21:34:02.214: INFO: Deleting pod "simpletest.rc-sdlgs" in namespace "gc-1772"
  Aug 18 21:34:02.266: INFO: Deleting pod "simpletest.rc-swt4v" in namespace "gc-1772"
  Aug 18 21:34:02.321: INFO: Deleting pod "simpletest.rc-td5d4" in namespace "gc-1772"
  Aug 18 21:34:02.366: INFO: Deleting pod "simpletest.rc-tnh6v" in namespace "gc-1772"
  Aug 18 21:34:02.415: INFO: Deleting pod "simpletest.rc-txblz" in namespace "gc-1772"
  Aug 18 21:34:02.466: INFO: Deleting pod "simpletest.rc-vcqfc" in namespace "gc-1772"
  Aug 18 21:34:02.539: INFO: Deleting pod "simpletest.rc-vjbsq" in namespace "gc-1772"
  Aug 18 21:34:02.576: INFO: Deleting pod "simpletest.rc-vkxdq" in namespace "gc-1772"
  Aug 18 21:34:02.617: INFO: Deleting pod "simpletest.rc-vpwcg" in namespace "gc-1772"
  Aug 18 21:34:02.662: INFO: Deleting pod "simpletest.rc-w74xd" in namespace "gc-1772"
  Aug 18 21:34:02.711: INFO: Deleting pod "simpletest.rc-w8cnd" in namespace "gc-1772"
  Aug 18 21:34:02.770: INFO: Deleting pod "simpletest.rc-w9p4c" in namespace "gc-1772"
  Aug 18 21:34:02.818: INFO: Deleting pod "simpletest.rc-x7qnp" in namespace "gc-1772"
  Aug 18 21:34:02.868: INFO: Deleting pod "simpletest.rc-x8wnj" in namespace "gc-1772"
  Aug 18 21:34:02.912: INFO: Deleting pod "simpletest.rc-xbwt9" in namespace "gc-1772"
  Aug 18 21:34:02.968: INFO: Deleting pod "simpletest.rc-xmqb8" in namespace "gc-1772"
  Aug 18 21:34:03.015: INFO: Deleting pod "simpletest.rc-xpwlf" in namespace "gc-1772"
  Aug 18 21:34:03.065: INFO: Deleting pod "simpletest.rc-z4vwj" in namespace "gc-1772"
  Aug 18 21:34:03.119: INFO: Deleting pod "simpletest.rc-z5vzc" in namespace "gc-1772"
  Aug 18 21:34:03.162: INFO: Deleting pod "simpletest.rc-z67zb" in namespace "gc-1772"
  Aug 18 21:34:03.247: INFO: Deleting pod "simpletest.rc-zbrfg" in namespace "gc-1772"
  Aug 18 21:34:03.278: INFO: Deleting pod "simpletest.rc-ztks4" in namespace "gc-1772"
  Aug 18 21:34:03.311: INFO: Deleting pod "simpletest.rc-zvl2k" in namespace "gc-1772"
  Aug 18 21:34:03.381: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1772" for this suite. @ 08/18/23 21:34:03.405
• [43.806 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 08/18/23 21:34:03.502
  Aug 18 21:34:03.502: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:34:03.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:03.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:03.525
  STEP: Creating secret with name secret-test-bc4eb1ed-1ccf-4ade-b89b-a3eedbcb46e2 @ 08/18/23 21:34:03.527
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:34:03.536
  STEP: Saw pod success @ 08/18/23 21:34:09.575
  Aug 18 21:34:09.578: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-9a8ce0e0-0fdd-493e-99b4-8831032f67ca container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:34:09.594
  Aug 18 21:34:09.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2905" for this suite. @ 08/18/23 21:34:09.616
• [6.121 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 08/18/23 21:34:09.624
  Aug 18 21:34:09.624: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-webhook @ 08/18/23 21:34:09.624
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:09.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:09.641
  STEP: Setting up server cert @ 08/18/23 21:34:09.643
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 08/18/23 21:34:09.89
  STEP: Deploying the custom resource conversion webhook pod @ 08/18/23 21:34:09.9
  STEP: Wait for the deployment to be ready @ 08/18/23 21:34:09.912
  Aug 18 21:34:09.922: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:34:11.933
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:34:11.948
  Aug 18 21:34:12.948: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Aug 18 21:34:12.959: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Creating a v1 custom resource @ 08/18/23 21:34:15.519
  STEP: Create a v2 custom resource @ 08/18/23 21:34:15.533
  STEP: List CRs in v1 @ 08/18/23 21:34:15.568
  STEP: List CRs in v2 @ 08/18/23 21:34:15.573
  Aug 18 21:34:15.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3317" for this suite. @ 08/18/23 21:34:16.131
• [6.516 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 08/18/23 21:34:16.14
  Aug 18 21:34:16.140: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:34:16.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:16.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:16.172
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9274 @ 08/18/23 21:34:16.175
  STEP: changing the ExternalName service to type=ClusterIP @ 08/18/23 21:34:16.179
  STEP: creating replication controller externalname-service in namespace services-9274 @ 08/18/23 21:34:16.192
  I0818 21:34:16.198409      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-9274, replica count: 2
  I0818 21:34:19.249082      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 21:34:19.249: INFO: Creating new exec pod
  Aug 18 21:34:22.268: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-9274 exec execpodjl5fc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 21:34:22.396: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 21:34:22.396: INFO: stdout: ""
  Aug 18 21:34:23.397: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-9274 exec execpodjl5fc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 21:34:23.516: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 21:34:23.516: INFO: stdout: ""
  Aug 18 21:34:24.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-9274 exec execpodjl5fc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 21:34:24.513: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 21:34:24.513: INFO: stdout: ""
  Aug 18 21:34:25.396: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-9274 exec execpodjl5fc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 21:34:25.518: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 21:34:25.518: INFO: stdout: "externalname-service-svtdg"
  Aug 18 21:34:25.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-9274 exec execpodjl5fc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.48 80'
  Aug 18 21:34:25.642: INFO: stderr: "+ nc -v -t -w 2 10.152.183.48 80\n+ echo hostName\nConnection to 10.152.183.48 80 port [tcp/http] succeeded!\n"
  Aug 18 21:34:25.642: INFO: stdout: "externalname-service-b2x9s"
  Aug 18 21:34:25.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:34:25.646: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-9274" for this suite. @ 08/18/23 21:34:25.662
• [9.528 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 08/18/23 21:34:25.669
  Aug 18 21:34:25.669: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 21:34:25.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:25.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:25.691
  Aug 18 21:34:25.693: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 08/18/23 21:34:26.708
  STEP: Checking rc "condition-test" has the desired failure condition set @ 08/18/23 21:34:26.714
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 08/18/23 21:34:27.723
  Aug 18 21:34:27.733: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 08/18/23 21:34:27.733
  Aug 18 21:34:28.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2737" for this suite. @ 08/18/23 21:34:28.744
• [3.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 08/18/23 21:34:28.751
  Aug 18 21:34:28.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/18/23 21:34:28.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:28.77
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:28.773
  STEP: create the container to handle the HTTPGet hook request. @ 08/18/23 21:34:28.779
  STEP: create the pod with lifecycle hook @ 08/18/23 21:34:30.801
  STEP: check poststart hook @ 08/18/23 21:34:32.82
  STEP: delete the pod with lifecycle hook @ 08/18/23 21:34:32.826
  Aug 18 21:34:34.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9740" for this suite. @ 08/18/23 21:34:34.848
• [6.103 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 08/18/23 21:34:34.855
  Aug 18 21:34:34.855: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 21:34:34.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:34.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:34.874
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6908.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6908.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 08/18/23 21:34:34.877
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6908.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6908.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 08/18/23 21:34:34.877
  STEP: creating a pod to probe /etc/hosts @ 08/18/23 21:34:34.877
  STEP: submitting the pod to kubernetes @ 08/18/23 21:34:34.877
  STEP: retrieving the pod @ 08/18/23 21:34:36.895
  STEP: looking for the results for each expected name from probers @ 08/18/23 21:34:36.898
  Aug 18 21:34:36.914: INFO: DNS probes using dns-6908/dns-test-2d40c48a-fb15-406c-8fd5-601ff8372ef9 succeeded

  Aug 18 21:34:36.914: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:34:36.918
  STEP: Destroying namespace "dns-6908" for this suite. @ 08/18/23 21:34:36.932
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 08/18/23 21:34:36.941
  Aug 18 21:34:36.941: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename podtemplate @ 08/18/23 21:34:36.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:36.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:36.964
  Aug 18 21:34:36.995: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4903" for this suite. @ 08/18/23 21:34:36.999
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 08/18/23 21:34:37.009
  Aug 18 21:34:37.009: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 21:34:37.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:37.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:37.03
  STEP: Creating a pod to test substitution in container's command @ 08/18/23 21:34:37.033
  STEP: Saw pod success @ 08/18/23 21:34:41.055
  Aug 18 21:34:41.059: INFO: Trying to get logs from node ip-172-31-20-82 pod var-expansion-75b93e7f-1cfd-46ed-98f4-efffb7a93dac container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:34:41.077
  Aug 18 21:34:41.094: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1180" for this suite. @ 08/18/23 21:34:41.098
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 08/18/23 21:34:41.106
  Aug 18 21:34:41.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:34:41.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:34:41.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:34:41.128
  STEP: Creating pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486 @ 08/18/23 21:34:41.131
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 21:34:43.147
  Aug 18 21:34:43.151: INFO: Initial restart count of pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 is 0
  Aug 18 21:34:43.154: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:45.159: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:47.163: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:49.170: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:51.174: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:53.179: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:55.183: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:57.188: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:34:59.193: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:01.199: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:03.203: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:05.208: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:07.213: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:09.218: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:11.222: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:13.228: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:15.232: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:17.238: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:19.243: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:21.249: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:23.253: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:25.259: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:27.263: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:29.267: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:31.272: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:33.278: INFO: Get pod busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 in namespace container-probe-7486
  Aug 18 21:35:33.279: INFO: Restart count of pod container-probe-7486/busybox-c198b069-4ba1-4301-ac7f-16b28b7c52b4 is now 1 (50.127471932s elapsed)
  Aug 18 21:35:33.279: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:35:33.283
  STEP: Destroying namespace "container-probe-7486" for this suite. @ 08/18/23 21:35:33.295
• [52.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 08/18/23 21:35:33.302
  Aug 18 21:35:33.302: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:35:33.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:35:33.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:35:33.323
  STEP: Create set of pods @ 08/18/23 21:35:33.326
  Aug 18 21:35:33.334: INFO: created test-pod-1
  Aug 18 21:35:33.338: INFO: created test-pod-2
  Aug 18 21:35:33.346: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 08/18/23 21:35:33.346
  STEP: waiting for all pods to be deleted @ 08/18/23 21:35:35.393
  Aug 18 21:35:35.397: INFO: Pod quantity 3 is different from expected quantity 0
  Aug 18 21:35:36.405: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7950" for this suite. @ 08/18/23 21:35:36.408
• [3.113 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 08/18/23 21:35:36.416
  Aug 18 21:35:36.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:35:36.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:35:36.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:35:36.433
  STEP: Creating configMap configmap-4365/configmap-test-cabb8b87-265e-4af8-aa49-b7a4f8b8a1df @ 08/18/23 21:35:36.439
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:35:36.445
  STEP: Saw pod success @ 08/18/23 21:35:40.475
  Aug 18 21:35:40.478: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-f772dd37-78cb-4b4f-9b3c-b7875eed0260 container env-test: <nil>
  STEP: delete the pod @ 08/18/23 21:35:40.484
  Aug 18 21:35:40.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4365" for this suite. @ 08/18/23 21:35:40.506
• [4.096 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 08/18/23 21:35:40.513
  Aug 18 21:35:40.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename cronjob @ 08/18/23 21:35:40.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:35:40.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:35:40.537
  STEP: Creating a ReplaceConcurrent cronjob @ 08/18/23 21:35:40.54
  STEP: Ensuring a job is scheduled @ 08/18/23 21:35:40.547
  STEP: Ensuring exactly one is scheduled @ 08/18/23 21:36:00.55
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 08/18/23 21:36:00.555
  STEP: Ensuring the job is replaced with a new one @ 08/18/23 21:36:00.557
  STEP: Removing cronjob @ 08/18/23 21:37:00.562
  Aug 18 21:37:00.569: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2546" for this suite. @ 08/18/23 21:37:00.573
• [80.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 08/18/23 21:37:00.582
  Aug 18 21:37:00.582: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:37:00.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:00.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:00.61
  STEP: Creating configMap with name projected-configmap-test-volume-map-bb3214ea-d07c-44d9-a114-4703591f3f4b @ 08/18/23 21:37:00.613
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:37:00.616
  STEP: Saw pod success @ 08/18/23 21:37:02.631
  Aug 18 21:37:02.635: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-projected-configmaps-e3037bfa-f766-436a-8831-df2f2e720146 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:37:02.65
  Aug 18 21:37:02.664: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9009" for this suite. @ 08/18/23 21:37:02.668
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 08/18/23 21:37:02.675
  Aug 18 21:37:02.675: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 21:37:02.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:02.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:02.697
  Aug 18 21:37:04.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:37:04.720: INFO: Deleting pod "var-expansion-d9366056-4422-480c-90e4-cee373bf307c" in namespace "var-expansion-3636"
  Aug 18 21:37:04.728: INFO: Wait up to 5m0s for pod "var-expansion-d9366056-4422-480c-90e4-cee373bf307c" to be fully deleted
  STEP: Destroying namespace "var-expansion-3636" for this suite. @ 08/18/23 21:37:06.737
• [4.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 08/18/23 21:37:06.744
  Aug 18 21:37:06.744: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:37:06.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:06.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:06.764
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:37:06.767
  STEP: Saw pod success @ 08/18/23 21:37:10.788
  Aug 18 21:37:10.792: INFO: Trying to get logs from node ip-172-31-20-82 pod downwardapi-volume-5ef1b404-613d-4b15-9bbe-fcde56ea5f0a container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:37:10.799
  Aug 18 21:37:10.814: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7861" for this suite. @ 08/18/23 21:37:10.817
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 08/18/23 21:37:10.826
  Aug 18 21:37:10.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:37:10.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:10.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:10.845
  STEP: Creating configMap with name projected-configmap-test-volume-map-8b7125e9-bec0-4678-a4a0-2029b6c22ce6 @ 08/18/23 21:37:10.847
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:37:10.853
  STEP: Saw pod success @ 08/18/23 21:37:14.875
  Aug 18 21:37:14.878: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-projected-configmaps-46ea6a12-fc4b-4fa6-8c32-74053099a95d container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:37:14.887
  Aug 18 21:37:14.909: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2220" for this suite. @ 08/18/23 21:37:14.914
• [4.094 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 08/18/23 21:37:14.921
  Aug 18 21:37:14.921: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename cronjob @ 08/18/23 21:37:14.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:14.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:14.941
  STEP: Creating a cronjob @ 08/18/23 21:37:14.944
  STEP: creating @ 08/18/23 21:37:14.944
  STEP: getting @ 08/18/23 21:37:14.949
  STEP: listing @ 08/18/23 21:37:14.953
  STEP: watching @ 08/18/23 21:37:14.956
  Aug 18 21:37:14.956: INFO: starting watch
  STEP: cluster-wide listing @ 08/18/23 21:37:14.957
  STEP: cluster-wide watching @ 08/18/23 21:37:14.96
  Aug 18 21:37:14.960: INFO: starting watch
  STEP: patching @ 08/18/23 21:37:14.961
  STEP: updating @ 08/18/23 21:37:14.968
  Aug 18 21:37:14.975: INFO: waiting for watch events with expected annotations
  Aug 18 21:37:14.975: INFO: saw patched and updated annotations
  STEP: patching /status @ 08/18/23 21:37:14.975
  STEP: updating /status @ 08/18/23 21:37:14.981
  STEP: get /status @ 08/18/23 21:37:14.988
  STEP: deleting @ 08/18/23 21:37:14.992
  STEP: deleting a collection @ 08/18/23 21:37:15.006
  Aug 18 21:37:15.016: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2220" for this suite. @ 08/18/23 21:37:15.019
• [0.104 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 08/18/23 21:37:15.025
  Aug 18 21:37:15.025: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 21:37:15.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:15.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:15.044
  STEP: creating pod @ 08/18/23 21:37:15.047
  Aug 18 21:37:17.070: INFO: Pod pod-hostip-d087a3d3-1b4d-4683-bd86-835c3ed8dad5 has hostIP: 172.31.20.82
  Aug 18 21:37:17.070: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-418" for this suite. @ 08/18/23 21:37:17.075
• [2.057 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 08/18/23 21:37:17.083
  Aug 18 21:37:17.083: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:37:17.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:17.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:17.103
  STEP: Creating Pod @ 08/18/23 21:37:17.106
  STEP: Reading file content from the nginx-container @ 08/18/23 21:37:19.124
  Aug 18 21:37:19.124: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7170 PodName:pod-sharedvolume-2f11904d-61ce-49d5-8b96-441b05325fd4 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:37:19.124: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:37:19.125: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:37:19.125: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-7170/pods/pod-sharedvolume-2f11904d-61ce-49d5-8b96-441b05325fd4/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Aug 18 21:37:19.201: INFO: Exec stderr: ""
  Aug 18 21:37:19.201: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7170" for this suite. @ 08/18/23 21:37:19.206
• [2.130 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 08/18/23 21:37:19.214
  Aug 18 21:37:19.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:37:19.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:19.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:19.233
  STEP: Creating a pod to test downward api env vars @ 08/18/23 21:37:19.236
  STEP: Saw pod success @ 08/18/23 21:37:23.257
  Aug 18 21:37:23.261: INFO: Trying to get logs from node ip-172-31-20-82 pod downward-api-c3206d49-ad9f-4176-825c-a5615bd3f819 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:37:23.269
  Aug 18 21:37:23.284: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-118" for this suite. @ 08/18/23 21:37:23.288
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 08/18/23 21:37:23.297
  Aug 18 21:37:23.297: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pod-network-test @ 08/18/23 21:37:23.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:23.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:23.315
  STEP: Performing setup for networking test in namespace pod-network-test-8637 @ 08/18/23 21:37:23.318
  STEP: creating a selector @ 08/18/23 21:37:23.318
  STEP: Creating the service pods in kubernetes @ 08/18/23 21:37:23.318
  Aug 18 21:37:23.318: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/18/23 21:37:45.42
  Aug 18 21:37:47.437: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 18 21:37:47.437: INFO: Breadth first check of 192.168.189.255 on host 172.31.15.95...
  Aug 18 21:37:47.440: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.194:9080/dial?request=hostname&protocol=udp&host=192.168.189.255&port=8081&tries=1'] Namespace:pod-network-test-8637 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:37:47.440: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:37:47.440: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:37:47.440: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8637/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.189.255%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:37:47.516: INFO: Waiting for responses: map[]
  Aug 18 21:37:47.516: INFO: reached 192.168.189.255 after 0/1 tries
  Aug 18 21:37:47.516: INFO: Breadth first check of 192.168.159.132 on host 172.31.20.82...
  Aug 18 21:37:47.520: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.194:9080/dial?request=hostname&protocol=udp&host=192.168.159.132&port=8081&tries=1'] Namespace:pod-network-test-8637 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:37:47.520: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:37:47.521: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:37:47.521: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8637/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.159.132%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:37:47.588: INFO: Waiting for responses: map[]
  Aug 18 21:37:47.588: INFO: reached 192.168.159.132 after 0/1 tries
  Aug 18 21:37:47.588: INFO: Breadth first check of 192.168.165.111 on host 172.31.82.98...
  Aug 18 21:37:47.591: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://192.168.189.194:9080/dial?request=hostname&protocol=udp&host=192.168.165.111&port=8081&tries=1'] Namespace:pod-network-test-8637 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:37:47.591: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:37:47.592: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:37:47.592: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-8637/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F192.168.189.194%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D192.168.165.111%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Aug 18 21:37:47.668: INFO: Waiting for responses: map[]
  Aug 18 21:37:47.668: INFO: reached 192.168.165.111 after 0/1 tries
  Aug 18 21:37:47.668: INFO: Going to retry 0 out of 3 pods....
  Aug 18 21:37:47.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-8637" for this suite. @ 08/18/23 21:37:47.672
• [24.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 08/18/23 21:37:47.68
  Aug 18 21:37:47.680: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:37:47.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:47.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:47.7
  STEP: Setting up server cert @ 08/18/23 21:37:47.726
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:37:47.926
  STEP: Deploying the webhook pod @ 08/18/23 21:37:47.934
  STEP: Wait for the deployment to be ready @ 08/18/23 21:37:47.946
  Aug 18 21:37:47.953: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:37:49.965
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:37:49.976
  Aug 18 21:37:50.977: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/18/23 21:37:50.986
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 08/18/23 21:37:51
  STEP: Creating a dummy validating-webhook-configuration object @ 08/18/23 21:37:51.013
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 08/18/23 21:37:51.019
  STEP: Creating a dummy mutating-webhook-configuration object @ 08/18/23 21:37:51.028
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 08/18/23 21:37:51.036
  Aug 18 21:37:51.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4516" for this suite. @ 08/18/23 21:37:51.1
  STEP: Destroying namespace "webhook-markers-813" for this suite. @ 08/18/23 21:37:51.106
• [3.432 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 08/18/23 21:37:51.112
  Aug 18 21:37:51.112: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename endpointslice @ 08/18/23 21:37:51.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:51.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:51.129
  STEP: getting /apis @ 08/18/23 21:37:51.132
  STEP: getting /apis/discovery.k8s.io @ 08/18/23 21:37:51.135
  STEP: getting /apis/discovery.k8s.iov1 @ 08/18/23 21:37:51.136
  STEP: creating @ 08/18/23 21:37:51.137
  STEP: getting @ 08/18/23 21:37:51.151
  STEP: listing @ 08/18/23 21:37:51.153
  STEP: watching @ 08/18/23 21:37:51.157
  Aug 18 21:37:51.157: INFO: starting watch
  STEP: cluster-wide listing @ 08/18/23 21:37:51.158
  STEP: cluster-wide watching @ 08/18/23 21:37:51.161
  Aug 18 21:37:51.161: INFO: starting watch
  STEP: patching @ 08/18/23 21:37:51.162
  STEP: updating @ 08/18/23 21:37:51.168
  Aug 18 21:37:51.176: INFO: waiting for watch events with expected annotations
  Aug 18 21:37:51.176: INFO: saw patched and updated annotations
  STEP: deleting @ 08/18/23 21:37:51.176
  STEP: deleting a collection @ 08/18/23 21:37:51.189
  Aug 18 21:37:51.205: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4042" for this suite. @ 08/18/23 21:37:51.208
• [0.101 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 08/18/23 21:37:51.214
  Aug 18 21:37:51.214: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:37:51.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:51.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:51.233
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/18/23 21:37:51.236
  Aug 18 21:37:51.236: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-2192 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Aug 18 21:37:51.286: INFO: stderr: ""
  Aug 18 21:37:51.286: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 08/18/23 21:37:51.286
  Aug 18 21:37:51.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-2192 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Aug 18 21:37:51.337: INFO: stderr: ""
  Aug 18 21:37:51.337: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/18/23 21:37:51.337
  Aug 18 21:37:51.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-2192 delete pods e2e-test-httpd-pod'
  Aug 18 21:37:52.632: INFO: stderr: ""
  Aug 18 21:37:52.632: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 18 21:37:52.632: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2192" for this suite. @ 08/18/23 21:37:52.637
• [1.429 seconds]
------------------------------
S
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 08/18/23 21:37:52.643
  Aug 18 21:37:52.643: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename runtimeclass @ 08/18/23 21:37:52.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:52.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:52.662
  STEP: getting /apis @ 08/18/23 21:37:52.665
  STEP: getting /apis/node.k8s.io @ 08/18/23 21:37:52.668
  STEP: getting /apis/node.k8s.io/v1 @ 08/18/23 21:37:52.669
  STEP: creating @ 08/18/23 21:37:52.67
  STEP: watching @ 08/18/23 21:37:52.685
  Aug 18 21:37:52.685: INFO: starting watch
  STEP: getting @ 08/18/23 21:37:52.689
  STEP: listing @ 08/18/23 21:37:52.692
  STEP: patching @ 08/18/23 21:37:52.696
  STEP: updating @ 08/18/23 21:37:52.7
  Aug 18 21:37:52.704: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 08/18/23 21:37:52.705
  STEP: deleting a collection @ 08/18/23 21:37:52.718
  Aug 18 21:37:52.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5498" for this suite. @ 08/18/23 21:37:52.739
• [0.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 08/18/23 21:37:52.747
  Aug 18 21:37:52.747: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/18/23 21:37:52.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:52.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:52.765
  STEP: create the container to handle the HTTPGet hook request. @ 08/18/23 21:37:52.77
  STEP: create the pod with lifecycle hook @ 08/18/23 21:37:54.791
  STEP: delete the pod with lifecycle hook @ 08/18/23 21:37:56.809
  STEP: check prestop hook @ 08/18/23 21:37:58.824
  Aug 18 21:37:58.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7261" for this suite. @ 08/18/23 21:37:58.846
• [6.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 08/18/23 21:37:58.853
  Aug 18 21:37:58.853: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 21:37:58.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:37:58.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:37:58.874
  STEP: creating service in namespace services-3795 @ 08/18/23 21:37:58.876
  STEP: creating service affinity-nodeport in namespace services-3795 @ 08/18/23 21:37:58.876
  STEP: creating replication controller affinity-nodeport in namespace services-3795 @ 08/18/23 21:37:58.89
  I0818 21:37:58.897102      19 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-3795, replica count: 3
  I0818 21:38:01.949040      19 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 21:38:01.959: INFO: Creating new exec pod
  Aug 18 21:38:04.981: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-3795 exec execpod-affinity2wjgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Aug 18 21:38:05.104: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Aug 18 21:38:05.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:38:05.104: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-3795 exec execpod-affinity2wjgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.62 80'
  Aug 18 21:38:05.223: INFO: stderr: "+ nc -v -t -w 2 10.152.183.62 80\nConnection to 10.152.183.62 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Aug 18 21:38:05.223: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:38:05.223: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-3795 exec execpod-affinity2wjgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.82 31527'
  Aug 18 21:38:05.344: INFO: stderr: "+ nc -v -t -w 2 172.31.20.82 31527\n+ echo hostName\nConnection to 172.31.20.82 31527 port [tcp/*] succeeded!\n"
  Aug 18 21:38:05.344: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:38:05.345: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-3795 exec execpod-affinity2wjgw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.82.98 31527'
  Aug 18 21:38:05.468: INFO: stderr: "+ nc -v -t -w 2 172.31.82.98 31527\n+ echo hostName\nConnection to 172.31.82.98 31527 port [tcp/*] succeeded!\n"
  Aug 18 21:38:05.468: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 21:38:05.468: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-3795 exec execpod-affinity2wjgw -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.15.95:31527/ ; done'
  Aug 18 21:38:05.629: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.15.95:31527/\n"
  Aug 18 21:38:05.629: INFO: stdout: "\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq\naffinity-nodeport-skfjq"
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Received response from host: affinity-nodeport-skfjq
  Aug 18 21:38:05.629: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:38:05.635: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3795, will wait for the garbage collector to delete the pods @ 08/18/23 21:38:05.652
  Aug 18 21:38:05.713: INFO: Deleting ReplicationController affinity-nodeport took: 6.288586ms
  Aug 18 21:38:05.814: INFO: Terminating ReplicationController affinity-nodeport pods took: 100.533702ms
  STEP: Destroying namespace "services-3795" for this suite. @ 08/18/23 21:38:08.736
• [9.890 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 08/18/23 21:38:08.745
  Aug 18 21:38:08.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subjectreview @ 08/18/23 21:38:08.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:38:08.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:38:08.764
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-6789" @ 08/18/23 21:38:08.766
  Aug 18 21:38:08.771: INFO: saUsername: "system:serviceaccount:subjectreview-6789:e2e"
  Aug 18 21:38:08.771: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-6789"}
  Aug 18 21:38:08.771: INFO: saUID: "ca60ec9d-ab63-4916-bd5b-3ff0f4251816"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-6789:e2e" @ 08/18/23 21:38:08.771
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-6789:e2e" @ 08/18/23 21:38:08.771
  Aug 18 21:38:08.773: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-6789:e2e" api 'list' configmaps in "subjectreview-6789" namespace @ 08/18/23 21:38:08.773
  Aug 18 21:38:08.774: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-6789:e2e" @ 08/18/23 21:38:08.774
  Aug 18 21:38:08.776: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Aug 18 21:38:08.776: INFO: LocalSubjectAccessReview has been verified
  Aug 18 21:38:08.776: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-6789" for this suite. @ 08/18/23 21:38:08.779
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 08/18/23 21:38:08.788
  Aug 18 21:38:08.788: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:38:08.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:38:08.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:38:08.807
  STEP: Creating pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043 @ 08/18/23 21:38:08.81
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 21:38:10.826
  Aug 18 21:38:10.829: INFO: Initial restart count of pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 is 0
  Aug 18 21:38:10.832: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:12.837: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:14.842: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:16.846: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:18.851: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:20.855: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:22.860: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:24.866: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:26.871: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:28.875: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:30.879: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:32.886: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:34.891: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:36.896: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:38.900: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:40.905: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:42.909: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:44.913: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:46.917: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:48.924: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:50.931: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:52.936: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:54.942: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:56.946: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:38:58.951: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:00.956: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:02.961: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:04.965: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:06.970: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:08.975: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:10.979: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:12.985: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:14.989: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:16.997: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:19.001: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:21.007: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:23.011: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:25.017: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:27.021: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:29.026: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:31.030: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:33.035: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:35.041: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:37.046: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:39.050: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:41.056: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:43.060: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:45.065: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:47.069: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:49.074: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:51.079: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:53.084: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:55.089: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:57.094: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:39:59.098: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:01.102: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:03.106: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:05.112: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:07.116: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:09.121: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:11.125: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:13.130: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:15.135: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:17.140: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:19.145: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:21.150: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:23.153: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:25.159: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:27.164: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:29.168: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:31.171: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:33.176: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:35.181: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:37.186: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:39.191: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:41.197: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:43.201: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:45.208: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:47.213: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:49.217: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:51.223: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:53.227: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:55.232: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:57.236: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:40:59.241: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:01.246: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:03.252: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:05.257: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:07.262: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:09.268: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:11.273: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:13.278: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:15.284: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:17.289: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:19.295: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:21.301: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:23.307: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:25.311: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:27.316: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:29.321: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:31.327: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:33.331: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:35.336: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:37.341: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:39.346: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:41.351: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:43.357: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:45.362: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:47.367: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:49.372: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:51.376: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:53.381: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:55.386: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:57.392: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:41:59.396: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:01.399: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:03.404: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:05.409: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:07.413: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:09.418: INFO: Get pod test-webserver-8b16c32e-18ac-44c4-ab6b-89fb81160e85 in namespace container-probe-8043
  Aug 18 21:42:11.419: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:42:11.423
  STEP: Destroying namespace "container-probe-8043" for this suite. @ 08/18/23 21:42:11.435
• [242.654 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 08/18/23 21:42:11.442
  Aug 18 21:42:11.442: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:42:11.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:42:11.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:42:11.462
  STEP: creating a Deployment @ 08/18/23 21:42:11.468
  STEP: waiting for Deployment to be created @ 08/18/23 21:42:11.475
  STEP: waiting for all Replicas to be Ready @ 08/18/23 21:42:11.477
  Aug 18 21:42:11.478: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.478: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.488: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.488: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.506: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.506: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.530: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:11.530: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Aug 18 21:42:12.973: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 18 21:42:12.973: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Aug 18 21:42:13.075: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 08/18/23 21:42:13.076
  Aug 18 21:42:13.085: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 08/18/23 21:42:13.085
  Aug 18 21:42:13.087: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.087: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.087: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 0
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.088: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.097: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.097: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.118: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.118: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:13.126: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:13.126: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:13.138: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:13.138: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:14.093: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:14.093: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:14.113: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  STEP: listing Deployments @ 08/18/23 21:42:14.113
  Aug 18 21:42:14.118: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 08/18/23 21:42:14.118
  Aug 18 21:42:14.131: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 08/18/23 21:42:14.131
  Aug 18 21:42:14.136: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:14.140: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:14.155: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:14.167: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:14.174: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:15.006: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:15.117: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:15.141: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:15.151: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Aug 18 21:42:15.994: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 08/18/23 21:42:16.019
  STEP: fetching the DeploymentStatus @ 08/18/23 21:42:16.028
  Aug 18 21:42:16.034: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 1
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 3
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 2
  Aug 18 21:42:16.035: INFO: observed Deployment test-deployment in namespace deployment-2074 with ReadyReplicas 3
  STEP: deleting the Deployment @ 08/18/23 21:42:16.035
  Aug 18 21:42:16.045: INFO: observed event type MODIFIED
  Aug 18 21:42:16.045: INFO: observed event type MODIFIED
  Aug 18 21:42:16.045: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.046: INFO: observed event type MODIFIED
  Aug 18 21:42:16.050: INFO: Log out all the ReplicaSets if there is no deployment created
  Aug 18 21:42:16.054: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e604233-9e4a-45f3-8966-8e42f76910d5",
      ResourceVersion: (string) (len=5) "25912",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eb73ca0a-8517-4063-bc59-c5f61586208e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 62 37 33  63 61 30 61 2d 38 35 31  |":\"eb73ca0a-851|
              00000130  37 2d 34 30 36 33 2d 62  63 35 39 2d 63 35 66 36  |7-4063-bc59-c5f6|
              00000140  31 35 38 36 32 30 38 65  5c 22 7d 22 3a 7b 7d 7d  |1586208e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991736,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 18 21:42:16.061: INFO: pod: "test-deployment-64fd565c98-lxtst":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-lxtst",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3fc39206-2262-4292-a962-0ddd0a74985a",
      ResourceVersion: (string) (len=5) "25908",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "6e604233-9e4a-45f3-8966-8e42f76910d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 65 36 30 34 32 33 33  |uid\":\"6e604233|
              000000a0  2d 39 65 34 61 2d 34 35  66 33 2d 38 39 36 36 2d  |-9e4a-45f3-8966-|
              000000b0  38 65 34 32 66 37 36 39  31 30 64 35 5c 22 7d 22  |8e42f76910d5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 39 2e 31 33 38 5c  |192.168.159.138\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fz5w7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fz5w7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.138",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.138"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827991734,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://adbd74a68648597c03ab91bc5972a28871a2cb78024f86812799f9fff88bc1a5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 18 21:42:16.067: INFO: pod: "test-deployment-64fd565c98-w9d6q":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-w9d6q",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d026f55c-09f1-4cce-b79c-752b31a96c18",
      ResourceVersion: (string) (len=5) "25896",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "6e604233-9e4a-45f3-8966-8e42f76910d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 65 36 30 34 32 33 33  |uid\":\"6e604233|
              000000a0  2d 39 65 34 61 2d 34 35  66 33 2d 38 39 36 36 2d  |-9e4a-45f3-8966-|
              000000b0  38 65 34 32 66 37 36 39  31 30 64 35 5c 22 7d 22  |8e42f76910d5\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=479) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              00000130  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              00000140  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              00000160  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              00000170  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000180  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              00000190  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001a0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001b0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001c0  22 66 3a 70 68 61 73 65  22 3a 7b 7d 2c 22 66 3a  |"f:phase":{},"f:|
              000001d0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5q7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5q7r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991733,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827991733,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827991735,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=77) "containerd://0ad204506a5db37d9627111cd0f8427cdd53c478163014a60b5616487dcc6ac1"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://0ad204506a5db37d9627111cd0f8427cdd53c478163014a60b5616487dcc6ac1",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 18 21:42:16.072: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28adbe3e-b112-4601-a337-6472c9a1f1b4",
      ResourceVersion: (string) (len=5) "25814",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eb73ca0a-8517-4063-bc59-c5f61586208e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 62 37 33  63 61 30 61 2d 38 35 31  |":\"eb73ca0a-851|
              00000130  37 2d 34 30 36 33 2d 62  63 35 39 2d 63 35 66 36  |7-4063-bc59-c5f6|
              00000140  31 35 38 36 32 30 38 65  5c 22 7d 22 3a 7b 7d 7d  |1586208e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 18 21:42:16.077: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2e1e5824-d4ce-440b-a81a-1e327085a242",
      ResourceVersion: (string) (len=5) "25904",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "eb73ca0a-8517-4063-bc59-c5f61586208e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 65 62 37 33  63 61 30 61 2d 38 35 31  |":\"eb73ca0a-851|
              00000130  37 2d 34 30 36 33 2d 62  63 35 39 2d 63 35 66 36  |7-4063-bc59-c5f6|
              00000140  31 35 38 36 32 30 38 65  5c 22 7d 22 3a 7b 7d 7d  |1586208e\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Aug 18 21:42:16.083: INFO: pod: "test-deployment-79ff746c4-6kv48":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-6kv48",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f7ea8a20-6e95-4be1-9b96-999c2d716b3e",
      ResourceVersion: (string) (len=5) "25920",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "2e1e5824-d4ce-440b-a81a-1e327085a242",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 65 31 65 35 38 32 34  |uid\":\"2e1e5824|
              000000a0  2d 64 34 63 65 2d 34 34  30 62 2d 61 38 31 61 2d  |-d4ce-440b-a81a-|
              000000b0  31 65 33 32 37 30 38 35  61 32 34 32 5c 22 7d 22  |1e327085a242\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 39 2e 31 34 30 5c  |192.168.159.140\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48jk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48jk2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.140",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.140"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827991735,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fd55f1437e27f4c3a47f28309538e66e333b89e07db2f6676d5875c82ea8c6a7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 18 21:42:16.085: INFO: pod: "test-deployment-79ff746c4-srp7d":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-srp7d",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-2074",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0fbd7c4c-0b78-4e30-9cde-6f8138f153ff",
      ResourceVersion: (string) (len=5) "25921",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991737,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "2e1e5824-d4ce-440b-a81a-1e327085a242",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  32 65 31 65 35 38 32 34  |uid\":\"2e1e5824|
              000000a0  2d 64 34 63 65 2d 34 34  30 62 2d 61 38 31 61 2d  |-d4ce-440b-a81a-|
              000000b0  31 65 33 32 37 30 38 35  61 32 34 32 5c 22 7d 22  |1e327085a242\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 32 30 5c  |192.168.189.220\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-565lp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-565lp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991735,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827991734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.220",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.220"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827991734,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827991734,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5c729a88536c3f56fecca85eafa7a99419b5e0a6240f5b7314804c9b66afd9cd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Aug 18 21:42:16.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2074" for this suite. @ 08/18/23 21:42:16.089
• [4.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 08/18/23 21:42:16.099
  Aug 18 21:42:16.099: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 21:42:16.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:42:16.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:42:16.117
  STEP: Creating a simple DaemonSet "daemon-set" @ 08/18/23 21:42:16.14
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 21:42:16.146
  Aug 18 21:42:16.149: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:16.149: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:16.152: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:42:16.152: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:42:17.158: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:17.158: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:17.163: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 18 21:42:17.163: INFO: Node ip-172-31-82-98 is running 0 daemon pod, expected 1
  Aug 18 21:42:18.157: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:18.157: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:18.160: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 21:42:18.160: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 08/18/23 21:42:18.165
  Aug 18 21:42:18.178: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:18.178: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:42:18.181: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 21:42:18.181: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 08/18/23 21:42:18.181
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 21:42:19.193
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7257, will wait for the garbage collector to delete the pods @ 08/18/23 21:42:19.193
  Aug 18 21:42:19.254: INFO: Deleting DaemonSet.extensions daemon-set took: 7.353558ms
  Aug 18 21:42:19.355: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.625791ms
  Aug 18 21:42:21.059: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:42:21.059: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 21:42:21.062: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"26070"},"items":null}

  Aug 18 21:42:21.066: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"26070"},"items":null}

  Aug 18 21:42:21.080: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7257" for this suite. @ 08/18/23 21:42:21.084
• [4.992 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 08/18/23 21:42:21.091
  Aug 18 21:42:21.091: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:42:21.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:42:21.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:42:21.111
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/18/23 21:42:21.114
  STEP: Saw pod success @ 08/18/23 21:42:25.139
  Aug 18 21:42:25.142: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-651fe808-c189-49f4-9621-ca9db6bbedb6 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:42:25.157
  Aug 18 21:42:25.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9662" for this suite. @ 08/18/23 21:42:25.18
• [4.096 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 08/18/23 21:42:25.187
  Aug 18 21:42:25.187: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename proxy @ 08/18/23 21:42:25.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:42:25.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:42:25.207
  Aug 18 21:42:25.209: INFO: Creating pod...
  Aug 18 21:42:27.228: INFO: Creating service...
  Aug 18 21:42:27.240: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=DELETE
  Aug 18 21:42:27.245: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 18 21:42:27.245: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=OPTIONS
  Aug 18 21:42:27.250: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 18 21:42:27.250: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=PATCH
  Aug 18 21:42:27.252: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 18 21:42:27.252: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=POST
  Aug 18 21:42:27.255: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 18 21:42:27.255: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=PUT
  Aug 18 21:42:27.259: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 18 21:42:27.259: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=DELETE
  Aug 18 21:42:27.264: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 18 21:42:27.264: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Aug 18 21:42:27.270: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 18 21:42:27.270: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=PATCH
  Aug 18 21:42:27.276: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 18 21:42:27.276: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=POST
  Aug 18 21:42:27.281: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 18 21:42:27.281: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=PUT
  Aug 18 21:42:27.287: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 18 21:42:27.287: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=GET
  Aug 18 21:42:27.291: INFO: http.Client request:GET StatusCode:301
  Aug 18 21:42:27.291: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=GET
  Aug 18 21:42:27.295: INFO: http.Client request:GET StatusCode:301
  Aug 18 21:42:27.295: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/pods/agnhost/proxy?method=HEAD
  Aug 18 21:42:27.298: INFO: http.Client request:HEAD StatusCode:301
  Aug 18 21:42:27.298: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-5971/services/e2e-proxy-test-service/proxy?method=HEAD
  Aug 18 21:42:27.303: INFO: http.Client request:HEAD StatusCode:301
  Aug 18 21:42:27.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-5971" for this suite. @ 08/18/23 21:42:27.307
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 08/18/23 21:42:27.315
  Aug 18 21:42:27.315: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:42:27.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:42:27.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:42:27.336
  STEP: Creating pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387 @ 08/18/23 21:42:27.338
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 21:42:29.354
  Aug 18 21:42:29.357: INFO: Initial restart count of pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 is 0
  Aug 18 21:42:29.361: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:31.367: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:33.373: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:35.378: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:37.383: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:39.387: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:41.392: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:43.397: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:45.402: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:47.407: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:49.411: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:51.417: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:53.422: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:55.427: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:57.433: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:42:59.437: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:01.441: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:03.448: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:05.453: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:07.459: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:09.464: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:11.470: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:13.475: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:15.480: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:17.485: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:19.490: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:21.495: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:23.500: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:25.505: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:27.510: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:29.515: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:31.520: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:33.525: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:35.530: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:37.535: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:39.540: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:41.544: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:43.548: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:45.553: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:47.558: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:49.564: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:51.568: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:53.573: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:55.579: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:57.583: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:43:59.587: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:01.590: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:03.595: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:05.599: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:07.604: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:09.608: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:11.612: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:13.617: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:15.621: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:17.627: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:19.631: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:21.635: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:23.640: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:25.646: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:27.650: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:29.654: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:31.659: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:33.664: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:35.668: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:37.674: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:39.677: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:41.682: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:43.687: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:45.691: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:47.696: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:49.700: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:51.707: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:53.713: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:55.718: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:57.723: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:44:59.727: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:01.731: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:03.736: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:05.740: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:07.745: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:09.750: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:11.754: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:13.758: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:15.762: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:17.768: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:19.773: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:21.779: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:23.783: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:25.789: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:27.794: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:29.798: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:31.802: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:33.807: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:35.811: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:37.817: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:39.823: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:41.828: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:43.834: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:45.838: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:47.843: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:49.847: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:51.852: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:53.857: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:55.862: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:57.866: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:45:59.871: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:01.875: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:03.881: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:05.886: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:07.891: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:09.895: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:11.899: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:13.903: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:15.908: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:17.912: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:19.915: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:21.921: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:23.925: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:25.931: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:27.937: INFO: Get pod liveness-117d861d-8faf-448d-a52c-6cfd931676d7 in namespace container-probe-7387
  Aug 18 21:46:29.938: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:46:29.943
  STEP: Destroying namespace "container-probe-7387" for this suite. @ 08/18/23 21:46:29.953
• [242.648 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 08/18/23 21:46:29.964
  Aug 18 21:46:29.964: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context @ 08/18/23 21:46:29.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:46:29.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:46:29.986
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 08/18/23 21:46:29.989
  STEP: Saw pod success @ 08/18/23 21:46:34.011
  Aug 18 21:46:34.015: INFO: Trying to get logs from node ip-172-31-15-95 pod security-context-f0e2dad5-2015-40d7-95ef-71f600bf44c8 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:46:34.029
  Aug 18 21:46:34.043: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-504" for this suite. @ 08/18/23 21:46:34.047
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 08/18/23 21:46:34.057
  Aug 18 21:46:34.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:46:34.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:46:34.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:46:34.079
  STEP: Creating configMap with name configmap-test-volume-40a16ae2-603a-40b0-8040-834762440960 @ 08/18/23 21:46:34.083
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:46:34.087
  STEP: Saw pod success @ 08/18/23 21:46:38.111
  Aug 18 21:46:38.116: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-1bcec69f-ed8d-4981-9eef-ae25f2e7b9a6 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 21:46:38.123
  Aug 18 21:46:38.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3031" for this suite. @ 08/18/23 21:46:38.139
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 08/18/23 21:46:38.147
  Aug 18 21:46:38.147: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:46:38.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:46:38.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:46:38.166
  Aug 18 21:47:38.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5885" for this suite. @ 08/18/23 21:47:38.186
• [60.046 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 08/18/23 21:47:38.193
  Aug 18 21:47:38.193: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:47:38.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:38.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:38.214
  Aug 18 21:47:38.216: INFO: Creating deployment "webserver-deployment"
  Aug 18 21:47:38.220: INFO: Waiting for observed generation 1
  Aug 18 21:47:40.228: INFO: Waiting for all required pods to come up
  Aug 18 21:47:40.232: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 08/18/23 21:47:40.232
  Aug 18 21:47:40.233: INFO: Waiting for deployment "webserver-deployment" to complete
  Aug 18 21:47:40.239: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Aug 18 21:47:40.249: INFO: Updating deployment webserver-deployment
  Aug 18 21:47:40.249: INFO: Waiting for observed generation 2
  Aug 18 21:47:42.256: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Aug 18 21:47:42.260: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Aug 18 21:47:42.263: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 18 21:47:42.273: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Aug 18 21:47:42.273: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Aug 18 21:47:42.276: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Aug 18 21:47:42.282: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Aug 18 21:47:42.282: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Aug 18 21:47:42.291: INFO: Updating deployment webserver-deployment
  Aug 18 21:47:42.291: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Aug 18 21:47:42.298: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Aug 18 21:47:42.301: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Aug 18 21:47:42.308: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "50cd7d3d-2989-4bb0-be44-ccd842daf89b",
      ResourceVersion: (string) (len=5) "27236",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 21:47:42.319: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
      ResourceVersion: (string) (len=5) "27239",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "50cd7d3d-2989-4bb0-be44-ccd842daf89b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 63 64 37 64  33 64 2d 32 39 38 39 2d  |\"50cd7d3d-2989-|
              00000120  34 62 62 30 2d 62 65 34  34 2d 63 63 64 38 34 32  |4bb0-be44-ccd842|
              00000130  64 61 66 38 39 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |daf89b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:47:42.319: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Aug 18 21:47:42.320: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
      ResourceVersion: (string) (len=5) "27237",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "50cd7d3d-2989-4bb0-be44-ccd842daf89b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 30 63 64 37 64  33 64 2d 32 39 38 39 2d  |\"50cd7d3d-2989-|
              00000120  34 62 62 30 2d 62 65 34  34 2d 63 63 64 38 34 32  |4bb0-be44-ccd842|
              00000130  64 61 66 38 39 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |daf89b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:47:42.326: INFO: Pod "webserver-deployment-557759b7c7-2kw2f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2kw2f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a229e7e-530f-46dc-91a4-7be96fdb89c5",
      ResourceVersion: (string) (len=5) "27118",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 33 31 5c  |192.168.189.231\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzsrg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzsrg",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.231",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.231"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f4cbaaae68e022aa43348b515b7ca0703cd021d92c112d9d17933e11cfb75631",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.328: INFO: Pod "webserver-deployment-557759b7c7-7ns7h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7ns7h",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02cf5c79-9dae-4393-a27f-b419e9fa7f9f",
      ResourceVersion: (string) (len=5) "27241",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jntmj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jntmj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.329: INFO: Pod "webserver-deployment-557759b7c7-gkx69" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gkx69",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f15290d-6f4f-4b1f-ac26-f87b0bd306ab",
      ResourceVersion: (string) (len=5) "27101",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 35 2e 31 32 34 5c  |192.168.165.124\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qfjlf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qfjlf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-82-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.82.98",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.165.124",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.165.124"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://76839ee0bae02d59cc363cf721a79493dae39fdbd614b0ab994632e00d2ba69f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.332: INFO: Pod "webserver-deployment-557759b7c7-gv5c8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gv5c8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cfd7afc8-9221-40fd-bf92-15e49990748d",
      ResourceVersion: (string) (len=5) "27094",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 35 2e 31 31 35 5c  |192.168.165.115\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brbqc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brbqc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-82-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.82.98",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.165.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.165.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8dd58563e0b09767cf9d32a4299e0eefb9acda7fcb0901cbb4758be1d69dc17f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.340: INFO: Pod "webserver-deployment-557759b7c7-kr7vt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-kr7vt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0a12d372-5fce-4ef4-a9d9-99e4b1e3e38e",
      ResourceVersion: (string) (len=5) "27244",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v2m7q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v2m7q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.341: INFO: Pod "webserver-deployment-557759b7c7-lnphh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lnphh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "96e89c15-572e-44e3-a92d-9415e9381bc1",
      ResourceVersion: (string) (len=5) "27245",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bz64q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bz64q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.342: INFO: Pod "webserver-deployment-557759b7c7-n6pdf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-n6pdf",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f0cf6191-78d5-4dae-81f9-53d14b02e84f",
      ResourceVersion: (string) (len=5) "27097",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 36 35 2e 31 32 32 5c  |192.168.165.122\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nzz8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nzz8s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-82-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.82.98",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.165.122",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.165.122"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b28a21331fe65045a78afb869d7c72ebec6356e558ee0254a5785ae5ff9409b1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.343: INFO: Pod "webserver-deployment-557759b7c7-p9jf8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-p9jf8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a6d2e72a-e4bb-4eff-8561-83f8b261e014",
      ResourceVersion: (string) (len=5) "27106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 39 2e 31 34 38 5c  |192.168.159.148\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9bcdj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9bcdj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.148",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.148"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://654ab7a7778776c21b099aeb47b8a3ed64f44470a46cce419a334fc42897a483",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.344: INFO: Pod "webserver-deployment-557759b7c7-pscf7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pscf7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d28f36ed-6bcd-4fb4-9431-899c66219057",
      ResourceVersion: (string) (len=5) "27125",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 33 39 5c  |192.168.189.239\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-47m9z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-47m9z",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.239",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.239"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4dcaf2cb53ac8072210bceb51b29a5ebd081e1be39a9e40b832fc0add3aa40ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.345: INFO: Pod "webserver-deployment-557759b7c7-vkh9l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vkh9l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "817d9a93-e171-4f41-aa10-d7711ed25387",
      ResourceVersion: (string) (len=5) "27112",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 39 2e 31 34 39 5c  |192.168.159.149\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q42hp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q42hp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.149",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.149"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d840086cc88ec93247f13cfad4eab025007de14a85770e823e421eb5ae017312",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.346: INFO: Pod "webserver-deployment-557759b7c7-zcp2m" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-zcp2m",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "653baf3d-1994-40c0-960d-d58069150eac",
      ResourceVersion: (string) (len=5) "27108",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "3bc8515c-b187-4e25-94a4-951b0a75e1cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 62  63 38 35 31 35 63 2d 62  |d\":\"3bc8515c-b|
              00000090  31 38 37 2d 34 65 32 35  2d 39 34 61 34 2d 39 35  |187-4e25-94a4-95|
              000000a0  31 62 30 61 37 35 65 31  63 64 5c 22 7d 22 3a 7b  |1b0a75e1cd\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 35 39 2e 31 34 32 5c  |192.168.159.142\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bj7f2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bj7f2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992059,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992058,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.142",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.142"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992058,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992059,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://25056667c4e2534e3dd3feec2d5a74c176c44b59ac88976590a6cd86c4ae4b55",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.347: INFO: Pod "webserver-deployment-9b4f5bf69-4thjh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4thjh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15263ff2-faec-45f5-8303-3da4dac6066c",
      ResourceVersion: (string) (len=5) "27249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l686c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l686c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.350: INFO: Pod "webserver-deployment-9b4f5bf69-bzx8k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bzx8k",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c41a5ab4-1c33-4fc4-a04a-136cf90058b5",
      ResourceVersion: (string) (len=5) "27248",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7plf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7plf",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-82-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.354: INFO: Pod "webserver-deployment-9b4f5bf69-j8hlg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-j8hlg",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4c7dddd0-4b39-4a07-8eae-c3aaa96737eb",
      ResourceVersion: (string) (len=5) "27231",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 38 39  2e 32 33 38 5c 22 7d 22  |.168.189.238\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nj7vp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nj7vp",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.238",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.238"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.359: INFO: Pod "webserver-deployment-9b4f5bf69-pfrkl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-pfrkl",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f5ee2f8b-d7c6-4e17-9ea4-ac7492bd572b",
      ResourceVersion: (string) (len=5) "27221",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 36 35  2e 31 32 33 5c 22 7d 22  |.168.165.123\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l9wt4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l9wt4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-82-98",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.82.98",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.165.123",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.165.123"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.361: INFO: Pod "webserver-deployment-9b4f5bf69-qngxs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qngxs",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37a0dd2d-a4ce-4237-9c68-2192cfdf7b49",
      ResourceVersion: (string) (len=5) "27227",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 35 39  2e 31 33 34 5c 22 7d 22  |.168.159.134\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nsgpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nsgpz",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.362: INFO: Pod "webserver-deployment-9b4f5bf69-qx9qf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-qx9qf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e70b3ee7-5550-43b4-bd9c-80e25ee0d92c",
      ResourceVersion: (string) (len=5) "27234",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 38 39  2e 32 31 35 5c 22 7d 22  |.168.189.215\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6x2ts",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6x2ts",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.215",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.215"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.363: INFO: Pod "webserver-deployment-9b4f5bf69-wvvz5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-wvvz5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d73e804c-7eb1-44d9-9fda-f18ad46ec781",
      ResourceVersion: (string) (len=5) "27250",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992062,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992062,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7lxm4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7lxm4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.364: INFO: Pod "webserver-deployment-9b4f5bf69-z7dsm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z7dsm",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-2208",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "60c34699-6b88-41ab-b4fb-74b1c1d61c65",
      ResourceVersion: (string) (len=5) "27223",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "8143bfb7-6a3b-4ec4-be92-d88aa799be17",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  34 33 62 66 62 37 2d 36  |d\":\"8143bfb7-6|
              00000090  61 33 62 2d 34 65 63 34  2d 62 65 39 32 2d 64 38  |a3b-4ec4-be92-d8|
              000000a0  38 61 61 37 39 39 62 65  31 37 5c 22 7d 22 3a 7b  |8aa799be17\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992061,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=567) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 39 32  |"k:{\"ip\":\"192|
              00000200  2e 31 36 38 2e 31 35 39  2e 31 34 35 5c 22 7d 22  |.168.159.145\"}"|
              00000210  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000220  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000230  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kbw2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kbw2x",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992060,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.159.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.159.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992060,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:47:42.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2208" for this suite. @ 08/18/23 21:47:42.375
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 08/18/23 21:47:42.392
  Aug 18 21:47:42.392: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:47:42.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:42.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:42.426
  Aug 18 21:47:42.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3474 version'
  Aug 18 21:47:42.472: INFO: stderr: ""
  Aug 18 21:47:42.472: INFO: stdout: "Client Version: v1.28.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.0\n"
  Aug 18 21:47:42.472: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3474" for this suite. @ 08/18/23 21:47:42.477
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 08/18/23 21:47:42.483
  Aug 18 21:47:42.483: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption @ 08/18/23 21:47:42.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:42.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:42.504
  STEP: Creating a pdb that targets all three pods in a test replica set @ 08/18/23 21:47:42.506
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:47:42.511
  STEP: First trying to evict a pod which shouldn't be evictable @ 08/18/23 21:47:44.525
  STEP: Waiting for all pods to be running @ 08/18/23 21:47:44.525
  Aug 18 21:47:44.528: INFO: pods: 0 < 3
  STEP: locating a running pod @ 08/18/23 21:47:46.533
  STEP: Updating the pdb to allow a pod to be evicted @ 08/18/23 21:47:46.542
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:47:46.55
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/18/23 21:47:48.56
  STEP: Waiting for all pods to be running @ 08/18/23 21:47:48.56
  STEP: Waiting for the pdb to observed all healthy pods @ 08/18/23 21:47:48.564
  STEP: Patching the pdb to disallow a pod to be evicted @ 08/18/23 21:47:48.6
  STEP: Waiting for the pdb to be processed @ 08/18/23 21:47:48.618
  STEP: Waiting for all pods to be running @ 08/18/23 21:47:50.629
  STEP: locating a running pod @ 08/18/23 21:47:50.633
  STEP: Deleting the pdb to allow a pod to be evicted @ 08/18/23 21:47:50.644
  STEP: Waiting for the pdb to be deleted @ 08/18/23 21:47:50.649
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 08/18/23 21:47:50.653
  STEP: Waiting for all pods to be running @ 08/18/23 21:47:50.653
  Aug 18 21:47:50.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6281" for this suite. @ 08/18/23 21:47:50.677
• [8.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 08/18/23 21:47:50.687
  Aug 18 21:47:50.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 21:47:50.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:50.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:50.71
  STEP: apply creating a deployment @ 08/18/23 21:47:50.714
  Aug 18 21:47:50.715: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1379" for this suite. @ 08/18/23 21:47:50.731
• [0.051 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 08/18/23 21:47:50.738
  Aug 18 21:47:50.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:47:50.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:50.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:50.757
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:47:50.76
  STEP: Saw pod success @ 08/18/23 21:47:54.781
  Aug 18 21:47:54.785: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-a597f66d-9cdf-46a2-b355-d04c53c2291a container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:47:54.795
  Aug 18 21:47:54.807: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3934" for this suite. @ 08/18/23 21:47:54.811
• [4.079 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 08/18/23 21:47:54.818
  Aug 18 21:47:54.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename controllerrevisions @ 08/18/23 21:47:54.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:54.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:54.837
  STEP: Creating DaemonSet "e2e-bg66j-daemon-set" @ 08/18/23 21:47:54.859
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 21:47:54.865
  Aug 18 21:47:54.871: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:54.871: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:54.875: INFO: Number of nodes with available pods controlled by daemonset e2e-bg66j-daemon-set: 0
  Aug 18 21:47:54.875: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 21:47:55.879: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:55.879: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:55.883: INFO: Number of nodes with available pods controlled by daemonset e2e-bg66j-daemon-set: 2
  Aug 18 21:47:55.883: INFO: Node ip-172-31-82-98 is running 0 daemon pod, expected 1
  Aug 18 21:47:56.879: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:56.879: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 21:47:56.883: INFO: Number of nodes with available pods controlled by daemonset e2e-bg66j-daemon-set: 3
  Aug 18 21:47:56.883: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset e2e-bg66j-daemon-set
  STEP: Confirm DaemonSet "e2e-bg66j-daemon-set" successfully created with "daemonset-name=e2e-bg66j-daemon-set" label @ 08/18/23 21:47:56.889
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-bg66j-daemon-set" @ 08/18/23 21:47:56.895
  Aug 18 21:47:56.898: INFO: Located ControllerRevision: "e2e-bg66j-daemon-set-648d5cff48"
  STEP: Patching ControllerRevision "e2e-bg66j-daemon-set-648d5cff48" @ 08/18/23 21:47:56.902
  Aug 18 21:47:56.907: INFO: e2e-bg66j-daemon-set-648d5cff48 has been patched
  STEP: Create a new ControllerRevision @ 08/18/23 21:47:56.907
  Aug 18 21:47:56.912: INFO: Created ControllerRevision: e2e-bg66j-daemon-set-57c99958f8
  STEP: Confirm that there are two ControllerRevisions @ 08/18/23 21:47:56.912
  Aug 18 21:47:56.912: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 18 21:47:56.916: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-bg66j-daemon-set-648d5cff48" @ 08/18/23 21:47:56.916
  STEP: Confirm that there is only one ControllerRevision @ 08/18/23 21:47:56.922
  Aug 18 21:47:56.922: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 18 21:47:56.926: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-bg66j-daemon-set-57c99958f8" @ 08/18/23 21:47:56.928
  Aug 18 21:47:56.938: INFO: e2e-bg66j-daemon-set-57c99958f8 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 08/18/23 21:47:56.938
  W0818 21:47:56.946124      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 08/18/23 21:47:56.946
  Aug 18 21:47:56.946: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 18 21:47:57.949: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 18 21:47:57.952: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-bg66j-daemon-set-57c99958f8=updated" @ 08/18/23 21:47:57.952
  STEP: Confirm that there is only one ControllerRevision @ 08/18/23 21:47:57.961
  Aug 18 21:47:57.961: INFO: Requesting list of ControllerRevisions to confirm quantity
  Aug 18 21:47:57.969: INFO: Found 1 ControllerRevisions
  Aug 18 21:47:57.972: INFO: ControllerRevision "e2e-bg66j-daemon-set-5954f66c6c" has revision 3
  STEP: Deleting DaemonSet "e2e-bg66j-daemon-set" @ 08/18/23 21:47:57.974
  STEP: deleting DaemonSet.extensions e2e-bg66j-daemon-set in namespace controllerrevisions-6647, will wait for the garbage collector to delete the pods @ 08/18/23 21:47:57.974
  Aug 18 21:47:58.035: INFO: Deleting DaemonSet.extensions e2e-bg66j-daemon-set took: 7.173563ms
  Aug 18 21:47:58.136: INFO: Terminating DaemonSet.extensions e2e-bg66j-daemon-set pods took: 100.48173ms
  Aug 18 21:47:59.339: INFO: Number of nodes with available pods controlled by daemonset e2e-bg66j-daemon-set: 0
  Aug 18 21:47:59.339: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-bg66j-daemon-set
  Aug 18 21:47:59.342: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"27910"},"items":null}

  Aug 18 21:47:59.345: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"27910"},"items":null}

  Aug 18 21:47:59.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6647" for this suite. @ 08/18/23 21:47:59.362
• [4.550 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 08/18/23 21:47:59.37
  Aug 18 21:47:59.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-runtime @ 08/18/23 21:47:59.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:47:59.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:47:59.39
  STEP: create the container @ 08/18/23 21:47:59.392
  W0818 21:47:59.402639      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/18/23 21:47:59.402
  STEP: get the container status @ 08/18/23 21:48:02.42
  STEP: the container should be terminated @ 08/18/23 21:48:02.423
  STEP: the termination message should be set @ 08/18/23 21:48:02.423
  Aug 18 21:48:02.424: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 08/18/23 21:48:02.424
  Aug 18 21:48:02.437: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5938" for this suite. @ 08/18/23 21:48:02.444
• [3.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 08/18/23 21:48:02.451
  Aug 18 21:48:02.451: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:48:02.452
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:02.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:02.47
  STEP: Creating service test in namespace statefulset-1102 @ 08/18/23 21:48:02.473
  STEP: Looking for a node to schedule stateful set and pod @ 08/18/23 21:48:02.478
  STEP: Creating pod with conflicting port in namespace statefulset-1102 @ 08/18/23 21:48:02.484
  STEP: Waiting until pod test-pod will start running in namespace statefulset-1102 @ 08/18/23 21:48:02.493
  STEP: Creating statefulset with conflicting port in namespace statefulset-1102 @ 08/18/23 21:48:04.501
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-1102 @ 08/18/23 21:48:04.506
  Aug 18 21:48:04.521: INFO: Observed stateful pod in namespace: statefulset-1102, name: ss-0, uid: bd1a6b9f-9289-4e4c-af62-1119133994cc, status phase: Pending. Waiting for statefulset controller to delete.
  Aug 18 21:48:04.530: INFO: Observed stateful pod in namespace: statefulset-1102, name: ss-0, uid: bd1a6b9f-9289-4e4c-af62-1119133994cc, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 18 21:48:04.559: INFO: Observed stateful pod in namespace: statefulset-1102, name: ss-0, uid: bd1a6b9f-9289-4e4c-af62-1119133994cc, status phase: Failed. Waiting for statefulset controller to delete.
  Aug 18 21:48:04.561: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-1102
  STEP: Removing pod with conflicting port in namespace statefulset-1102 @ 08/18/23 21:48:04.561
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-1102 and will be in running state @ 08/18/23 21:48:04.573
  Aug 18 21:48:06.583: INFO: Deleting all statefulset in ns statefulset-1102
  Aug 18 21:48:06.587: INFO: Scaling statefulset ss to 0
  Aug 18 21:48:16.607: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:48:16.611: INFO: Deleting statefulset ss
  Aug 18 21:48:16.622: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1102" for this suite. @ 08/18/23 21:48:16.625
• [14.182 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 08/18/23 21:48:16.633
  Aug 18 21:48:16.633: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 21:48:16.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:16.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:16.653
  STEP: Read namespace status @ 08/18/23 21:48:16.658
  Aug 18 21:48:16.662: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 08/18/23 21:48:16.662
  Aug 18 21:48:16.667: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 08/18/23 21:48:16.667
  Aug 18 21:48:16.675: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Aug 18 21:48:16.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1730" for this suite. @ 08/18/23 21:48:16.679
• [0.054 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 08/18/23 21:48:16.687
  Aug 18 21:48:16.687: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 21:48:16.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:16.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:16.705
  STEP: Creating a job @ 08/18/23 21:48:16.708
  STEP: Ensuring active pods == parallelism @ 08/18/23 21:48:16.714
  STEP: delete a job @ 08/18/23 21:48:18.72
  STEP: deleting Job.batch foo in namespace job-7679, will wait for the garbage collector to delete the pods @ 08/18/23 21:48:18.72
  Aug 18 21:48:18.781: INFO: Deleting Job.batch foo took: 7.623492ms
  Aug 18 21:48:18.882: INFO: Terminating Job.batch foo pods took: 100.325014ms
  STEP: Ensuring job was deleted @ 08/18/23 21:48:49.882
  Aug 18 21:48:49.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7679" for this suite. @ 08/18/23 21:48:49.891
• [33.212 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 08/18/23 21:48:49.899
  Aug 18 21:48:49.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename proxy @ 08/18/23 21:48:49.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:49.917
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:49.92
  Aug 18 21:48:49.923: INFO: Creating pod...
  Aug 18 21:48:51.940: INFO: Creating service...
  Aug 18 21:48:51.951: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/DELETE
  Aug 18 21:48:51.958: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 18 21:48:51.958: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/GET
  Aug 18 21:48:51.961: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 18 21:48:51.961: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/HEAD
  Aug 18 21:48:51.964: INFO: http.Client request:HEAD | StatusCode:200
  Aug 18 21:48:51.964: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/OPTIONS
  Aug 18 21:48:51.968: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 18 21:48:51.968: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/PATCH
  Aug 18 21:48:51.971: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 18 21:48:51.971: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/POST
  Aug 18 21:48:51.974: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 18 21:48:51.974: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/pods/agnhost/proxy/some/path/with/PUT
  Aug 18 21:48:51.978: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 18 21:48:51.978: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/DELETE
  Aug 18 21:48:51.983: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Aug 18 21:48:51.983: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/GET
  Aug 18 21:48:51.988: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Aug 18 21:48:51.988: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/HEAD
  Aug 18 21:48:51.993: INFO: http.Client request:HEAD | StatusCode:200
  Aug 18 21:48:51.993: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/OPTIONS
  Aug 18 21:48:51.998: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Aug 18 21:48:51.998: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/PATCH
  Aug 18 21:48:52.003: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Aug 18 21:48:52.003: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/POST
  Aug 18 21:48:52.009: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Aug 18 21:48:52.009: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-9416/services/test-service/proxy/some/path/with/PUT
  Aug 18 21:48:52.015: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Aug 18 21:48:52.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9416" for this suite. @ 08/18/23 21:48:52.018
• [2.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 08/18/23 21:48:52.028
  Aug 18 21:48:52.028: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:48:52.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:52.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:52.047
  STEP: Setting up server cert @ 08/18/23 21:48:52.07
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:48:52.382
  STEP: Deploying the webhook pod @ 08/18/23 21:48:52.392
  STEP: Wait for the deployment to be ready @ 08/18/23 21:48:52.402
  Aug 18 21:48:52.408: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:48:54.419
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:48:54.429
  Aug 18 21:48:55.430: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 18 21:48:55.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9748-crds.webhook.example.com via the AdmissionRegistration API @ 08/18/23 21:48:55.951
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/18/23 21:48:55.965
  Aug 18 21:48:58.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7445" for this suite. @ 08/18/23 21:48:58.561
  STEP: Destroying namespace "webhook-markers-9599" for this suite. @ 08/18/23 21:48:58.567
• [6.546 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 08/18/23 21:48:58.574
  Aug 18 21:48:58.574: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename init-container @ 08/18/23 21:48:58.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:48:58.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:48:58.595
  STEP: creating the pod @ 08/18/23 21:48:58.598
  Aug 18 21:48:58.598: INFO: PodSpec: initContainers in spec.initContainers
  Aug 18 21:49:03.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2569" for this suite. @ 08/18/23 21:49:03.036
• [4.468 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 08/18/23 21:49:03.043
  Aug 18 21:49:03.044: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename endpointslice @ 08/18/23 21:49:03.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:49:03.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:49:03.066
  Aug 18 21:49:03.080: INFO: Endpoints addresses: [172.31.80.19 172.31.9.42] , ports: [6443]
  Aug 18 21:49:03.080: INFO: EndpointSlices addresses: [172.31.80.19 172.31.9.42] , ports: [6443]
  Aug 18 21:49:03.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-9496" for this suite. @ 08/18/23 21:49:03.084
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 08/18/23 21:49:03.091
  Aug 18 21:49:03.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:49:03.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:49:03.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:49:03.111
  STEP: Creating configMap with name projected-configmap-test-volume-0bfad7ce-2b04-42d9-8bb0-63e6efbbcb17 @ 08/18/23 21:49:03.113
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:49:03.118
  STEP: Saw pod success @ 08/18/23 21:49:07.141
  Aug 18 21:49:07.144: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-configmaps-d2d7b8f8-bc07-4e06-91f1-36105481977f container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:49:07.151
  Aug 18 21:49:07.168: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1957" for this suite. @ 08/18/23 21:49:07.172
• [4.086 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 08/18/23 21:49:07.179
  Aug 18 21:49:07.179: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename runtimeclass @ 08/18/23 21:49:07.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:49:07.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:49:07.206
  Aug 18 21:49:07.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5401" for this suite. @ 08/18/23 21:49:07.237
• [0.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 08/18/23 21:49:07.244
  Aug 18 21:49:07.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 21:49:07.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:49:07.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:49:07.262
  STEP: creating the pod with failed condition @ 08/18/23 21:49:07.264
  STEP: updating the pod @ 08/18/23 21:51:07.272
  Aug 18 21:51:07.786: INFO: Successfully updated pod "var-expansion-c77e5c58-d098-44bd-8a27-ecfc3fd44ec6"
  STEP: waiting for pod running @ 08/18/23 21:51:07.786
  STEP: deleting the pod gracefully @ 08/18/23 21:51:09.796
  Aug 18 21:51:09.796: INFO: Deleting pod "var-expansion-c77e5c58-d098-44bd-8a27-ecfc3fd44ec6" in namespace "var-expansion-2766"
  Aug 18 21:51:09.805: INFO: Wait up to 5m0s for pod "var-expansion-c77e5c58-d098-44bd-8a27-ecfc3fd44ec6" to be fully deleted
  Aug 18 21:51:41.886: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2766" for this suite. @ 08/18/23 21:51:41.891
• [154.653 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 08/18/23 21:51:41.897
  Aug 18 21:51:41.897: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 21:51:41.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:41.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:41.919
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 08/18/23 21:51:41.921
  Aug 18 21:51:41.929: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-7775  7bd16695-a674-4adb-8ac0-abdb8ebd263a 28907 0 2023-08-18 21:51:41 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-08-18 21:51:41 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-9dt66,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-9dt66,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 08/18/23 21:51:43.938
  Aug 18 21:51:43.939: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-7775 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:51:43.939: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:51:43.939: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:51:43.939: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7775/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 08/18/23 21:51:44.024
  Aug 18 21:51:44.024: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-7775 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 21:51:44.024: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:51:44.025: INFO: ExecWithOptions: Clientset creation
  Aug 18 21:51:44.025: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-7775/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 21:51:44.108: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 21:51:44.113: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-7775" for this suite. @ 08/18/23 21:51:44.123
• [2.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 08/18/23 21:51:44.132
  Aug 18 21:51:44.132: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:51:44.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:44.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:44.155
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/18/23 21:51:44.157
  STEP: Saw pod success @ 08/18/23 21:51:48.178
  Aug 18 21:51:48.181: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-3f11c62c-41cd-41db-8f15-418980134a99 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:51:48.195
  Aug 18 21:51:48.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7962" for this suite. @ 08/18/23 21:51:48.214
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 08/18/23 21:51:48.225
  Aug 18 21:51:48.225: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/18/23 21:51:48.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:48.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:48.247
  STEP: create the container to handle the HTTPGet hook request. @ 08/18/23 21:51:48.254
  STEP: create the pod with lifecycle hook @ 08/18/23 21:51:50.275
  STEP: delete the pod with lifecycle hook @ 08/18/23 21:51:52.293
  STEP: check prestop hook @ 08/18/23 21:51:54.309
  Aug 18 21:51:54.325: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1619" for this suite. @ 08/18/23 21:51:54.329
• [6.111 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 08/18/23 21:51:54.336
  Aug 18 21:51:54.336: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 21:51:54.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:54.358
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:54.361
  STEP: creating a Deployment @ 08/18/23 21:51:54.368
  Aug 18 21:51:54.368: INFO: Creating simple deployment test-deployment-mcnxj
  Aug 18 21:51:54.378: INFO: deployment "test-deployment-mcnxj" doesn't have the required revision set
  STEP: Getting /status @ 08/18/23 21:51:56.393
  Aug 18 21:51:56.398: INFO: Deployment test-deployment-mcnxj has Conditions: [{Available True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcnxj-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 08/18/23 21:51:56.398
  Aug 18 21:51:56.407: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 21, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 21, 51, 55, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 21, 51, 55, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 21, 51, 54, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-mcnxj-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 08/18/23 21:51:56.407
  Aug 18 21:51:56.409: INFO: Observed &Deployment event: ADDED
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcnxj-5d576bd769"}
  Aug 18 21:51:56.409: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcnxj-5d576bd769"}
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 18 21:51:56.409: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mcnxj-5d576bd769" is progressing.}
  Aug 18 21:51:56.409: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 18 21:51:56.409: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcnxj-5d576bd769" has successfully progressed.}
  Aug 18 21:51:56.410: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.410: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 18 21:51:56.410: INFO: Observed Deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcnxj-5d576bd769" has successfully progressed.}
  Aug 18 21:51:56.410: INFO: Found Deployment test-deployment-mcnxj in namespace deployment-4101 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 21:51:56.410: INFO: Deployment test-deployment-mcnxj has an updated status
  STEP: patching the Statefulset Status @ 08/18/23 21:51:56.41
  Aug 18 21:51:56.410: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 18 21:51:56.416: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 08/18/23 21:51:56.416
  Aug 18 21:51:56.418: INFO: Observed &Deployment event: ADDED
  Aug 18 21:51:56.418: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcnxj-5d576bd769"}
  Aug 18 21:51:56.418: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.418: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-mcnxj-5d576bd769"}
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 18 21:51:56.419: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:54 +0000 UTC 2023-08-18 21:51:54 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-mcnxj-5d576bd769" is progressing.}
  Aug 18 21:51:56.419: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcnxj-5d576bd769" has successfully progressed.}
  Aug 18 21:51:56.419: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:55 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-08-18 21:51:55 +0000 UTC 2023-08-18 21:51:54 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-mcnxj-5d576bd769" has successfully progressed.}
  Aug 18 21:51:56.419: INFO: Observed deployment test-deployment-mcnxj in namespace deployment-4101 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 21:51:56.420: INFO: Observed &Deployment event: MODIFIED
  Aug 18 21:51:56.420: INFO: Found deployment test-deployment-mcnxj in namespace deployment-4101 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Aug 18 21:51:56.420: INFO: Deployment test-deployment-mcnxj has a patched status
  Aug 18 21:51:56.423: INFO: Deployment "test-deployment-mcnxj":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-mcnxj",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74a1c43a-618d-4edf-9036-4c6b5bcd52c8",
      ResourceVersion: (string) (len=5) "29078",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992314,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992314,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992316,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-mcnxj-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 21:51:56.427: INFO: New ReplicaSet "test-deployment-mcnxj-5d576bd769" of Deployment "test-deployment-mcnxj":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-mcnxj-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8b875cc-b540-40dc-b42d-56219d34457b",
      ResourceVersion: (string) (len=5) "29073",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992314,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-mcnxj",
          UID: (types.UID) (len=36) "74a1c43a-618d-4edf-9036-4c6b5bcd52c8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992314,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 37 34 61  |k:{\"uid\":\"74a|
              00000120  31 63 34 33 61 2d 36 31  38 64 2d 34 65 64 66 2d  |1c43a-618d-4edf-|
              00000130  39 30 33 36 2d 34 63 36  62 35 62 63 64 35 32 63  |9036-4c6b5bcd52c|
              00000140  38 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |8\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 21:51:56.433: INFO: Pod "test-deployment-mcnxj-5d576bd769-kf57h" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-mcnxj-5d576bd769-kf57h",
      GenerateName: (string) (len=33) "test-deployment-mcnxj-5d576bd769-",
      Namespace: (string) (len=15) "deployment-4101",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56ac9e41-98e7-44ff-9476-8bf75c93545a",
      ResourceVersion: (string) (len=5) "29072",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992314,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-mcnxj-5d576bd769",
          UID: (types.UID) (len=36) "c8b875cc-b540-40dc-b42d-56219d34457b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992314,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 63 38 62 38 37 35 63  63 2d 62 35 34 30 2d 34  |"c8b875cc-b540-4|
              000000a0  30 64 63 2d 62 34 32 64  2d 35 36 32 31 39 64 33  |0dc-b42d-56219d3|
              000000b0  34 34 35 37 62 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |4457b\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 30 36 5c  |192.168.189.206\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jvmnt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jvmnt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992314,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992315,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827992314,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.206",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.206"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827992314,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827992315,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fcd23ca77dc3936ed10707cd04a83e7c88b81995620f5b02a5737ff7d3cafee1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 21:51:56.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4101" for this suite. @ 08/18/23 21:51:56.439
• [2.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 08/18/23 21:51:56.446
  Aug 18 21:51:56.446: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/18/23 21:51:56.447
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:56.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:56.466
  Aug 18 21:51:56.468: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 21:51:57.005: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3107" for this suite. @ 08/18/23 21:51:57.01
• [0.572 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 08/18/23 21:51:57.018
  Aug 18 21:51:57.018: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:51:57.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:51:57.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:51:57.039
  STEP: Creating a ResourceQuota with best effort scope @ 08/18/23 21:51:57.042
  STEP: Ensuring ResourceQuota status is calculated @ 08/18/23 21:51:57.046
  STEP: Creating a ResourceQuota with not best effort scope @ 08/18/23 21:51:59.05
  STEP: Ensuring ResourceQuota status is calculated @ 08/18/23 21:51:59.056
  STEP: Creating a best-effort pod @ 08/18/23 21:52:01.06
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 08/18/23 21:52:01.071
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 08/18/23 21:52:03.077
  STEP: Deleting the pod @ 08/18/23 21:52:05.082
  STEP: Ensuring resource quota status released the pod usage @ 08/18/23 21:52:05.096
  STEP: Creating a not best-effort pod @ 08/18/23 21:52:07.1
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 08/18/23 21:52:07.112
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 08/18/23 21:52:09.116
  STEP: Deleting the pod @ 08/18/23 21:52:11.121
  STEP: Ensuring resource quota status released the pod usage @ 08/18/23 21:52:11.135
  Aug 18 21:52:13.140: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5582" for this suite. @ 08/18/23 21:52:13.145
• [16.134 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 08/18/23 21:52:13.153
  Aug 18 21:52:13.153: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:52:13.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:13.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:13.172
  STEP: Creating secret with name secret-test-a024cf00-c971-4012-a1e3-84ae35a8ea2d @ 08/18/23 21:52:13.175
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:52:13.18
  STEP: Saw pod success @ 08/18/23 21:52:17.202
  Aug 18 21:52:17.205: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-781c8443-b9d3-477b-af4c-2ed0f2482120 container secret-env-test: <nil>
  STEP: delete the pod @ 08/18/23 21:52:17.215
  Aug 18 21:52:17.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1929" for this suite. @ 08/18/23 21:52:17.233
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 08/18/23 21:52:17.242
  Aug 18 21:52:17.242: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 21:52:17.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:17.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:17.258
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 08/18/23 21:52:17.26
  Aug 18 21:52:17.260: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-2068 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Aug 18 21:52:17.314: INFO: stderr: ""
  Aug 18 21:52:17.314: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 08/18/23 21:52:17.314
  Aug 18 21:52:17.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-2068 delete pods e2e-test-httpd-pod'
  Aug 18 21:52:19.232: INFO: stderr: ""
  Aug 18 21:52:19.232: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Aug 18 21:52:19.232: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2068" for this suite. @ 08/18/23 21:52:19.236
• [2.002 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 08/18/23 21:52:19.244
  Aug 18 21:52:19.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename events @ 08/18/23 21:52:19.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:19.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:19.263
  STEP: Create set of events @ 08/18/23 21:52:19.266
  Aug 18 21:52:19.270: INFO: created test-event-1
  Aug 18 21:52:19.273: INFO: created test-event-2
  Aug 18 21:52:19.278: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 08/18/23 21:52:19.278
  STEP: delete collection of events @ 08/18/23 21:52:19.281
  Aug 18 21:52:19.281: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/18/23 21:52:19.304
  Aug 18 21:52:19.304: INFO: requesting list of events to confirm quantity
  Aug 18 21:52:19.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7834" for this suite. @ 08/18/23 21:52:19.313
• [0.076 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 08/18/23 21:52:19.32
  Aug 18 21:52:19.320: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:52:19.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:19.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:19.339
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 08/18/23 21:52:19.341
  STEP: Saw pod success @ 08/18/23 21:52:23.365
  Aug 18 21:52:23.367: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-7b42c5c7-a84a-44cd-a21f-e1780e98f64e container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:52:23.373
  Aug 18 21:52:23.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-949" for this suite. @ 08/18/23 21:52:23.393
• [4.080 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 08/18/23 21:52:23.4
  Aug 18 21:52:23.400: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 21:52:23.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:23.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:23.422
  STEP: Creating configMap configmap-3239/configmap-test-ca8f9689-51bb-4f3a-b548-532c16851634 @ 08/18/23 21:52:23.426
  STEP: Creating a pod to test consume configMaps @ 08/18/23 21:52:23.431
  STEP: Saw pod success @ 08/18/23 21:52:25.447
  Aug 18 21:52:25.451: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-23a2ee33-3256-448c-9cab-ffa704dfe66e container env-test: <nil>
  STEP: delete the pod @ 08/18/23 21:52:25.458
  Aug 18 21:52:25.471: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3239" for this suite. @ 08/18/23 21:52:25.474
• [2.081 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 08/18/23 21:52:25.481
  Aug 18 21:52:25.481: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 21:52:25.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:25.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:25.502
  STEP: Creating a pod to test downward api env vars @ 08/18/23 21:52:25.504
  STEP: Saw pod success @ 08/18/23 21:52:29.526
  Aug 18 21:52:29.529: INFO: Trying to get logs from node ip-172-31-15-95 pod downward-api-9c81ba0c-1219-4cf9-8830-a01b88108dc6 container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 21:52:29.537
  Aug 18 21:52:29.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7480" for this suite. @ 08/18/23 21:52:29.556
• [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 08/18/23 21:52:29.563
  Aug 18 21:52:29.563: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sysctl @ 08/18/23 21:52:29.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:29.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:29.582
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 08/18/23 21:52:29.585
  STEP: Watching for error events or started pod @ 08/18/23 21:52:29.593
  STEP: Waiting for pod completion @ 08/18/23 21:52:31.599
  STEP: Checking that the pod succeeded @ 08/18/23 21:52:33.61
  STEP: Getting logs from the pod @ 08/18/23 21:52:33.61
  STEP: Checking that the sysctl is actually updated @ 08/18/23 21:52:33.618
  Aug 18 21:52:33.618: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2916" for this suite. @ 08/18/23 21:52:33.623
• [4.067 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 08/18/23 21:52:33.63
  Aug 18 21:52:33.630: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:52:33.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:33.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:33.653
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 21:52:33.655
  STEP: Saw pod success @ 08/18/23 21:52:37.676
  Aug 18 21:52:37.680: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-fc00e146-c0be-4c48-bc4d-ac21dd3c6bb7 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 21:52:37.688
  Aug 18 21:52:37.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-102" for this suite. @ 08/18/23 21:52:37.709
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 08/18/23 21:52:37.719
  Aug 18 21:52:37.719: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 21:52:37.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:37.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:37.74
  Aug 18 21:52:37.765: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 08/18/23 21:52:37.771
  Aug 18 21:52:37.775: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:37.775: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 08/18/23 21:52:37.775
  Aug 18 21:52:37.807: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:37.807: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 21:52:38.811: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:38.811: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 21:52:39.812: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 21:52:39.812: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 08/18/23 21:52:39.816
  Aug 18 21:52:39.835: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 21:52:39.835: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Aug 18 21:52:40.841: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:40.841: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 08/18/23 21:52:40.841
  Aug 18 21:52:40.854: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:40.854: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 21:52:41.859: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:41.859: INFO: Node ip-172-31-20-82 is running 0 daemon pod, expected 1
  Aug 18 21:52:42.860: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Aug 18 21:52:42.860: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 21:52:42.867
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-270, will wait for the garbage collector to delete the pods @ 08/18/23 21:52:42.867
  Aug 18 21:52:42.928: INFO: Deleting DaemonSet.extensions daemon-set took: 7.046441ms
  Aug 18 21:52:43.029: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.424653ms
  Aug 18 21:52:44.233: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 21:52:44.233: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 21:52:44.236: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29589"},"items":null}

  Aug 18 21:52:44.239: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29589"},"items":null}

  Aug 18 21:52:44.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-270" for this suite. @ 08/18/23 21:52:44.267
• [6.554 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 08/18/23 21:52:44.273
  Aug 18 21:52:44.273: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 21:52:44.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:52:44.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:52:44.293
  STEP: Creating configMap with name cm-test-opt-del-e4a01177-f433-4acd-8046-3a8dd56c6d1a @ 08/18/23 21:52:44.3
  STEP: Creating configMap with name cm-test-opt-upd-7998a5a2-7770-4af9-a97d-be56f4fee949 @ 08/18/23 21:52:44.306
  STEP: Creating the pod @ 08/18/23 21:52:44.31
  STEP: Deleting configmap cm-test-opt-del-e4a01177-f433-4acd-8046-3a8dd56c6d1a @ 08/18/23 21:52:46.353
  STEP: Updating configmap cm-test-opt-upd-7998a5a2-7770-4af9-a97d-be56f4fee949 @ 08/18/23 21:52:46.36
  STEP: Creating configMap with name cm-test-opt-create-1451a798-9901-49fa-a959-8bb9bda61741 @ 08/18/23 21:52:46.364
  STEP: waiting to observe update in volume @ 08/18/23 21:52:46.369
  Aug 18 21:53:52.683: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7538" for this suite. @ 08/18/23 21:53:52.688
• [68.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 08/18/23 21:53:52.696
  Aug 18 21:53:52.696: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:53:52.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:53:52.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:53:52.716
  STEP: Creating service test in namespace statefulset-6187 @ 08/18/23 21:53:52.719
  Aug 18 21:53:52.734: INFO: Found 0 stateful pods, waiting for 1
  Aug 18 21:54:02.739: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 08/18/23 21:54:02.747
  W0818 21:54:02.756302      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Aug 18 21:54:02.763: INFO: Found 1 stateful pods, waiting for 2
  Aug 18 21:54:12.767: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Aug 18 21:54:12.767: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 08/18/23 21:54:12.773
  STEP: Delete all of the StatefulSets @ 08/18/23 21:54:12.776
  STEP: Verify that StatefulSets have been deleted @ 08/18/23 21:54:12.784
  Aug 18 21:54:12.788: INFO: Deleting all statefulset in ns statefulset-6187
  Aug 18 21:54:12.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6187" for this suite. @ 08/18/23 21:54:12.807
• [20.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 08/18/23 21:54:12.819
  Aug 18 21:54:12.819: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 21:54:12.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:54:12.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:54:12.838
  STEP: Creating pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667 @ 08/18/23 21:54:12.841
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 21:54:14.858
  Aug 18 21:54:14.861: INFO: Initial restart count of pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a is 0
  Aug 18 21:54:14.865: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:16.871: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:18.875: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:20.881: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:22.886: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:24.890: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:26.895: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:28.899: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:30.904: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:32.909: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:34.913: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:36.918: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:38.925: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:40.929: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:42.934: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:44.939: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:46.943: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:48.948: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:50.954: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:52.959: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:54.965: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:56.968: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:54:58.975: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:00.979: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:02.984: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:04.989: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:06.993: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:08.998: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:11.001: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:13.006: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:15.011: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:17.017: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:19.023: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:21.027: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:23.033: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:25.038: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:27.043: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:29.047: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:31.055: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:33.059: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:35.065: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:37.070: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:39.076: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:41.080: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:43.086: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:45.091: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:47.095: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:49.101: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:51.107: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:53.111: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:55.116: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:57.120: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:55:59.125: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:01.130: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:03.136: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:05.140: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:07.146: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:09.151: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:11.156: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:13.163: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:15.168: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:17.173: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:19.177: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:21.182: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:23.186: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:25.190: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:27.195: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:29.199: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:31.204: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:33.209: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:35.214: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:37.218: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:39.223: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:41.228: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:43.233: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:45.237: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:47.241: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:49.246: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:51.250: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:53.255: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:55.262: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:57.267: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:56:59.273: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:01.278: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:03.282: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:05.286: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:07.290: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:09.296: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:11.300: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:13.306: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:15.310: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:17.314: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:19.320: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:21.325: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:23.330: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:25.335: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:27.340: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:29.344: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:31.350: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:33.356: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:35.361: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:37.365: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:39.370: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:41.376: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:43.381: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:45.386: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:47.391: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:49.396: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:51.402: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:53.408: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:55.413: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:57.418: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:57:59.422: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:01.427: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:03.432: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:05.437: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:07.441: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:09.446: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:11.452: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:13.458: INFO: Get pod busybox-0a0fcb3c-be0d-4c95-af04-8f1b99bf6c6a in namespace container-probe-6667
  Aug 18 21:58:15.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 21:58:15.463
  STEP: Destroying namespace "container-probe-6667" for this suite. @ 08/18/23 21:58:15.477
• [242.664 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 08/18/23 21:58:15.484
  Aug 18 21:58:15.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 21:58:15.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:15.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:15.502
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 08/18/23 21:58:15.505
  STEP: When a replicaset with a matching selector is created @ 08/18/23 21:58:17.527
  STEP: Then the orphan pod is adopted @ 08/18/23 21:58:17.532
  STEP: When the matched label of one of its pods change @ 08/18/23 21:58:18.542
  Aug 18 21:58:18.547: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/18/23 21:58:18.556
  Aug 18 21:58:19.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6946" for this suite. @ 08/18/23 21:58:19.57
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 08/18/23 21:58:19.58
  Aug 18 21:58:19.580: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-pred @ 08/18/23 21:58:19.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:19.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:19.599
  Aug 18 21:58:19.602: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 18 21:58:19.609: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 21:58:19.613: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-95 before test
  Aug 18 21:58:19.620: INFO: nginx-ingress-controller-kubernetes-worker-m966b from ingress-nginx-kubernetes-worker started at 2023-08-18 21:30:12 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.620: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: calico-node-6ckgx from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.620: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: pod-adoption-release from replicaset-6946 started at 2023-08-18 21:58:15 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.620: INFO: 	Container pod-adoption-release ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: sonobuoy from sonobuoy started at 2023-08-18 20:45:36 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.620: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 21:58:19.620: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 21:58:19.620: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-82 before test
  Aug 18 21:58:19.625: INFO: nginx-ingress-controller-kubernetes-worker-mdn2t from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:55 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.625: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 21:58:19.625: INFO: calico-node-vd7zz from kube-system started at 2023-08-18 20:38:06 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.625: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 21:58:19.625: INFO: pod-adoption-release-qt9d7 from replicaset-6946 started at 2023-08-18 21:58:18 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.625: INFO: 	Container pod-adoption-release ready: false, restart count 0
  Aug 18 21:58:19.626: INFO: sonobuoy-e2e-job-1dbae55b4ba54d95 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 21:58:19.626: INFO: 	Container e2e ready: true, restart count 0
  Aug 18 21:58:19.626: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 21:58:19.626: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-wwhcl from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 21:58:19.626: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 21:58:19.626: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 21:58:19.626: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-82-98 before test
  Aug 18 21:58:19.631: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-bdqgw from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.631: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Aug 18 21:58:19.631: INFO: nginx-ingress-controller-kubernetes-worker-zb4cq from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: calico-node-vmzhd from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: coredns-59cfb5bf46-6278r from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container coredns ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: kube-state-metrics-775d9f4f79-fgs8j from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: metrics-server-v0.6.3-69d7fbfdf8-b9v4x from kube-system started at 2023-08-18 20:38:22 +0000 UTC (2 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: dashboard-metrics-scraper-5dd7cb5fc-wmhvg from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: kubernetes-dashboard-7b899cb9d9-nq2h7 from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-tl9q8 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 21:58:19.632: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 21:58:19.632: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/18/23 21:58:19.632
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/18/23 21:58:21.653
  STEP: Trying to apply a random label on the found node. @ 08/18/23 21:58:21.668
  STEP: verifying the node has the label kubernetes.io/e2e-2513e689-2e10-42bb-ac84-5ac3ff1fcbfc 42 @ 08/18/23 21:58:21.675
  STEP: Trying to relaunch the pod, now with labels. @ 08/18/23 21:58:21.681
  STEP: removing the label kubernetes.io/e2e-2513e689-2e10-42bb-ac84-5ac3ff1fcbfc off the node ip-172-31-15-95 @ 08/18/23 21:58:23.703
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2513e689-2e10-42bb-ac84-5ac3ff1fcbfc @ 08/18/23 21:58:23.713
  Aug 18 21:58:23.717: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4826" for this suite. @ 08/18/23 21:58:23.723
• [4.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 08/18/23 21:58:23.732
  Aug 18 21:58:23.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 21:58:23.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:23.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:23.75
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 08/18/23 21:58:23.753
  STEP: Saw pod success @ 08/18/23 21:58:27.774
  Aug 18 21:58:27.779: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-16e1f32a-d757-4348-8df3-e882160f51f7 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 21:58:27.794
  Aug 18 21:58:27.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-100" for this suite. @ 08/18/23 21:58:27.813
• [4.087 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 08/18/23 21:58:27.82
  Aug 18 21:58:27.820: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:58:27.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:27.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:27.841
  STEP: Setting up server cert @ 08/18/23 21:58:27.869
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:58:28.189
  STEP: Deploying the webhook pod @ 08/18/23 21:58:28.196
  STEP: Wait for the deployment to be ready @ 08/18/23 21:58:28.209
  Aug 18 21:58:28.215: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:58:30.228
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:58:30.237
  Aug 18 21:58:31.238: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 08/18/23 21:58:31.246
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/18/23 21:58:31.246
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 08/18/23 21:58:31.26
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 08/18/23 21:58:32.27
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/18/23 21:58:32.27
  STEP: Having no error when timeout is longer than webhook latency @ 08/18/23 21:58:33.3
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/18/23 21:58:33.3
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 08/18/23 21:58:38.333
  STEP: Registering slow webhook via the AdmissionRegistration API @ 08/18/23 21:58:38.333
  Aug 18 21:58:43.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3515" for this suite. @ 08/18/23 21:58:43.422
  STEP: Destroying namespace "webhook-markers-3938" for this suite. @ 08/18/23 21:58:43.428
• [15.616 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 08/18/23 21:58:43.437
  Aug 18 21:58:43.437: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 21:58:43.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:43.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:43.456
  STEP: apply creating a deployment @ 08/18/23 21:58:43.459
  Aug 18 21:58:43.461: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4979" for this suite. @ 08/18/23 21:58:43.477
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 08/18/23 21:58:43.484
  Aug 18 21:58:43.484: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename statefulset @ 08/18/23 21:58:43.485
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:58:43.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:58:43.504
  STEP: Creating service test in namespace statefulset-9459 @ 08/18/23 21:58:43.507
  STEP: Creating statefulset ss in namespace statefulset-9459 @ 08/18/23 21:58:43.511
  Aug 18 21:58:43.521: INFO: Found 0 stateful pods, waiting for 1
  Aug 18 21:58:53.527: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 08/18/23 21:58:53.533
  STEP: updating a scale subresource @ 08/18/23 21:58:53.536
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/18/23 21:58:53.543
  STEP: Patch a scale subresource @ 08/18/23 21:58:53.546
  STEP: verifying the statefulset Spec.Replicas was modified @ 08/18/23 21:58:53.552
  Aug 18 21:58:53.557: INFO: Deleting all statefulset in ns statefulset-9459
  Aug 18 21:58:53.560: INFO: Scaling statefulset ss to 0
  Aug 18 21:59:03.582: INFO: Waiting for statefulset status.replicas updated to 0
  Aug 18 21:59:03.585: INFO: Deleting statefulset ss
  Aug 18 21:59:03.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9459" for this suite. @ 08/18/23 21:59:03.601
• [20.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 08/18/23 21:59:03.609
  Aug 18 21:59:03.609: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 21:59:03.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:03.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:03.629
  STEP: Creating secret with name secret-test-629a6383-90e0-41d8-9fd7-a45dfe3f4cc8 @ 08/18/23 21:59:03.631
  STEP: Creating a pod to test consume secrets @ 08/18/23 21:59:03.635
  STEP: Saw pod success @ 08/18/23 21:59:07.657
  Aug 18 21:59:07.661: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-0a6241d3-77c1-45ac-b95b-4813f323604e container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 21:59:07.676
  Aug 18 21:59:07.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6926" for this suite. @ 08/18/23 21:59:07.693
• [4.091 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 08/18/23 21:59:07.7
  Aug 18 21:59:07.700: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 21:59:07.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:07.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:07.72
  STEP: Setting up server cert @ 08/18/23 21:59:07.748
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 21:59:07.928
  STEP: Deploying the webhook pod @ 08/18/23 21:59:07.937
  STEP: Wait for the deployment to be ready @ 08/18/23 21:59:07.95
  Aug 18 21:59:07.955: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 21:59:09.966
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 21:59:09.977
  Aug 18 21:59:10.977: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 18 21:59:10.986: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5015-crds.webhook.example.com via the AdmissionRegistration API @ 08/18/23 21:59:11.499
  STEP: Creating a custom resource that should be mutated by the webhook @ 08/18/23 21:59:11.513
  Aug 18 21:59:13.538: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4935" for this suite. @ 08/18/23 21:59:14.103
  STEP: Destroying namespace "webhook-markers-7744" for this suite. @ 08/18/23 21:59:14.111
• [6.417 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 08/18/23 21:59:14.116
  Aug 18 21:59:14.116: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:59:14.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:14.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:14.142
  STEP: Counting existing ResourceQuota @ 08/18/23 21:59:14.145
  STEP: Creating a ResourceQuota @ 08/18/23 21:59:19.148
  STEP: Ensuring resource quota status is calculated @ 08/18/23 21:59:19.154
  STEP: Creating a ReplicaSet @ 08/18/23 21:59:21.16
  STEP: Ensuring resource quota status captures replicaset creation @ 08/18/23 21:59:21.172
  STEP: Deleting a ReplicaSet @ 08/18/23 21:59:23.177
  STEP: Ensuring resource quota status released usage @ 08/18/23 21:59:23.183
  Aug 18 21:59:25.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-217" for this suite. @ 08/18/23 21:59:25.192
• [11.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 08/18/23 21:59:25.202
  Aug 18 21:59:25.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename runtimeclass @ 08/18/23 21:59:25.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:25.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:25.222
  STEP: Deleting RuntimeClass runtimeclass-6961-delete-me @ 08/18/23 21:59:25.229
  STEP: Waiting for the RuntimeClass to disappear @ 08/18/23 21:59:25.235
  Aug 18 21:59:25.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6961" for this suite. @ 08/18/23 21:59:25.247
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 08/18/23 21:59:25.254
  Aug 18 21:59:25.254: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 21:59:25.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:25.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:25.272
  STEP: Creating a ResourceQuota @ 08/18/23 21:59:25.275
  STEP: Getting a ResourceQuota @ 08/18/23 21:59:25.281
  STEP: Listing all ResourceQuotas with LabelSelector @ 08/18/23 21:59:25.284
  STEP: Patching the ResourceQuota @ 08/18/23 21:59:25.287
  STEP: Deleting a Collection of ResourceQuotas @ 08/18/23 21:59:25.292
  STEP: Verifying the deleted ResourceQuota @ 08/18/23 21:59:25.3
  Aug 18 21:59:25.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1280" for this suite. @ 08/18/23 21:59:25.306
• [0.058 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 08/18/23 21:59:25.313
  Aug 18 21:59:25.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 21:59:25.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:25.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:25.333
  STEP: Creating a test namespace @ 08/18/23 21:59:25.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:25.351
  STEP: Creating a service in the namespace @ 08/18/23 21:59:25.353
  STEP: Deleting the namespace @ 08/18/23 21:59:25.364
  STEP: Waiting for the namespace to be removed. @ 08/18/23 21:59:25.373
  STEP: Recreating the namespace @ 08/18/23 21:59:31.377
  STEP: Verifying there is no service in the namespace @ 08/18/23 21:59:31.392
  Aug 18 21:59:31.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7510" for this suite. @ 08/18/23 21:59:31.4
  STEP: Destroying namespace "nsdeletetest-7869" for this suite. @ 08/18/23 21:59:31.405
  Aug 18 21:59:31.409: INFO: Namespace nsdeletetest-7869 was already deleted
  STEP: Destroying namespace "nsdeletetest-3291" for this suite. @ 08/18/23 21:59:31.409
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 08/18/23 21:59:31.416
  Aug 18 21:59:31.416: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename cronjob @ 08/18/23 21:59:31.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 21:59:31.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 21:59:31.436
  STEP: Creating a cronjob @ 08/18/23 21:59:31.438
  STEP: Ensuring more than one job is running at a time @ 08/18/23 21:59:31.444
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 08/18/23 22:01:01.45
  STEP: Removing cronjob @ 08/18/23 22:01:01.454
  Aug 18 22:01:01.460: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2760" for this suite. @ 08/18/23 22:01:01.465
• [90.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 08/18/23 22:01:01.474
  Aug 18 22:01:01.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:01:01.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:01:01.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:01:01.503
  STEP: Creating the pod @ 08/18/23 22:01:01.506
  Aug 18 22:01:04.053: INFO: Successfully updated pod "labelsupdate8e0293a1-3774-4ae7-9d42-a5505341a39f"
  Aug 18 22:01:06.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3197" for this suite. @ 08/18/23 22:01:06.072
• [4.604 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 08/18/23 22:01:06.08
  Aug 18 22:01:06.080: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subpath @ 08/18/23 22:01:06.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:01:06.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:01:06.099
  STEP: Setting up data @ 08/18/23 22:01:06.101
  STEP: Creating pod pod-subpath-test-configmap-djvm @ 08/18/23 22:01:06.109
  STEP: Creating a pod to test atomic-volume-subpath @ 08/18/23 22:01:06.109
  STEP: Saw pod success @ 08/18/23 22:01:30.187
  Aug 18 22:01:30.190: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-subpath-test-configmap-djvm container test-container-subpath-configmap-djvm: <nil>
  STEP: delete the pod @ 08/18/23 22:01:30.204
  STEP: Deleting pod pod-subpath-test-configmap-djvm @ 08/18/23 22:01:30.221
  Aug 18 22:01:30.221: INFO: Deleting pod "pod-subpath-test-configmap-djvm" in namespace "subpath-1407"
  Aug 18 22:01:30.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1407" for this suite. @ 08/18/23 22:01:30.227
• [24.154 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 08/18/23 22:01:30.235
  Aug 18 22:01:30.235: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename hostport @ 08/18/23 22:01:30.235
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:01:30.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:01:30.255
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 08/18/23 22:01:30.261
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.82.98 on the node which pod1 resides and expect scheduled @ 08/18/23 22:01:32.276
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.82.98 but use UDP protocol on the node which pod2 resides @ 08/18/23 22:01:34.29
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 08/18/23 22:01:48.346
  Aug 18 22:01:48.346: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.82.98 http://127.0.0.1:54323/hostname] Namespace:hostport-6160 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:01:48.346: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:01:48.346: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:01:48.346: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6160/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.82.98+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.82.98, port: 54323 @ 08/18/23 22:01:48.429
  Aug 18 22:01:48.429: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.82.98:54323/hostname] Namespace:hostport-6160 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:01:48.429: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:01:48.430: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:01:48.430: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6160/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.82.98%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.82.98, port: 54323 UDP @ 08/18/23 22:01:48.504
  Aug 18 22:01:48.504: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.82.98 54323] Namespace:hostport-6160 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:01:48.505: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:01:48.505: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:01:48.505: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6160/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.82.98+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Aug 18 22:01:53.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6160" for this suite. @ 08/18/23 22:01:53.592
• [23.365 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 08/18/23 22:01:53.6
  Aug 18 22:01:53.600: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 22:01:53.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:01:53.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:01:53.619
  STEP: creating a ServiceAccount @ 08/18/23 22:01:53.621
  STEP: watching for the ServiceAccount to be added @ 08/18/23 22:01:53.629
  STEP: patching the ServiceAccount @ 08/18/23 22:01:53.632
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 08/18/23 22:01:53.636
  STEP: deleting the ServiceAccount @ 08/18/23 22:01:53.641
  Aug 18 22:01:53.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4849" for this suite. @ 08/18/23 22:01:53.657
• [0.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 08/18/23 22:01:53.666
  Aug 18 22:01:53.666: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 22:01:53.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:01:53.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:01:53.686
  STEP: Creating a suspended job @ 08/18/23 22:01:53.691
  STEP: Patching the Job @ 08/18/23 22:01:53.697
  STEP: Watching for Job to be patched @ 08/18/23 22:01:53.71
  Aug 18 22:01:53.711: INFO: Event ADDED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2] and annotations: map[]
  Aug 18 22:01:53.712: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2] and annotations: map[]
  Aug 18 22:01:53.712: INFO: Event MODIFIED found for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[]
  STEP: Updating the job @ 08/18/23 22:01:53.712
  STEP: Watching for Job to be updated @ 08/18/23 22:01:53.723
  Aug 18 22:01:53.724: INFO: Event MODIFIED found for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:01:53.724: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 08/18/23 22:01:53.724
  Aug 18 22:01:53.728: INFO: Job: e2e-zk6k2 as labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched]
  STEP: Waiting for job to complete @ 08/18/23 22:01:53.728
  STEP: Delete a job collection with a labelselector @ 08/18/23 22:02:01.733
  STEP: Watching for Job to be deleted @ 08/18/23 22:02:01.741
  Aug 18 22:02:01.743: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:02:01.743: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:02:01.743: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:02:01.743: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:02:01.743: INFO: Event MODIFIED observed for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  Aug 18 22:02:01.743: INFO: Event DELETED found for Job e2e-zk6k2 in namespace job-1480 with labels: map[e2e-job-label:e2e-zk6k2 e2e-zk6k2:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 08/18/23 22:02:01.743
  Aug 18 22:02:01.746: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1480" for this suite. @ 08/18/23 22:02:01.751
• [8.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 08/18/23 22:02:01.766
  Aug 18 22:02:01.766: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:02:01.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:01.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:01.784
  STEP: Creating configMap with name configmap-projected-all-test-volume-79faa4e5-19f2-4cb0-924a-2df399e79e9a @ 08/18/23 22:02:01.787
  STEP: Creating secret with name secret-projected-all-test-volume-c60496c3-5007-4d4f-aa68-17262b95e0dc @ 08/18/23 22:02:01.792
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 08/18/23 22:02:01.797
  STEP: Saw pod success @ 08/18/23 22:02:05.816
  Aug 18 22:02:05.820: INFO: Trying to get logs from node ip-172-31-15-95 pod projected-volume-dfba22c2-fbd3-4b19-80b4-e2cf421c0aef container projected-all-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:02:05.825
  Aug 18 22:02:05.842: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-186" for this suite. @ 08/18/23 22:02:05.846
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 08/18/23 22:02:05.854
  Aug 18 22:02:05.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:02:05.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:05.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:05.875
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:02:05.878
  STEP: Saw pod success @ 08/18/23 22:02:09.902
  Aug 18 22:02:09.905: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-d4a982c3-0642-41ed-ad69-5ce6d4935e5f container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:02:09.913
  Aug 18 22:02:09.926: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4711" for this suite. @ 08/18/23 22:02:09.929
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 08/18/23 22:02:09.936
  Aug 18 22:02:09.936: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:02:09.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:09.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:09.956
  STEP: creating service in namespace services-1926 @ 08/18/23 22:02:09.958
  STEP: creating service affinity-clusterip in namespace services-1926 @ 08/18/23 22:02:09.959
  STEP: creating replication controller affinity-clusterip in namespace services-1926 @ 08/18/23 22:02:09.968
  I0818 22:02:09.975084      19 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-1926, replica count: 3
  I0818 22:02:13.026551      19 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 22:02:13.034: INFO: Creating new exec pod
  Aug 18 22:02:16.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1926 exec execpod-affinity2f68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Aug 18 22:02:16.173: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Aug 18 22:02:16.173: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:02:16.173: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1926 exec execpod-affinity2f68k -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.239 80'
  Aug 18 22:02:16.295: INFO: stderr: "+ nc -v -t -w 2 10.152.183.239 80\n+ echo hostName\nConnection to 10.152.183.239 80 port [tcp/http] succeeded!\n"
  Aug 18 22:02:16.295: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:02:16.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1926 exec execpod-affinity2f68k -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.239:80/ ; done'
  Aug 18 22:02:16.467: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.239:80/\n"
  Aug 18 22:02:16.467: INFO: stdout: "\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8\naffinity-clusterip-6blb8"
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.467: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Received response from host: affinity-clusterip-6blb8
  Aug 18 22:02:16.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 22:02:16.472: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-1926, will wait for the garbage collector to delete the pods @ 08/18/23 22:02:16.482
  Aug 18 22:02:16.545: INFO: Deleting ReplicationController affinity-clusterip took: 7.836806ms
  Aug 18 22:02:16.646: INFO: Terminating ReplicationController affinity-clusterip pods took: 101.037988ms
  STEP: Destroying namespace "services-1926" for this suite. @ 08/18/23 22:02:19.363
• [9.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 08/18/23 22:02:19.372
  Aug 18 22:02:19.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename discovery @ 08/18/23 22:02:19.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:19.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:19.392
  STEP: Setting up server cert @ 08/18/23 22:02:19.399
  Aug 18 22:02:19.630: INFO: Checking APIGroup: apiregistration.k8s.io
  Aug 18 22:02:19.631: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Aug 18 22:02:19.631: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Aug 18 22:02:19.631: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Aug 18 22:02:19.631: INFO: Checking APIGroup: apps
  Aug 18 22:02:19.632: INFO: PreferredVersion.GroupVersion: apps/v1
  Aug 18 22:02:19.632: INFO: Versions found [{apps/v1 v1}]
  Aug 18 22:02:19.632: INFO: apps/v1 matches apps/v1
  Aug 18 22:02:19.632: INFO: Checking APIGroup: events.k8s.io
  Aug 18 22:02:19.634: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Aug 18 22:02:19.634: INFO: Versions found [{events.k8s.io/v1 v1}]
  Aug 18 22:02:19.634: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Aug 18 22:02:19.634: INFO: Checking APIGroup: authentication.k8s.io
  Aug 18 22:02:19.635: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Aug 18 22:02:19.635: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Aug 18 22:02:19.635: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Aug 18 22:02:19.635: INFO: Checking APIGroup: authorization.k8s.io
  Aug 18 22:02:19.636: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Aug 18 22:02:19.636: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Aug 18 22:02:19.636: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Aug 18 22:02:19.636: INFO: Checking APIGroup: autoscaling
  Aug 18 22:02:19.637: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Aug 18 22:02:19.637: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Aug 18 22:02:19.637: INFO: autoscaling/v2 matches autoscaling/v2
  Aug 18 22:02:19.637: INFO: Checking APIGroup: batch
  Aug 18 22:02:19.638: INFO: PreferredVersion.GroupVersion: batch/v1
  Aug 18 22:02:19.638: INFO: Versions found [{batch/v1 v1}]
  Aug 18 22:02:19.638: INFO: batch/v1 matches batch/v1
  Aug 18 22:02:19.638: INFO: Checking APIGroup: certificates.k8s.io
  Aug 18 22:02:19.639: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Aug 18 22:02:19.639: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Aug 18 22:02:19.639: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Aug 18 22:02:19.639: INFO: Checking APIGroup: networking.k8s.io
  Aug 18 22:02:19.640: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Aug 18 22:02:19.640: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Aug 18 22:02:19.640: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Aug 18 22:02:19.640: INFO: Checking APIGroup: policy
  Aug 18 22:02:19.641: INFO: PreferredVersion.GroupVersion: policy/v1
  Aug 18 22:02:19.641: INFO: Versions found [{policy/v1 v1}]
  Aug 18 22:02:19.641: INFO: policy/v1 matches policy/v1
  Aug 18 22:02:19.641: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Aug 18 22:02:19.642: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Aug 18 22:02:19.642: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Aug 18 22:02:19.642: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Aug 18 22:02:19.642: INFO: Checking APIGroup: storage.k8s.io
  Aug 18 22:02:19.643: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Aug 18 22:02:19.643: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Aug 18 22:02:19.643: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Aug 18 22:02:19.643: INFO: Checking APIGroup: admissionregistration.k8s.io
  Aug 18 22:02:19.644: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Aug 18 22:02:19.644: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Aug 18 22:02:19.644: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Aug 18 22:02:19.644: INFO: Checking APIGroup: apiextensions.k8s.io
  Aug 18 22:02:19.645: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Aug 18 22:02:19.645: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Aug 18 22:02:19.645: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Aug 18 22:02:19.645: INFO: Checking APIGroup: scheduling.k8s.io
  Aug 18 22:02:19.646: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Aug 18 22:02:19.646: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Aug 18 22:02:19.646: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Aug 18 22:02:19.646: INFO: Checking APIGroup: coordination.k8s.io
  Aug 18 22:02:19.647: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Aug 18 22:02:19.647: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Aug 18 22:02:19.647: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Aug 18 22:02:19.647: INFO: Checking APIGroup: node.k8s.io
  Aug 18 22:02:19.648: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Aug 18 22:02:19.648: INFO: Versions found [{node.k8s.io/v1 v1}]
  Aug 18 22:02:19.648: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Aug 18 22:02:19.648: INFO: Checking APIGroup: discovery.k8s.io
  Aug 18 22:02:19.649: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Aug 18 22:02:19.649: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Aug 18 22:02:19.649: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Aug 18 22:02:19.649: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Aug 18 22:02:19.650: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Aug 18 22:02:19.650: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Aug 18 22:02:19.650: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Aug 18 22:02:19.650: INFO: Checking APIGroup: metrics.k8s.io
  Aug 18 22:02:19.651: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Aug 18 22:02:19.651: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Aug 18 22:02:19.651: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Aug 18 22:02:19.651: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3221" for this suite. @ 08/18/23 22:02:19.656
• [0.292 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 08/18/23 22:02:19.664
  Aug 18 22:02:19.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:02:19.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:19.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:19.684
  STEP: validating cluster-info @ 08/18/23 22:02:19.686
  Aug 18 22:02:19.686: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9395 cluster-info'
  Aug 18 22:02:19.732: INFO: stderr: ""
  Aug 18 22:02:19.732: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Aug 18 22:02:19.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9395" for this suite. @ 08/18/23 22:02:19.737
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 08/18/23 22:02:19.745
  Aug 18 22:02:19.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:02:19.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:19.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:19.766
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:02:19.769
  STEP: Saw pod success @ 08/18/23 22:02:23.793
  Aug 18 22:02:23.796: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-5fb3b5b2-b1b3-4560-a187-84b2266a18c9 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:02:23.802
  Aug 18 22:02:23.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2889" for this suite. @ 08/18/23 22:02:23.828
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 08/18/23 22:02:23.842
  Aug 18 22:02:23.842: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 22:02:23.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:23.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:23.864
  STEP: creating the pod @ 08/18/23 22:02:23.867
  STEP: submitting the pod to kubernetes @ 08/18/23 22:02:23.867
  STEP: verifying the pod is in kubernetes @ 08/18/23 22:02:25.894
  STEP: updating the pod @ 08/18/23 22:02:25.897
  Aug 18 22:02:26.408: INFO: Successfully updated pod "pod-update-9fc2d97c-d0de-413c-880d-f8ed4c901e58"
  STEP: verifying the updated pod is in kubernetes @ 08/18/23 22:02:26.412
  Aug 18 22:02:26.415: INFO: Pod update OK
  Aug 18 22:02:26.415: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3246" for this suite. @ 08/18/23 22:02:26.421
• [2.586 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 08/18/23 22:02:26.428
  Aug 18 22:02:26.428: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename init-container @ 08/18/23 22:02:26.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:26.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:26.449
  STEP: creating the pod @ 08/18/23 22:02:26.451
  Aug 18 22:02:26.451: INFO: PodSpec: initContainers in spec.initContainers
  Aug 18 22:02:29.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3725" for this suite. @ 08/18/23 22:02:29.506
• [3.085 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 08/18/23 22:02:29.513
  Aug 18 22:02:29.513: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-pred @ 08/18/23 22:02:29.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:02:29.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:02:29.532
  Aug 18 22:02:29.535: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 18 22:02:29.542: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 22:02:29.545: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-95 before test
  Aug 18 22:02:29.550: INFO: nginx-ingress-controller-kubernetes-worker-m966b from ingress-nginx-kubernetes-worker started at 2023-08-18 21:30:12 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: pod-init-ff6fed18-2161-4049-ad6e-878f9aceb22f from init-container-3725 started at 2023-08-18 22:02:26 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container run1 ready: false, restart count 0
  Aug 18 22:02:29.550: INFO: calico-node-6ckgx from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: pod-update-9fc2d97c-d0de-413c-880d-f8ed4c901e58 from pods-3246 started at 2023-08-18 22:02:23 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container pause ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: sonobuoy from sonobuoy started at 2023-08-18 20:45:36 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:02:29.550: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:02:29.550: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-82 before test
  Aug 18 22:02:29.555: INFO: nginx-ingress-controller-kubernetes-worker-mdn2t from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:55 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.555: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: calico-node-vd7zz from kube-system started at 2023-08-18 20:38:06 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.555: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: sonobuoy-e2e-job-1dbae55b4ba54d95 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:02:29.555: INFO: 	Container e2e ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-wwhcl from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:02:29.555: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:02:29.555: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-82-98 before test
  Aug 18 22:02:29.561: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-bdqgw from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: nginx-ingress-controller-kubernetes-worker-zb4cq from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: calico-node-vmzhd from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: coredns-59cfb5bf46-6278r from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container coredns ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: kube-state-metrics-775d9f4f79-fgs8j from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: metrics-server-v0.6.3-69d7fbfdf8-b9v4x from kube-system started at 2023-08-18 20:38:22 +0000 UTC (2 container statuses recorded)
  Aug 18 22:02:29.561: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Aug 18 22:02:29.561: INFO: dashboard-metrics-scraper-5dd7cb5fc-wmhvg from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.562: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Aug 18 22:02:29.562: INFO: kubernetes-dashboard-7b899cb9d9-nq2h7 from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:02:29.562: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Aug 18 22:02:29.562: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-tl9q8 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:02:29.562: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:02:29.562: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/18/23 22:02:29.562
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/18/23 22:02:31.582
  STEP: Trying to apply a random label on the found node. @ 08/18/23 22:02:31.599
  STEP: verifying the node has the label kubernetes.io/e2e-9e1e10d7-836c-4b7a-b31d-53e39e0e1b01 95 @ 08/18/23 22:02:31.61
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 08/18/23 22:02:31.614
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.20.82 on the node which pod4 resides and expect not scheduled @ 08/18/23 22:02:33.63
  STEP: removing the label kubernetes.io/e2e-9e1e10d7-836c-4b7a-b31d-53e39e0e1b01 off the node ip-172-31-20-82 @ 08/18/23 22:07:33.638
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-9e1e10d7-836c-4b7a-b31d-53e39e0e1b01 @ 08/18/23 22:07:33.651
  Aug 18 22:07:33.657: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1259" for this suite. @ 08/18/23 22:07:33.666
• [304.161 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 08/18/23 22:07:33.674
  Aug 18 22:07:33.674: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:07:33.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:07:33.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:07:33.697
  STEP: Creating configMap with name configmap-test-volume-map-0cf97b77-93ee-466f-84c7-4e5277a1229f @ 08/18/23 22:07:33.7
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:07:33.704
  STEP: Saw pod success @ 08/18/23 22:07:37.726
  Aug 18 22:07:37.730: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-59a88470-f9bc-45c5-9c3a-3418b7be7c43 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:07:37.746
  Aug 18 22:07:37.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7717" for this suite. @ 08/18/23 22:07:37.763
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 08/18/23 22:07:37.772
  Aug 18 22:07:37.772: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:07:37.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:07:37.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:07:37.792
  Aug 18 22:07:37.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 create -f -'
  Aug 18 22:07:38.094: INFO: stderr: ""
  Aug 18 22:07:38.094: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Aug 18 22:07:38.094: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 create -f -'
  Aug 18 22:07:38.232: INFO: stderr: ""
  Aug 18 22:07:38.232: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/18/23 22:07:38.232
  Aug 18 22:07:39.236: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:07:39.236: INFO: Found 1 / 1
  Aug 18 22:07:39.236: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 18 22:07:39.241: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:07:39.241: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 18 22:07:39.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 describe pod agnhost-primary-d8b8t'
  Aug 18 22:07:39.296: INFO: stderr: ""
  Aug 18 22:07:39.296: INFO: stdout: "Name:             agnhost-primary-d8b8t\nNamespace:        kubectl-3151\nPriority:         0\nService Account:  default\nNode:             ip-172-31-15-95/172.31.15.95\nStart Time:       Fri, 18 Aug 2023 22:07:38 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               192.168.189.196\nIPs:\n  IP:           192.168.189.196\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c41ac71a6d9bcb80ec6e41e1ac38af352328f5da0143362d43e5e1b490d006e9\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Fri, 18 Aug 2023 22:07:38 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-qtls6 (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-qtls6:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-3151/agnhost-primary-d8b8t to ip-172-31-15-95\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Aug 18 22:07:39.296: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 describe rc agnhost-primary'
  Aug 18 22:07:39.360: INFO: stderr: ""
  Aug 18 22:07:39.360: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-3151\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-d8b8t\n"
  Aug 18 22:07:39.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 describe service agnhost-primary'
  Aug 18 22:07:39.416: INFO: stderr: ""
  Aug 18 22:07:39.416: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-3151\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.28\nIPs:               10.152.183.28\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         192.168.189.196:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Aug 18 22:07:39.420: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 describe node ip-172-31-15-95'
  Aug 18 22:07:39.487: INFO: stderr: ""
  Aug 18 22:07:39.487: INFO: stdout: "Name:               ip-172-31-15-95\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    juju-application=kubernetes-worker\n                    juju-charm=kubernetes-worker\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-15-95\n                    kubernetes.io/os=linux\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Fri, 18 Aug 2023 20:38:07 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-15-95\n  AcquireTime:     <unset>\n  RenewTime:       Fri, 18 Aug 2023 22:07:38 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Fri, 18 Aug 2023 20:38:46 +0000   Fri, 18 Aug 2023 20:38:46 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Fri, 18 Aug 2023 22:06:35 +0000   Fri, 18 Aug 2023 20:38:07 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Fri, 18 Aug 2023 22:06:35 +0000   Fri, 18 Aug 2023 20:38:07 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Fri, 18 Aug 2023 22:06:35 +0000   Fri, 18 Aug 2023 20:38:07 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Fri, 18 Aug 2023 22:06:35 +0000   Fri, 18 Aug 2023 20:38:29 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.15.95\n  Hostname:    ip-172-31-15-95\nCapacity:\n  cpu:                2\n  ephemeral-storage:  16069568Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7933628Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  14809713845\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7831228Ki\n  pods:               110\nSystem Info:\n  Machine ID:                      ec277bde217fb7e456ad46c9a551241d\n  System UUID:                     ec277bde-217f-b7e4-56ad-46c9a551241d\n  Boot ID:                         27b6df85-9558-477f-afb4-166aecf05c9a\n  Kernel Version:                  6.2.0-1009-aws\n  OS Image:                        Ubuntu 22.04.3 LTS\n  Operating System:                linux\n  Architecture:                    amd64\n  Container Runtime Version:       containerd://1.6.8\n  Kubelet Version:                 v1.28.0\n  Kube-Proxy Version:              v1.28.0\nNon-terminated Pods:               (5 in total)\n  Namespace                        Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                        ----                                                       ------------  ----------  ---------------  -------------  ---\n  ingress-nginx-kubernetes-worker  nginx-ingress-controller-kubernetes-worker-m966b           0 (0%)        0 (0%)      0 (0%)           0 (0%)         37m\n  kube-system                      calico-node-6ckgx                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         89m\n  kubectl-3151                     agnhost-primary-d8b8t                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         1s\n  sonobuoy                         sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\n  sonobuoy                         sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg    0 (0%)        0 (0%)      0 (0%)           0 (0%)         82m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Aug 18 22:07:39.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-3151 describe namespace kubectl-3151'
  Aug 18 22:07:39.544: INFO: stderr: ""
  Aug 18 22:07:39.544: INFO: stdout: "Name:         kubectl-3151\nLabels:       e2e-framework=kubectl\n              e2e-run=d8b35882-9b68-4cc3-b1e5-a3f2fb0baf12\n              kubernetes.io/metadata.name=kubectl-3151\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Aug 18 22:07:39.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3151" for this suite. @ 08/18/23 22:07:39.548
• [1.784 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 08/18/23 22:07:39.557
  Aug 18 22:07:39.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:07:39.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:07:39.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:07:39.576
  STEP: Setting up server cert @ 08/18/23 22:07:39.598
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:07:39.944
  STEP: Deploying the webhook pod @ 08/18/23 22:07:39.953
  STEP: Wait for the deployment to be ready @ 08/18/23 22:07:39.966
  Aug 18 22:07:39.976: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 22:07:41.989
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:07:42.002
  Aug 18 22:07:43.004: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 08/18/23 22:07:43.069
  STEP: Creating a configMap that should be mutated @ 08/18/23 22:07:43.081
  STEP: Deleting the collection of validation webhooks @ 08/18/23 22:07:43.107
  STEP: Creating a configMap that should not be mutated @ 08/18/23 22:07:43.165
  Aug 18 22:07:43.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7191" for this suite. @ 08/18/23 22:07:43.214
  STEP: Destroying namespace "webhook-markers-1509" for this suite. @ 08/18/23 22:07:43.22
• [3.670 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 08/18/23 22:07:43.229
  Aug 18 22:07:43.229: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-pred @ 08/18/23 22:07:43.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:07:43.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:07:43.247
  Aug 18 22:07:43.249: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 18 22:07:43.256: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 22:07:43.260: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-95 before test
  Aug 18 22:07:43.266: INFO: nginx-ingress-controller-kubernetes-worker-m966b from ingress-nginx-kubernetes-worker started at 2023-08-18 21:30:12 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.266: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: calico-node-6ckgx from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.266: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: agnhost-primary-d8b8t from kubectl-3151 started at 2023-08-18 22:07:38 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.266: INFO: 	Container agnhost-primary ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: sonobuoy from sonobuoy started at 2023-08-18 20:45:36 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.266: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:07:43.266: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:07:43.266: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-82 before test
  Aug 18 22:07:43.271: INFO: nginx-ingress-controller-kubernetes-worker-mdn2t from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:55 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.271: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: calico-node-vd7zz from kube-system started at 2023-08-18 20:38:06 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.271: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: sonobuoy-e2e-job-1dbae55b4ba54d95 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:07:43.271: INFO: 	Container e2e ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-wwhcl from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:07:43.271: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:07:43.271: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-82-98 before test
  Aug 18 22:07:43.277: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-bdqgw from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: nginx-ingress-controller-kubernetes-worker-zb4cq from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: calico-node-vmzhd from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: coredns-59cfb5bf46-6278r from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container coredns ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: kube-state-metrics-775d9f4f79-fgs8j from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: metrics-server-v0.6.3-69d7fbfdf8-b9v4x from kube-system started at 2023-08-18 20:38:22 +0000 UTC (2 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: dashboard-metrics-scraper-5dd7cb5fc-wmhvg from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: kubernetes-dashboard-7b899cb9d9-nq2h7 from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-tl9q8 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:07:43.277: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:07:43.277: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 08/18/23 22:07:43.278
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.177c999dddee4cfd], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/5 nodes are available: 5 Preemption is not helpful for scheduling..] @ 08/18/23 22:07:43.302
  Aug 18 22:07:44.300: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3356" for this suite. @ 08/18/23 22:07:44.305
• [1.083 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 08/18/23 22:07:44.313
  Aug 18 22:07:44.313: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename aggregator @ 08/18/23 22:07:44.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:07:44.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:07:44.336
  Aug 18 22:07:44.338: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Registering the sample API server. @ 08/18/23 22:07:44.339
  Aug 18 22:07:44.801: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Aug 18 22:07:44.829: INFO: deployment "sample-apiserver-deployment" doesn't have the required revision set
  Aug 18 22:07:46.869: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:48.873: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:50.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:52.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:54.873: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:56.875: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:07:58.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:00.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:02.873: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:04.875: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:06.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:08.874: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:10.873: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 7, 44, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:08:12.992: INFO: Waited 111.373419ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 08/18/23 22:08:13.022
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 08/18/23 22:08:13.027
  STEP: List APIServices @ 08/18/23 22:08:13.033
  Aug 18 22:08:13.038: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 08/18/23 22:08:13.038
  Aug 18 22:08:13.051: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 08/18/23 22:08:13.051
  Aug 18 22:08:13.062: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.August, 18, 22, 8, 12, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 08/18/23 22:08:13.062
  Aug 18 22:08:13.066: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-08-18 22:08:12 +0000 UTC Passed all checks passed}
  Aug 18 22:08:13.066: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 22:08:13.066: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 08/18/23 22:08:13.066
  Aug 18 22:08:13.087: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-852277891" @ 08/18/23 22:08:13.087
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 08/18/23 22:08:13.1
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 08/18/23 22:08:13.115
  STEP: Patch APIService Status @ 08/18/23 22:08:13.12
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 08/18/23 22:08:13.131
  Aug 18 22:08:13.136: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-08-18 22:08:12 +0000 UTC Passed all checks passed}
  Aug 18 22:08:13.136: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 22:08:13.136: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Aug 18 22:08:13.136: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 08/18/23 22:08:13.136
  STEP: Confirm that the generated APIService has been deleted @ 08/18/23 22:08:13.14
  Aug 18 22:08:13.140: INFO: Requesting list of APIServices to confirm quantity
  Aug 18 22:08:13.144: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Aug 18 22:08:13.144: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Aug 18 22:08:13.217: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1447" for this suite. @ 08/18/23 22:08:13.253
• [28.947 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 08/18/23 22:08:13.261
  Aug 18 22:08:13.261: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 22:08:13.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:13.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:13.282
  Aug 18 22:08:15.304: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 22:08:15.308: INFO: Deleting pod "var-expansion-a45cdc95-f814-41c4-91f1-029b4ee1846d" in namespace "var-expansion-909"
  Aug 18 22:08:15.316: INFO: Wait up to 5m0s for pod "var-expansion-a45cdc95-f814-41c4-91f1-029b4ee1846d" to be fully deleted
  STEP: Destroying namespace "var-expansion-909" for this suite. @ 08/18/23 22:08:17.323
• [4.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 08/18/23 22:08:17.332
  Aug 18 22:08:17.332: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename conformance-tests @ 08/18/23 22:08:17.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:17.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:17.351
  STEP: Getting node addresses @ 08/18/23 22:08:17.354
  Aug 18 22:08:17.354: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Aug 18 22:08:17.361: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-768" for this suite. @ 08/18/23 22:08:17.365
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 08/18/23 22:08:17.373
  Aug 18 22:08:17.373: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:08:17.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:17.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:17.39
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:08:17.392
  STEP: Saw pod success @ 08/18/23 22:08:21.414
  Aug 18 22:08:21.418: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-890b056f-9b86-46b4-a2d5-ca20de739270 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:08:21.425
  Aug 18 22:08:21.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8754" for this suite. @ 08/18/23 22:08:21.442
• [4.076 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 08/18/23 22:08:21.448
  Aug 18 22:08:21.448: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context-test @ 08/18/23 22:08:21.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:21.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:21.469
  Aug 18 22:08:25.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7454" for this suite. @ 08/18/23 22:08:25.504
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 08/18/23 22:08:25.514
  Aug 18 22:08:25.514: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename events @ 08/18/23 22:08:25.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:25.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:25.534
  STEP: Create set of events @ 08/18/23 22:08:25.537
  STEP: get a list of Events with a label in the current namespace @ 08/18/23 22:08:25.551
  STEP: delete a list of events @ 08/18/23 22:08:25.556
  Aug 18 22:08:25.556: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 08/18/23 22:08:25.578
  Aug 18 22:08:25.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3088" for this suite. @ 08/18/23 22:08:25.584
• [0.078 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 08/18/23 22:08:25.592
  Aug 18 22:08:25.592: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:08:25.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:25.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:25.609
  STEP: Creating configMap with name configmap-test-volume-fdee0825-18c6-4d4a-b1ac-34fdf411dcb1 @ 08/18/23 22:08:25.612
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:08:25.617
  STEP: Saw pod success @ 08/18/23 22:08:29.642
  Aug 18 22:08:29.645: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-93163ac7-9083-4d29-9e63-fe6e1bc8e2cd container configmap-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:08:29.652
  Aug 18 22:08:29.668: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-541" for this suite. @ 08/18/23 22:08:29.672
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 08/18/23 22:08:29.679
  Aug 18 22:08:29.679: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 22:08:29.68
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:29.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:29.699
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 08/18/23 22:08:29.702
  Aug 18 22:08:29.708: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 18 22:08:34.714: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 22:08:34.715
  STEP: getting scale subresource @ 08/18/23 22:08:34.715
  STEP: updating a scale subresource @ 08/18/23 22:08:34.717
  STEP: verifying the replicaset Spec.Replicas was modified @ 08/18/23 22:08:34.724
  STEP: Patch a scale subresource @ 08/18/23 22:08:34.729
  Aug 18 22:08:34.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5429" for this suite. @ 08/18/23 22:08:34.744
• [5.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 08/18/23 22:08:34.752
  Aug 18 22:08:34.752: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:08:34.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:34.773
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:34.775
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/18/23 22:08:34.778
  STEP: Saw pod success @ 08/18/23 22:08:38.802
  Aug 18 22:08:38.805: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-efd56b59-ddb1-4c22-a964-d2d20be6348a container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:08:38.812
  Aug 18 22:08:38.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4529" for this suite. @ 08/18/23 22:08:38.833
• [4.087 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 08/18/23 22:08:38.84
  Aug 18 22:08:38.840: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 22:08:38.84
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:38.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:38.863
  Aug 18 22:08:38.866: INFO: Creating simple deployment test-new-deployment
  Aug 18 22:08:38.880: INFO: deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 08/18/23 22:08:40.898
  STEP: updating a scale subresource @ 08/18/23 22:08:40.901
  STEP: verifying the deployment Spec.Replicas was modified @ 08/18/23 22:08:40.907
  STEP: Patch a scale subresource @ 08/18/23 22:08:40.91
  Aug 18 22:08:40.929: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0d951f9-fb74-43ca-a35f-99cbfe08f836",
      ResourceVersion: (string) (len=5) "33644",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 22:08:40.939: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "41af429a-c899-458b-bf37-d7df6bea0448",
      ResourceVersion: (string) (len=5) "33651",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "d0d951f9-fb74-43ca-a35f-99cbfe08f836",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 30 64 39 35 31  66 39 2d 66 62 37 34 2d  |\"d0d951f9-fb74-|
              00000120  34 33 63 61 2d 61 33 35  66 2d 39 39 63 62 66 65  |43ca-a35f-99cbfe|
              00000130  30 38 66 38 33 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |08f836\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 22:08:40.947: INFO: Pod "test-new-deployment-557759b7c7-77flr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-77flr",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2e73aa1-1ec5-4535-9381-66b8797acf23",
      ResourceVersion: (string) (len=5) "33655",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41af429a-c899-458b-bf37-d7df6bea0448",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 66 34 32 39 61 2d 63  |d\":\"41af429a-c|
              00000090  38 39 39 2d 34 35 38 62  2d 62 66 33 37 2d 64 37  |899-458b-bf37-d7|
              000000a0  64 66 36 62 65 61 30 34  34 38 5c 22 7d 22 3a 7b  |df6bea0448\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c6fvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c6fvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-20-82",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993320,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.20.82",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993320,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 22:08:40.948: INFO: Pod "test-new-deployment-557759b7c7-xr65k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-xr65k",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-2049",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c785154d-4425-4dae-ba89-01d7b5f57f6b",
      ResourceVersion: (string) (len=5) "33631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "41af429a-c899-458b-bf37-d7df6bea0448",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 31  61 66 34 32 39 61 2d 63  |d\":\"41af429a-c|
              00000090  38 39 39 2d 34 35 38 62  2d 62 66 33 37 2d 64 37  |899-458b-bf37-d7|
              000000a0  64 66 36 62 65 61 30 34  34 38 5c 22 7d 22 3a 7b  |df6bea0448\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 30 32 5c  |192.168.189.202\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lbxkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lbxkk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993319,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993318,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993318,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827993319,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ca2dc56552218d9f4f6e8cc2a01ed52874dab8520e7a0269a961d396494ae137",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 22:08:40.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2049" for this suite. @ 08/18/23 22:08:40.955
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 08/18/23 22:08:40.97
  Aug 18 22:08:40.970: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename daemonsets @ 08/18/23 22:08:40.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:40.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:40.993
  Aug 18 22:08:41.022: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 08/18/23 22:08:41.029
  Aug 18 22:08:41.032: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:41.032: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:41.036: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 22:08:41.036: INFO: Node ip-172-31-15-95 is running 0 daemon pod, expected 1
  Aug 18 22:08:42.042: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:42.042: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:42.046: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Aug 18 22:08:42.046: INFO: Node ip-172-31-82-98 is running 0 daemon pod, expected 1
  Aug 18 22:08:43.042: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:43.042: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:43.046: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 22:08:43.046: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 08/18/23 22:08:43.061
  STEP: Check that daemon pods images are updated. @ 08/18/23 22:08:43.071
  Aug 18 22:08:43.074: INFO: Wrong image for pod: daemon-set-5lz92. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:43.074: INFO: Wrong image for pod: daemon-set-sdjqv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:43.074: INFO: Wrong image for pod: daemon-set-vsg6p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:43.079: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:43.079: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:44.083: INFO: Pod daemon-set-cjlh4 is not available
  Aug 18 22:08:44.083: INFO: Wrong image for pod: daemon-set-sdjqv. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:44.083: INFO: Wrong image for pod: daemon-set-vsg6p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:44.086: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:44.087: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:45.084: INFO: Pod daemon-set-tgnl5 is not available
  Aug 18 22:08:45.084: INFO: Wrong image for pod: daemon-set-vsg6p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:45.089: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:45.089: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:46.086: INFO: Pod daemon-set-tgnl5 is not available
  Aug 18 22:08:46.086: INFO: Wrong image for pod: daemon-set-vsg6p. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Aug 18 22:08:46.092: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:46.092: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:47.088: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:47.088: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:48.087: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:48.087: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 08/18/23 22:08:48.087
  Aug 18 22:08:48.092: INFO: DaemonSet pods can't tolerate node ip-172-31-80-19 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:48.092: INFO: DaemonSet pods can't tolerate node ip-172-31-9-42 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  Aug 18 22:08:48.096: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Aug 18 22:08:48.096: INFO: Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 08/18/23 22:08:48.111
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3724, will wait for the garbage collector to delete the pods @ 08/18/23 22:08:48.111
  Aug 18 22:08:48.171: INFO: Deleting DaemonSet.extensions daemon-set took: 6.047864ms
  Aug 18 22:08:48.271: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.357267ms
  Aug 18 22:08:50.075: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Aug 18 22:08:50.075: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Aug 18 22:08:50.079: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33886"},"items":null}

  Aug 18 22:08:50.082: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33886"},"items":null}

  Aug 18 22:08:50.095: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3724" for this suite. @ 08/18/23 22:08:50.098
• [9.136 seconds]
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 08/18/23 22:08:50.106
  Aug 18 22:08:50.106: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:08:50.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:50.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:50.128
  STEP: Creating configMap with name cm-test-opt-del-b90ae819-75f7-4782-98c0-bc9674ecbc62 @ 08/18/23 22:08:50.135
  STEP: Creating configMap with name cm-test-opt-upd-97518114-cff2-41db-b014-0bb297912d1b @ 08/18/23 22:08:50.138
  STEP: Creating the pod @ 08/18/23 22:08:50.142
  STEP: Deleting configmap cm-test-opt-del-b90ae819-75f7-4782-98c0-bc9674ecbc62 @ 08/18/23 22:08:52.184
  STEP: Updating configmap cm-test-opt-upd-97518114-cff2-41db-b014-0bb297912d1b @ 08/18/23 22:08:52.19
  STEP: Creating configMap with name cm-test-opt-create-63ca84af-2a5c-4179-a55c-ce9845978ba1 @ 08/18/23 22:08:52.195
  STEP: waiting to observe update in volume @ 08/18/23 22:08:52.2
  Aug 18 22:08:56.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7987" for this suite. @ 08/18/23 22:08:56.239
• [6.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 08/18/23 22:08:56.245
  Aug 18 22:08:56.245: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename deployment @ 08/18/23 22:08:56.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:08:56.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:08:56.264
  Aug 18 22:08:56.273: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Aug 18 22:09:01.283: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 22:09:01.283
  Aug 18 22:09:01.283: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Aug 18 22:09:03.289: INFO: Creating deployment "test-rollover-deployment"
  Aug 18 22:09:03.299: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Aug 18 22:09:05.307: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Aug 18 22:09:05.315: INFO: Ensure that both replica sets have 1 created replica
  Aug 18 22:09:05.326: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Aug 18 22:09:05.336: INFO: Updating deployment test-rollover-deployment
  Aug 18 22:09:05.336: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Aug 18 22:09:07.345: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Aug 18 22:09:07.352: INFO: Make sure deployment "test-rollover-deployment" is complete
  Aug 18 22:09:07.359: INFO: all replica sets need to contain the pod-template-hash label
  Aug 18 22:09:07.359: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:09:09.368: INFO: all replica sets need to contain the pod-template-hash label
  Aug 18 22:09:09.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:09:11.369: INFO: all replica sets need to contain the pod-template-hash label
  Aug 18 22:09:11.369: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:09:13.367: INFO: all replica sets need to contain the pod-template-hash label
  Aug 18 22:09:13.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:09:15.368: INFO: all replica sets need to contain the pod-template-hash label
  Aug 18 22:09:15.368: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.August, 18, 22, 9, 7, 0, time.Local), LastTransitionTime:time.Date(2023, time.August, 18, 22, 9, 3, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Aug 18 22:09:17.368: INFO: 
  Aug 18 22:09:17.368: INFO: Ensure that both old replica sets have no replicas
  Aug 18 22:09:17.378: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9939dc50-6827-4b20-affe-8b8796d04172",
      ResourceVersion: (string) (len=5) "34127",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Aug 18 22:09:17.381: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f3f19d5-22c8-459e-bcf5-8aa2e1b26307",
      ResourceVersion: (string) (len=5) "34116",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9939dc50-6827-4b20-affe-8b8796d04172",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 33 39 64 63  35 30 2d 36 38 32 37 2d  |\"9939dc50-6827-|
              00000120  34 62 32 30 2d 61 66 66  65 2d 38 62 38 37 39 36  |4b20-affe-8b8796|
              00000130  64 30 34 31 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d04172\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 22:09:17.383: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Aug 18 22:09:17.383: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a8910a2-e892-46b0-b33b-3bad390e0619",
      ResourceVersion: (string) (len=5) "34126",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993336,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9939dc50-6827-4b20-affe-8b8796d04172",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993336,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  39 39 33 39 64 63 35 30  2d 36 38 32 37 2d 34 62  |9939dc50-6827-4b|
              000000c0  32 30 2d 61 66 66 65 2d  38 62 38 37 39 36 64 30  |20-affe-8b8796d0|
              000000d0  34 31 37 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |4172\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993357,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 22:09:17.384: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec0224ea-05c1-4b4c-85ea-2e9c33877ef9",
      ResourceVersion: (string) (len=5) "34074",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "9939dc50-6827-4b20-affe-8b8796d04172",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 39 33 39 64 63  35 30 2d 36 38 32 37 2d  |\"9939dc50-6827-|
              00000120  34 62 32 30 2d 61 66 66  65 2d 38 62 38 37 39 36  |4b20-affe-8b8796|
              00000130  64 30 34 31 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d04172\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Aug 18 22:09:17.389: INFO: Pod "test-rollover-deployment-5d484bf7f9-56q6b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-56q6b",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-3672",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18a3983a-2fc8-4dde-b59e-0b169a1f471a",
      ResourceVersion: (string) (len=5) "34095",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "6f3f19d5-22c8-459e-bcf5-8aa2e1b26307",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 66  33 66 31 39 64 35 2d 32  |d\":\"6f3f19d5-2|
              00000090  32 63 38 2d 34 35 39 65  2d 62 63 66 35 2d 38 61  |2c8-459e-bcf5-8a|
              000000a0  61 32 65 31 62 32 36 33  30 37 5c 22 7d 22 3a 7b  |a2e1b26307\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=522) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 39 32 2e 31 36 38 2e  31 38 39 2e 32 32 36 5c  |192.168.189.226\|
              000001e0  22 7d 22 3a 7b 22 2e 22  3a 7b 7d 2c 22 66 3a 69  |"}":{".":{},"f:i|
              000001f0  70 22 3a 7b 7d 7d 7d 2c  22 66 3a 73 74 61 72 74  |p":{}}},"f:start|
              00000200  54 69 6d 65 22 3a 7b 7d  7d 7d                    |Time":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pbhff",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pbhff",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-15-95",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993347,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63827993345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.15.95",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=15) "192.168.189.226",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=15) "192.168.189.226"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63827993345,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63827993346,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://41d14ff991b175a92cae1ab02ac813a2e90bda1265f84c8d1930ad05ad774974",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Aug 18 22:09:17.402: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3672" for this suite. @ 08/18/23 22:09:17.406
• [21.167 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 08/18/23 22:09:17.413
  Aug 18 22:09:17.413: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 22:09:17.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:09:17.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:09:17.435
  STEP: Creating a ResourceQuota with terminating scope @ 08/18/23 22:09:17.438
  STEP: Ensuring ResourceQuota status is calculated @ 08/18/23 22:09:17.442
  STEP: Creating a ResourceQuota with not terminating scope @ 08/18/23 22:09:19.447
  STEP: Ensuring ResourceQuota status is calculated @ 08/18/23 22:09:19.453
  STEP: Creating a long running pod @ 08/18/23 22:09:21.457
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 08/18/23 22:09:21.47
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 08/18/23 22:09:23.476
  STEP: Deleting the pod @ 08/18/23 22:09:25.48
  STEP: Ensuring resource quota status released the pod usage @ 08/18/23 22:09:25.492
  STEP: Creating a terminating pod @ 08/18/23 22:09:27.497
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 08/18/23 22:09:27.507
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 08/18/23 22:09:29.513
  STEP: Deleting the pod @ 08/18/23 22:09:31.519
  STEP: Ensuring resource quota status released the pod usage @ 08/18/23 22:09:31.535
  Aug 18 22:09:33.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-105" for this suite. @ 08/18/23 22:09:33.544
• [16.137 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 08/18/23 22:09:33.551
  Aug 18 22:09:33.551: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 22:09:33.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:09:33.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:09:33.572
  Aug 18 22:09:33.575: INFO: Creating ReplicaSet my-hostname-basic-1024528d-795a-4e7f-b0f6-a5309037816e
  Aug 18 22:09:33.583: INFO: Pod name my-hostname-basic-1024528d-795a-4e7f-b0f6-a5309037816e: Found 0 pods out of 1
  Aug 18 22:09:38.587: INFO: Pod name my-hostname-basic-1024528d-795a-4e7f-b0f6-a5309037816e: Found 1 pods out of 1
  Aug 18 22:09:38.587: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-1024528d-795a-4e7f-b0f6-a5309037816e" is running
  Aug 18 22:09:38.591: INFO: Pod "my-hostname-basic-1024528d-795a-4e7f-b0f6-a5309037816e-rkw68" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 22:09:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 22:09:35 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 22:09:35 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-08-18 22:09:33 +0000 UTC Reason: Message:}])
  Aug 18 22:09:38.591: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 08/18/23 22:09:38.591
  Aug 18 22:09:38.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7259" for this suite. @ 08/18/23 22:09:38.608
• [5.065 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 08/18/23 22:09:38.616
  Aug 18 22:09:38.616: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:09:38.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:09:38.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:09:38.636
  STEP: Creating configMap that has name configmap-test-emptyKey-737ddef9-6901-44ec-9334-2f1e2e06f7cb @ 08/18/23 22:09:38.639
  Aug 18 22:09:38.640: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2895" for this suite. @ 08/18/23 22:09:38.644
• [0.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 08/18/23 22:09:38.652
  Aug 18 22:09:38.652: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 22:09:38.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:09:38.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:09:38.673
  STEP: create the rc1 @ 08/18/23 22:09:38.679
  STEP: create the rc2 @ 08/18/23 22:09:38.683
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 08/18/23 22:09:44.696
  STEP: delete the rc simpletest-rc-to-be-deleted @ 08/18/23 22:09:45.175
  STEP: wait for the rc to be deleted @ 08/18/23 22:09:45.187
  Aug 18 22:09:50.215: INFO: 69 pods remaining
  Aug 18 22:09:50.215: INFO: 69 pods has nil DeletionTimestamp
  Aug 18 22:09:50.215: INFO: 
  STEP: Gathering metrics @ 08/18/23 22:09:55.2
  W0818 22:09:55.205110      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 22:09:55.205: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 22:09:55.205: INFO: Deleting pod "simpletest-rc-to-be-deleted-225s6" in namespace "gc-1854"
  Aug 18 22:09:55.216: INFO: Deleting pod "simpletest-rc-to-be-deleted-265mf" in namespace "gc-1854"
  Aug 18 22:09:55.228: INFO: Deleting pod "simpletest-rc-to-be-deleted-28fk2" in namespace "gc-1854"
  Aug 18 22:09:55.237: INFO: Deleting pod "simpletest-rc-to-be-deleted-2gw8v" in namespace "gc-1854"
  Aug 18 22:09:55.248: INFO: Deleting pod "simpletest-rc-to-be-deleted-44s9j" in namespace "gc-1854"
  Aug 18 22:09:55.262: INFO: Deleting pod "simpletest-rc-to-be-deleted-49tlh" in namespace "gc-1854"
  Aug 18 22:09:55.275: INFO: Deleting pod "simpletest-rc-to-be-deleted-555vd" in namespace "gc-1854"
  Aug 18 22:09:55.284: INFO: Deleting pod "simpletest-rc-to-be-deleted-5j4bd" in namespace "gc-1854"
  Aug 18 22:09:55.297: INFO: Deleting pod "simpletest-rc-to-be-deleted-5qg44" in namespace "gc-1854"
  Aug 18 22:09:55.307: INFO: Deleting pod "simpletest-rc-to-be-deleted-62xvp" in namespace "gc-1854"
  Aug 18 22:09:55.319: INFO: Deleting pod "simpletest-rc-to-be-deleted-67x5v" in namespace "gc-1854"
  Aug 18 22:09:55.333: INFO: Deleting pod "simpletest-rc-to-be-deleted-6b8nv" in namespace "gc-1854"
  Aug 18 22:09:55.345: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cd9k" in namespace "gc-1854"
  Aug 18 22:09:55.361: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jckj" in namespace "gc-1854"
  Aug 18 22:09:55.375: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jd78" in namespace "gc-1854"
  Aug 18 22:09:55.387: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jlqp" in namespace "gc-1854"
  Aug 18 22:09:55.399: INFO: Deleting pod "simpletest-rc-to-be-deleted-6jwgb" in namespace "gc-1854"
  Aug 18 22:09:55.413: INFO: Deleting pod "simpletest-rc-to-be-deleted-6l8d7" in namespace "gc-1854"
  Aug 18 22:09:55.425: INFO: Deleting pod "simpletest-rc-to-be-deleted-782w2" in namespace "gc-1854"
  Aug 18 22:09:55.446: INFO: Deleting pod "simpletest-rc-to-be-deleted-7fvcf" in namespace "gc-1854"
  Aug 18 22:09:55.462: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vxk5" in namespace "gc-1854"
  Aug 18 22:09:55.478: INFO: Deleting pod "simpletest-rc-to-be-deleted-7x6lr" in namespace "gc-1854"
  Aug 18 22:09:55.488: INFO: Deleting pod "simpletest-rc-to-be-deleted-7zgj8" in namespace "gc-1854"
  Aug 18 22:09:55.500: INFO: Deleting pod "simpletest-rc-to-be-deleted-8792k" in namespace "gc-1854"
  Aug 18 22:09:55.517: INFO: Deleting pod "simpletest-rc-to-be-deleted-8gvpf" in namespace "gc-1854"
  Aug 18 22:09:55.532: INFO: Deleting pod "simpletest-rc-to-be-deleted-8trbm" in namespace "gc-1854"
  Aug 18 22:09:55.543: INFO: Deleting pod "simpletest-rc-to-be-deleted-8zn5q" in namespace "gc-1854"
  Aug 18 22:09:55.555: INFO: Deleting pod "simpletest-rc-to-be-deleted-966ws" in namespace "gc-1854"
  Aug 18 22:09:55.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-9d2bb" in namespace "gc-1854"
  Aug 18 22:09:55.583: INFO: Deleting pod "simpletest-rc-to-be-deleted-9l9hf" in namespace "gc-1854"
  Aug 18 22:09:55.599: INFO: Deleting pod "simpletest-rc-to-be-deleted-9qxcz" in namespace "gc-1854"
  Aug 18 22:09:55.613: INFO: Deleting pod "simpletest-rc-to-be-deleted-9zhg9" in namespace "gc-1854"
  Aug 18 22:09:55.628: INFO: Deleting pod "simpletest-rc-to-be-deleted-b2jrv" in namespace "gc-1854"
  Aug 18 22:09:55.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-b87w6" in namespace "gc-1854"
  Aug 18 22:09:55.661: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9244" in namespace "gc-1854"
  Aug 18 22:09:55.674: INFO: Deleting pod "simpletest-rc-to-be-deleted-bdx8c" in namespace "gc-1854"
  Aug 18 22:09:55.690: INFO: Deleting pod "simpletest-rc-to-be-deleted-bgm4p" in namespace "gc-1854"
  Aug 18 22:09:55.703: INFO: Deleting pod "simpletest-rc-to-be-deleted-bl8xq" in namespace "gc-1854"
  Aug 18 22:09:55.722: INFO: Deleting pod "simpletest-rc-to-be-deleted-c7zfk" in namespace "gc-1854"
  Aug 18 22:09:55.746: INFO: Deleting pod "simpletest-rc-to-be-deleted-cg54t" in namespace "gc-1854"
  Aug 18 22:09:55.771: INFO: Deleting pod "simpletest-rc-to-be-deleted-clh42" in namespace "gc-1854"
  Aug 18 22:09:55.783: INFO: Deleting pod "simpletest-rc-to-be-deleted-clw9n" in namespace "gc-1854"
  Aug 18 22:09:55.796: INFO: Deleting pod "simpletest-rc-to-be-deleted-d8r8j" in namespace "gc-1854"
  Aug 18 22:09:55.809: INFO: Deleting pod "simpletest-rc-to-be-deleted-dhpmn" in namespace "gc-1854"
  Aug 18 22:09:55.826: INFO: Deleting pod "simpletest-rc-to-be-deleted-dsrjm" in namespace "gc-1854"
  Aug 18 22:09:55.839: INFO: Deleting pod "simpletest-rc-to-be-deleted-fhhnw" in namespace "gc-1854"
  Aug 18 22:09:55.853: INFO: Deleting pod "simpletest-rc-to-be-deleted-g42kk" in namespace "gc-1854"
  Aug 18 22:09:55.865: INFO: Deleting pod "simpletest-rc-to-be-deleted-g4rc7" in namespace "gc-1854"
  Aug 18 22:09:55.877: INFO: Deleting pod "simpletest-rc-to-be-deleted-gjcnl" in namespace "gc-1854"
  Aug 18 22:09:55.889: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkbbm" in namespace "gc-1854"
  Aug 18 22:09:55.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1854" for this suite. @ 08/18/23 22:09:55.908
• [17.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 08/18/23 22:09:55.916
  Aug 18 22:09:55.916: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:09:55.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:09:55.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:09:55.946
  STEP: creating Agnhost RC @ 08/18/23 22:09:55.949
  Aug 18 22:09:55.949: INFO: namespace kubectl-9400
  Aug 18 22:09:55.949: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9400 create -f -'
  Aug 18 22:09:56.519: INFO: stderr: ""
  Aug 18 22:09:56.519: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/18/23 22:09:56.519
  Aug 18 22:09:57.525: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:09:57.525: INFO: Found 0 / 1
  Aug 18 22:09:58.524: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:09:58.524: INFO: Found 1 / 1
  Aug 18 22:09:58.524: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Aug 18 22:09:58.528: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:09:58.528: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 18 22:09:58.528: INFO: wait on agnhost-primary startup in kubectl-9400 
  Aug 18 22:09:58.528: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9400 logs agnhost-primary-vskbr agnhost-primary'
  Aug 18 22:09:58.637: INFO: stderr: ""
  Aug 18 22:09:58.637: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 08/18/23 22:09:58.637
  Aug 18 22:09:58.637: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9400 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Aug 18 22:09:58.737: INFO: stderr: ""
  Aug 18 22:09:58.737: INFO: stdout: "service/rm2 exposed\n"
  Aug 18 22:09:58.740: INFO: Service rm2 in namespace kubectl-9400 found.
  STEP: exposing service @ 08/18/23 22:10:00.747
  Aug 18 22:10:00.747: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9400 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Aug 18 22:10:00.841: INFO: stderr: ""
  Aug 18 22:10:00.841: INFO: stdout: "service/rm3 exposed\n"
  Aug 18 22:10:00.846: INFO: Service rm3 in namespace kubectl-9400 found.
  Aug 18 22:10:02.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9400" for this suite. @ 08/18/23 22:10:02.857
• [6.947 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 08/18/23 22:10:02.864
  Aug 18 22:10:02.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-pred @ 08/18/23 22:10:02.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:02.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:02.883
  Aug 18 22:10:02.885: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Aug 18 22:10:02.895: INFO: Waiting for terminating namespaces to be deleted...
  Aug 18 22:10:02.899: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-95 before test
  Aug 18 22:10:02.904: INFO: nginx-ingress-controller-kubernetes-worker-m966b from ingress-nginx-kubernetes-worker started at 2023-08-18 21:30:12 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.904: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:10:02.904: INFO: calico-node-6ckgx from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.904: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:10:02.904: INFO: agnhost-primary-vskbr from kubectl-9400 started at 2023-08-18 22:09:56 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.904: INFO: 	Container agnhost-primary ready: true, restart count 0
  Aug 18 22:10:02.904: INFO: sonobuoy from sonobuoy started at 2023-08-18 20:45:36 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.904: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Aug 18 22:10:02.904: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:10:02.905: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:10:02.905: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:10:02.905: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-20-82 before test
  Aug 18 22:10:02.910: INFO: nginx-ingress-controller-kubernetes-worker-mdn2t from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:55 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.910: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: calico-node-vd7zz from kube-system started at 2023-08-18 20:38:06 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.910: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: sonobuoy-e2e-job-1dbae55b4ba54d95 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:10:02.910: INFO: 	Container e2e ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-wwhcl from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:10:02.910: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: 	Container systemd-logs ready: true, restart count 0
  Aug 18 22:10:02.910: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-82-98 before test
  Aug 18 22:10:02.916: INFO: default-http-backend-kubernetes-worker-5c79cc75ff-bdqgw from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.916: INFO: 	Container default-http-backend-kubernetes-worker ready: true, restart count 0
  Aug 18 22:10:02.916: INFO: nginx-ingress-controller-kubernetes-worker-zb4cq from ingress-nginx-kubernetes-worker started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container nginx-ingress-controllerkubernetes-worker ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: calico-node-vmzhd from kube-system started at 2023-08-18 20:38:08 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container calico-node ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: coredns-59cfb5bf46-6278r from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container coredns ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: kube-state-metrics-775d9f4f79-fgs8j from kube-system started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container kube-state-metrics ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: metrics-server-v0.6.3-69d7fbfdf8-b9v4x from kube-system started at 2023-08-18 20:38:22 +0000 UTC (2 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container metrics-server ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: 	Container metrics-server-nanny ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: dashboard-metrics-scraper-5dd7cb5fc-wmhvg from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container dashboard-metrics-scraper ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: kubernetes-dashboard-7b899cb9d9-nq2h7 from kubernetes-dashboard started at 2023-08-18 20:38:22 +0000 UTC (1 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container kubernetes-dashboard ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-tl9q8 from sonobuoy started at 2023-08-18 20:45:38 +0000 UTC (2 container statuses recorded)
  Aug 18 22:10:02.917: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Aug 18 22:10:02.917: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-15-95 @ 08/18/23 22:10:02.93
  STEP: verifying the node has the label node ip-172-31-20-82 @ 08/18/23 22:10:02.943
  STEP: verifying the node has the label node ip-172-31-82-98 @ 08/18/23 22:10:02.953
  Aug 18 22:10:02.966: INFO: Pod default-http-backend-kubernetes-worker-5c79cc75ff-bdqgw requesting resource cpu=10m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod nginx-ingress-controller-kubernetes-worker-m966b requesting resource cpu=0m on Node ip-172-31-15-95
  Aug 18 22:10:02.966: INFO: Pod nginx-ingress-controller-kubernetes-worker-mdn2t requesting resource cpu=0m on Node ip-172-31-20-82
  Aug 18 22:10:02.966: INFO: Pod nginx-ingress-controller-kubernetes-worker-zb4cq requesting resource cpu=0m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod calico-node-6ckgx requesting resource cpu=250m on Node ip-172-31-15-95
  Aug 18 22:10:02.966: INFO: Pod calico-node-vd7zz requesting resource cpu=250m on Node ip-172-31-20-82
  Aug 18 22:10:02.966: INFO: Pod calico-node-vmzhd requesting resource cpu=250m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod coredns-59cfb5bf46-6278r requesting resource cpu=100m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod kube-state-metrics-775d9f4f79-fgs8j requesting resource cpu=0m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod metrics-server-v0.6.3-69d7fbfdf8-b9v4x requesting resource cpu=5m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod agnhost-primary-vskbr requesting resource cpu=0m on Node ip-172-31-15-95
  Aug 18 22:10:02.966: INFO: Pod dashboard-metrics-scraper-5dd7cb5fc-wmhvg requesting resource cpu=0m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod kubernetes-dashboard-7b899cb9d9-nq2h7 requesting resource cpu=0m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-15-95
  Aug 18 22:10:02.966: INFO: Pod sonobuoy-e2e-job-1dbae55b4ba54d95 requesting resource cpu=0m on Node ip-172-31-20-82
  Aug 18 22:10:02.966: INFO: Pod sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-4chtg requesting resource cpu=0m on Node ip-172-31-15-95
  Aug 18 22:10:02.966: INFO: Pod sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-tl9q8 requesting resource cpu=0m on Node ip-172-31-82-98
  Aug 18 22:10:02.966: INFO: Pod sonobuoy-systemd-logs-daemon-set-b255db4c7d2c411b-wwhcl requesting resource cpu=0m on Node ip-172-31-20-82
  STEP: Starting Pods to consume most of the cluster CPU. @ 08/18/23 22:10:02.966
  Aug 18 22:10:02.966: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-15-95
  Aug 18 22:10:02.974: INFO: Creating a pod which consumes cpu=1225m on Node ip-172-31-20-82
  Aug 18 22:10:02.979: INFO: Creating a pod which consumes cpu=1144m on Node ip-172-31-82-98
  STEP: Creating another pod that requires unavailable amount of CPU. @ 08/18/23 22:10:05
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796.177c99be653c5d2c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4136/filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796 to ip-172-31-82-98] @ 08/18/23 22:10:05.003
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796.177c99be87af5999], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796.177c99be88b67b9c], Reason = [Created], Message = [Created container filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796.177c99be8db6e91a], Reason = [Started], Message = [Started container filler-pod-430b9f25-b449-4811-9c0b-a97a83d0d796] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178.177c99be63dbc5cc], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4136/filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178 to ip-172-31-15-95] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178.177c99be8519c627], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178.177c99be86bf2cf8], Reason = [Created], Message = [Created container filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178.177c99be8bd2ac60], Reason = [Started], Message = [Started container filler-pod-d463943b-da4a-49c1-b4a7-7ddd3339c178] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6.177c99be6439d997], Reason = [Scheduled], Message = [Successfully assigned sched-pred-4136/filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6 to ip-172-31-20-82] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6.177c99be87f2228d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6.177c99be88f01cb9], Reason = [Created], Message = [Created container filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6.177c99be8e5c9ef3], Reason = [Started], Message = [Started container filler-pod-f2326e8a-4583-47d4-aae5-db6a778344e6] @ 08/18/23 22:10:05.004
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.177c99bedcb9c4f5], Reason = [FailedScheduling], Message = [0/5 nodes are available: 2 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/5 nodes are available: 2 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod..] @ 08/18/23 22:10:05.062
  STEP: removing the label node off the node ip-172-31-15-95 @ 08/18/23 22:10:06.013
  STEP: verifying the node doesn't have the label node @ 08/18/23 22:10:06.023
  STEP: removing the label node off the node ip-172-31-20-82 @ 08/18/23 22:10:06.027
  STEP: verifying the node doesn't have the label node @ 08/18/23 22:10:06.037
  STEP: removing the label node off the node ip-172-31-82-98 @ 08/18/23 22:10:06.042
  STEP: verifying the node doesn't have the label node @ 08/18/23 22:10:06.055
  Aug 18 22:10:06.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4136" for this suite. @ 08/18/23 22:10:06.063
• [3.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 08/18/23 22:10:06.074
  Aug 18 22:10:06.074: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 22:10:06.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:06.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:06.093
  STEP: Counting existing ResourceQuota @ 08/18/23 22:10:06.096
  STEP: Creating a ResourceQuota @ 08/18/23 22:10:11.101
  STEP: Ensuring resource quota status is calculated @ 08/18/23 22:10:11.112
  Aug 18 22:10:13.117: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-215" for this suite. @ 08/18/23 22:10:13.121
• [7.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 08/18/23 22:10:13.127
  Aug 18 22:10:13.127: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 22:10:13.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:13.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:13.148
  STEP: Creating a test headless service @ 08/18/23 22:10:13.151
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1310.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1310.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 08/18/23 22:10:13.154
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1310.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1310.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 08/18/23 22:10:13.154
  STEP: creating a pod to probe DNS @ 08/18/23 22:10:13.154
  STEP: submitting the pod to kubernetes @ 08/18/23 22:10:13.154
  STEP: retrieving the pod @ 08/18/23 22:10:15.173
  STEP: looking for the results for each expected name from probers @ 08/18/23 22:10:15.177
  Aug 18 22:10:15.196: INFO: DNS probes using dns-1310/dns-test-ef7c872a-0358-4b45-b3f0-6a24024ac212 succeeded

  Aug 18 22:10:15.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:10:15.204
  STEP: deleting the test headless service @ 08/18/23 22:10:15.224
  STEP: Destroying namespace "dns-1310" for this suite. @ 08/18/23 22:10:15.236
• [2.116 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 08/18/23 22:10:15.244
  Aug 18 22:10:15.244: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pod-network-test @ 08/18/23 22:10:15.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:15.267
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:15.269
  STEP: Performing setup for networking test in namespace pod-network-test-3165 @ 08/18/23 22:10:15.272
  STEP: creating a selector @ 08/18/23 22:10:15.272
  STEP: Creating the service pods in kubernetes @ 08/18/23 22:10:15.272
  Aug 18 22:10:15.272: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 08/18/23 22:10:27.351
  Aug 18 22:10:29.381: INFO: Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  Aug 18 22:10:29.381: INFO: Going to poll 192.168.189.247 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 22:10:29.384: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.189.247:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3165 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:10:29.384: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:10:29.384: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:10:29.384: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3165/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.189.247%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 22:10:29.456: INFO: Found all 1 expected endpoints: [netserver-0]
  Aug 18 22:10:29.456: INFO: Going to poll 192.168.159.142 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 22:10:29.459: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.159.142:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3165 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:10:29.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:10:29.459: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:10:29.460: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3165/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.159.142%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 22:10:29.541: INFO: Found all 1 expected endpoints: [netserver-1]
  Aug 18 22:10:29.541: INFO: Going to poll 192.168.165.95 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  Aug 18 22:10:29.545: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://192.168.165.95:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-3165 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:10:29.545: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:10:29.545: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:10:29.545: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-3165/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F192.168.165.95%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Aug 18 22:10:29.609: INFO: Found all 1 expected endpoints: [netserver-2]
  Aug 18 22:10:29.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3165" for this suite. @ 08/18/23 22:10:29.613
• [14.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 08/18/23 22:10:29.622
  Aug 18 22:10:29.622: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 22:10:29.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:29.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:29.642
  Aug 18 22:10:29.644: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 08/18/23 22:10:30.889
  Aug 18 22:10:30.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-3641 --namespace=crd-publish-openapi-3641 create -f -'
  Aug 18 22:10:31.240: INFO: stderr: ""
  Aug 18 22:10:31.241: INFO: stdout: "e2e-test-crd-publish-openapi-8259-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 18 22:10:31.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-3641 --namespace=crd-publish-openapi-3641 delete e2e-test-crd-publish-openapi-8259-crds test-cr'
  Aug 18 22:10:31.305: INFO: stderr: ""
  Aug 18 22:10:31.305: INFO: stdout: "e2e-test-crd-publish-openapi-8259-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Aug 18 22:10:31.305: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-3641 --namespace=crd-publish-openapi-3641 apply -f -'
  Aug 18 22:10:31.427: INFO: stderr: ""
  Aug 18 22:10:31.427: INFO: stdout: "e2e-test-crd-publish-openapi-8259-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Aug 18 22:10:31.427: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-3641 --namespace=crd-publish-openapi-3641 delete e2e-test-crd-publish-openapi-8259-crds test-cr'
  Aug 18 22:10:31.486: INFO: stderr: ""
  Aug 18 22:10:31.486: INFO: stdout: "e2e-test-crd-publish-openapi-8259-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 08/18/23 22:10:31.486
  Aug 18 22:10:31.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=crd-publish-openapi-3641 explain e2e-test-crd-publish-openapi-8259-crds'
  Aug 18 22:10:31.579: INFO: stderr: ""
  Aug 18 22:10:31.579: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8259-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Aug 18 22:10:32.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3641" for this suite. @ 08/18/23 22:10:32.849
• [3.232 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 08/18/23 22:10:32.854
  Aug 18 22:10:32.854: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:10:32.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:10:32.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:10:32.875
  STEP: Creating configMap with name configmap-test-upd-da8ea30d-6a9c-4567-9f4a-b9eec7c45fe3 @ 08/18/23 22:10:32.883
  STEP: Creating the pod @ 08/18/23 22:10:32.888
  STEP: Updating configmap configmap-test-upd-da8ea30d-6a9c-4567-9f4a-b9eec7c45fe3 @ 08/18/23 22:10:34.924
  STEP: waiting to observe update in volume @ 08/18/23 22:10:34.93
  Aug 18 22:11:49.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1128" for this suite. @ 08/18/23 22:11:49.274
• [76.428 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 08/18/23 22:11:49.287
  Aug 18 22:11:49.287: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/18/23 22:11:49.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:11:49.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:11:49.31
  STEP: creating a target pod @ 08/18/23 22:11:49.313
  STEP: adding an ephemeral container @ 08/18/23 22:11:51.334
  STEP: checking pod container endpoints @ 08/18/23 22:11:53.353
  Aug 18 22:11:53.354: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4703 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:11:53.354: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:11:53.354: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:11:53.354: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-4703/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 18 22:11:53.429: INFO: Exec stderr: ""
  Aug 18 22:11:53.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4703" for this suite. @ 08/18/23 22:11:53.447
• [4.167 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 08/18/23 22:11:53.455
  Aug 18 22:11:53.455: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:11:53.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:11:53.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:11:53.476
  STEP: creating the pod @ 08/18/23 22:11:53.479
  Aug 18 22:11:53.479: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 create -f -'
  Aug 18 22:11:53.646: INFO: stderr: ""
  Aug 18 22:11:53.646: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 08/18/23 22:11:55.655
  Aug 18 22:11:55.655: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 label pods pause testing-label=testing-label-value'
  Aug 18 22:11:55.708: INFO: stderr: ""
  Aug 18 22:11:55.708: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 08/18/23 22:11:55.709
  Aug 18 22:11:55.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 get pod pause -L testing-label'
  Aug 18 22:11:55.755: INFO: stderr: ""
  Aug 18 22:11:55.755: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 08/18/23 22:11:55.756
  Aug 18 22:11:55.756: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 label pods pause testing-label-'
  Aug 18 22:11:55.809: INFO: stderr: ""
  Aug 18 22:11:55.809: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 08/18/23 22:11:55.809
  Aug 18 22:11:55.809: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 get pod pause -L testing-label'
  Aug 18 22:11:55.855: INFO: stderr: ""
  Aug 18 22:11:55.855: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 08/18/23 22:11:55.855
  Aug 18 22:11:55.855: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 delete --grace-period=0 --force -f -'
  Aug 18 22:11:55.933: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 22:11:55.933: INFO: stdout: "pod \"pause\" force deleted\n"
  Aug 18 22:11:55.933: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 get rc,svc -l name=pause --no-headers'
  Aug 18 22:11:55.986: INFO: stderr: "No resources found in kubectl-6291 namespace.\n"
  Aug 18 22:11:55.986: INFO: stdout: ""
  Aug 18 22:11:55.986: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-6291 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 18 22:11:56.029: INFO: stderr: ""
  Aug 18 22:11:56.029: INFO: stdout: ""
  Aug 18 22:11:56.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6291" for this suite. @ 08/18/23 22:11:56.033
• [2.585 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 08/18/23 22:11:56.04
  Aug 18 22:11:56.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:11:56.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:11:56.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:11:56.059
  STEP: Setting up server cert @ 08/18/23 22:11:56.083
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:11:56.493
  STEP: Deploying the webhook pod @ 08/18/23 22:11:56.504
  STEP: Wait for the deployment to be ready @ 08/18/23 22:11:56.515
  Aug 18 22:11:56.524: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 22:11:58.538
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:11:58.549
  Aug 18 22:11:59.549: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Aug 18 22:11:59.557: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 08/18/23 22:12:00.068
  STEP: Creating a custom resource that should be denied by the webhook @ 08/18/23 22:12:00.082
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 08/18/23 22:12:02.104
  STEP: Updating the custom resource with disallowed data should be denied @ 08/18/23 22:12:02.109
  STEP: Deleting the custom resource should be denied @ 08/18/23 22:12:02.117
  STEP: Remove the offending key and value from the custom resource data @ 08/18/23 22:12:02.123
  STEP: Deleting the updated custom resource should be successful @ 08/18/23 22:12:02.132
  Aug 18 22:12:02.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1995" for this suite. @ 08/18/23 22:12:02.699
  STEP: Destroying namespace "webhook-markers-4243" for this suite. @ 08/18/23 22:12:02.705
• [6.672 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 08/18/23 22:12:02.712
  Aug 18 22:12:02.712: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subpath @ 08/18/23 22:12:02.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:02.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:02.73
  STEP: Setting up data @ 08/18/23 22:12:02.732
  STEP: Creating pod pod-subpath-test-downwardapi-mpqn @ 08/18/23 22:12:02.742
  STEP: Creating a pod to test atomic-volume-subpath @ 08/18/23 22:12:02.742
  STEP: Saw pod success @ 08/18/23 22:12:24.815
  Aug 18 22:12:24.818: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-subpath-test-downwardapi-mpqn container test-container-subpath-downwardapi-mpqn: <nil>
  STEP: delete the pod @ 08/18/23 22:12:24.825
  STEP: Deleting pod pod-subpath-test-downwardapi-mpqn @ 08/18/23 22:12:24.839
  Aug 18 22:12:24.839: INFO: Deleting pod "pod-subpath-test-downwardapi-mpqn" in namespace "subpath-2143"
  Aug 18 22:12:24.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2143" for this suite. @ 08/18/23 22:12:24.845
• [22.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 08/18/23 22:12:24.852
  Aug 18 22:12:24.852: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-runtime @ 08/18/23 22:12:24.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:24.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:24.873
  STEP: create the container @ 08/18/23 22:12:24.876
  W0818 22:12:24.887828      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 08/18/23 22:12:24.887
  STEP: get the container status @ 08/18/23 22:12:27.907
  STEP: the container should be terminated @ 08/18/23 22:12:27.911
  STEP: the termination message should be set @ 08/18/23 22:12:27.911
  Aug 18 22:12:27.911: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 08/18/23 22:12:27.911
  Aug 18 22:12:27.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8892" for this suite. @ 08/18/23 22:12:27.931
• [3.086 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 08/18/23 22:12:27.938
  Aug 18 22:12:27.938: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 22:12:27.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:27.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:27.956
  Aug 18 22:12:27.962: INFO: Got root ca configmap in namespace "svcaccounts-4847"
  Aug 18 22:12:27.968: INFO: Deleted root ca configmap in namespace "svcaccounts-4847"
  STEP: waiting for a new root ca configmap created @ 08/18/23 22:12:28.469
  Aug 18 22:12:28.473: INFO: Recreated root ca configmap in namespace "svcaccounts-4847"
  Aug 18 22:12:28.480: INFO: Updated root ca configmap in namespace "svcaccounts-4847"
  STEP: waiting for the root ca configmap reconciled @ 08/18/23 22:12:28.982
  Aug 18 22:12:28.987: INFO: Reconciled root ca configmap in namespace "svcaccounts-4847"
  Aug 18 22:12:28.987: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4847" for this suite. @ 08/18/23 22:12:28.991
• [1.061 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 08/18/23 22:12:28.998
  Aug 18 22:12:28.998: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename runtimeclass @ 08/18/23 22:12:28.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:29.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:29.018
  Aug 18 22:12:29.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8648" for this suite. @ 08/18/23 22:12:29.033
• [0.041 seconds]
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 08/18/23 22:12:29.039
  Aug 18 22:12:29.039: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubelet-test @ 08/18/23 22:12:29.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:29.057
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:29.06
  Aug 18 22:12:29.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6492" for this suite. @ 08/18/23 22:12:29.083
• [0.052 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 08/18/23 22:12:29.092
  Aug 18 22:12:29.092: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption @ 08/18/23 22:12:29.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:12:29.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:12:29.111
  Aug 18 22:12:29.126: INFO: Waiting up to 1m0s for all nodes to be ready
  Aug 18 22:13:29.146: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 08/18/23 22:13:29.149
  Aug 18 22:13:29.149: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename sched-preemption-path @ 08/18/23 22:13:29.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:13:29.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:13:29.167
  STEP: Finding an available node @ 08/18/23 22:13:29.169
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 08/18/23 22:13:29.169
  STEP: Explicitly delete pod here to free the resource it takes. @ 08/18/23 22:13:31.189
  Aug 18 22:13:31.200: INFO: found a healthy node: ip-172-31-15-95
  Aug 18 22:13:37.268: INFO: pods created so far: [1 1 1]
  Aug 18 22:13:37.268: INFO: length of pods created so far: 3
  Aug 18 22:13:39.279: INFO: pods created so far: [2 2 1]
  Aug 18 22:13:46.282: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 22:13:46.317: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5679" for this suite. @ 08/18/23 22:13:46.354
  STEP: Destroying namespace "sched-preemption-9034" for this suite. @ 08/18/23 22:13:46.361
• [77.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 08/18/23 22:13:46.37
  Aug 18 22:13:46.370: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename containers @ 08/18/23 22:13:46.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:13:46.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:13:46.403
  STEP: Creating a pod to test override arguments @ 08/18/23 22:13:46.406
  STEP: Saw pod success @ 08/18/23 22:13:50.429
  Aug 18 22:13:50.432: INFO: Trying to get logs from node ip-172-31-20-82 pod client-containers-3de9085d-5270-446e-a370-fe50d86784ef container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:13:50.446
  Aug 18 22:13:50.464: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8966" for this suite. @ 08/18/23 22:13:50.467
• [4.103 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 08/18/23 22:13:50.474
  Aug 18 22:13:50.474: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename custom-resource-definition @ 08/18/23 22:13:50.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:13:50.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:13:50.496
  Aug 18 22:13:50.498: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:13:56.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-361" for this suite. @ 08/18/23 22:13:56.697
• [6.230 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 08/18/23 22:13:56.705
  Aug 18 22:13:56.705: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename podtemplate @ 08/18/23 22:13:56.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:13:56.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:13:56.727
  STEP: Create a pod template @ 08/18/23 22:13:56.729
  STEP: Replace a pod template @ 08/18/23 22:13:56.734
  Aug 18 22:13:56.741: INFO: Found updated podtemplate annotation: "true"

  Aug 18 22:13:56.741: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2784" for this suite. @ 08/18/23 22:13:56.746
• [0.046 seconds]
------------------------------
SS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 08/18/23 22:13:56.751
  Aug 18 22:13:56.751: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename prestop @ 08/18/23 22:13:56.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:13:56.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:13:56.772
  STEP: Creating server pod server in namespace prestop-1257 @ 08/18/23 22:13:56.774
  STEP: Waiting for pods to come up. @ 08/18/23 22:13:56.781
  STEP: Creating tester pod tester in namespace prestop-1257 @ 08/18/23 22:13:58.795
  STEP: Deleting pre-stop pod @ 08/18/23 22:14:00.812
  Aug 18 22:14:05.827: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Aug 18 22:14:05.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 08/18/23 22:14:05.831
  STEP: Destroying namespace "prestop-1257" for this suite. @ 08/18/23 22:14:05.841
• [9.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 08/18/23 22:14:05.85
  Aug 18 22:14:05.850: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename containers @ 08/18/23 22:14:05.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:14:05.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:14:05.868
  STEP: Creating a pod to test override command @ 08/18/23 22:14:05.871
  STEP: Saw pod success @ 08/18/23 22:14:09.893
  Aug 18 22:14:09.897: INFO: Trying to get logs from node ip-172-31-15-95 pod client-containers-d426bbdf-43d2-42d7-8a35-1d7bddabab55 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:14:09.914
  Aug 18 22:14:09.927: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5118" for this suite. @ 08/18/23 22:14:09.93
• [4.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 08/18/23 22:14:09.937
  Aug 18 22:14:09.937: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:14:09.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:14:09.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:14:09.956
  STEP: Setting up server cert @ 08/18/23 22:14:09.981
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:14:10.382
  STEP: Deploying the webhook pod @ 08/18/23 22:14:10.39
  STEP: Wait for the deployment to be ready @ 08/18/23 22:14:10.403
  Aug 18 22:14:10.411: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 08/18/23 22:14:12.423
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:14:12.433
  Aug 18 22:14:13.434: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 08/18/23 22:14:13.443
  STEP: create a configmap that should be updated by the webhook @ 08/18/23 22:14:13.466
  Aug 18 22:14:13.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7104" for this suite. @ 08/18/23 22:14:13.546
  STEP: Destroying namespace "webhook-markers-1722" for this suite. @ 08/18/23 22:14:13.554
• [3.622 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 08/18/23 22:14:13.575
  Aug 18 22:14:13.575: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:14:13.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:14:13.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:14:13.595
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:14:13.598
  STEP: Saw pod success @ 08/18/23 22:14:17.621
  Aug 18 22:14:17.625: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-9125f2b3-c62f-4246-8562-82459c890b43 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:14:17.632
  Aug 18 22:14:17.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2842" for this suite. @ 08/18/23 22:14:17.648
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 08/18/23 22:14:17.658
  Aug 18 22:14:17.658: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subpath @ 08/18/23 22:14:17.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:14:17.676
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:14:17.679
  STEP: Setting up data @ 08/18/23 22:14:17.681
  STEP: Creating pod pod-subpath-test-projected-sdw6 @ 08/18/23 22:14:17.69
  STEP: Creating a pod to test atomic-volume-subpath @ 08/18/23 22:14:17.69
  STEP: Saw pod success @ 08/18/23 22:14:41.763
  Aug 18 22:14:41.767: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-subpath-test-projected-sdw6 container test-container-subpath-projected-sdw6: <nil>
  STEP: delete the pod @ 08/18/23 22:14:41.774
  STEP: Deleting pod pod-subpath-test-projected-sdw6 @ 08/18/23 22:14:41.787
  Aug 18 22:14:41.787: INFO: Deleting pod "pod-subpath-test-projected-sdw6" in namespace "subpath-8701"
  Aug 18 22:14:41.791: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8701" for this suite. @ 08/18/23 22:14:41.795
• [24.144 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 08/18/23 22:14:41.802
  Aug 18 22:14:41.802: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subpath @ 08/18/23 22:14:41.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:14:41.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:14:41.824
  STEP: Setting up data @ 08/18/23 22:14:41.827
  STEP: Creating pod pod-subpath-test-configmap-vq4j @ 08/18/23 22:14:41.836
  STEP: Creating a pod to test atomic-volume-subpath @ 08/18/23 22:14:41.836
  STEP: Saw pod success @ 08/18/23 22:15:05.904
  Aug 18 22:15:05.907: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-subpath-test-configmap-vq4j container test-container-subpath-configmap-vq4j: <nil>
  STEP: delete the pod @ 08/18/23 22:15:05.914
  STEP: Deleting pod pod-subpath-test-configmap-vq4j @ 08/18/23 22:15:05.93
  Aug 18 22:15:05.930: INFO: Deleting pod "pod-subpath-test-configmap-vq4j" in namespace "subpath-7602"
  Aug 18 22:15:05.933: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7602" for this suite. @ 08/18/23 22:15:05.938
• [24.143 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 08/18/23 22:15:05.946
  Aug 18 22:15:05.946: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename events @ 08/18/23 22:15:05.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:05.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:05.968
  STEP: creating a test event @ 08/18/23 22:15:05.971
  STEP: listing events in all namespaces @ 08/18/23 22:15:05.979
  STEP: listing events in test namespace @ 08/18/23 22:15:05.983
  STEP: listing events with field selection filtering on source @ 08/18/23 22:15:05.987
  STEP: listing events with field selection filtering on reportingController @ 08/18/23 22:15:05.989
  STEP: getting the test event @ 08/18/23 22:15:05.992
  STEP: patching the test event @ 08/18/23 22:15:05.995
  STEP: getting the test event @ 08/18/23 22:15:06.004
  STEP: updating the test event @ 08/18/23 22:15:06.007
  STEP: getting the test event @ 08/18/23 22:15:06.014
  STEP: deleting the test event @ 08/18/23 22:15:06.017
  STEP: listing events in all namespaces @ 08/18/23 22:15:06.025
  STEP: listing events in test namespace @ 08/18/23 22:15:06.03
  Aug 18 22:15:06.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-3216" for this suite. @ 08/18/23 22:15:06.036
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 08/18/23 22:15:06.043
  Aug 18 22:15:06.043: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 22:15:06.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:06.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:06.061
  STEP: Creating pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125 @ 08/18/23 22:15:06.063
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 22:15:08.079
  Aug 18 22:15:08.083: INFO: Initial restart count of pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 is 0
  Aug 18 22:15:08.086: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:10.091: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:12.095: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:14.100: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:16.105: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:18.110: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:20.113: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:22.118: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:24.124: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:26.128: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:28.134: INFO: Get pod liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 in namespace container-probe-6125
  Aug 18 22:15:28.134: INFO: Restart count of pod container-probe-6125/liveness-428db77f-df2d-401e-932f-ebb43ba2b6c6 is now 1 (20.050606622s elapsed)
  Aug 18 22:15:28.134: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:15:28.14
  STEP: Destroying namespace "container-probe-6125" for this suite. @ 08/18/23 22:15:28.149
• [22.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 08/18/23 22:15:28.158
  Aug 18 22:15:28.158: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename field-validation @ 08/18/23 22:15:28.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:28.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:28.18
  Aug 18 22:15:28.183: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  W0818 22:15:30.727187      19 warnings.go:70] unknown field "alpha"
  W0818 22:15:30.727209      19 warnings.go:70] unknown field "beta"
  W0818 22:15:30.727215      19 warnings.go:70] unknown field "delta"
  W0818 22:15:30.727219      19 warnings.go:70] unknown field "epsilon"
  W0818 22:15:30.727224      19 warnings.go:70] unknown field "gamma"
  Aug 18 22:15:31.259: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4866" for this suite. @ 08/18/23 22:15:31.277
• [3.126 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 08/18/23 22:15:31.285
  Aug 18 22:15:31.285: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:15:31.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:31.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:31.309
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-2c1761ee-1a65-4ca7-ae0e-d84708a5351b @ 08/18/23 22:15:31.315
  STEP: Creating the pod @ 08/18/23 22:15:31.318
  STEP: Updating configmap projected-configmap-test-upd-2c1761ee-1a65-4ca7-ae0e-d84708a5351b @ 08/18/23 22:15:33.342
  STEP: waiting to observe update in volume @ 08/18/23 22:15:33.353
  Aug 18 22:15:37.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9722" for this suite. @ 08/18/23 22:15:37.38
• [6.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 08/18/23 22:15:37.387
  Aug 18 22:15:37.387: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:15:37.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:37.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:37.406
  STEP: starting the proxy server @ 08/18/23 22:15:37.409
  Aug 18 22:15:37.409: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9425 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 08/18/23 22:15:37.441
  Aug 18 22:15:37.449: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9425" for this suite. @ 08/18/23 22:15:37.452
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 08/18/23 22:15:37.459
  Aug 18 22:15:37.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 08/18/23 22:15:37.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:37.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:37.479
  STEP: creating a target pod @ 08/18/23 22:15:37.482
  STEP: adding an ephemeral container @ 08/18/23 22:15:39.501
  STEP: checking pod container endpoints @ 08/18/23 22:15:41.517
  Aug 18 22:15:41.517: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5260 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Aug 18 22:15:41.517: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:15:41.518: INFO: ExecWithOptions: Clientset creation
  Aug 18 22:15:41.518: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-5260/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Aug 18 22:15:41.589: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 08/18/23 22:15:41.598
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 08/18/23 22:15:41.602
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 08/18/23 22:15:41.613
  Aug 18 22:15:41.616: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5260" for this suite. @ 08/18/23 22:15:41.62
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 08/18/23 22:15:41.628
  Aug 18 22:15:41.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename subpath @ 08/18/23 22:15:41.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:15:41.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:15:41.65
  STEP: Setting up data @ 08/18/23 22:15:41.653
  STEP: Creating pod pod-subpath-test-secret-wclg @ 08/18/23 22:15:41.663
  STEP: Creating a pod to test atomic-volume-subpath @ 08/18/23 22:15:41.663
  STEP: Saw pod success @ 08/18/23 22:16:05.734
  Aug 18 22:16:05.738: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-subpath-test-secret-wclg container test-container-subpath-secret-wclg: <nil>
  STEP: delete the pod @ 08/18/23 22:16:05.755
  STEP: Deleting pod pod-subpath-test-secret-wclg @ 08/18/23 22:16:05.769
  Aug 18 22:16:05.769: INFO: Deleting pod "pod-subpath-test-secret-wclg" in namespace "subpath-1103"
  Aug 18 22:16:05.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1103" for this suite. @ 08/18/23 22:16:05.776
• [24.154 seconds]
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 08/18/23 22:16:05.782
  Aug 18 22:16:05.782: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:16:05.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:16:05.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:16:05.802
  STEP: creating an Endpoint @ 08/18/23 22:16:05.808
  STEP: waiting for available Endpoint @ 08/18/23 22:16:05.813
  STEP: listing all Endpoints @ 08/18/23 22:16:05.814
  STEP: updating the Endpoint @ 08/18/23 22:16:05.817
  STEP: fetching the Endpoint @ 08/18/23 22:16:05.823
  STEP: patching the Endpoint @ 08/18/23 22:16:05.827
  STEP: fetching the Endpoint @ 08/18/23 22:16:05.833
  STEP: deleting the Endpoint by Collection @ 08/18/23 22:16:05.836
  STEP: waiting for Endpoint deletion @ 08/18/23 22:16:05.845
  STEP: fetching the Endpoint @ 08/18/23 22:16:05.846
  Aug 18 22:16:05.850: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8268" for this suite. @ 08/18/23 22:16:05.854
• [0.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 08/18/23 22:16:05.862
  Aug 18 22:16:05.862: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:16:05.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:16:05.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:16:05.882
  STEP: Creating the pod @ 08/18/23 22:16:05.885
  Aug 18 22:16:08.426: INFO: Successfully updated pod "annotationupdate3cb46a15-d845-4d3e-8e8f-8319432a1c68"
  Aug 18 22:16:10.440: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8401" for this suite. @ 08/18/23 22:16:10.445
• [4.589 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 08/18/23 22:16:10.452
  Aug 18 22:16:10.452: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-watch @ 08/18/23 22:16:10.453
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:16:10.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:16:10.475
  Aug 18 22:16:10.478: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Creating first CR  @ 08/18/23 22:16:13.022
  Aug 18 22:16:13.027: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:13Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:13Z]] name:name1 resourceVersion:39084 uid:74439d81-dfc1-48c5-a9a3-20cf67c2c455] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 08/18/23 22:16:23.027
  Aug 18 22:16:23.034: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:23Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:23Z]] name:name2 resourceVersion:39130 uid:b09cf43c-46ea-4e90-82a4-034b52b3fd97] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 08/18/23 22:16:33.035
  Aug 18 22:16:33.042: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:33Z]] name:name1 resourceVersion:39153 uid:74439d81-dfc1-48c5-a9a3-20cf67c2c455] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 08/18/23 22:16:43.042
  Aug 18 22:16:43.049: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:43Z]] name:name2 resourceVersion:39173 uid:b09cf43c-46ea-4e90-82a4-034b52b3fd97] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 08/18/23 22:16:53.05
  Aug 18 22:16:53.058: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:13Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:33Z]] name:name1 resourceVersion:39193 uid:74439d81-dfc1-48c5-a9a3-20cf67c2c455] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 08/18/23 22:17:03.059
  Aug 18 22:17:03.069: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-08-18T22:16:23Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-08-18T22:16:43Z]] name:name2 resourceVersion:39215 uid:b09cf43c-46ea-4e90-82a4-034b52b3fd97] num:map[num1:9223372036854775807 num2:1000000]]}
  Aug 18 22:17:13.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-785" for this suite. @ 08/18/23 22:17:13.59
• [63.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 08/18/23 22:17:13.598
  Aug 18 22:17:13.598: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename security-context-test @ 08/18/23 22:17:13.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:17:13.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:17:13.62
  Aug 18 22:17:17.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2798" for this suite. @ 08/18/23 22:17:17.65
• [4.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 08/18/23 22:17:17.657
  Aug 18 22:17:17.657: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 22:17:17.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:17:17.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:17:17.676
  STEP: Creating a job @ 08/18/23 22:17:17.679
  STEP: Ensuring active pods == parallelism @ 08/18/23 22:17:17.686
  STEP: Orphaning one of the Job's Pods @ 08/18/23 22:17:19.69
  Aug 18 22:17:20.205: INFO: Successfully updated pod "adopt-release-k6s6t"
  STEP: Checking that the Job readopts the Pod @ 08/18/23 22:17:20.205
  STEP: Removing the labels from the Job's Pod @ 08/18/23 22:17:22.214
  Aug 18 22:17:22.725: INFO: Successfully updated pod "adopt-release-k6s6t"
  STEP: Checking that the Job releases the Pod @ 08/18/23 22:17:22.725
  Aug 18 22:17:24.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2762" for this suite. @ 08/18/23 22:17:24.739
• [7.087 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 08/18/23 22:17:24.745
  Aug 18 22:17:24.745: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-runtime @ 08/18/23 22:17:24.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:17:24.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:17:24.764
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 08/18/23 22:17:24.774
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 08/18/23 22:17:43.866
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 08/18/23 22:17:43.87
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 08/18/23 22:17:43.878
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 08/18/23 22:17:43.878
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 08/18/23 22:17:43.901
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 08/18/23 22:17:46.925
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 08/18/23 22:17:47.934
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 08/18/23 22:17:47.94
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 08/18/23 22:17:47.941
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 08/18/23 22:17:47.965
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 08/18/23 22:17:48.974
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 08/18/23 22:17:50.989
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 08/18/23 22:17:50.996
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 08/18/23 22:17:50.996
  Aug 18 22:17:51.011: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2788" for this suite. @ 08/18/23 22:17:51.032
• [26.295 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 08/18/23 22:17:51.04
  Aug 18 22:17:51.040: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 22:17:51.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:17:51.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:17:51.061
  STEP: Creating a pod to test substitution in volume subpath @ 08/18/23 22:17:51.067
  STEP: Saw pod success @ 08/18/23 22:17:55.092
  Aug 18 22:17:55.095: INFO: Trying to get logs from node ip-172-31-20-82 pod var-expansion-4b164a58-f444-46b8-9ae4-43e9b75955de container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 22:17:55.11
  Aug 18 22:17:55.127: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3949" for this suite. @ 08/18/23 22:17:55.131
• [4.098 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 08/18/23 22:17:55.138
  Aug 18 22:17:55.138: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename crd-publish-openapi @ 08/18/23 22:17:55.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:17:55.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:17:55.161
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 08/18/23 22:17:55.164
  Aug 18 22:17:55.165: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:17:56.540: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  Aug 18 22:18:01.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-378" for this suite. @ 08/18/23 22:18:01.751
• [6.620 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 08/18/23 22:18:01.759
  Aug 18 22:18:01.759: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:18:01.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:01.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:01.774
  STEP: creating a replication controller @ 08/18/23 22:18:01.778
  Aug 18 22:18:01.778: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 create -f -'
  Aug 18 22:18:01.913: INFO: stderr: ""
  Aug 18 22:18:01.913: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/18/23 22:18:01.913
  Aug 18 22:18:01.913: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:01.966: INFO: stderr: ""
  Aug 18 22:18:01.966: INFO: stdout: "update-demo-nautilus-5x945 update-demo-nautilus-n8znz "
  Aug 18 22:18:01.966: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-5x945 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:02.012: INFO: stderr: ""
  Aug 18 22:18:02.012: INFO: stdout: ""
  Aug 18 22:18:02.012: INFO: update-demo-nautilus-5x945 is created but not running
  Aug 18 22:18:07.012: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:07.063: INFO: stderr: ""
  Aug 18 22:18:07.063: INFO: stdout: "update-demo-nautilus-5x945 update-demo-nautilus-n8znz "
  Aug 18 22:18:07.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-5x945 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:07.108: INFO: stderr: ""
  Aug 18 22:18:07.108: INFO: stdout: ""
  Aug 18 22:18:07.108: INFO: update-demo-nautilus-5x945 is created but not running
  Aug 18 22:18:12.109: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:12.156: INFO: stderr: ""
  Aug 18 22:18:12.156: INFO: stdout: "update-demo-nautilus-5x945 update-demo-nautilus-n8znz "
  Aug 18 22:18:12.156: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-5x945 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:12.203: INFO: stderr: ""
  Aug 18 22:18:12.203: INFO: stdout: "true"
  Aug 18 22:18:12.203: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-5x945 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:12.249: INFO: stderr: ""
  Aug 18 22:18:12.249: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:12.249: INFO: validating pod update-demo-nautilus-5x945
  Aug 18 22:18:12.255: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:12.255: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:12.255: INFO: update-demo-nautilus-5x945 is verified up and running
  Aug 18 22:18:12.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:12.299: INFO: stderr: ""
  Aug 18 22:18:12.299: INFO: stdout: "true"
  Aug 18 22:18:12.299: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:12.345: INFO: stderr: ""
  Aug 18 22:18:12.345: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:12.345: INFO: validating pod update-demo-nautilus-n8znz
  Aug 18 22:18:12.349: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:12.349: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:12.349: INFO: update-demo-nautilus-n8znz is verified up and running
  STEP: scaling down the replication controller @ 08/18/23 22:18:12.349
  Aug 18 22:18:12.350: INFO: scanned /root for discovery docs: <nil>
  Aug 18 22:18:12.350: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Aug 18 22:18:13.414: INFO: stderr: ""
  Aug 18 22:18:13.414: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/18/23 22:18:13.414
  Aug 18 22:18:13.414: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:13.463: INFO: stderr: ""
  Aug 18 22:18:13.463: INFO: stdout: "update-demo-nautilus-5x945 update-demo-nautilus-n8znz "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 08/18/23 22:18:13.463
  Aug 18 22:18:18.463: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:18.510: INFO: stderr: ""
  Aug 18 22:18:18.510: INFO: stdout: "update-demo-nautilus-n8znz "
  Aug 18 22:18:18.510: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:18.555: INFO: stderr: ""
  Aug 18 22:18:18.555: INFO: stdout: "true"
  Aug 18 22:18:18.555: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:18.602: INFO: stderr: ""
  Aug 18 22:18:18.602: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:18.603: INFO: validating pod update-demo-nautilus-n8znz
  Aug 18 22:18:18.607: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:18.607: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:18.607: INFO: update-demo-nautilus-n8znz is verified up and running
  STEP: scaling up the replication controller @ 08/18/23 22:18:18.607
  Aug 18 22:18:18.608: INFO: scanned /root for discovery docs: <nil>
  Aug 18 22:18:18.608: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Aug 18 22:18:19.673: INFO: stderr: ""
  Aug 18 22:18:19.673: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/18/23 22:18:19.673
  Aug 18 22:18:19.673: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:19.721: INFO: stderr: ""
  Aug 18 22:18:19.721: INFO: stdout: "update-demo-nautilus-n8znz update-demo-nautilus-nbhb9 "
  Aug 18 22:18:19.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:19.767: INFO: stderr: ""
  Aug 18 22:18:19.767: INFO: stdout: "true"
  Aug 18 22:18:19.767: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:19.813: INFO: stderr: ""
  Aug 18 22:18:19.813: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:19.813: INFO: validating pod update-demo-nautilus-n8znz
  Aug 18 22:18:19.816: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:19.816: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:19.816: INFO: update-demo-nautilus-n8znz is verified up and running
  Aug 18 22:18:19.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-nbhb9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:19.861: INFO: stderr: ""
  Aug 18 22:18:19.861: INFO: stdout: ""
  Aug 18 22:18:19.861: INFO: update-demo-nautilus-nbhb9 is created but not running
  Aug 18 22:18:24.862: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:18:24.909: INFO: stderr: ""
  Aug 18 22:18:24.909: INFO: stdout: "update-demo-nautilus-n8znz update-demo-nautilus-nbhb9 "
  Aug 18 22:18:24.909: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:24.968: INFO: stderr: ""
  Aug 18 22:18:24.968: INFO: stdout: "true"
  Aug 18 22:18:24.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-n8znz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:25.013: INFO: stderr: ""
  Aug 18 22:18:25.013: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:25.013: INFO: validating pod update-demo-nautilus-n8znz
  Aug 18 22:18:25.018: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:25.018: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:25.018: INFO: update-demo-nautilus-n8znz is verified up and running
  Aug 18 22:18:25.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-nbhb9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:18:25.064: INFO: stderr: ""
  Aug 18 22:18:25.064: INFO: stdout: "true"
  Aug 18 22:18:25.064: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods update-demo-nautilus-nbhb9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:18:25.111: INFO: stderr: ""
  Aug 18 22:18:25.111: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:18:25.111: INFO: validating pod update-demo-nautilus-nbhb9
  Aug 18 22:18:25.115: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:18:25.115: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:18:25.115: INFO: update-demo-nautilus-nbhb9 is verified up and running
  STEP: using delete to clean up resources @ 08/18/23 22:18:25.115
  Aug 18 22:18:25.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 delete --grace-period=0 --force -f -'
  Aug 18 22:18:25.166: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 22:18:25.166: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 18 22:18:25.166: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get rc,svc -l name=update-demo --no-headers'
  Aug 18 22:18:25.234: INFO: stderr: "No resources found in kubectl-29 namespace.\n"
  Aug 18 22:18:25.234: INFO: stdout: ""
  Aug 18 22:18:25.234: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-29 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 18 22:18:25.310: INFO: stderr: ""
  Aug 18 22:18:25.310: INFO: stdout: ""
  Aug 18 22:18:25.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-29" for this suite. @ 08/18/23 22:18:25.315
• [23.564 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 08/18/23 22:18:25.323
  Aug 18 22:18:25.323: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:18:25.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:25.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:25.346
  STEP: Setting up server cert @ 08/18/23 22:18:25.369
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:18:25.579
  STEP: Deploying the webhook pod @ 08/18/23 22:18:25.585
  STEP: Wait for the deployment to be ready @ 08/18/23 22:18:25.597
  Aug 18 22:18:25.603: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 22:18:27.612
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:18:27.627
  Aug 18 22:18:28.628: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 08/18/23 22:18:28.636
  STEP: create a pod that should be updated by the webhook @ 08/18/23 22:18:28.652
  Aug 18 22:18:28.665: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9935" for this suite. @ 08/18/23 22:18:28.722
  STEP: Destroying namespace "webhook-markers-7036" for this suite. @ 08/18/23 22:18:28.732
• [3.414 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 08/18/23 22:18:28.738
  Aug 18 22:18:28.738: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename endpointslicemirroring @ 08/18/23 22:18:28.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:28.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:28.757
  STEP: mirroring a new custom Endpoint @ 08/18/23 22:18:28.769
  Aug 18 22:18:28.777: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 08/18/23 22:18:30.782
  STEP: mirroring deletion of a custom Endpoint @ 08/18/23 22:18:30.791
  Aug 18 22:18:30.801: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Aug 18 22:18:32.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6912" for this suite. @ 08/18/23 22:18:32.812
• [4.080 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 08/18/23 22:18:32.818
  Aug 18 22:18:32.818: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:18:32.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:32.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:32.838
  STEP: Starting the proxy @ 08/18/23 22:18:32.84
  Aug 18 22:18:32.841: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-162 proxy --unix-socket=/tmp/kubectl-proxy-unix961028553/test'
  STEP: retrieving proxy /api/ output @ 08/18/23 22:18:32.873
  Aug 18 22:18:32.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-162" for this suite. @ 08/18/23 22:18:32.877
• [0.065 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 08/18/23 22:18:32.884
  Aug 18 22:18:32.884: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:18:32.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:32.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:32.898
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 08/18/23 22:18:32.902
  STEP: Saw pod success @ 08/18/23 22:18:36.925
  Aug 18 22:18:36.928: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-7c40918a-3721-415f-b598-89004e103862 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:18:36.944
  Aug 18 22:18:36.956: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9035" for this suite. @ 08/18/23 22:18:36.959
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 08/18/23 22:18:36.968
  Aug 18 22:18:36.968: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 22:18:36.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:18:36.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:18:36.984
  STEP: Creating pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755 @ 08/18/23 22:18:36.987
  STEP: checking the pod's current state and verifying that restartCount is present @ 08/18/23 22:18:39.008
  Aug 18 22:18:39.012: INFO: Initial restart count of pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is 0
  Aug 18 22:18:39.015: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:41.019: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:43.025: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:45.032: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:47.036: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:49.042: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:51.048: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:53.051: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:55.055: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:57.059: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:59.067: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:18:59.067: INFO: Restart count of pod container-probe-4755/liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is now 1 (20.055373162s elapsed)
  Aug 18 22:19:01.072: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:03.076: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:05.080: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:07.085: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:09.090: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:11.095: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:13.098: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:15.104: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:17.109: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:19.115: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:19.115: INFO: Restart count of pod container-probe-4755/liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is now 2 (40.102725468s elapsed)
  Aug 18 22:19:21.120: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:23.123: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:25.127: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:27.133: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:29.138: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:31.142: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:33.148: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:35.152: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:37.159: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:39.164: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:39.164: INFO: Restart count of pod container-probe-4755/liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is now 3 (1m0.151941256s elapsed)
  Aug 18 22:19:41.170: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:43.175: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:45.180: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:47.184: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:49.190: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:51.196: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:53.200: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:55.205: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:57.209: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:59.213: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:19:59.213: INFO: Restart count of pod container-probe-4755/liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is now 4 (1m20.201315518s elapsed)
  Aug 18 22:20:01.220: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:03.226: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:05.231: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:07.237: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:09.241: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:11.246: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:13.251: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:15.256: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:17.261: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:19.265: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:21.270: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:23.275: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:25.278: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:27.282: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:29.288: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:31.298: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:33.303: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:35.309: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:37.314: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:39.320: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:41.324: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:43.329: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:45.333: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:47.338: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:49.345: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:51.349: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:53.354: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:55.360: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:57.365: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:20:59.372: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:21:01.377: INFO: Get pod liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 in namespace container-probe-4755
  Aug 18 22:21:01.377: INFO: Restart count of pod container-probe-4755/liveness-3baa2d3a-96d7-42e3-b07b-4a01e27c55b1 is now 5 (2m22.364496439s elapsed)
  Aug 18 22:21:01.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:21:01.381
  STEP: Destroying namespace "container-probe-4755" for this suite. @ 08/18/23 22:21:01.396
• [144.435 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 08/18/23 22:21:01.403
  Aug 18 22:21:01.403: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir-wrapper @ 08/18/23 22:21:01.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:01.417
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:01.423
  Aug 18 22:21:03.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 08/18/23 22:21:03.457
  STEP: Cleaning up the configmap @ 08/18/23 22:21:03.464
  STEP: Cleaning up the pod @ 08/18/23 22:21:03.471
  STEP: Destroying namespace "emptydir-wrapper-3793" for this suite. @ 08/18/23 22:21:03.484
• [2.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 08/18/23 22:21:03.491
  Aug 18 22:21:03.491: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:21:03.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:03.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:03.508
  STEP: creating Agnhost RC @ 08/18/23 22:21:03.511
  Aug 18 22:21:03.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9944 create -f -'
  Aug 18 22:21:03.656: INFO: stderr: ""
  Aug 18 22:21:03.656: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 08/18/23 22:21:03.656
  Aug 18 22:21:04.661: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:21:04.661: INFO: Found 1 / 1
  Aug 18 22:21:04.661: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 08/18/23 22:21:04.661
  Aug 18 22:21:04.664: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:21:04.664: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 18 22:21:04.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9944 patch pod agnhost-primary-tqkxd -p {"metadata":{"annotations":{"x":"y"}}}'
  Aug 18 22:21:04.717: INFO: stderr: ""
  Aug 18 22:21:04.717: INFO: stdout: "pod/agnhost-primary-tqkxd patched\n"
  STEP: checking annotations @ 08/18/23 22:21:04.717
  Aug 18 22:21:04.721: INFO: Selector matched 1 pods for map[app:agnhost]
  Aug 18 22:21:04.721: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Aug 18 22:21:04.721: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9944" for this suite. @ 08/18/23 22:21:04.726
• [1.241 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 08/18/23 22:21:04.732
  Aug 18 22:21:04.732: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:21:04.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:04.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:04.749
  STEP: Creating projection with secret that has name projected-secret-test-map-de12d229-37d4-4e21-a026-0e4e15f96435 @ 08/18/23 22:21:04.751
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:21:04.757
  STEP: Saw pod success @ 08/18/23 22:21:08.779
  Aug 18 22:21:08.781: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-projected-secrets-2dca3b0a-1a29-4cd5-8203-8764d26991d4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:21:08.799
  Aug 18 22:21:08.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2489" for this suite. @ 08/18/23 22:21:08.82
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 08/18/23 22:21:08.826
  Aug 18 22:21:08.826: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubelet-test @ 08/18/23 22:21:08.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:08.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:08.846
  Aug 18 22:21:10.887: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3143" for this suite. @ 08/18/23 22:21:10.892
• [2.073 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 08/18/23 22:21:10.899
  Aug 18 22:21:10.899: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 08/18/23 22:21:10.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:10.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:10.917
  STEP: create the container to handle the HTTPGet hook request. @ 08/18/23 22:21:10.923
  STEP: create the pod with lifecycle hook @ 08/18/23 22:21:12.95
  STEP: check poststart hook @ 08/18/23 22:21:14.966
  STEP: delete the pod with lifecycle hook @ 08/18/23 22:21:14.983
  Aug 18 22:21:19.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9392" for this suite. @ 08/18/23 22:21:19.008
• [8.117 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 08/18/23 22:21:19.016
  Aug 18 22:21:19.016: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:21:19.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:19.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:19.032
  STEP: Setting up server cert @ 08/18/23 22:21:19.058
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:21:19.455
  STEP: Deploying the webhook pod @ 08/18/23 22:21:19.464
  STEP: Wait for the deployment to be ready @ 08/18/23 22:21:19.476
  Aug 18 22:21:19.483: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 08/18/23 22:21:21.496
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:21:21.507
  Aug 18 22:21:22.507: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 08/18/23 22:21:22.516
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 08/18/23 22:21:22.534
  STEP: Creating a configMap that should not be mutated @ 08/18/23 22:21:22.539
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 08/18/23 22:21:22.55
  STEP: Creating a configMap that should be mutated @ 08/18/23 22:21:22.557
  Aug 18 22:21:22.578: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2255" for this suite. @ 08/18/23 22:21:22.622
  STEP: Destroying namespace "webhook-markers-8781" for this suite. @ 08/18/23 22:21:22.631
• [3.621 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 08/18/23 22:21:22.638
  Aug 18 22:21:22.638: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 22:21:22.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:22.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:22.655
  STEP: reading a file in the container @ 08/18/23 22:21:24.674
  Aug 18 22:21:24.674: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7147 pod-service-account-91577564-3c6d-4d00-8d07-5505eed8fdac -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 08/18/23 22:21:24.808
  Aug 18 22:21:24.808: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7147 pod-service-account-91577564-3c6d-4d00-8d07-5505eed8fdac -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 08/18/23 22:21:24.92
  Aug 18 22:21:24.920: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-7147 pod-service-account-91577564-3c6d-4d00-8d07-5505eed8fdac -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Aug 18 22:21:25.048: INFO: Got root ca configmap in namespace "svcaccounts-7147"
  Aug 18 22:21:25.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7147" for this suite. @ 08/18/23 22:21:25.053
• [2.421 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 08/18/23 22:21:25.059
  Aug 18 22:21:25.059: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:21:25.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:25.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:25.075
  STEP: Creating projection with secret that has name projected-secret-test-map-2d21fcba-853a-4ec4-b04e-4eb58dd5b25e @ 08/18/23 22:21:25.078
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:21:25.083
  STEP: Saw pod success @ 08/18/23 22:21:29.1
  Aug 18 22:21:29.103: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-secrets-793a8006-0c74-465a-8be1-0eed8cc34c12 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:21:29.111
  Aug 18 22:21:29.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-549" for this suite. @ 08/18/23 22:21:29.128
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 08/18/23 22:21:29.136
  Aug 18 22:21:29.136: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 22:21:29.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:29.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:29.155
  STEP: Creating ReplicationController "e2e-rc-dchcn" @ 08/18/23 22:21:29.157
  Aug 18 22:21:29.163: INFO: Get Replication Controller "e2e-rc-dchcn" to confirm replicas
  Aug 18 22:21:30.166: INFO: Get Replication Controller "e2e-rc-dchcn" to confirm replicas
  Aug 18 22:21:30.169: INFO: Found 1 replicas for "e2e-rc-dchcn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-dchcn" @ 08/18/23 22:21:30.169
  STEP: Updating a scale subresource @ 08/18/23 22:21:30.174
  STEP: Verifying replicas where modified for replication controller "e2e-rc-dchcn" @ 08/18/23 22:21:30.179
  Aug 18 22:21:30.179: INFO: Get Replication Controller "e2e-rc-dchcn" to confirm replicas
  Aug 18 22:21:31.181: INFO: Get Replication Controller "e2e-rc-dchcn" to confirm replicas
  Aug 18 22:21:31.185: INFO: Found 2 replicas for "e2e-rc-dchcn" replication controller
  Aug 18 22:21:31.185: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4343" for this suite. @ 08/18/23 22:21:31.188
• [2.060 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 08/18/23 22:21:31.196
  Aug 18 22:21:31.196: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:21:31.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:31.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:31.213
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-5168 @ 08/18/23 22:21:31.215
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 08/18/23 22:21:31.227
  STEP: creating service externalsvc in namespace services-5168 @ 08/18/23 22:21:31.227
  STEP: creating replication controller externalsvc in namespace services-5168 @ 08/18/23 22:21:31.244
  I0818 22:21:31.249728      19 runners.go:197] Created replication controller with name: externalsvc, namespace: services-5168, replica count: 2
  I0818 22:21:34.300613      19 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 08/18/23 22:21:34.306
  Aug 18 22:21:34.320: INFO: Creating new exec pod
  Aug 18 22:21:36.338: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-5168 exec execpodg5rx6 -- /bin/sh -x -c nslookup clusterip-service.services-5168.svc.cluster.local'
  Aug 18 22:21:36.496: INFO: stderr: "+ nslookup clusterip-service.services-5168.svc.cluster.local\n"
  Aug 18 22:21:36.496: INFO: stdout: "Server:\t\t10.152.183.183\nAddress:\t10.152.183.183#53\n\nclusterip-service.services-5168.svc.cluster.local\tcanonical name = externalsvc.services-5168.svc.cluster.local.\nName:\texternalsvc.services-5168.svc.cluster.local\nAddress: 10.152.183.154\n\n"
  Aug 18 22:21:36.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-5168, will wait for the garbage collector to delete the pods @ 08/18/23 22:21:36.5
  Aug 18 22:21:36.564: INFO: Deleting ReplicationController externalsvc took: 8.57115ms
  Aug 18 22:21:36.664: INFO: Terminating ReplicationController externalsvc pods took: 100.307231ms
  Aug 18 22:21:39.781: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-5168" for this suite. @ 08/18/23 22:21:39.795
• [8.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 08/18/23 22:21:39.808
  Aug 18 22:21:39.808: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:21:39.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:39.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:39.827
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:21:39.83
  STEP: Saw pod success @ 08/18/23 22:21:43.854
  Aug 18 22:21:43.857: INFO: Trying to get logs from node ip-172-31-20-82 pod downwardapi-volume-2f4e39f4-b26c-45b6-8235-56fb833f3561 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:21:43.865
  Aug 18 22:21:43.885: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1871" for this suite. @ 08/18/23 22:21:43.888
• [4.085 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 08/18/23 22:21:43.894
  Aug 18 22:21:43.894: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename discovery @ 08/18/23 22:21:43.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:43.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:43.911
  STEP: Setting up server cert @ 08/18/23 22:21:43.914
  STEP: Requesting APIResourceList from "/api/v1" @ 08/18/23 22:21:44.234
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 08/18/23 22:21:44.236
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 08/18/23 22:21:44.238
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 08/18/23 22:21:44.239
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 08/18/23 22:21:44.24
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 08/18/23 22:21:44.241
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 08/18/23 22:21:44.242
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 08/18/23 22:21:44.243
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 08/18/23 22:21:44.244
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 08/18/23 22:21:44.244
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 08/18/23 22:21:44.245
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 08/18/23 22:21:44.246
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 08/18/23 22:21:44.247
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 08/18/23 22:21:44.248
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 08/18/23 22:21:44.249
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 08/18/23 22:21:44.25
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 08/18/23 22:21:44.25
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 08/18/23 22:21:44.251
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 08/18/23 22:21:44.252
  Aug 18 22:21:44.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-6379" for this suite. @ 08/18/23 22:21:44.257
• [0.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 08/18/23 22:21:44.265
  Aug 18 22:21:44.265: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:21:44.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:44.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:44.284
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 08/18/23 22:21:44.286
  STEP: Saw pod success @ 08/18/23 22:21:48.311
  Aug 18 22:21:48.314: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-842838cf-045c-408c-ae6c-ddc6e9bdaab8 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:21:48.322
  Aug 18 22:21:48.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6924" for this suite. @ 08/18/23 22:21:48.341
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 08/18/23 22:21:48.348
  Aug 18 22:21:48.348: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename certificates @ 08/18/23 22:21:48.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:48.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:48.367
  STEP: getting /apis @ 08/18/23 22:21:48.823
  STEP: getting /apis/certificates.k8s.io @ 08/18/23 22:21:48.826
  STEP: getting /apis/certificates.k8s.io/v1 @ 08/18/23 22:21:48.827
  STEP: creating @ 08/18/23 22:21:48.828
  STEP: getting @ 08/18/23 22:21:48.844
  STEP: listing @ 08/18/23 22:21:48.85
  STEP: watching @ 08/18/23 22:21:48.852
  Aug 18 22:21:48.852: INFO: starting watch
  STEP: patching @ 08/18/23 22:21:48.853
  STEP: updating @ 08/18/23 22:21:48.86
  Aug 18 22:21:48.867: INFO: waiting for watch events with expected annotations
  Aug 18 22:21:48.867: INFO: saw patched and updated annotations
  STEP: getting /approval @ 08/18/23 22:21:48.868
  STEP: patching /approval @ 08/18/23 22:21:48.87
  STEP: updating /approval @ 08/18/23 22:21:48.876
  STEP: getting /status @ 08/18/23 22:21:48.882
  STEP: patching /status @ 08/18/23 22:21:48.885
  STEP: updating /status @ 08/18/23 22:21:48.893
  STEP: deleting @ 08/18/23 22:21:48.903
  STEP: deleting a collection @ 08/18/23 22:21:48.921
  Aug 18 22:21:48.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-7147" for this suite. @ 08/18/23 22:21:48.951
• [0.617 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 08/18/23 22:21:48.965
  Aug 18 22:21:48.965: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:21:48.966
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:48.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:48.986
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 08/18/23 22:21:48.99
  STEP: Saw pod success @ 08/18/23 22:21:53.019
  Aug 18 22:21:53.022: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-ca6df617-73b7-45a3-90c3-547baa8aff5a container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:21:53.028
  Aug 18 22:21:53.044: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6656" for this suite. @ 08/18/23 22:21:53.049
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 08/18/23 22:21:53.057
  Aug 18 22:21:53.057: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:21:53.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:53.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:53.076
  STEP: create deployment with httpd image @ 08/18/23 22:21:53.079
  Aug 18 22:21:53.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9593 create -f -'
  Aug 18 22:21:53.198: INFO: stderr: ""
  Aug 18 22:21:53.198: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 08/18/23 22:21:53.198
  Aug 18 22:21:53.198: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9593 diff -f -'
  Aug 18 22:21:53.304: INFO: rc: 1
  Aug 18 22:21:53.304: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-9593 delete -f -'
  Aug 18 22:21:53.355: INFO: stderr: ""
  Aug 18 22:21:53.355: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Aug 18 22:21:53.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9593" for this suite. @ 08/18/23 22:21:53.366
• [0.315 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 08/18/23 22:21:53.372
  Aug 18 22:21:53.372: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 22:21:53.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:53.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:53.39
  STEP: Create a Replicaset @ 08/18/23 22:21:53.397
  STEP: Verify that the required pods have come up. @ 08/18/23 22:21:53.401
  Aug 18 22:21:53.405: INFO: Pod name sample-pod: Found 0 pods out of 1
  Aug 18 22:21:58.410: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 22:21:58.41
  STEP: Getting /status @ 08/18/23 22:21:58.41
  Aug 18 22:21:58.415: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 08/18/23 22:21:58.415
  Aug 18 22:21:58.426: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 08/18/23 22:21:58.426
  Aug 18 22:21:58.428: INFO: Observed &ReplicaSet event: ADDED
  Aug 18 22:21:58.428: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.428: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.428: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.428: INFO: Found replicaset test-rs in namespace replicaset-4817 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Aug 18 22:21:58.428: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 08/18/23 22:21:58.428
  Aug 18 22:21:58.428: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Aug 18 22:21:58.434: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 08/18/23 22:21:58.434
  Aug 18 22:21:58.435: INFO: Observed &ReplicaSet event: ADDED
  Aug 18 22:21:58.436: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.436: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.436: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.436: INFO: Observed replicaset test-rs in namespace replicaset-4817 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Aug 18 22:21:58.436: INFO: Observed &ReplicaSet event: MODIFIED
  Aug 18 22:21:58.436: INFO: Found replicaset test-rs in namespace replicaset-4817 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Aug 18 22:21:58.436: INFO: Replicaset test-rs has a patched status
  Aug 18 22:21:58.436: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4817" for this suite. @ 08/18/23 22:21:58.441
• [5.075 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 08/18/23 22:21:58.449
  Aug 18 22:21:58.449: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 22:21:58.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:21:58.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:21:58.468
  STEP: Creating a test headless service @ 08/18/23 22:21:58.472
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-129 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-129;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-129 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-129;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-129.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-129.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-129.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-129.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-129.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-129.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-129.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-129.svc;check="$$(dig +notcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_tcp@PTR;sleep 1; done
   @ 08/18/23 22:21:58.494
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-129 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-129;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-129 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-129;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-129.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-129.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-129.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-129.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-129.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-129.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-129.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-129.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-129.svc;check="$$(dig +notcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_udp@PTR;check="$$(dig +tcp +noall +answer +search 110.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.110_tcp@PTR;sleep 1; done
   @ 08/18/23 22:21:58.494
  STEP: creating a pod to probe DNS @ 08/18/23 22:21:58.494
  STEP: submitting the pod to kubernetes @ 08/18/23 22:21:58.494
  STEP: retrieving the pod @ 08/18/23 22:22:00.519
  STEP: looking for the results for each expected name from probers @ 08/18/23 22:22:00.521
  Aug 18 22:22:00.526: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.533: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.536: INFO: Unable to read wheezy_udp@dns-test-service.dns-129 from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.540: INFO: Unable to read wheezy_tcp@dns-test-service.dns-129 from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.544: INFO: Unable to read wheezy_udp@dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.548: INFO: Unable to read wheezy_tcp@dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.551: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.556: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.573: INFO: Unable to read jessie_udp@dns-test-service from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.577: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.580: INFO: Unable to read jessie_udp@dns-test-service.dns-129 from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.584: INFO: Unable to read jessie_tcp@dns-test-service.dns-129 from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.588: INFO: Unable to read jessie_udp@dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.591: INFO: Unable to read jessie_tcp@dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.595: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.599: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-129.svc from pod dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd: the server could not find the requested resource (get pods dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd)
  Aug 18 22:22:00.612: INFO: Lookups using dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-129 wheezy_tcp@dns-test-service.dns-129 wheezy_udp@dns-test-service.dns-129.svc wheezy_tcp@dns-test-service.dns-129.svc wheezy_udp@_http._tcp.dns-test-service.dns-129.svc wheezy_tcp@_http._tcp.dns-test-service.dns-129.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-129 jessie_tcp@dns-test-service.dns-129 jessie_udp@dns-test-service.dns-129.svc jessie_tcp@dns-test-service.dns-129.svc jessie_udp@_http._tcp.dns-test-service.dns-129.svc jessie_tcp@_http._tcp.dns-test-service.dns-129.svc]

  Aug 18 22:22:00.620: INFO: Pod client logs for webserver: 
  Aug 18 22:22:00.627: INFO: Pod client logs for querier: 
  Aug 18 22:22:00.633: INFO: Pod client logs for jessie-querier: 
  Aug 18 22:22:05.722: INFO: DNS probes using dns-129/dns-test-08531d7a-84b0-4557-a3ff-546bfe21a1bd succeeded

  Aug 18 22:22:05.722: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:22:05.727
  STEP: deleting the test service @ 08/18/23 22:22:05.74
  STEP: deleting the test headless service @ 08/18/23 22:22:05.765
  STEP: Destroying namespace "dns-129" for this suite. @ 08/18/23 22:22:05.778
• [7.337 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 08/18/23 22:22:05.787
  Aug 18 22:22:05.787: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename ingressclass @ 08/18/23 22:22:05.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:05.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:05.806
  STEP: getting /apis @ 08/18/23 22:22:05.808
  STEP: getting /apis/networking.k8s.io @ 08/18/23 22:22:05.811
  STEP: getting /apis/networking.k8s.iov1 @ 08/18/23 22:22:05.812
  STEP: creating @ 08/18/23 22:22:05.813
  STEP: getting @ 08/18/23 22:22:05.827
  STEP: listing @ 08/18/23 22:22:05.829
  STEP: watching @ 08/18/23 22:22:05.833
  Aug 18 22:22:05.833: INFO: starting watch
  STEP: patching @ 08/18/23 22:22:05.834
  STEP: updating @ 08/18/23 22:22:05.84
  Aug 18 22:22:05.843: INFO: waiting for watch events with expected annotations
  Aug 18 22:22:05.844: INFO: saw patched and updated annotations
  STEP: deleting @ 08/18/23 22:22:05.844
  STEP: deleting a collection @ 08/18/23 22:22:05.856
  Aug 18 22:22:05.871: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-5762" for this suite. @ 08/18/23 22:22:05.874
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 08/18/23 22:22:05.882
  Aug 18 22:22:05.882: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 22:22:05.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:05.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:05.898
  STEP: Creating secret with name secret-test-ae79757e-0e39-4e25-96a8-829df921f955 @ 08/18/23 22:22:05.952
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:22:05.96
  STEP: Saw pod success @ 08/18/23 22:22:09.982
  Aug 18 22:22:09.986: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-37b5c6f0-4771-4bd9-871f-433e7a59c7f8 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:22:09.993
  Aug 18 22:22:10.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3584" for this suite. @ 08/18/23 22:22:10.017
• [4.141 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 08/18/23 22:22:10.023
  Aug 18 22:22:10.023: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 22:22:10.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:10.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:10.039
  STEP: Creating a test headless service @ 08/18/23 22:22:10.042
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local;sleep 1; done
   @ 08/18/23 22:22:10.048
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5460.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local;sleep 1; done
   @ 08/18/23 22:22:10.048
  STEP: creating a pod to probe DNS @ 08/18/23 22:22:10.048
  STEP: submitting the pod to kubernetes @ 08/18/23 22:22:10.048
  STEP: retrieving the pod @ 08/18/23 22:22:12.07
  STEP: looking for the results for each expected name from probers @ 08/18/23 22:22:12.073
  Aug 18 22:22:12.077: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.082: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.085: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.089: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.093: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.095: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.099: INFO: Unable to read jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.103: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local from pod dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484: the server could not find the requested resource (get pods dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484)
  Aug 18 22:22:12.103: INFO: Lookups using dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5460.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5460.svc.cluster.local jessie_udp@dns-test-service-2.dns-5460.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5460.svc.cluster.local]

  Aug 18 22:22:12.110: INFO: Pod client logs for webserver: 
  Aug 18 22:22:12.115: INFO: Pod client logs for querier: 
  Aug 18 22:22:12.122: INFO: Pod client logs for jessie-querier: 
  Aug 18 22:22:17.151: INFO: DNS probes using dns-5460/dns-test-09498b2c-4cee-45bd-87c2-1fe12fa84484 succeeded

  Aug 18 22:22:17.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:22:17.155
  STEP: deleting the test headless service @ 08/18/23 22:22:17.177
  STEP: Destroying namespace "dns-5460" for this suite. @ 08/18/23 22:22:17.19
• [7.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 08/18/23 22:22:17.202
  Aug 18 22:22:17.202: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 22:22:17.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:17.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:17.219
  STEP: creating a ReplicationController @ 08/18/23 22:22:17.225
  STEP: waiting for RC to be added @ 08/18/23 22:22:17.232
  STEP: waiting for available Replicas @ 08/18/23 22:22:17.233
  STEP: patching ReplicationController @ 08/18/23 22:22:18.763
  STEP: waiting for RC to be modified @ 08/18/23 22:22:18.769
  STEP: patching ReplicationController status @ 08/18/23 22:22:18.769
  STEP: waiting for RC to be modified @ 08/18/23 22:22:18.776
  STEP: waiting for available Replicas @ 08/18/23 22:22:18.776
  STEP: fetching ReplicationController status @ 08/18/23 22:22:18.781
  STEP: patching ReplicationController scale @ 08/18/23 22:22:18.785
  STEP: waiting for RC to be modified @ 08/18/23 22:22:18.792
  STEP: waiting for ReplicationController's scale to be the max amount @ 08/18/23 22:22:18.792
  STEP: fetching ReplicationController; ensuring that it's patched @ 08/18/23 22:22:19.647
  STEP: updating ReplicationController status @ 08/18/23 22:22:19.651
  STEP: waiting for RC to be modified @ 08/18/23 22:22:19.655
  STEP: listing all ReplicationControllers @ 08/18/23 22:22:19.657
  STEP: checking that ReplicationController has expected values @ 08/18/23 22:22:19.66
  STEP: deleting ReplicationControllers by collection @ 08/18/23 22:22:19.66
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 08/18/23 22:22:19.668
  Aug 18 22:22:19.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0818 22:22:19.689772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-9522" for this suite. @ 08/18/23 22:22:19.692
• [2.496 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 08/18/23 22:22:19.698
  Aug 18 22:22:19.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 22:22:19.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:19.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:19.714
  STEP: Creating secret with name secret-test-8b0860cc-ef41-49ab-9083-ad07ec4d6748 @ 08/18/23 22:22:19.716
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:22:19.721
  E0818 22:22:20.690095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:21.690194      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:22.690529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:23.691598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:23.745
  Aug 18 22:22:23.748: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-6c237ad1-7af6-4b35-919c-56cc7e9a8ebd container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:22:23.756
  Aug 18 22:22:23.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1706" for this suite. @ 08/18/23 22:22:23.773
• [4.081 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 08/18/23 22:22:23.78
  Aug 18 22:22:23.780: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:22:23.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:23.845
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:23.849
  STEP: Creating configMap with name configmap-test-volume-map-2ad0434c-08ba-473f-a610-0952707fba45 @ 08/18/23 22:22:23.857
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:22:23.868
  E0818 22:22:24.692025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:25.692242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:26.693275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:27.694263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:27.886
  Aug 18 22:22:27.891: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-configmaps-76d3ea79-f3c0-4f59-a290-900645e6e839 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:22:27.898
  Aug 18 22:22:27.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1804" for this suite. @ 08/18/23 22:22:27.915
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 08/18/23 22:22:27.922
  Aug 18 22:22:27.922: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:22:27.923
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:27.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:27.938
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 08/18/23 22:22:27.943
  E0818 22:22:28.694357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:29.694513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:29.959
  Aug 18 22:22:29.962: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-3bb048ba-3a89-440e-a916-01756f23d884 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:22:29.97
  Aug 18 22:22:29.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3729" for this suite. @ 08/18/23 22:22:29.987
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 08/18/23 22:22:29.997
  Aug 18 22:22:29.997: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:22:29.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:30.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:30.013
  STEP: Creating configMap with name projected-configmap-test-volume-547f354b-d1cf-41ea-9384-5e1d369158b8 @ 08/18/23 22:22:30.015
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:22:30.021
  E0818 22:22:30.694623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:31.694746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:32.695573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:33.695853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:34.04
  Aug 18 22:22:34.045: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-configmaps-763d08e8-319e-4a9f-87f5-31e71566f20b container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:22:34.051
  Aug 18 22:22:34.064: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4250" for this suite. @ 08/18/23 22:22:34.067
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 08/18/23 22:22:34.075
  Aug 18 22:22:34.075: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 22:22:34.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:34.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:34.093
  STEP: Creating secret with name secret-test-5655fb8a-d3a7-4d86-8d02-6ed21cb482d1 @ 08/18/23 22:22:34.114
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:22:34.119
  E0818 22:22:34.696640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:35.696780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:36.696853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:37.697325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:38.143
  Aug 18 22:22:38.146: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-secrets-37328bae-79e3-44b6-baae-86cd0be7bdae container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:22:38.154
  Aug 18 22:22:38.172: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2685" for this suite. @ 08/18/23 22:22:38.174
  STEP: Destroying namespace "secret-namespace-83" for this suite. @ 08/18/23 22:22:38.18
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 08/18/23 22:22:38.188
  Aug 18 22:22:38.188: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename emptydir @ 08/18/23 22:22:38.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:38.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:38.204
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 08/18/23 22:22:38.207
  E0818 22:22:38.698274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:39.698528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:40.698622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:41.698727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:42.232
  Aug 18 22:22:42.235: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-b2684972-4d54-4ffd-8e8d-443c3fa8df91 container test-container: <nil>
  STEP: delete the pod @ 08/18/23 22:22:42.243
  Aug 18 22:22:42.260: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5009" for this suite. @ 08/18/23 22:22:42.263
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 08/18/23 22:22:42.271
  Aug 18 22:22:42.271: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:22:42.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:42.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:42.286
  STEP: Creating projection with secret that has name projected-secret-test-d44c5a7e-16db-4f8c-a4ba-16a04871c565 @ 08/18/23 22:22:42.288
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:22:42.292
  E0818 22:22:42.699535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:43.699751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:44.699861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:45.699967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:22:46.313
  Aug 18 22:22:46.317: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-secrets-d5d3f106-6041-4194-a3a9-4fb8c2c8bf76 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:22:46.326
  Aug 18 22:22:46.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7907" for this suite. @ 08/18/23 22:22:46.342
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 08/18/23 22:22:46.352
  Aug 18 22:22:46.352: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 22:22:46.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:46.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:46.37
  STEP: creating a Namespace @ 08/18/23 22:22:46.373
  STEP: patching the Namespace @ 08/18/23 22:22:46.386
  STEP: get the Namespace and ensuring it has the label @ 08/18/23 22:22:46.394
  Aug 18 22:22:46.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9122" for this suite. @ 08/18/23 22:22:46.4
  STEP: Destroying namespace "nspatchtest-0d6b15ae-0e46-478c-ae22-b68eb539e1de-3470" for this suite. @ 08/18/23 22:22:46.407
• [0.062 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 08/18/23 22:22:46.415
  Aug 18 22:22:46.415: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename job @ 08/18/23 22:22:46.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:46.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:46.43
  STEP: Creating Indexed job @ 08/18/23 22:22:46.432
  STEP: Ensuring job reaches completions @ 08/18/23 22:22:46.439
  E0818 22:22:46.700413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:47.700569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:48.700662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:49.700761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:50.701603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:51.701825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:52.702451      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:53.702565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 08/18/23 22:22:54.443
  Aug 18 22:22:54.446: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7150" for this suite. @ 08/18/23 22:22:54.451
• [8.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 08/18/23 22:22:54.459
  Aug 18 22:22:54.459: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 22:22:54.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:54.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:54.478
  Aug 18 22:22:54.480: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: creating the pod @ 08/18/23 22:22:54.48
  STEP: submitting the pod to kubernetes @ 08/18/23 22:22:54.48
  E0818 22:22:54.703496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:55.703600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:22:56.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3729" for this suite. @ 08/18/23 22:22:56.521
• [2.068 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 08/18/23 22:22:56.528
  Aug 18 22:22:56.528: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:22:56.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:22:56.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:22:56.546
  STEP: creating service nodeport-test with type=NodePort in namespace services-7553 @ 08/18/23 22:22:56.549
  STEP: creating replication controller nodeport-test in namespace services-7553 @ 08/18/23 22:22:56.562
  I0818 22:22:56.571949      19 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-7553, replica count: 2
  E0818 22:22:56.703914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:57.704622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:22:58.704739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0818 22:22:59.622545      19 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 22:22:59.622: INFO: Creating new exec pod
  E0818 22:22:59.704952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:00.705091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:01.705224      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:02.641: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  E0818 22:23:02.706151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:02.768: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:02.768: INFO: stdout: ""
  E0818 22:23:03.706640      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:03.768: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Aug 18 22:23:03.884: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:03.884: INFO: stdout: "nodeport-test-k8djv"
  Aug 18 22:23:03.884: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  Aug 18 22:23:03.999: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.58 80\nConnection to 10.152.183.58 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:03.999: INFO: stdout: ""
  E0818 22:23:04.707706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:05.000: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.58 80'
  Aug 18 22:23:05.124: INFO: stderr: "+ nc -v -t -w 2 10.152.183.58 80\n+ echo hostName\nConnection to 10.152.183.58 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:05.124: INFO: stdout: "nodeport-test-zvf8b"
  Aug 18 22:23:05.124: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.95 31745'
  Aug 18 22:23:05.243: INFO: stderr: "+ nc -v -t -w 2 172.31.15.95 31745\nConnection to 172.31.15.95 31745 port [tcp/*] succeeded!\n+ echo hostName\n"
  Aug 18 22:23:05.243: INFO: stdout: ""
  E0818 22:23:05.708453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:06.244: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.95 31745'
  Aug 18 22:23:06.360: INFO: stderr: "+ nc -v -t -w 2 172.31.15.95 31745\nConnection to 172.31.15.95 31745 port [tcp/*] succeeded!\n+ echo hostName\n"
  Aug 18 22:23:06.360: INFO: stdout: "nodeport-test-k8djv"
  Aug 18 22:23:06.360: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-7553 exec execpodcgd52 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.82.98 31745'
  Aug 18 22:23:06.509: INFO: stderr: "+ nc -v -t -w 2 172.31.82.98 31745\n+ echo hostName\nConnection to 172.31.82.98 31745 port [tcp/*] succeeded!\n"
  Aug 18 22:23:06.509: INFO: stdout: "nodeport-test-zvf8b"
  Aug 18 22:23:06.509: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7553" for this suite. @ 08/18/23 22:23:06.514
• [9.993 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 08/18/23 22:23:06.521
  Aug 18 22:23:06.521: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename namespaces @ 08/18/23 22:23:06.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:06.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:06.539
  STEP: Creating a test namespace @ 08/18/23 22:23:06.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:06.557
  STEP: Creating a pod in the namespace @ 08/18/23 22:23:06.56
  STEP: Waiting for the pod to have running status @ 08/18/23 22:23:06.568
  E0818 22:23:06.708931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:07.708970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 08/18/23 22:23:08.577
  STEP: Waiting for the namespace to be removed. @ 08/18/23 22:23:08.584
  E0818 22:23:08.709429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:09.710290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:10.710539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:11.710974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:12.711077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:13.711474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:14.711805      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:15.712316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:16.712892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:17.713793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:18.714478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 08/18/23 22:23:19.587
  STEP: Verifying there are no pods in the namespace @ 08/18/23 22:23:19.603
  Aug 18 22:23:19.605: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3836" for this suite. @ 08/18/23 22:23:19.61
  STEP: Destroying namespace "nsdeletetest-8971" for this suite. @ 08/18/23 22:23:19.616
  Aug 18 22:23:19.619: INFO: Namespace nsdeletetest-8971 was already deleted
  STEP: Destroying namespace "nsdeletetest-7669" for this suite. @ 08/18/23 22:23:19.62
• [13.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 08/18/23 22:23:19.628
  Aug 18 22:23:19.628: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename configmap @ 08/18/23 22:23:19.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:19.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:19.642
  STEP: Creating configMap with name configmap-test-volume-c19f2417-8627-4d50-94af-eeb31a332ecf @ 08/18/23 22:23:19.645
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:23:19.652
  E0818 22:23:19.715370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:20.715650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:21.715817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:22.715993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:23:23.674
  Aug 18 22:23:23.677: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-configmaps-de62803d-971c-436f-97b6-13b8076b9682 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:23:23.691
  Aug 18 22:23:23.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7168" for this suite. @ 08/18/23 22:23:23.707
• [4.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 08/18/23 22:23:23.716
  Aug 18 22:23:23.716: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  E0818 22:23:23.716766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:23:23.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:23.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:23.732
  STEP: Creating configMap with name projected-configmap-test-volume-map-aa4b6763-8238-48a6-89bb-b74cdfaf0803 @ 08/18/23 22:23:23.737
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:23:23.742
  E0818 22:23:24.716926      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:25.717117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:26.717237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:27.717295      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:23:27.763
  Aug 18 22:23:27.766: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-configmaps-9d324fbe-cecc-439b-a9c8-9d5886314ab6 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:23:27.773
  Aug 18 22:23:27.787: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5588" for this suite. @ 08/18/23 22:23:27.79
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 08/18/23 22:23:27.799
  Aug 18 22:23:27.799: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename secrets @ 08/18/23 22:23:27.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:27.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:27.812
  STEP: Creating secret with name secret-test-map-48110d88-eabf-45e1-8c28-510450d7bb9d @ 08/18/23 22:23:27.815
  STEP: Creating a pod to test consume secrets @ 08/18/23 22:23:27.82
  E0818 22:23:28.718273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:29.718497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:30.718615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:31.718725      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:23:31.839
  Aug 18 22:23:31.844: INFO: Trying to get logs from node ip-172-31-20-82 pod pod-secrets-f7edc265-fa5e-4915-9608-e0e37c53b423 container secret-volume-test: <nil>
  STEP: delete the pod @ 08/18/23 22:23:31.85
  Aug 18 22:23:31.864: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3789" for this suite. @ 08/18/23 22:23:31.867
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 08/18/23 22:23:31.875
  Aug 18 22:23:31.875: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:23:31.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:31.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:31.89
  STEP: Creating configMap with name projected-configmap-test-volume-37d3d5b8-2fad-411a-985d-71b187879f26 @ 08/18/23 22:23:31.893
  STEP: Creating a pod to test consume configMaps @ 08/18/23 22:23:31.897
  E0818 22:23:32.719590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:33.719840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:34.719953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:35.720026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:23:35.921
  Aug 18 22:23:35.926: INFO: Trying to get logs from node ip-172-31-15-95 pod pod-projected-configmaps-663ad127-5597-47e6-ac3b-454e6aafc63b container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:23:35.935
  Aug 18 22:23:35.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3632" for this suite. @ 08/18/23 22:23:35.952
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 08/18/23 22:23:35.961
  Aug 18 22:23:35.961: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:23:35.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:35.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:35.976
  STEP: creating service multi-endpoint-test in namespace services-8507 @ 08/18/23 22:23:35.98
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8507 to expose endpoints map[] @ 08/18/23 22:23:35.993
  Aug 18 22:23:35.998: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0818 22:23:36.720449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:37.006: INFO: successfully validated that service multi-endpoint-test in namespace services-8507 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8507 @ 08/18/23 22:23:37.006
  E0818 22:23:37.721024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:38.722013      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8507 to expose endpoints map[pod1:[100]] @ 08/18/23 22:23:39.029
  Aug 18 22:23:39.040: INFO: successfully validated that service multi-endpoint-test in namespace services-8507 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-8507 @ 08/18/23 22:23:39.04
  E0818 22:23:39.722538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:40.722639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8507 to expose endpoints map[pod1:[100] pod2:[101]] @ 08/18/23 22:23:41.055
  Aug 18 22:23:41.067: INFO: successfully validated that service multi-endpoint-test in namespace services-8507 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 08/18/23 22:23:41.067
  Aug 18 22:23:41.067: INFO: Creating new exec pod
  E0818 22:23:41.722722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:42.723549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:43.723665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:44.081: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8507 exec execpodc64lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Aug 18 22:23:44.204: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:44.204: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:23:44.204: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8507 exec execpodc64lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.17 80'
  Aug 18 22:23:44.323: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.17 80\nConnection to 10.152.183.17 80 port [tcp/http] succeeded!\n"
  Aug 18 22:23:44.323: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:23:44.323: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8507 exec execpodc64lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Aug 18 22:23:44.441: INFO: stderr: "+ nc -v -t -w 2 multi-endpoint-test 81\n+ echo hostName\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Aug 18 22:23:44.441: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:23:44.441: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8507 exec execpodc64lr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.17 81'
  Aug 18 22:23:44.564: INFO: stderr: "+ nc -v -t -w 2 10.152.183.17 81\n+ echo hostName\nConnection to 10.152.183.17 81 port [tcp/*] succeeded!\n"
  Aug 18 22:23:44.564: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8507 @ 08/18/23 22:23:44.564
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8507 to expose endpoints map[pod2:[101]] @ 08/18/23 22:23:44.577
  E0818 22:23:44.723974      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:45.601: INFO: successfully validated that service multi-endpoint-test in namespace services-8507 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-8507 @ 08/18/23 22:23:45.601
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-8507 to expose endpoints map[] @ 08/18/23 22:23:45.612
  E0818 22:23:45.724463      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:46.633: INFO: successfully validated that service multi-endpoint-test in namespace services-8507 exposes endpoints map[]
  Aug 18 22:23:46.633: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8507" for this suite. @ 08/18/23 22:23:46.657
• [10.702 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 08/18/23 22:23:46.664
  Aug 18 22:23:46.664: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:23:46.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:46.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:46.681
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:23:46.683
  E0818 22:23:46.724478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:47.724617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:48.724661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:49.724788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:23:50.701
  Aug 18 22:23:50.705: INFO: Trying to get logs from node ip-172-31-20-82 pod downwardapi-volume-d45f264c-bbb9-4b99-ad46-874199665c40 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:23:50.711
  E0818 22:23:50.725702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:50.725: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1439" for this suite. @ 08/18/23 22:23:50.73
• [4.073 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 08/18/23 22:23:50.737
  Aug 18 22:23:50.737: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename tables @ 08/18/23 22:23:50.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:50.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:50.753
  Aug 18 22:23:50.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-5809" for this suite. @ 08/18/23 22:23:50.76
• [0.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 08/18/23 22:23:50.768
  Aug 18 22:23:50.768: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubelet-test @ 08/18/23 22:23:50.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:50.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:50.785
  STEP: Waiting for pod completion @ 08/18/23 22:23:50.797
  E0818 22:23:51.726534      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:52.727564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:53.727714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:54.727814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:23:54.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-779" for this suite. @ 08/18/23 22:23:54.824
• [4.064 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 08/18/23 22:23:54.832
  Aug 18 22:23:54.832: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 22:23:54.833
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:23:54.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:23:54.849
  E0818 22:23:55.727907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:56.728015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:57.728112      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:58.728210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:23:59.729170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:00.729276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:01.729384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:02.729593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:03.729649      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:04.730548      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:05.731324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:06.731877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:07.731993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:08.732371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:09.733070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:10.733174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:11.733504      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 08/18/23 22:24:11.855
  E0818 22:24:12.733909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:13.734079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:14.734496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:15.735569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:16.736635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 08/18/23 22:24:16.861
  STEP: Ensuring resource quota status is calculated @ 08/18/23 22:24:16.865
  E0818 22:24:17.737681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:18.737891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 08/18/23 22:24:18.871
  STEP: Ensuring resource quota status captures configMap creation @ 08/18/23 22:24:18.883
  E0818 22:24:19.737940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:20.738100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 08/18/23 22:24:20.887
  STEP: Ensuring resource quota status released usage @ 08/18/23 22:24:20.894
  E0818 22:24:21.738608      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:22.739596      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:24:22.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9103" for this suite. @ 08/18/23 22:24:22.901
• [28.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 08/18/23 22:24:22.909
  Aug 18 22:24:22.909: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 22:24:22.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:24:22.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:24:22.927
  STEP: create the deployment @ 08/18/23 22:24:22.929
  W0818 22:24:22.934488      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/18/23 22:24:22.934
  STEP: delete the deployment @ 08/18/23 22:24:23.049
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 08/18/23 22:24:23.057
  STEP: Gathering metrics @ 08/18/23 22:24:23.577
  W0818 22:24:23.581798      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 22:24:23.581: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 22:24:23.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4879" for this suite. @ 08/18/23 22:24:23.586
• [0.685 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 08/18/23 22:24:23.594
  Aug 18 22:24:23.594: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename container-probe @ 08/18/23 22:24:23.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:24:23.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:24:23.613
  E0818 22:24:23.739689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:24.739784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:25.739906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:26.739947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:27.740665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:28.740828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:29.741367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:30.741614      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:31.741914      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:32.742738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:33.743726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:34.743891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:35.744073      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:36.744286      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:37.744299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:38.744402      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:39.745283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:40.745389      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:41.745440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:42.745800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:43.746367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:44.746555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:24:45.684: INFO: Container started at 2023-08-18 22:24:24 +0000 UTC, pod became ready at 2023-08-18 22:24:43 +0000 UTC
  Aug 18 22:24:45.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5116" for this suite. @ 08/18/23 22:24:45.689
• [22.104 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 08/18/23 22:24:45.698
  Aug 18 22:24:45.698: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename disruption @ 08/18/23 22:24:45.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:24:45.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:24:45.713
  STEP: creating the pdb @ 08/18/23 22:24:45.717
  STEP: Waiting for the pdb to be processed @ 08/18/23 22:24:45.724
  E0818 22:24:45.747346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:46.747529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pdb @ 08/18/23 22:24:47.732
  STEP: Waiting for the pdb to be processed @ 08/18/23 22:24:47.741
  E0818 22:24:47.748280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:48.748919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching the pdb @ 08/18/23 22:24:49.748
  E0818 22:24:49.749482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 08/18/23 22:24:49.758
  E0818 22:24:50.750513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:51.750631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be deleted @ 08/18/23 22:24:51.771
  Aug 18 22:24:51.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8013" for this suite. @ 08/18/23 22:24:51.777
• [6.085 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 08/18/23 22:24:51.784
  Aug 18 22:24:51.784: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 22:24:51.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:24:51.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:24:51.805
  STEP: create the deployment @ 08/18/23 22:24:51.808
  W0818 22:24:51.811991      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 08/18/23 22:24:51.812
  STEP: delete the deployment @ 08/18/23 22:24:52.319
  STEP: wait for all rs to be garbage collected @ 08/18/23 22:24:52.324
  STEP: expected 0 rs, got 1 rs @ 08/18/23 22:24:52.332
  STEP: expected 0 pods, got 2 pods @ 08/18/23 22:24:52.335
  E0818 22:24:52.751232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 08/18/23 22:24:52.847
  W0818 22:24:52.852015      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Aug 18 22:24:52.852: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Aug 18 22:24:52.852: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1620" for this suite. @ 08/18/23 22:24:52.856
• [1.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 08/18/23 22:24:52.864
  Aug 18 22:24:52.864: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:24:52.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:24:52.879
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:24:52.882
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8311 @ 08/18/23 22:24:52.885
  STEP: changing the ExternalName service to type=NodePort @ 08/18/23 22:24:52.889
  STEP: creating replication controller externalname-service in namespace services-8311 @ 08/18/23 22:24:52.917
  I0818 22:24:52.925370      19 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8311, replica count: 2
  E0818 22:24:53.751686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:54.751781      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:55.752735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0818 22:24:55.977153      19 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 22:24:55.977: INFO: Creating new exec pod
  E0818 22:24:56.752849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:57.752967      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:24:58.753050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:24:58.998: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 22:24:59.112: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 22:24:59.112: INFO: stdout: ""
  E0818 22:24:59.753142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:00.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 22:25:00.232: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 22:25:00.232: INFO: stdout: ""
  E0818 22:25:00.753925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:01.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Aug 18 22:25:01.237: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Aug 18 22:25:01.237: INFO: stdout: "externalname-service-px9lk"
  Aug 18 22:25:01.237: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.136 80'
  Aug 18 22:25:01.362: INFO: stderr: "+ nc -v -t -w 2 10.152.183.136 80\n+ echo hostName\nConnection to 10.152.183.136 80 port [tcp/http] succeeded!\n"
  Aug 18 22:25:01.362: INFO: stdout: "externalname-service-px9lk"
  Aug 18 22:25:01.362: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.20.82 30415'
  Aug 18 22:25:01.471: INFO: stderr: "+ nc -v -t -w 2 172.31.20.82 30415\n+ echo hostName\nConnection to 172.31.20.82 30415 port [tcp/*] succeeded!\n"
  Aug 18 22:25:01.471: INFO: stdout: "externalname-service-4mz2m"
  Aug 18 22:25:01.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.95 30415'
  Aug 18 22:25:01.618: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.95 30415\nConnection to 172.31.15.95 30415 port [tcp/*] succeeded!\n"
  Aug 18 22:25:01.618: INFO: stdout: ""
  E0818 22:25:01.754505      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:02.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-8311 exec execpodfkkxf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.95 30415'
  Aug 18 22:25:02.740: INFO: stderr: "+ nc -v -t -w 2 172.31.15.95 30415\n+ echo hostName\nConnection to 172.31.15.95 30415 port [tcp/*] succeeded!\n"
  Aug 18 22:25:02.740: INFO: stdout: "externalname-service-px9lk"
  Aug 18 22:25:02.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 22:25:02.743: INFO: Cleaning up the ExternalName to NodePort test service
  E0818 22:25:02.754762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-8311" for this suite. @ 08/18/23 22:25:02.769
• [9.910 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 08/18/23 22:25:02.775
  Aug 18 22:25:02.775: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename svcaccounts @ 08/18/23 22:25:02.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:02.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:02.792
  STEP: Creating a pod to test service account token:  @ 08/18/23 22:25:02.794
  E0818 22:25:03.754912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:04.755609      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:05.756588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:06.756685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:25:06.821
  Aug 18 22:25:06.823: INFO: Trying to get logs from node ip-172-31-15-95 pod test-pod-02d0d94d-858c-4b53-9e5a-38501974568d container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:25:06.831
  Aug 18 22:25:06.848: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9488" for this suite. @ 08/18/23 22:25:06.851
• [4.083 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 08/18/23 22:25:06.859
  Aug 18 22:25:06.859: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replication-controller @ 08/18/23 22:25:06.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:06.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:06.878
  STEP: Given a ReplicationController is created @ 08/18/23 22:25:06.881
  STEP: When the matched label of one of its pods change @ 08/18/23 22:25:06.885
  Aug 18 22:25:06.889: INFO: Pod name pod-release: Found 0 pods out of 1
  E0818 22:25:07.756818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:08.756912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:09.757014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:10.757108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:11.757214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:11.895: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 08/18/23 22:25:11.904
  E0818 22:25:12.758198      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:12.915: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8450" for this suite. @ 08/18/23 22:25:12.92
• [6.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 08/18/23 22:25:12.928
  Aug 18 22:25:12.928: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename services @ 08/18/23 22:25:12.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:12.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:12.945
  STEP: creating service in namespace services-1876 @ 08/18/23 22:25:12.947
  STEP: creating service affinity-clusterip-transition in namespace services-1876 @ 08/18/23 22:25:12.947
  STEP: creating replication controller affinity-clusterip-transition in namespace services-1876 @ 08/18/23 22:25:12.957
  I0818 22:25:12.965708      19 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-1876, replica count: 3
  E0818 22:25:13.759123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:14.759184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:15.759278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0818 22:25:16.016759      19 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Aug 18 22:25:16.025: INFO: Creating new exec pod
  E0818 22:25:16.759471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:17.759842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:18.759961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:19.043: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1876 exec execpod-affinityv5vnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Aug 18 22:25:19.159: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Aug 18 22:25:19.159: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:25:19.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1876 exec execpod-affinityv5vnx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.160 80'
  Aug 18 22:25:19.277: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.160 80\nConnection to 10.152.183.160 80 port [tcp/http] succeeded!\n"
  Aug 18 22:25:19.277: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Aug 18 22:25:19.286: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1876 exec execpod-affinityv5vnx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.160:80/ ; done'
  Aug 18 22:25:19.465: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n"
  Aug 18 22:25:19.465: INFO: stdout: "\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-8fnx9\naffinity-clusterip-transition-8fnx9\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-k8g68\naffinity-clusterip-transition-8fnx9\naffinity-clusterip-transition-8fnx9\naffinity-clusterip-transition-8fnx9\naffinity-clusterip-transition-k8g68"
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-8fnx9
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-8fnx9
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-8fnx9
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-8fnx9
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-8fnx9
  Aug 18 22:25:19.465: INFO: Received response from host: affinity-clusterip-transition-k8g68
  Aug 18 22:25:19.475: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=services-1876 exec execpod-affinityv5vnx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.160:80/ ; done'
  Aug 18 22:25:19.649: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.160:80/\n"
  Aug 18 22:25:19.649: INFO: stdout: "\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb\naffinity-clusterip-transition-rzvcb"
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Received response from host: affinity-clusterip-transition-rzvcb
  Aug 18 22:25:19.649: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Aug 18 22:25:19.653: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-1876, will wait for the garbage collector to delete the pods @ 08/18/23 22:25:19.664
  Aug 18 22:25:19.725: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.709757ms
  E0818 22:25:19.760965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:19.826: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 100.804983ms
  E0818 22:25:20.761613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:21.761904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1876" for this suite. @ 08/18/23 22:25:22.444
• [9.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 08/18/23 22:25:22.453
  Aug 18 22:25:22.453: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename containers @ 08/18/23 22:25:22.454
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:22.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:22.471
  STEP: Creating a pod to test override all @ 08/18/23 22:25:22.473
  E0818 22:25:22.762768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:23.763574      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:25:24.489
  Aug 18 22:25:24.491: INFO: Trying to get logs from node ip-172-31-15-95 pod client-containers-226b39d9-7b62-48a8-903f-c84565efc332 container agnhost-container: <nil>
  STEP: delete the pod @ 08/18/23 22:25:24.499
  Aug 18 22:25:24.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1313" for this suite. @ 08/18/23 22:25:24.519
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 08/18/23 22:25:24.527
  Aug 18 22:25:24.527: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename gc @ 08/18/23 22:25:24.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:24.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:24.543
  Aug 18 22:25:24.579: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"76cd1e4f-31c1-4b98-b2b6-7fb7661b4dec", Controller:(*bool)(0xc0034bf51a), BlockOwnerDeletion:(*bool)(0xc0034bf51b)}}
  Aug 18 22:25:24.585: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"2d1f108d-64f7-45fc-b613-d9940c9139c8", Controller:(*bool)(0xc00349ea8e), BlockOwnerDeletion:(*bool)(0xc00349ea8f)}}
  Aug 18 22:25:24.592: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"837237f7-e5b0-4641-98b4-68ce691d34b3", Controller:(*bool)(0xc00349fb86), BlockOwnerDeletion:(*bool)(0xc00349fb87)}}
  E0818 22:25:24.764456      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:25.764685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:26.764780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:27.765240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:28.765538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:29.601: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2890" for this suite. @ 08/18/23 22:25:29.605
• [5.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 08/18/23 22:25:29.619
  Aug 18 22:25:29.619: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename downward-api @ 08/18/23 22:25:29.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:29.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:29.634
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:25:29.637
  E0818 22:25:29.766083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:30.767086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:31.767938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:32.768629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:25:33.663
  Aug 18 22:25:33.666: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-d05428b3-aca5-4628-a7c7-14854a4c6236 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:25:33.672
  Aug 18 22:25:33.690: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9509" for this suite. @ 08/18/23 22:25:33.693
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 08/18/23 22:25:33.701
  Aug 18 22:25:33.701: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename pods @ 08/18/23 22:25:33.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:33.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:33.717
  STEP: Create a pod @ 08/18/23 22:25:33.719
  E0818 22:25:33.769552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:34.769879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 08/18/23 22:25:35.737
  Aug 18 22:25:35.743: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Aug 18 22:25:35.743: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2387" for this suite. @ 08/18/23 22:25:35.747
• [2.054 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 08/18/23 22:25:35.755
  Aug 18 22:25:35.755: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename dns @ 08/18/23 22:25:35.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:35.768
  E0818 22:25:35.770738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:35.772
  STEP: Creating a test headless service @ 08/18/23 22:25:35.777
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-202.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-202.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 180.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.180_udp@PTR;check="$$(dig +tcp +noall +answer +search 180.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.180_tcp@PTR;sleep 1; done
   @ 08/18/23 22:25:35.795
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-202.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-202.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-202.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-202.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-202.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 180.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.180_udp@PTR;check="$$(dig +tcp +noall +answer +search 180.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.180_tcp@PTR;sleep 1; done
   @ 08/18/23 22:25:35.795
  STEP: creating a pod to probe DNS @ 08/18/23 22:25:35.795
  STEP: submitting the pod to kubernetes @ 08/18/23 22:25:35.795
  E0818 22:25:36.770876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:37.771330      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 08/18/23 22:25:37.815
  STEP: looking for the results for each expected name from probers @ 08/18/23 22:25:37.819
  Aug 18 22:25:37.825: INFO: Unable to read wheezy_udp@dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.827: INFO: Unable to read wheezy_tcp@dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.831: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.835: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.851: INFO: Unable to read jessie_udp@dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.856: INFO: Unable to read jessie_tcp@dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.859: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.862: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local from pod dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26: the server could not find the requested resource (get pods dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26)
  Aug 18 22:25:37.877: INFO: Lookups using dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26 failed for: [wheezy_udp@dns-test-service.dns-202.svc.cluster.local wheezy_tcp@dns-test-service.dns-202.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local jessie_udp@dns-test-service.dns-202.svc.cluster.local jessie_tcp@dns-test-service.dns-202.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-202.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-202.svc.cluster.local]

  Aug 18 22:25:37.889: INFO: Pod client logs for webserver: 
  Aug 18 22:25:37.897: INFO: Pod client logs for querier: 
  Aug 18 22:25:37.904: INFO: Pod client logs for jessie-querier: 
  E0818 22:25:38.771588      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:39.771717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:40.771799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:41.772776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:42.773069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:42.966: INFO: DNS probes using dns-202/dns-test-42cb2d7a-fe22-4dcd-8cd8-7e0ad4c1dc26 succeeded

  Aug 18 22:25:42.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 08/18/23 22:25:42.969
  STEP: deleting the test service @ 08/18/23 22:25:42.982
  STEP: deleting the test headless service @ 08/18/23 22:25:43.009
  STEP: Destroying namespace "dns-202" for this suite. @ 08/18/23 22:25:43.022
• [7.276 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 08/18/23 22:25:43.031
  Aug 18 22:25:43.031: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename watch @ 08/18/23 22:25:43.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:43.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:43.047
  STEP: creating a watch on configmaps with a certain label @ 08/18/23 22:25:43.049
  STEP: creating a new configmap @ 08/18/23 22:25:43.05
  STEP: modifying the configmap once @ 08/18/23 22:25:43.053
  STEP: changing the label value of the configmap @ 08/18/23 22:25:43.061
  STEP: Expecting to observe a delete notification for the watched object @ 08/18/23 22:25:43.068
  Aug 18 22:25:43.106: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43589 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:43 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 22:25:43.107: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43590 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 22:25:43.107: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43591 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:43 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 08/18/23 22:25:43.107
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 08/18/23 22:25:43.115
  E0818 22:25:43.773170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:44.773271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:45.773381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:46.773644      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:47.773747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:48.773884      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:49.774063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:50.774150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:51.774347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:52.774528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 08/18/23 22:25:53.115
  STEP: modifying the configmap a third time @ 08/18/23 22:25:53.126
  STEP: deleting the configmap @ 08/18/23 22:25:53.135
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 08/18/23 22:25:53.14
  Aug 18 22:25:53.140: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43634 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 22:25:53.140: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43635 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 22:25:53.141: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-8886  1bc413d2-642e-4ed8-9065-ed08144e1972 43636 0 2023-08-18 22:25:43 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-08-18 22:25:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Aug 18 22:25:53.141: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8886" for this suite. @ 08/18/23 22:25:53.144
• [10.119 seconds]
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 08/18/23 22:25:53.15
  Aug 18 22:25:53.150: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename var-expansion @ 08/18/23 22:25:53.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:53.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:53.168
  STEP: Creating a pod to test env composition @ 08/18/23 22:25:53.171
  E0818 22:25:53.774635      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:54.775585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:55.775695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:56.775918      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:25:57.191
  Aug 18 22:25:57.194: INFO: Trying to get logs from node ip-172-31-15-95 pod var-expansion-4a92f134-5ddb-405d-baed-aa22095d4e4c container dapi-container: <nil>
  STEP: delete the pod @ 08/18/23 22:25:57.2
  Aug 18 22:25:57.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-163" for this suite. @ 08/18/23 22:25:57.22
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 08/18/23 22:25:57.226
  Aug 18 22:25:57.226: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl-logs @ 08/18/23 22:25:57.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:25:57.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:25:57.244
  STEP: creating an pod @ 08/18/23 22:25:57.247
  Aug 18 22:25:57.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Aug 18 22:25:57.305: INFO: stderr: ""
  Aug 18 22:25:57.305: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 08/18/23 22:25:57.305
  Aug 18 22:25:57.305: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0818 22:25:57.776019      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:25:58.776225      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:25:59.315: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 08/18/23 22:25:59.315
  Aug 18 22:25:59.315: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator'
  Aug 18 22:25:59.368: INFO: stderr: ""
  Aug 18 22:25:59.368: INFO: stdout: "I0818 22:25:57.972275       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8vk 377\nI0818 22:25:58.172361       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/wdb 269\nI0818 22:25:58.372923       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/8vg 567\nI0818 22:25:58.573222       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/gqjg 582\nI0818 22:25:58.772458       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/tthj 273\nI0818 22:25:58.972746       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/5h85 330\nI0818 22:25:59.173013       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/q5z5 360\n"
  STEP: limiting log lines @ 08/18/23 22:25:59.368
  Aug 18 22:25:59.368: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator --tail=1'
  Aug 18 22:25:59.421: INFO: stderr: ""
  Aug 18 22:25:59.421: INFO: stdout: "I0818 22:25:59.373345       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/j7bq 589\n"
  Aug 18 22:25:59.421: INFO: got output "I0818 22:25:59.373345       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/j7bq 589\n"
  STEP: limiting log bytes @ 08/18/23 22:25:59.421
  Aug 18 22:25:59.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator --limit-bytes=1'
  Aug 18 22:25:59.474: INFO: stderr: ""
  Aug 18 22:25:59.474: INFO: stdout: "I"
  Aug 18 22:25:59.474: INFO: got output "I"
  STEP: exposing timestamps @ 08/18/23 22:25:59.474
  Aug 18 22:25:59.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator --tail=1 --timestamps'
  Aug 18 22:25:59.535: INFO: stderr: ""
  Aug 18 22:25:59.535: INFO: stdout: "2023-08-18T22:25:59.373416842Z I0818 22:25:59.373345       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/j7bq 589\n"
  Aug 18 22:25:59.535: INFO: got output "2023-08-18T22:25:59.373416842Z I0818 22:25:59.373345       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/j7bq 589\n"
  STEP: restricting to a time range @ 08/18/23 22:25:59.535
  E0818 22:25:59.776605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:00.776729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:01.776821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:02.036: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator --since=1s'
  Aug 18 22:26:02.089: INFO: stderr: ""
  Aug 18 22:26:02.089: INFO: stdout: "I0818 22:26:01.172809       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/t72w 576\nI0818 22:26:01.373102       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/bbh 301\nI0818 22:26:01.572352       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/dxgg 305\nI0818 22:26:01.772651       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/89dn 534\nI0818 22:26:01.972950       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/c74d 489\n"
  Aug 18 22:26:02.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 logs logs-generator logs-generator --since=24h'
  Aug 18 22:26:02.141: INFO: stderr: ""
  Aug 18 22:26:02.141: INFO: stdout: "I0818 22:25:57.972275       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/8vk 377\nI0818 22:25:58.172361       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/wdb 269\nI0818 22:25:58.372923       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/8vg 567\nI0818 22:25:58.573222       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/gqjg 582\nI0818 22:25:58.772458       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/tthj 273\nI0818 22:25:58.972746       1 logs_generator.go:76] 5 GET /api/v1/namespaces/default/pods/5h85 330\nI0818 22:25:59.173013       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/q5z5 360\nI0818 22:25:59.373345       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/default/pods/j7bq 589\nI0818 22:25:59.572643       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/rng 268\nI0818 22:25:59.772939       1 logs_generator.go:76] 9 GET /api/v1/namespaces/default/pods/lg8 537\nI0818 22:25:59.973240       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/npq 200\nI0818 22:26:00.172370       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/k7c 519\nI0818 22:26:00.372667       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/gq5w 595\nI0818 22:26:00.572982       1 logs_generator.go:76] 13 GET /api/v1/namespaces/default/pods/k4sh 437\nI0818 22:26:00.773259       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/rmzw 556\nI0818 22:26:00.972494       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/zw7 495\nI0818 22:26:01.172809       1 logs_generator.go:76] 16 GET /api/v1/namespaces/ns/pods/t72w 576\nI0818 22:26:01.373102       1 logs_generator.go:76] 17 GET /api/v1/namespaces/default/pods/bbh 301\nI0818 22:26:01.572352       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/dxgg 305\nI0818 22:26:01.772651       1 logs_generator.go:76] 19 POST /api/v1/namespaces/kube-system/pods/89dn 534\nI0818 22:26:01.972950       1 logs_generator.go:76] 20 POST /api/v1/namespaces/ns/pods/c74d 489\n"
  Aug 18 22:26:02.141: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-logs-1893 delete pod logs-generator'
  E0818 22:26:02.777064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:03.335: INFO: stderr: ""
  Aug 18 22:26:03.335: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Aug 18 22:26:03.335: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1893" for this suite. @ 08/18/23 22:26:03.339
• [6.118 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 08/18/23 22:26:03.345
  Aug 18 22:26:03.345: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:26:03.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:03.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:03.363
  STEP: Setting up server cert @ 08/18/23 22:26:03.381
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:26:03.774
  E0818 22:26:03.777084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 08/18/23 22:26:03.782
  STEP: Wait for the deployment to be ready @ 08/18/23 22:26:03.793
  Aug 18 22:26:03.802: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0818 22:26:04.777661      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:05.777753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/18/23 22:26:05.813
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:26:05.821
  E0818 22:26:06.777868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:06.822: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 08/18/23 22:26:06.828
  STEP: create a namespace for the webhook @ 08/18/23 22:26:06.841
  STEP: create a configmap should be unconditionally rejected by the webhook @ 08/18/23 22:26:06.855
  Aug 18 22:26:06.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-686" for this suite. @ 08/18/23 22:26:06.951
  STEP: Destroying namespace "webhook-markers-8405" for this suite. @ 08/18/23 22:26:06.961
  STEP: Destroying namespace "fail-closed-namespace-4057" for this suite. @ 08/18/23 22:26:06.967
• [3.633 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 08/18/23 22:26:06.983
  Aug 18 22:26:06.983: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename replicaset @ 08/18/23 22:26:06.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:06.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:07.002
  Aug 18 22:26:07.015: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0818 22:26:07.777962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:08.778078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:09.779108      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:10.779564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:11.779591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:12.018: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 08/18/23 22:26:12.018
  STEP: Scaling up "test-rs" replicaset  @ 08/18/23 22:26:12.018
  Aug 18 22:26:12.030: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 08/18/23 22:26:12.03
  Aug 18 22:26:12.040: INFO: observed ReplicaSet test-rs in namespace replicaset-4830 with ReadyReplicas 1, AvailableReplicas 1
  Aug 18 22:26:12.057: INFO: observed ReplicaSet test-rs in namespace replicaset-4830 with ReadyReplicas 1, AvailableReplicas 1
  Aug 18 22:26:12.078: INFO: observed ReplicaSet test-rs in namespace replicaset-4830 with ReadyReplicas 1, AvailableReplicas 1
  Aug 18 22:26:12.086: INFO: observed ReplicaSet test-rs in namespace replicaset-4830 with ReadyReplicas 1, AvailableReplicas 1
  E0818 22:26:12.780210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:13.110: INFO: observed ReplicaSet test-rs in namespace replicaset-4830 with ReadyReplicas 2, AvailableReplicas 2
  Aug 18 22:26:13.495: INFO: observed Replicaset test-rs in namespace replicaset-4830 with ReadyReplicas 3 found true
  Aug 18 22:26:13.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4830" for this suite. @ 08/18/23 22:26:13.499
• [6.522 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 08/18/23 22:26:13.506
  Aug 18 22:26:13.506: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename resourcequota @ 08/18/23 22:26:13.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:13.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:13.526
  STEP: Creating a ResourceQuota @ 08/18/23 22:26:13.528
  STEP: Getting a ResourceQuota @ 08/18/23 22:26:13.532
  STEP: Updating a ResourceQuota @ 08/18/23 22:26:13.535
  STEP: Verifying a ResourceQuota was modified @ 08/18/23 22:26:13.541
  STEP: Deleting a ResourceQuota @ 08/18/23 22:26:13.546
  STEP: Verifying the deleted ResourceQuota @ 08/18/23 22:26:13.554
  Aug 18 22:26:13.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1965" for this suite. @ 08/18/23 22:26:13.56
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 08/18/23 22:26:13.567
  Aug 18 22:26:13.567: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename projected @ 08/18/23 22:26:13.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:13.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:13.584
  STEP: Creating a pod to test downward API volume plugin @ 08/18/23 22:26:13.587
  E0818 22:26:13.781195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:14.781311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 08/18/23 22:26:15.605
  Aug 18 22:26:15.608: INFO: Trying to get logs from node ip-172-31-15-95 pod downwardapi-volume-e9bf35d9-1be3-4083-96d3-6c8d13dbf885 container client-container: <nil>
  STEP: delete the pod @ 08/18/23 22:26:15.618
  Aug 18 22:26:15.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9006" for this suite. @ 08/18/23 22:26:15.634
• [2.072 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 08/18/23 22:26:15.64
  Aug 18 22:26:15.640: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubelet-test @ 08/18/23 22:26:15.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:15.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:15.657
  E0818 22:26:15.781488      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:16.781692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:17.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5563" for this suite. @ 08/18/23 22:26:17.695
• [2.065 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 08/18/23 22:26:17.706
  Aug 18 22:26:17.706: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename webhook @ 08/18/23 22:26:17.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:17.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:17.721
  STEP: Setting up server cert @ 08/18/23 22:26:17.741
  E0818 22:26:17.782564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 08/18/23 22:26:17.881
  STEP: Deploying the webhook pod @ 08/18/23 22:26:17.886
  STEP: Wait for the deployment to be ready @ 08/18/23 22:26:17.895
  Aug 18 22:26:17.903: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0818 22:26:18.782744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:19.783592      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 08/18/23 22:26:19.914
  STEP: Verifying the service has paired with the endpoint @ 08/18/23 22:26:19.924
  E0818 22:26:20.783819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:20.925: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 08/18/23 22:26:20.932
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 08/18/23 22:26:20.933
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 08/18/23 22:26:20.933
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 08/18/23 22:26:20.933
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 08/18/23 22:26:20.934
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/18/23 22:26:20.934
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 08/18/23 22:26:20.935
  Aug 18 22:26:20.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5568" for this suite. @ 08/18/23 22:26:20.982
  STEP: Destroying namespace "webhook-markers-1141" for this suite. @ 08/18/23 22:26:20.992
• [3.292 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 08/18/23 22:26:20.999
  Aug 18 22:26:20.999: INFO: >>> kubeConfig: /tmp/kubeconfig-3946486941
  STEP: Building a namespace api object, basename kubectl @ 08/18/23 22:26:21
  STEP: Waiting for a default service account to be provisioned in namespace @ 08/18/23 22:26:21.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 08/18/23 22:26:21.017
  STEP: creating a replication controller @ 08/18/23 22:26:21.019
  Aug 18 22:26:21.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 create -f -'
  Aug 18 22:26:21.165: INFO: stderr: ""
  Aug 18 22:26:21.165: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 08/18/23 22:26:21.165
  Aug 18 22:26:21.165: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:26:21.228: INFO: stderr: ""
  Aug 18 22:26:21.228: INFO: stdout: "update-demo-nautilus-hm8sw update-demo-nautilus-zjxgh "
  Aug 18 22:26:21.228: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods update-demo-nautilus-hm8sw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:26:21.280: INFO: stderr: ""
  Aug 18 22:26:21.280: INFO: stdout: ""
  Aug 18 22:26:21.280: INFO: update-demo-nautilus-hm8sw is created but not running
  E0818 22:26:21.784261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:22.784306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:23.784400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:24.784616      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0818 22:26:25.784885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  Aug 18 22:26:26.280: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Aug 18 22:26:26.328: INFO: stderr: ""
  Aug 18 22:26:26.328: INFO: stdout: "update-demo-nautilus-hm8sw update-demo-nautilus-zjxgh "
  Aug 18 22:26:26.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods update-demo-nautilus-hm8sw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:26:26.375: INFO: stderr: ""
  Aug 18 22:26:26.375: INFO: stdout: "true"
  Aug 18 22:26:26.375: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods update-demo-nautilus-hm8sw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:26:26.420: INFO: stderr: ""
  Aug 18 22:26:26.420: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:26:26.420: INFO: validating pod update-demo-nautilus-hm8sw
  Aug 18 22:26:26.425: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:26:26.425: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:26:26.425: INFO: update-demo-nautilus-hm8sw is verified up and running
  Aug 18 22:26:26.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods update-demo-nautilus-zjxgh -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Aug 18 22:26:26.471: INFO: stderr: ""
  Aug 18 22:26:26.471: INFO: stdout: "true"
  Aug 18 22:26:26.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods update-demo-nautilus-zjxgh -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Aug 18 22:26:26.518: INFO: stderr: ""
  Aug 18 22:26:26.518: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Aug 18 22:26:26.518: INFO: validating pod update-demo-nautilus-zjxgh
  Aug 18 22:26:26.521: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Aug 18 22:26:26.522: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Aug 18 22:26:26.522: INFO: update-demo-nautilus-zjxgh is verified up and running
  STEP: using delete to clean up resources @ 08/18/23 22:26:26.522
  Aug 18 22:26:26.522: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 delete --grace-period=0 --force -f -'
  Aug 18 22:26:26.575: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Aug 18 22:26:26.575: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Aug 18 22:26:26.576: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get rc,svc -l name=update-demo --no-headers'
  Aug 18 22:26:26.650: INFO: stderr: "No resources found in kubectl-8154 namespace.\n"
  Aug 18 22:26:26.650: INFO: stdout: ""
  Aug 18 22:26:26.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3946486941 --namespace=kubectl-8154 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Aug 18 22:26:26.742: INFO: stderr: ""
  Aug 18 22:26:26.742: INFO: stdout: ""
  Aug 18 22:26:26.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8154" for this suite. @ 08/18/23 22:26:26.746
• [5.754 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Aug 18 22:26:26.754: INFO: Running AfterSuite actions on node 1
  Aug 18 22:26:26.754: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.009 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
  E0818 22:26:26.790199      19 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.068 seconds]
------------------------------

Ran 380 of 7387 Specs in 6029.544 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h40m29.836173095s
Test Suite Passed
