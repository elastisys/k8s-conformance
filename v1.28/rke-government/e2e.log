  I0910 23:38:29.759794      21 e2e.go:117] Starting e2e run "180666b6-9620-4ecf-b8e5-e8d285cb1913" on Ginkgo node 1
  Sep 10 23:38:29.801: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1694389109 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep 10 23:38:30.251: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:38:30.253: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 10 23:38:30.350: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 10 23:38:30.396: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-canal' (0 seconds elapsed)
  Sep 10 23:38:30.396: INFO: 4 / 4 pods ready in namespace 'kube-system' in daemonset 'rke2-ingress-nginx-controller' (0 seconds elapsed)
  Sep 10 23:38:30.397: INFO: e2e test version: v1.28.1
  Sep 10 23:38:30.398: INFO: kube-apiserver version: v1.28.1+rke2r1
  Sep 10 23:38:30.398: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:38:30.408: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.157 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/10/23 23:38:30.897
  Sep 10 23:38:30.897: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/10/23 23:38:30.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:38:30.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:38:30.996
  Sep 10 23:38:31.000: INFO: Creating deployment "test-recreate-deployment"
  Sep 10 23:38:31.072: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 10 23:38:31.171: INFO: deployment "test-recreate-deployment" doesn't have the required revision set
  Sep 10 23:38:33.179: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 10 23:38:33.183: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:38:35.196: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:38:37.187: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:38:39.251: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:38:41.189: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 38, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-dd4bc9d6d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:38:43.188: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 10 23:38:43.202: INFO: Updating deployment test-recreate-deployment
  Sep 10 23:38:43.202: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 10 23:38:43.466: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9760",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "56f0dfb3-6bfd-4541-8781-cc31220344b8",
      ResourceVersion: (string) (len=5) "77166",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985911,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 10 23:38:43.473: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9760",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e84443e-ce7d-4091-8996-170fbee122d7",
      ResourceVersion: (string) (len=5) "77163",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "56f0dfb3-6bfd-4541-8781-cc31220344b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 66 30 64 66  62 33 2d 36 62 66 64 2d  |\"56f0dfb3-6bfd-|
              00000120  34 35 34 31 2d 38 37 38  31 2d 63 63 33 31 32 32  |4541-8781-cc3122|
              00000130  30 33 34 34 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0344b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:38:43.474: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 10 23:38:43.475: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9760",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca551454-18ea-4254-8d67-4dac423609c4",
      ResourceVersion: (string) (len=5) "77155",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985911,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "56f0dfb3-6bfd-4541-8781-cc31220344b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 36 66 30 64 66  62 33 2d 36 62 66 64 2d  |\"56f0dfb3-6bfd-|
              00000120  34 35 34 31 2d 38 37 38  31 2d 63 63 33 31 32 32  |4541-8781-cc3122|
              00000130  30 33 34 34 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0344b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:38:43.480: INFO: Pod "test-recreate-deployment-76fb77d45-dksqx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-dksqx",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9760",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1b5eeeb-b56c-445e-8715-4a4f55b82a61",
      ResourceVersion: (string) (len=5) "77167",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "8e84443e-ce7d-4091-8996-170fbee122d7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 65  38 34 34 34 33 65 2d 63  |d\":\"8e84443e-c|
              00000090  65 37 64 2d 34 30 39 31  2d 38 39 39 36 2d 31 37  |e7d-4091-8996-17|
              000000a0  30 66 62 65 65 31 32 32  64 37 5c 22 7d 22 3a 7b  |0fbee122d7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-58kgq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-58kgq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:38:43.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9760" for this suite. @ 09/10/23 23:38:43.486
• [12.596 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/10/23 23:38:43.494
  Sep 10 23:38:43.494: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/10/23 23:38:43.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:38:43.514
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:38:43.517
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/10/23 23:38:43.52
  Sep 10 23:38:43.529: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-5964  d04858a6-ff59-4a62-b678-c32586a980aa 77172 0 2023-09-10 23:38:43 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-10 23:38:43 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-vmpmn,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-vmpmn,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/10/23 23:38:47.544
  Sep 10 23:38:47.545: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-5964 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:38:47.545: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:38:47.546: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:38:47.546: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-5964/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/10/23 23:38:47.97
  Sep 10 23:38:47.970: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-5964 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:38:47.970: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:38:47.970: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:38:47.970: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-5964/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 10 23:38:48.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 10 23:38:48.153: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-5964" for this suite. @ 09/10/23 23:38:48.191
• [4.714 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/10/23 23:38:48.208
  Sep 10 23:38:48.208: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/10/23 23:38:48.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:38:48.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:38:48.296
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/10/23 23:38:48.301
  Sep 10 23:38:48.332: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/23 23:38:48.332
  STEP: getting scale subresource @ 09/10/23 23:38:56.368
  STEP: updating a scale subresource @ 09/10/23 23:38:56.382
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/10/23 23:38:56.4
  STEP: Patch a scale subresource @ 09/10/23 23:38:56.411
  Sep 10 23:38:56.452: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-673" for this suite. @ 09/10/23 23:38:56.467
• [8.297 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/10/23 23:38:56.506
  Sep 10 23:38:56.506: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/10/23 23:38:56.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:38:56.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:38:56.575
  STEP: Creating 50 configmaps @ 09/10/23 23:38:56.586
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/23 23:38:57.168
  Sep 10 23:38:57.312: INFO: Pod name wrapped-volume-race-a88a9b8c-e23d-4ed5-bcd9-561cfdbb6263: Found 4 pods out of 5
  Sep 10 23:39:02.367: INFO: Pod name wrapped-volume-race-a88a9b8c-e23d-4ed5-bcd9-561cfdbb6263: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/23 23:39:02.369
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/23 23:39:02.411
  Sep 10 23:39:02.429: INFO: Pod name wrapped-volume-race-36587760-eac1-40f2-98c4-f7297bd690c4: Found 0 pods out of 5
  Sep 10 23:39:07.448: INFO: Pod name wrapped-volume-race-36587760-eac1-40f2-98c4-f7297bd690c4: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/23 23:39:07.448
  STEP: Creating RC which spawns configmap-volume pods @ 09/10/23 23:39:07.493
  Sep 10 23:39:07.531: INFO: Pod name wrapped-volume-race-bfec4523-38ca-47e1-a108-992ae0056be2: Found 1 pods out of 5
  Sep 10 23:39:12.546: INFO: Pod name wrapped-volume-race-bfec4523-38ca-47e1-a108-992ae0056be2: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/10/23 23:39:12.547
  Sep 10 23:39:14.579: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-bfec4523-38ca-47e1-a108-992ae0056be2 in namespace emptydir-wrapper-4130, will wait for the garbage collector to delete the pods @ 09/10/23 23:39:14.585
  Sep 10 23:39:14.648: INFO: Deleting ReplicationController wrapped-volume-race-bfec4523-38ca-47e1-a108-992ae0056be2 took: 8.783125ms
  Sep 10 23:39:14.749: INFO: Terminating ReplicationController wrapped-volume-race-bfec4523-38ca-47e1-a108-992ae0056be2 pods took: 100.391861ms
  STEP: deleting ReplicationController wrapped-volume-race-36587760-eac1-40f2-98c4-f7297bd690c4 in namespace emptydir-wrapper-4130, will wait for the garbage collector to delete the pods @ 09/10/23 23:39:18.249
  Sep 10 23:39:18.315: INFO: Deleting ReplicationController wrapped-volume-race-36587760-eac1-40f2-98c4-f7297bd690c4 took: 10.701901ms
  Sep 10 23:39:18.415: INFO: Terminating ReplicationController wrapped-volume-race-36587760-eac1-40f2-98c4-f7297bd690c4 pods took: 100.756436ms
  STEP: deleting ReplicationController wrapped-volume-race-a88a9b8c-e23d-4ed5-bcd9-561cfdbb6263 in namespace emptydir-wrapper-4130, will wait for the garbage collector to delete the pods @ 09/10/23 23:39:21.616
  Sep 10 23:39:21.677: INFO: Deleting ReplicationController wrapped-volume-race-a88a9b8c-e23d-4ed5-bcd9-561cfdbb6263 took: 6.540093ms
  Sep 10 23:39:21.777: INFO: Terminating ReplicationController wrapped-volume-race-a88a9b8c-e23d-4ed5-bcd9-561cfdbb6263 pods took: 100.31101ms
  STEP: Cleaning up the configMaps @ 09/10/23 23:39:24.878
  STEP: Destroying namespace "emptydir-wrapper-4130" for this suite. @ 09/10/23 23:39:25.291
• [28.792 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/10/23 23:39:25.301
  Sep 10 23:39:25.301: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:39:25.302
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:39:25.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:39:25.329
  STEP: Creating a pod to test downward API volume plugin @ 09/10/23 23:39:25.332
  STEP: Saw pod success @ 09/10/23 23:39:29.356
  Sep 10 23:39:29.359: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-9a88833e-e58e-4fad-ae16-2d3ca7886f38 container client-container: <nil>
  STEP: delete the pod @ 09/10/23 23:39:29.424
  Sep 10 23:39:29.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8941" for this suite. @ 09/10/23 23:39:29.45
• [4.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/10/23 23:39:29.462
  Sep 10 23:39:29.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:39:29.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:39:29.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:39:29.486
  STEP: Creating a pod to test downward API volume plugin @ 09/10/23 23:39:29.488
  STEP: Saw pod success @ 09/10/23 23:39:33.515
  Sep 10 23:39:33.519: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-803f0c37-f027-46d2-81d3-ce09b18dadb4 container client-container: <nil>
  STEP: delete the pod @ 09/10/23 23:39:33.538
  Sep 10 23:39:33.556: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9381" for this suite. @ 09/10/23 23:39:33.561
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/10/23 23:39:33.571
  Sep 10 23:39:33.571: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/10/23 23:39:33.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:39:33.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:39:33.601
  Sep 10 23:39:33.613: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Sep 10 23:39:38.620: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/23 23:39:38.62
  Sep 10 23:39:38.620: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Sep 10 23:39:40.625: INFO: Creating deployment "test-rollover-deployment"
  Sep 10 23:39:40.637: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Sep 10 23:39:42.647: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 10 23:39:42.656: INFO: Ensure that both replica sets have 1 created replica
  Sep 10 23:39:42.665: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 10 23:39:42.682: INFO: Updating deployment test-rollover-deployment
  Sep 10 23:39:42.682: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Sep 10 23:39:44.692: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 10 23:39:44.700: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 10 23:39:44.714: INFO: all replica sets need to contain the pod-template-hash label
  Sep 10 23:39:44.714: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:39:46.722: INFO: all replica sets need to contain the pod-template-hash label
  Sep 10 23:39:46.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:39:48.723: INFO: all replica sets need to contain the pod-template-hash label
  Sep 10 23:39:48.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:39:50.722: INFO: all replica sets need to contain the pod-template-hash label
  Sep 10 23:39:50.722: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:39:52.723: INFO: all replica sets need to contain the pod-template-hash label
  Sep 10 23:39:52.723: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 39, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 39, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 10 23:39:54.763: INFO: 
  Sep 10 23:39:54.764: INFO: Ensure that both old replica sets have no replicas
  Sep 10 23:39:54.795: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4fb1550c-f867-4742-898c-4356b483801c",
      ResourceVersion: (string) (len=5) "78181",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985980,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 10 23:39:54.813: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b4804e4d-9c5b-45ff-8bcc-b8e57effffa1",
      ResourceVersion: (string) (len=5) "78170",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fb1550c-f867-4742-898c-4356b483801c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 62 31 35 35  30 63 2d 66 38 36 37 2d  |\"4fb1550c-f867-|
              00000120  34 37 34 32 2d 38 39 38  63 2d 34 33 35 36 62 34  |4742-898c-4356b4|
              00000130  38 33 38 30 31 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |83801c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:39:54.815: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 10 23:39:54.816: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "beaf93bb-6be7-407e-9b73-dca89959238d",
      ResourceVersion: (string) (len=5) "78179",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985973,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fb1550c-f867-4742-898c-4356b483801c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985973,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  34 66 62 31 35 35 30 63  2d 66 38 36 37 2d 34 37  |4fb1550c-f867-47|
              000000c0  34 32 2d 38 39 38 63 2d  34 33 35 36 62 34 38 33  |42-898c-4356b483|
              000000d0  38 30 31 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |801c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985994,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:39:54.816: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "841a3e73-070b-418d-8c93-828b2d47e04d",
      ResourceVersion: (string) (len=5) "78109",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985980,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "4fb1550c-f867-4742-898c-4356b483801c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 66 62 31 35 35  30 63 2d 66 38 36 37 2d  |\"4fb1550c-f867-|
              00000120  34 37 34 32 2d 38 39 38  63 2d 34 33 35 36 62 34  |4742-898c-4356b4|
              00000130  38 33 38 30 31 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |83801c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:39:54.821: INFO: Pod "test-rollover-deployment-5d484bf7f9-nq5kt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-nq5kt",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-9861",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62a2f1cd-6a38-43c1-8af6-97e217e7d52d",
      ResourceVersion: (string) (len=5) "78128",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "176e9eb8ee0ee551eb11b2d8142b4bc2a031b8653207818a074a2aa051f7e00a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "b4804e4d-9c5b-45ff-8bcc-b8e57effffa1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 34  38 30 34 65 34 64 2d 39  |d\":\"b4804e4d-9|
              00000090  63 35 62 2d 34 35 66 66  2d 38 62 63 63 2d 62 38  |c5b-45ff-8bcc-b8|
              000000a0  65 35 37 65 66 66 66 66  61 31 5c 22 7d 22 3a 7b  |e57effffa1\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985983,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 38 5c 22 7d 22 3a 7b  |10.42.3.18\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rr5rk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rr5rk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985984,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829985982,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829985982,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829985984,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://f423b079a24c70e053fc8e27071bc1f4904842eb6329f64309ab82341075335b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:39:54.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9861" for this suite. @ 09/10/23 23:39:54.83
• [21.266 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/10/23 23:39:54.848
  Sep 10 23:39:54.848: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/10/23 23:39:54.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:39:54.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:39:54.879
  STEP: Creating service test in namespace statefulset-9645 @ 09/10/23 23:39:54.884
  STEP: Creating a new StatefulSet @ 09/10/23 23:39:54.89
  Sep 10 23:39:55.038: INFO: Found 0 stateful pods, waiting for 3
  Sep 10 23:40:05.043: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:40:05.044: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:40:05.044: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  Sep 10 23:40:15.043: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:40:15.043: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:40:15.043: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:40:15.054: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-9645 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 10 23:40:15.722: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 10 23:40:15.723: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 10 23:40:15.723: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/10/23 23:40:25.745
  Sep 10 23:40:25.814: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/10/23 23:40:25.814
  STEP: Updating Pods in reverse ordinal order @ 09/10/23 23:40:35.832
  Sep 10 23:40:35.840: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-9645 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 10 23:40:36.031: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 10 23:40:36.031: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 10 23:40:36.031: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 10 23:40:46.076: INFO: Waiting for StatefulSet statefulset-9645/ss2 to complete update
  Sep 10 23:40:46.076: INFO: Waiting for Pod statefulset-9645/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 10 23:40:46.076: INFO: Waiting for Pod statefulset-9645/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 10 23:40:56.085: INFO: Waiting for StatefulSet statefulset-9645/ss2 to complete update
  STEP: Rolling back to a previous revision @ 09/10/23 23:41:06.085
  Sep 10 23:41:06.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-9645 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 10 23:41:06.290: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 10 23:41:06.290: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 10 23:41:06.290: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 10 23:41:16.334: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/10/23 23:41:26.35
  Sep 10 23:41:26.355: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-9645 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 10 23:41:26.589: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 10 23:41:26.589: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 10 23:41:26.589: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 10 23:41:36.616: INFO: Deleting all statefulset in ns statefulset-9645
  Sep 10 23:41:36.619: INFO: Scaling statefulset ss2 to 0
  Sep 10 23:41:46.643: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 10 23:41:46.647: INFO: Deleting statefulset ss2
  Sep 10 23:41:46.658: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9645" for this suite. @ 09/10/23 23:41:46.663
• [111.826 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/10/23 23:41:46.674
  Sep 10 23:41:46.674: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/10/23 23:41:46.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:41:46.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:41:46.7
  STEP: Saw pod success @ 09/10/23 23:41:54.782
  Sep 10 23:41:54.786: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod client-envvars-f218d59d-317c-4a52-8883-3be2f3a7b05b container env3cont: <nil>
  STEP: delete the pod @ 09/10/23 23:41:54.801
  Sep 10 23:41:54.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4058" for this suite. @ 09/10/23 23:41:54.822
• [8.156 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/10/23 23:41:54.831
  Sep 10 23:41:54.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/23 23:41:54.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:41:54.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:41:54.856
  Sep 10 23:41:54.860: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/10/23 23:41:57.299
  Sep 10 23:41:57.300: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 create -f -'
  Sep 10 23:41:58.119: INFO: stderr: ""
  Sep 10 23:41:58.119: INFO: stdout: "e2e-test-crd-publish-openapi-9743-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 10 23:41:58.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 delete e2e-test-crd-publish-openapi-9743-crds test-foo'
  Sep 10 23:41:58.242: INFO: stderr: ""
  Sep 10 23:41:58.242: INFO: stdout: "e2e-test-crd-publish-openapi-9743-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 10 23:41:58.242: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 apply -f -'
  Sep 10 23:41:59.340: INFO: stderr: ""
  Sep 10 23:41:59.340: INFO: stdout: "e2e-test-crd-publish-openapi-9743-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 10 23:41:59.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 delete e2e-test-crd-publish-openapi-9743-crds test-foo'
  Sep 10 23:41:59.459: INFO: stderr: ""
  Sep 10 23:41:59.459: INFO: stdout: "e2e-test-crd-publish-openapi-9743-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/10/23 23:41:59.459
  Sep 10 23:41:59.459: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 create -f -'
  Sep 10 23:41:59.663: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/10/23 23:41:59.663
  Sep 10 23:41:59.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 create -f -'
  Sep 10 23:41:59.844: INFO: rc: 1
  Sep 10 23:41:59.844: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 apply -f -'
  Sep 10 23:42:00.149: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/10/23 23:42:00.15
  Sep 10 23:42:00.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 create -f -'
  Sep 10 23:42:00.879: INFO: rc: 1
  Sep 10 23:42:00.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 --namespace=crd-publish-openapi-8000 apply -f -'
  Sep 10 23:42:01.066: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/10/23 23:42:01.066
  Sep 10 23:42:01.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 explain e2e-test-crd-publish-openapi-9743-crds'
  Sep 10 23:42:01.247: INFO: stderr: ""
  Sep 10 23:42:01.247: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9743-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/10/23 23:42:01.247
  Sep 10 23:42:01.247: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 explain e2e-test-crd-publish-openapi-9743-crds.metadata'
  Sep 10 23:42:01.429: INFO: stderr: ""
  Sep 10 23:42:01.429: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9743-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 10 23:42:01.430: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 explain e2e-test-crd-publish-openapi-9743-crds.spec'
  Sep 10 23:42:01.674: INFO: stderr: ""
  Sep 10 23:42:01.674: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9743-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 10 23:42:01.674: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 explain e2e-test-crd-publish-openapi-9743-crds.spec.bars'
  Sep 10 23:42:01.843: INFO: stderr: ""
  Sep 10 23:42:01.843: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9743-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/10/23 23:42:01.843
  Sep 10 23:42:01.843: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-8000 explain e2e-test-crd-publish-openapi-9743-crds.spec.bars2'
  Sep 10 23:42:02.040: INFO: rc: 1
  Sep 10 23:42:04.206: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8000" for this suite. @ 09/10/23 23:42:04.214
• [9.856 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/10/23 23:42:04.693
  Sep 10 23:42:04.693: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/10/23 23:42:04.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:04.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:04.725
  STEP: creating a Pod with a static label @ 09/10/23 23:42:04.743
  STEP: watching for Pod to be ready @ 09/10/23 23:42:04.759
  Sep 10 23:42:04.761: INFO: observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 10 23:42:04.773: INFO: observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  }]
  Sep 10 23:42:04.795: INFO: observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  }]
  Sep 10 23:42:05.276: INFO: observed Pod pod-test in namespace pods-7221 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  }]
  Sep 10 23:42:06.549: INFO: Found Pod pod-test in namespace pods-7221 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:06 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:06 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-10 23:42:04 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/10/23 23:42:06.554
  STEP: getting the Pod and ensuring that it's patched @ 09/10/23 23:42:06.577
  STEP: replacing the Pod's status Ready condition to False @ 09/10/23 23:42:06.581
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/10/23 23:42:06.593
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/10/23 23:42:06.594
  STEP: watching for the Pod to be deleted @ 09/10/23 23:42:06.603
  Sep 10 23:42:06.605: INFO: observed event type MODIFIED
  Sep 10 23:42:08.557: INFO: observed event type MODIFIED
  Sep 10 23:42:08.989: INFO: observed event type MODIFIED
  Sep 10 23:42:09.102: INFO: observed event type MODIFIED
  Sep 10 23:42:09.563: INFO: observed event type MODIFIED
  Sep 10 23:42:09.578: INFO: observed event type MODIFIED
  Sep 10 23:42:09.586: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7221" for this suite. @ 09/10/23 23:42:09.59
• [4.904 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/10/23 23:42:09.597
  Sep 10 23:42:09.597: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/10/23 23:42:09.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:09.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:09.623
  Sep 10 23:42:09.626: INFO: Creating deployment "webserver-deployment"
  Sep 10 23:42:09.631: INFO: Waiting for observed generation 1
  Sep 10 23:42:11.651: INFO: Waiting for all required pods to come up
  Sep 10 23:42:11.655: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/10/23 23:42:11.656
  Sep 10 23:42:17.695: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 10 23:42:17.702: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 10 23:42:17.711: INFO: Updating deployment webserver-deployment
  Sep 10 23:42:17.712: INFO: Waiting for observed generation 2
  Sep 10 23:42:19.722: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 10 23:42:19.726: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 10 23:42:19.729: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 10 23:42:19.738: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 10 23:42:19.738: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep 10 23:42:19.742: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 10 23:42:19.748: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 10 23:42:19.749: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 10 23:42:19.757: INFO: Updating deployment webserver-deployment
  Sep 10 23:42:19.757: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 10 23:42:19.765: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 10 23:42:19.771: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Sep 10 23:42:19.803: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "286f373c-6025-467a-8707-0176981cc9bb",
      ResourceVersion: (string) (len=5) "79566",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 10 23:42:19.860: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
      ResourceVersion: (string) (len=5) "79564",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "286f373c-6025-467a-8707-0176981cc9bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 36 66 33 37  33 63 2d 36 30 32 35 2d  |\"286f373c-6025-|
              00000120  34 36 37 61 2d 38 37 30  37 2d 30 31 37 36 39 38  |467a-8707-017698|
              00000130  31 63 63 39 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1cc9bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:42:19.862: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 10 23:42:19.864: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
      ResourceVersion: (string) (len=5) "79562",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "286f373c-6025-467a-8707-0176981cc9bb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 38 36 66 33 37  33 63 2d 36 30 32 35 2d  |\"286f373c-6025-|
              00000120  34 36 37 61 2d 38 37 30  37 2d 30 31 37 36 39 38  |467a-8707-017698|
              00000130  31 63 63 39 62 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1cc9bb\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:42:19.930: INFO: Pod "webserver-deployment-557759b7c7-2kc44" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2kc44",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "03859be7-e64a-4bf0-bf2c-ec67d68214e0",
      ResourceVersion: (string) (len=5) "79589",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-plgl4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-plgl4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.931: INFO: Pod "webserver-deployment-557759b7c7-4jvrd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-4jvrd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbd46aba-19df-448b-9cd1-8c7718fa567d",
      ResourceVersion: (string) (len=5) "79594",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xz5tx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xz5tx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.933: INFO: Pod "webserver-deployment-557759b7c7-5pbqd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5pbqd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "301b9f2d-4a9f-4f8d-832d-be23036016e3",
      ResourceVersion: (string) (len=5) "79597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-thb42",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-thb42",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.934: INFO: Pod "webserver-deployment-557759b7c7-5wsvd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-5wsvd",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4da550d4-12d8-47b0-95c8-ee4bdb2932e2",
      ResourceVersion: (string) (len=5) "79567",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j6d5b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j6d5b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.936: INFO: Pod "webserver-deployment-557759b7c7-6m67l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6m67l",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e722cb4-415d-4059-9811-00e2b30bfa04",
      ResourceVersion: (string) (len=5) "79410",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "88c8bffd8c499e3baa23ce676e4b9dfdce82f956f5581b29fb91e475341a57d4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  31 33 5c 22 7d 22 3a 7b  |10.42.1.13\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gsp9d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gsp9d",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6c1eae1e5a7d82032ae30d849508ff84f79c599fefb43ce159dede55592023bd",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.939: INFO: Pod "webserver-deployment-557759b7c7-7h8p2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7h8p2",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34f4871b-f3ad-493e-a417-d1aecdfdb432",
      ResourceVersion: (string) (len=5) "79404",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "682077b9569ff015548d963d0010af52fba633fd6b771f4483647679942555b5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.20/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.20/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  32 30 5c 22 7d 22 3a 7b  |10.42.2.20\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d8g6s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d8g6s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.2.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0d8822e7c4729b477e1359fde46a5ef8967cb5e2f1cc4469a49612feb312fa42",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.941: INFO: Pod "webserver-deployment-557759b7c7-7shtj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-7shtj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a566c8a-20f3-4058-84e2-9e4418f01ea4",
      ResourceVersion: (string) (len=5) "79595",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-77d4h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-77d4h",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.943: INFO: Pod "webserver-deployment-557759b7c7-bbqx9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bbqx9",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8cc733b1-2567-4215-a0a8-22fbaeab1931",
      ResourceVersion: (string) (len=5) "79428",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "66459477adfb3d610fcf9a2f511d0e4e30c0393b84abceb9dcedcd0b86043dc5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986133,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  32 37 5c 22 7d 22 3a 7b  |10.42.3.27\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ntfkc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ntfkc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2a38ff5fcea25e4cff0e3599f0512da417083c17f80c22660aad6c72065fb770",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.945: INFO: Pod "webserver-deployment-557759b7c7-bgfsx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bgfsx",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d0f88f48-2d09-41d1-984c-6ae92cc052df",
      ResourceVersion: (string) (len=5) "79588",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ptsv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ptsv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.946: INFO: Pod "webserver-deployment-557759b7c7-bzp6c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bzp6c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3c59f3c5-3a34-45a0-bf39-a752aba1f0fb",
      ResourceVersion: (string) (len=5) "79596",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-46tdj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-46tdj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.948: INFO: Pod "webserver-deployment-557759b7c7-chkrp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-chkrp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d45db351-1b28-40cd-a0e5-4c0f6898e1f9",
      ResourceVersion: (string) (len=5) "79466",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c5dae229ea84135490c3c47b95de558835bf2e6ae3267d140dfa929a1b211926",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.16/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.16/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 30 2e  31 36 5c 22 7d 22 3a 7b  |10.42.0.16\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xhsn7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xhsn7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-10-18.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.18",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.0.16",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.16"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986136,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://3884e114108bbf776cc3ff93f2bfae32fe8b7a725aaa1138da602ad0eeb81aff",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.956: INFO: Pod "webserver-deployment-557759b7c7-cqcqq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cqcqq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6be1cac9-bae1-40c5-8a5c-3a459f269911",
      ResourceVersion: (string) (len=5) "79586",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4jt45",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4jt45",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-10-18.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.957: INFO: Pod "webserver-deployment-557759b7c7-gtft8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-gtft8",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81832d30-dde3-48f8-962a-1a3171c5dd96",
      ResourceVersion: (string) (len=5) "79416",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.12/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.12/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "fc22f56717d44daeae6aac68c26e1ab39309c3794610073aa31da8720aece9b8"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  31 32 5c 22 7d 22 3a 7b  |10.42.1.12\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xv7wk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xv7wk",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://fa39963daeb0df69211822f842dacc29f9627f82400fb1dc729669298171ad80",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.963: INFO: Pod "webserver-deployment-557759b7c7-k9dkn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-k9dkn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18c5ffc7-9bc0-4286-9700-cb74abdd53aa",
      ResourceVersion: (string) (len=5) "79460",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a247d824e52369c1e5b0c04d310e1943da6a478285e8e890cd93aeaae613c881",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.17/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.17/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 30 2e  31 37 5c 22 7d 22 3a 7b  |10.42.0.17\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-76fsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-76fsj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-10-18.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.18",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.0.17",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.17"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986136,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7b69cfe3dc5294139968b0171fa583bdb05dd5805b69aed92d5b58a9ac391544",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.965: INFO: Pod "webserver-deployment-557759b7c7-lf5qq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-lf5qq",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "455e5cf7-0a59-4d22-8eb6-a64db60bfc80",
      ResourceVersion: (string) (len=5) "79413",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a1ea44e7f8fb384af9a486e38c278fcc3bd53b006dbaaec4d488ab55494afde0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  31 34 5c 22 7d 22 3a 7b  |10.42.1.14\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jbxtx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jbxtx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://153fd190e9025a22a4084587fd004d711ce05e8085dd0f16257c34868b79cb76",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.967: INFO: Pod "webserver-deployment-557759b7c7-qmsmt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-qmsmt",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e636df04-ee99-4080-bb24-3ff3007f958e",
      ResourceVersion: (string) (len=5) "79590",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gq6z7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gq6z7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.969: INFO: Pod "webserver-deployment-557759b7c7-rw85f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-rw85f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e20334ad-720a-4e24-973d-0d63f1472fda",
      ResourceVersion: (string) (len=5) "79407",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f4e7aee98ac81ac0e594f46b44ed2e2d6eeb00713b646719f2748bf8b8b1e622",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.21/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.21/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986130,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  32 31 5c 22 7d 22 3a 7b  |10.42.2.21\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2rbm5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2rbm5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986132,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986129,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.2.21",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.21"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986129,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986131,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8878ba142715f5ac952174777129f52ae654484e2fb4700b5674cdfd95b218ae",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.971: INFO: Pod "webserver-deployment-557759b7c7-sjzc5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sjzc5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d58fa0a3-054d-4408-874b-54f40dd5a911",
      ResourceVersion: (string) (len=5) "79576",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qzthm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qzthm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.972: INFO: Pod "webserver-deployment-557759b7c7-trwlb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-trwlb",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e257f75-122c-4bb8-8a6c-208d78a853cf",
      ResourceVersion: (string) (len=5) "79587",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cjwf4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cjwf4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.974: INFO: Pod "webserver-deployment-557759b7c7-w8n8c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-w8n8c",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b679b0eb-86c1-403d-abeb-cd07e6e1c361",
      ResourceVersion: (string) (len=5) "79577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "13c5592d-e5fa-44de-8a51-999ac6445fae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 33  63 35 35 39 32 64 2d 65  |d\":\"13c5592d-e|
              00000090  35 66 61 2d 34 34 64 65  2d 38 61 35 31 2d 39 39  |5fa-44de-8a51-99|
              000000a0  39 61 63 36 34 34 35 66  61 65 5c 22 7d 22 3a 7b  |9ac6445fae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tcvz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tcvz4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.976: INFO: Pod "webserver-deployment-9b4f5bf69-2g8f8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-2g8f8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a62d4e9-0b8a-4b3b-be9e-a1710ad33368",
      ResourceVersion: (string) (len=5) "79591",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q695r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q695r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.977: INFO: Pod "webserver-deployment-9b4f5bf69-4bvh5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-4bvh5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0680ae27-6f48-45a5-9fa5-30b7659e4ac0",
      ResourceVersion: (string) (len=5) "79555",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "32d94aafa32ae74364240ddc48db5ba920b90874567aded042b4ce1276a0f980",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=562) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 38 5c  22 7d 22 3a 7b 22 2e 22  |42.3.28\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000220  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000230  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bx6qb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bx6qb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.28",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.28"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.980: INFO: Pod "webserver-deployment-9b4f5bf69-9zmh8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-9zmh8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1ec0c3b3-a928-43a7-b007-71e6ba851bc4",
      ResourceVersion: (string) (len=5) "79539",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "98e56e5f321452ecf21dfc5be1dd5bf91416afdfd1105a54bc569f2d0abe13fb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=562) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 31 2e 31 35 5c  22 7d 22 3a 7b 22 2e 22  |42.1.15\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000220  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000230  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7jc4c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7jc4c",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:19.982: INFO: Pod "webserver-deployment-9b4f5bf69-jx58s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-jx58s",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97aa23a1-6de7-43fd-8e97-b03d5b7b72c5",
      ResourceVersion: (string) (len=5) "79592",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cg789",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cg789",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:20.008: INFO: Pod "webserver-deployment-9b4f5bf69-kh4kz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-kh4kz",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b2dd011-dec4-40ec-bca1-f2ecb5b401ba",
      ResourceVersion: (string) (len=5) "79536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a20251f555dd31e6f255402e55032feec170dc7ad6f60660f1cd6f12f159fd2d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=562) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 32 2e 32 32 5c  22 7d 22 3a 7b 22 2e 22  |42.2.22\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000220  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000230  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z7hsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z7hsj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.2.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:20.024: INFO: Pod "webserver-deployment-9b4f5bf69-lqmz6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lqmz6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b02fae7-7abc-44b8-9342-c4035a604524",
      ResourceVersion: (string) (len=5) "79559",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3ddc504aad68f89192ec1e7e13ed87d6b47069f88c4362f9a331cc514c08f221",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=562) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 70 6f 64 49 50  22 3a 7b 7d 2c 22 66 3a  |"f:podIP":{},"f:|
              000001e0  70 6f 64 49 50 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |podIPs":{".":{},|
              000001f0  22 6b 3a 7b 5c 22 69 70  5c 22 3a 5c 22 31 30 2e  |"k:{\"ip\":\"10.|
              00000200  34 32 2e 33 2e 32 39 5c  22 7d 22 3a 7b 22 2e 22  |42.3.29\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000220  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000230  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pzxkj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pzxkj",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.29",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.29"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:20.026: INFO: Pod "webserver-deployment-9b4f5bf69-mckpr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mckpr",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b0ba2f3-4313-4615-968d-caa8e843a4bf",
      ResourceVersion: (string) (len=5) "79529",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b037454b6353bb6f8f6479b2461b8c877b8745a76744cce07d8db9a8da56e303",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986138,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5xs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5xs7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-10-18.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986137,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.10.18",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986137,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:20.028: INFO: Pod "webserver-deployment-9b4f5bf69-p4jxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-p4jxv",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-4154",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "522bc75e-e981-41ac-82e4-6a46fe28aaa8",
      ResourceVersion: (string) (len=5) "79585",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986139,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "71512330-e455-44ce-8c86-7571ae16a4ac",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986139,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 31  35 31 32 33 33 30 2d 65  |d\":\"71512330-e|
              00000090  34 35 35 2d 34 34 63 65  2d 38 63 38 36 2d 37 35  |455-44ce-8c86-75|
              000000a0  37 31 61 65 31 36 61 34  61 63 5c 22 7d 22 3a 7b  |71ae16a4ac\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g5rsq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g5rsq",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:42:20.029: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4154" for this suite. @ 09/10/23 23:42:20.085
• [10.564 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/10/23 23:42:20.162
  Sep 10 23:42:20.163: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/10/23 23:42:20.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:20.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:20.406
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/10/23 23:42:20.432
  STEP: When a replicaset with a matching selector is created @ 09/10/23 23:42:24.517
  STEP: Then the orphan pod is adopted @ 09/10/23 23:42:24.522
  STEP: When the matched label of one of its pods change @ 09/10/23 23:42:25.538
  Sep 10 23:42:25.546: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/10/23 23:42:25.573
  Sep 10 23:42:26.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3056" for this suite. @ 09/10/23 23:42:26.643
• [6.601 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/10/23 23:42:26.764
  Sep 10 23:42:26.764: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename cronjob @ 09/10/23 23:42:26.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:26.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:26.822
  STEP: Creating a cronjob @ 09/10/23 23:42:26.835
  STEP: creating @ 09/10/23 23:42:26.835
  STEP: getting @ 09/10/23 23:42:26.924
  STEP: listing @ 09/10/23 23:42:26.931
  STEP: watching @ 09/10/23 23:42:26.942
  Sep 10 23:42:26.942: INFO: starting watch
  STEP: cluster-wide listing @ 09/10/23 23:42:26.946
  STEP: cluster-wide watching @ 09/10/23 23:42:26.959
  Sep 10 23:42:26.959: INFO: starting watch
  STEP: patching @ 09/10/23 23:42:26.962
  STEP: updating @ 09/10/23 23:42:26.995
  Sep 10 23:42:27.135: INFO: waiting for watch events with expected annotations
  Sep 10 23:42:27.135: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/10/23 23:42:27.135
  STEP: updating /status @ 09/10/23 23:42:27.153
  STEP: get /status @ 09/10/23 23:42:27.165
  STEP: deleting @ 09/10/23 23:42:27.206
  STEP: deleting a collection @ 09/10/23 23:42:27.244
  Sep 10 23:42:27.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6437" for this suite. @ 09/10/23 23:42:27.32
• [0.591 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/10/23 23:42:27.356
  Sep 10 23:42:27.356: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/10/23 23:42:27.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:27.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:27.464
  STEP: creating a target pod @ 09/10/23 23:42:27.467
  STEP: adding an ephemeral container @ 09/10/23 23:42:29.504
  STEP: checking pod container endpoints @ 09/10/23 23:42:33.531
  Sep 10 23:42:33.531: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2363 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:42:33.531: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:42:33.532: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:42:33.532: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-2363/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 10 23:42:33.640: INFO: Exec stderr: ""
  Sep 10 23:42:33.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2363" for this suite. @ 09/10/23 23:42:33.657
• [6.307 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/10/23 23:42:33.665
  Sep 10 23:42:33.665: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/10/23 23:42:33.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:33.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:33.701
  Sep 10 23:42:33.745: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2984" for this suite. @ 09/10/23 23:42:33.751
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/10/23 23:42:33.763
  Sep 10 23:42:33.763: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/10/23 23:42:33.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:33.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:33.784
  STEP: Creating configMap with name configmap-test-upd-df836c7e-a005-43dd-aef1-966eeb20216a @ 09/10/23 23:42:33.791
  STEP: Creating the pod @ 09/10/23 23:42:33.795
  STEP: Waiting for pod with text data @ 09/10/23 23:42:35.812
  STEP: Waiting for pod with binary data @ 09/10/23 23:42:35.823
  Sep 10 23:42:35.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3120" for this suite. @ 09/10/23 23:42:35.848
• [2.102 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/10/23 23:42:35.866
  Sep 10 23:42:35.866: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/10/23 23:42:35.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:35.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:35.897
  STEP: Creating a pod to test substitution in volume subpath @ 09/10/23 23:42:35.9
  STEP: Saw pod success @ 09/10/23 23:42:39.925
  Sep 10 23:42:39.928: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod var-expansion-c08b55c7-d876-4726-8810-1d224182a964 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/23 23:42:39.934
  Sep 10 23:42:39.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5496" for this suite. @ 09/10/23 23:42:39.955
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/10/23 23:42:39.963
  Sep 10 23:42:39.963: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:42:39.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:39.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:39.983
  STEP: Setting up server cert @ 09/10/23 23:42:40.019
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:42:40.381
  STEP: Deploying the webhook pod @ 09/10/23 23:42:40.389
  STEP: Wait for the deployment to be ready @ 09/10/23 23:42:40.403
  Sep 10 23:42:40.409: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 10 23:42:42.419: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 42, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 42, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 42, 40, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 42, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/10/23 23:42:44.423
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:42:44.436
  Sep 10 23:42:45.437: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/10/23 23:42:45.444
  STEP: create a pod that should be denied by the webhook @ 09/10/23 23:42:45.473
  STEP: create a pod that causes the webhook to hang @ 09/10/23 23:42:45.495
  STEP: create a configmap that should be denied by the webhook @ 09/10/23 23:42:55.504
  STEP: create a configmap that should be admitted by the webhook @ 09/10/23 23:42:55.794
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/10/23 23:42:55.82
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/10/23 23:42:55.832
  STEP: create a namespace that bypass the webhook @ 09/10/23 23:42:55.839
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/10/23 23:42:55.866
  Sep 10 23:42:55.896: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2735" for this suite. @ 09/10/23 23:42:56.033
  STEP: Destroying namespace "webhook-markers-6272" for this suite. @ 09/10/23 23:42:56.046
  STEP: Destroying namespace "exempted-namespace-3931" for this suite. @ 09/10/23 23:42:56.081
• [16.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/10/23 23:42:56.111
  Sep 10 23:42:56.111: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/10/23 23:42:56.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:56.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:56.162
  STEP: apply creating a deployment @ 09/10/23 23:42:56.165
  Sep 10 23:42:56.169: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3665" for this suite. @ 09/10/23 23:42:56.197
• [0.093 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/10/23 23:42:56.205
  Sep 10 23:42:56.205: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/10/23 23:42:56.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:42:56.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:42:56.236
  Sep 10 23:43:56.250: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3830" for this suite. @ 09/10/23 23:43:56.256
• [60.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/10/23 23:43:56.264
  Sep 10 23:43:56.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/10/23 23:43:56.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:43:56.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:43:56.288
  Sep 10 23:43:56.292: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  W0910 23:43:58.829066      21 warnings.go:70] unknown field "alpha"
  W0910 23:43:58.829134      21 warnings.go:70] unknown field "beta"
  W0910 23:43:58.829142      21 warnings.go:70] unknown field "delta"
  W0910 23:43:58.829148      21 warnings.go:70] unknown field "epsilon"
  W0910 23:43:58.829154      21 warnings.go:70] unknown field "gamma"
  Sep 10 23:43:59.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-601" for this suite. @ 09/10/23 23:43:59.394
• [3.138 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/10/23 23:43:59.404
  Sep 10 23:43:59.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:43:59.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:43:59.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:43:59.44
  STEP: Setting up server cert @ 09/10/23 23:43:59.472
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:44:00.12
  STEP: Deploying the webhook pod @ 09/10/23 23:44:00.127
  STEP: Wait for the deployment to be ready @ 09/10/23 23:44:00.141
  Sep 10 23:44:00.149: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/10/23 23:44:02.159
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:44:02.171
  Sep 10 23:44:03.171: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/10/23 23:44:03.177
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/23 23:44:03.177
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/10/23 23:44:03.201
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/10/23 23:44:04.211
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/23 23:44:04.211
  STEP: Having no error when timeout is longer than webhook latency @ 09/10/23 23:44:05.242
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/23 23:44:05.242
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/10/23 23:44:10.282
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/10/23 23:44:10.282
  Sep 10 23:44:15.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-739" for this suite. @ 09/10/23 23:44:15.403
  STEP: Destroying namespace "webhook-markers-6143" for this suite. @ 09/10/23 23:44:15.426
• [16.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/10/23 23:44:15.437
  Sep 10 23:44:15.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/10/23 23:44:15.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:15.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:15.467
  STEP: creating a Namespace @ 09/10/23 23:44:15.482
  STEP: patching the Namespace @ 09/10/23 23:44:15.509
  STEP: get the Namespace and ensuring it has the label @ 09/10/23 23:44:15.525
  Sep 10 23:44:15.531: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1475" for this suite. @ 09/10/23 23:44:15.535
  STEP: Destroying namespace "nspatchtest-000aeabe-91fc-4d09-9def-557f467e4a37-1587" for this suite. @ 09/10/23 23:44:15.551
• [0.121 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/10/23 23:44:15.559
  Sep 10 23:44:15.559: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/23 23:44:15.56
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:15.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:15.597
  Sep 10 23:44:15.600: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/10/23 23:44:17.667
  Sep 10 23:44:17.668: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-4381 --namespace=crd-publish-openapi-4381 create -f -'
  Sep 10 23:44:18.541: INFO: stderr: ""
  Sep 10 23:44:18.541: INFO: stdout: "e2e-test-crd-publish-openapi-5724-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 10 23:44:18.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-4381 --namespace=crd-publish-openapi-4381 delete e2e-test-crd-publish-openapi-5724-crds test-cr'
  Sep 10 23:44:18.643: INFO: stderr: ""
  Sep 10 23:44:18.643: INFO: stdout: "e2e-test-crd-publish-openapi-5724-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 10 23:44:18.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-4381 --namespace=crd-publish-openapi-4381 apply -f -'
  Sep 10 23:44:18.841: INFO: stderr: ""
  Sep 10 23:44:18.841: INFO: stdout: "e2e-test-crd-publish-openapi-5724-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 10 23:44:18.841: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-4381 --namespace=crd-publish-openapi-4381 delete e2e-test-crd-publish-openapi-5724-crds test-cr'
  Sep 10 23:44:18.945: INFO: stderr: ""
  Sep 10 23:44:18.945: INFO: stdout: "e2e-test-crd-publish-openapi-5724-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/10/23 23:44:18.945
  Sep 10 23:44:18.946: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-4381 explain e2e-test-crd-publish-openapi-5724-crds'
  Sep 10 23:44:19.525: INFO: stderr: ""
  Sep 10 23:44:19.525: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-5724-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 10 23:44:21.997: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4381" for this suite. @ 09/10/23 23:44:22.005
• [6.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/10/23 23:44:22.013
  Sep 10 23:44:22.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-runtime @ 09/10/23 23:44:22.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:22.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:22.036
  STEP: create the container @ 09/10/23 23:44:22.038
  W0910 23:44:22.046520      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/10/23 23:44:22.046
  STEP: get the container status @ 09/10/23 23:44:26.069
  STEP: the container should be terminated @ 09/10/23 23:44:26.072
  STEP: the termination message should be set @ 09/10/23 23:44:26.072
  Sep 10 23:44:26.072: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/10/23 23:44:26.072
  Sep 10 23:44:26.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7828" for this suite. @ 09/10/23 23:44:26.093
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/10/23 23:44:26.1
  Sep 10 23:44:26.100: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/10/23 23:44:26.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:26.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:26.123
  STEP: Creating a test namespace @ 09/10/23 23:44:26.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:26.142
  STEP: Creating a pod in the namespace @ 09/10/23 23:44:26.144
  STEP: Waiting for the pod to have running status @ 09/10/23 23:44:26.152
  STEP: Deleting the namespace @ 09/10/23 23:44:28.161
  STEP: Waiting for the namespace to be removed. @ 09/10/23 23:44:28.167
  STEP: Recreating the namespace @ 09/10/23 23:44:39.17
  STEP: Verifying there are no pods in the namespace @ 09/10/23 23:44:39.188
  Sep 10 23:44:39.191: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4957" for this suite. @ 09/10/23 23:44:39.196
  STEP: Destroying namespace "nsdeletetest-2353" for this suite. @ 09/10/23 23:44:39.206
  Sep 10 23:44:39.209: INFO: Namespace nsdeletetest-2353 was already deleted
  STEP: Destroying namespace "nsdeletetest-7252" for this suite. @ 09/10/23 23:44:39.209
• [13.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/10/23 23:44:39.223
  Sep 10 23:44:39.223: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/23 23:44:39.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:39.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:39.261
  Sep 10 23:44:39.265: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:44:42.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8097" for this suite. @ 09/10/23 23:44:42.36
• [3.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/10/23 23:44:42.369
  Sep 10 23:44:42.369: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/23 23:44:42.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:42.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:42.39
  Sep 10 23:44:42.401: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-632" for this suite. @ 09/10/23 23:44:42.405
• [0.043 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/10/23 23:44:42.428
  Sep 10 23:44:42.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/10/23 23:44:42.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:42.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:42.451
  STEP: Creating configMap with name configmap-test-volume-f9cf00e6-0348-4004-a329-f5dc5ec8ccad @ 09/10/23 23:44:42.453
  STEP: Creating a pod to test consume configMaps @ 09/10/23 23:44:42.458
  STEP: Saw pod success @ 09/10/23 23:44:46.488
  Sep 10 23:44:46.490: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-4b8191df-1c03-4934-bb03-5a156d7b9242 container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/10/23 23:44:46.512
  Sep 10 23:44:46.528: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1190" for this suite. @ 09/10/23 23:44:46.534
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/10/23 23:44:46.544
  Sep 10 23:44:46.544: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename runtimeclass @ 09/10/23 23:44:46.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:46.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:46.564
  STEP: getting /apis @ 09/10/23 23:44:46.567
  STEP: getting /apis/node.k8s.io @ 09/10/23 23:44:46.572
  STEP: getting /apis/node.k8s.io/v1 @ 09/10/23 23:44:46.573
  STEP: creating @ 09/10/23 23:44:46.574
  STEP: watching @ 09/10/23 23:44:46.588
  Sep 10 23:44:46.589: INFO: starting watch
  STEP: getting @ 09/10/23 23:44:46.595
  STEP: listing @ 09/10/23 23:44:46.599
  STEP: patching @ 09/10/23 23:44:46.602
  STEP: updating @ 09/10/23 23:44:46.608
  Sep 10 23:44:46.613: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/10/23 23:44:46.613
  STEP: deleting a collection @ 09/10/23 23:44:46.624
  Sep 10 23:44:46.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1809" for this suite. @ 09/10/23 23:44:46.643
• [0.106 seconds]
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/10/23 23:44:46.65
  Sep 10 23:44:46.650: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/10/23 23:44:46.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:44:46.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:44:46.67
  STEP: creating service in namespace services-5845 @ 09/10/23 23:44:46.673
  STEP: creating service affinity-clusterip-transition in namespace services-5845 @ 09/10/23 23:44:46.673
  STEP: creating replication controller affinity-clusterip-transition in namespace services-5845 @ 09/10/23 23:44:46.689
  I0910 23:44:46.703539      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-5845, replica count: 3
  I0910 23:44:49.755424      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0910 23:44:52.756566      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 10 23:44:52.762: INFO: Creating new exec pod
  Sep 10 23:44:55.775: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-5845 exec execpod-affinity82hws -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 10 23:44:56.007: INFO: stderr: "+ nc -v -t -w 2+ echo hostName\n affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 10 23:44:56.007: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 10 23:44:56.007: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-5845 exec execpod-affinity82hws -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.128.49 80'
  Sep 10 23:44:56.251: INFO: stderr: "+ nc -v -t -w 2 10.43.128.49 80\n+ Connection to 10.43.128.49 80 port [tcp/http] succeeded!\necho hostName\n"
  Sep 10 23:44:56.251: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 10 23:44:56.262: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-5845 exec execpod-affinity82hws -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.128.49:80/ ; done'
  Sep 10 23:44:56.545: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n"
  Sep 10 23:44:56.545: INFO: stdout: "\naffinity-clusterip-transition-lpnj8\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-lpnj8\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-lpnj8\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-5kjln\naffinity-clusterip-transition-lpnj8\naffinity-clusterip-transition-lpnj8\naffinity-clusterip-transition-wzgkg"
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-lpnj8
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-lpnj8
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-lpnj8
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-5kjln
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-lpnj8
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-lpnj8
  Sep 10 23:44:56.545: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:56.554: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-5845 exec execpod-affinity82hws -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.128.49:80/ ; done'
  Sep 10 23:44:57.066: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.128.49:80/\n"
  Sep 10 23:44:57.066: INFO: stdout: "\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg\naffinity-clusterip-transition-wzgkg"
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Received response from host: affinity-clusterip-transition-wzgkg
  Sep 10 23:44:57.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 10 23:44:57.071: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-5845, will wait for the garbage collector to delete the pods @ 09/10/23 23:44:57.087
  Sep 10 23:44:57.159: INFO: Deleting ReplicationController affinity-clusterip-transition took: 6.151177ms
  Sep 10 23:44:57.261: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.485967ms
  STEP: Destroying namespace "services-5845" for this suite. @ 09/10/23 23:45:01.588
• [14.948 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/10/23 23:45:01.599
  Sep 10 23:45:01.599: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/10/23 23:45:01.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:45:01.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:45:01.621
  STEP: Creating pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865 @ 09/10/23 23:45:01.624
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/23 23:45:03.639
  Sep 10 23:45:03.642: INFO: Initial restart count of pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f is 0
  Sep 10 23:45:03.645: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:05.649: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:07.654: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:09.658: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:11.662: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:13.666: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:15.670: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:17.673: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:19.677: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:21.682: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:23.686: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:25.690: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:27.693: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:29.697: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:31.701: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:33.705: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:35.709: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:37.713: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:39.721: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:41.726: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:43.729: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:45.734: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:47.738: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:49.742: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:51.746: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:53.750: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:55.759: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:57.763: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:45:59.767: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:01.774: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:03.778: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:05.782: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:07.787: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:09.792: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:11.796: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:13.800: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:15.804: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:17.807: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:19.811: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:21.817: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:23.822: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:25.826: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:27.830: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:29.835: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:31.838: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:33.846: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:35.852: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:37.856: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:39.859: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:41.863: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:44.125: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:46.129: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:48.135: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:50.139: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:52.143: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:54.147: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:56.151: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:46:58.154: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:00.158: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:02.394: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:04.400: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:06.403: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:08.407: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:10.411: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:12.428: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:14.432: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:16.437: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:18.442: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:20.446: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:22.449: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:24.461: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:26.465: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:28.469: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:30.473: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:32.477: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:34.487: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:36.491: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:38.494: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:40.499: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:42.504: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:44.508: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:46.511: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:48.515: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:50.518: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:52.522: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:54.526: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:56.530: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:47:58.535: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:00.541: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:02.545: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:04.550: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:06.553: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:08.558: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:10.562: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:12.565: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:14.570: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:16.574: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:18.579: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:20.583: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:22.588: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:24.592: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:26.595: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:28.600: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:30.604: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:32.608: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:34.624: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:36.627: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:38.632: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:40.636: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:42.640: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:44.644: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:46.649: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:48.654: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:50.658: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:52.661: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:54.666: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:56.670: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:48:58.675: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:49:00.679: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:49:02.683: INFO: Get pod test-grpc-92d9f784-1f77-4d74-a243-fe52312c016f in namespace container-probe-6865
  Sep 10 23:49:04.684: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/10/23 23:49:04.694
  STEP: Destroying namespace "container-probe-6865" for this suite. @ 09/10/23 23:49:04.717
• [243.133 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/10/23 23:49:04.733
  Sep 10 23:49:04.733: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/10/23 23:49:04.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:04.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:04.764
  Sep 10 23:49:04.801: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/10/23 23:49:04.807
  Sep 10 23:49:04.813: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:04.813: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/10/23 23:49:04.813
  Sep 10 23:49:04.856: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:04.857: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:05.865: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:05.865: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:06.861: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:06.861: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:07.861: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 10 23:49:07.861: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/10/23 23:49:07.863
  Sep 10 23:49:07.892: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 10 23:49:07.892: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Sep 10 23:49:08.896: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:08.896: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/10/23 23:49:08.896
  Sep 10 23:49:09.182: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:09.182: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:10.189: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:10.189: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:11.186: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:11.186: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:49:12.185: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 10 23:49:12.185: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/23 23:49:12.19
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4740, will wait for the garbage collector to delete the pods @ 09/10/23 23:49:12.19
  Sep 10 23:49:12.254: INFO: Deleting DaemonSet.extensions daemon-set took: 7.311584ms
  Sep 10 23:49:12.354: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.884726ms
  Sep 10 23:49:14.358: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:49:14.359: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 10 23:49:14.362: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"82314"},"items":null}

  Sep 10 23:49:14.365: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"82314"},"items":null}

  Sep 10 23:49:14.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4740" for this suite. @ 09/10/23 23:49:14.43
• [9.713 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/10/23 23:49:14.447
  Sep 10 23:49:14.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:49:14.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:14.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:14.481
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-cab41416-b04c-4dda-8558-3a6c20cc0159 @ 09/10/23 23:49:14.495
  STEP: Creating the pod @ 09/10/23 23:49:14.504
  STEP: Updating configmap projected-configmap-test-upd-cab41416-b04c-4dda-8558-3a6c20cc0159 @ 09/10/23 23:49:16.543
  STEP: waiting to observe update in volume @ 09/10/23 23:49:16.548
  Sep 10 23:49:18.562: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3111" for this suite. @ 09/10/23 23:49:18.565
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/10/23 23:49:18.573
  Sep 10 23:49:18.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/10/23 23:49:18.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:18.59
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:18.594
  STEP: Creating secret with name secret-test-1b8d859a-4e6d-4d8f-b067-4232f9c1cbaa @ 09/10/23 23:49:18.596
  STEP: Creating a pod to test consume secrets @ 09/10/23 23:49:18.602
  STEP: Saw pod success @ 09/10/23 23:49:22.623
  Sep 10 23:49:22.626: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-ba3d8bba-cadc-4f31-b8ee-edb8f87b3351 container secret-env-test: <nil>
  STEP: delete the pod @ 09/10/23 23:49:22.634
  Sep 10 23:49:22.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-410" for this suite. @ 09/10/23 23:49:22.653
• [4.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/10/23 23:49:22.664
  Sep 10 23:49:22.664: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/10/23 23:49:22.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:22.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:22.736
  STEP: fetching services @ 09/10/23 23:49:22.739
  Sep 10 23:49:22.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2338" for this suite. @ 09/10/23 23:49:22.747
• [0.089 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/10/23 23:49:22.753
  Sep 10 23:49:22.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/10/23 23:49:22.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:22.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:22.774
  Sep 10 23:49:22.778: INFO: Creating ReplicaSet my-hostname-basic-c3c0d076-3526-4f5b-818b-ef814bbdbfbd
  Sep 10 23:49:22.787: INFO: Pod name my-hostname-basic-c3c0d076-3526-4f5b-818b-ef814bbdbfbd: Found 0 pods out of 1
  Sep 10 23:49:27.793: INFO: Pod name my-hostname-basic-c3c0d076-3526-4f5b-818b-ef814bbdbfbd: Found 1 pods out of 1
  Sep 10 23:49:27.793: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-c3c0d076-3526-4f5b-818b-ef814bbdbfbd" is running
  Sep 10 23:49:27.798: INFO: Pod "my-hostname-basic-c3c0d076-3526-4f5b-818b-ef814bbdbfbd-fwpw5" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-10 23:49:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-10 23:49:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-10 23:49:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-10 23:49:22 +0000 UTC Reason: Message:}])
  Sep 10 23:49:27.798: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/10/23 23:49:27.798
  Sep 10 23:49:27.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8343" for this suite. @ 09/10/23 23:49:27.826
• [5.085 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/10/23 23:49:27.841
  Sep 10 23:49:27.841: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:49:27.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:27.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:27.869
  STEP: Setting up server cert @ 09/10/23 23:49:27.91
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:49:28.182
  STEP: Deploying the webhook pod @ 09/10/23 23:49:28.19
  STEP: Wait for the deployment to be ready @ 09/10/23 23:49:28.202
  Sep 10 23:49:28.214: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/23 23:49:30.223
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:49:30.236
  Sep 10 23:49:31.236: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 10 23:49:31.241: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4865-crds.webhook.example.com via the AdmissionRegistration API @ 09/10/23 23:49:31.752
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/10/23 23:49:31.775
  Sep 10 23:49:33.809: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5563" for this suite. @ 09/10/23 23:49:34.444
  STEP: Destroying namespace "webhook-markers-4034" for this suite. @ 09/10/23 23:49:34.451
• [6.619 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/10/23 23:49:34.462
  Sep 10 23:49:34.462: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subjectreview @ 09/10/23 23:49:34.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:34.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:34.487
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-7018" @ 09/10/23 23:49:34.489
  Sep 10 23:49:34.494: INFO: saUsername: "system:serviceaccount:subjectreview-7018:e2e"
  Sep 10 23:49:34.494: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-7018"}
  Sep 10 23:49:34.494: INFO: saUID: "7207b166-5209-41df-a6fc-b0d0ef8a4667"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-7018:e2e" @ 09/10/23 23:49:34.494
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-7018:e2e" @ 09/10/23 23:49:34.494
  Sep 10 23:49:34.498: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-7018:e2e" api 'list' configmaps in "subjectreview-7018" namespace @ 09/10/23 23:49:34.498
  Sep 10 23:49:34.501: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-7018:e2e" @ 09/10/23 23:49:34.501
  Sep 10 23:49:34.503: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  Sep 10 23:49:34.503: INFO: LocalSubjectAccessReview has been verified
  Sep 10 23:49:34.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-7018" for this suite. @ 09/10/23 23:49:34.507
• [0.051 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/10/23 23:49:34.515
  Sep 10 23:49:34.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption @ 09/10/23 23:49:34.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:34.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:34.542
  STEP: Creating a kubernetes client @ 09/10/23 23:49:34.545
  Sep 10 23:49:34.545: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption-2 @ 09/10/23 23:49:34.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:34.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:34.571
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:49:34.656
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:49:36.667
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:49:38.682
  STEP: listing a collection of PDBs across all namespaces @ 09/10/23 23:49:38.691
  STEP: listing a collection of PDBs in namespace disruption-6752 @ 09/10/23 23:49:38.694
  STEP: deleting a collection of PDBs @ 09/10/23 23:49:38.698
  STEP: Waiting for the PDB collection to be deleted @ 09/10/23 23:49:38.76
  Sep 10 23:49:38.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 10 23:49:38.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1345" for this suite. @ 09/10/23 23:49:38.772
  STEP: Destroying namespace "disruption-6752" for this suite. @ 09/10/23 23:49:38.779
• [4.271 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/10/23 23:49:38.787
  Sep 10 23:49:38.788: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/10/23 23:49:38.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:38.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:38.808
  STEP: Creating a pod to test substitution in container's command @ 09/10/23 23:49:38.811
  STEP: Saw pod success @ 09/10/23 23:49:42.832
  Sep 10 23:49:42.834: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod var-expansion-56ed44c1-bb80-441c-a03f-5989f054e163 container dapi-container: <nil>
  STEP: delete the pod @ 09/10/23 23:49:42.84
  Sep 10 23:49:42.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5079" for this suite. @ 09/10/23 23:49:42.862
• [4.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/10/23 23:49:42.871
  Sep 10 23:49:42.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename watch @ 09/10/23 23:49:42.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:49:42.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:49:42.891
  STEP: creating a watch on configmaps with label A @ 09/10/23 23:49:42.893
  STEP: creating a watch on configmaps with label B @ 09/10/23 23:49:42.894
  STEP: creating a watch on configmaps with label A or B @ 09/10/23 23:49:42.895
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/10/23 23:49:42.897
  Sep 10 23:49:42.902: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82663 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:42.902: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82663 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/10/23 23:49:42.902
  Sep 10 23:49:42.914: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82664 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:42.914: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82664 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/10/23 23:49:42.914
  Sep 10 23:49:42.924: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82665 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:42.924: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82665 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/10/23 23:49:42.925
  Sep 10 23:49:42.931: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82666 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:42.932: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-2507  56af78d5-2140-4b8c-a96e-8c8fe9c83191 82666 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/10/23 23:49:42.932
  Sep 10 23:49:42.938: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2507  e73d25b9-1712-4089-b517-05730be910a5 82667 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:42.938: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2507  e73d25b9-1712-4089-b517-05730be910a5 82667 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/10/23 23:49:52.939
  Sep 10 23:49:52.945: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2507  e73d25b9-1712-4089-b517-05730be910a5 82728 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:49:52.946: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-2507  e73d25b9-1712-4089-b517-05730be910a5 82728 0 2023-09-10 23:49:42 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-10 23:49:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 10 23:50:02.949: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2507" for this suite. @ 09/10/23 23:50:02.955
• [20.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/10/23 23:50:02.966
  Sep 10 23:50:02.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/10/23 23:50:02.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:02.987
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:02.992
  STEP: creating a Deployment @ 09/10/23 23:50:02.997
  Sep 10 23:50:02.997: INFO: Creating simple deployment test-deployment-96p6j
  Sep 10 23:50:03.010: INFO: deployment "test-deployment-96p6j" doesn't have the required revision set
  STEP: Getting /status @ 09/10/23 23:50:05.024
  Sep 10 23:50:05.028: INFO: Deployment test-deployment-96p6j has Conditions: [{Available True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-96p6j-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/10/23 23:50:05.028
  Sep 10 23:50:05.045: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 50, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 50, 4, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 50, 4, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 50, 3, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-96p6j-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/10/23 23:50:05.045
  Sep 10 23:50:05.047: INFO: Observed &Deployment event: ADDED
  Sep 10 23:50:05.047: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-96p6j-5d576bd769"}
  Sep 10 23:50:05.048: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-96p6j-5d576bd769"}
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 10 23:50:05.048: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-96p6j-5d576bd769" is progressing.}
  Sep 10 23:50:05.048: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 10 23:50:05.048: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-96p6j-5d576bd769" has successfully progressed.}
  Sep 10 23:50:05.049: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.049: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 10 23:50:05.049: INFO: Observed Deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-96p6j-5d576bd769" has successfully progressed.}
  Sep 10 23:50:05.049: INFO: Found Deployment test-deployment-96p6j in namespace deployment-6937 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 10 23:50:05.049: INFO: Deployment test-deployment-96p6j has an updated status
  STEP: patching the Statefulset Status @ 09/10/23 23:50:05.049
  Sep 10 23:50:05.049: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 10 23:50:05.058: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/10/23 23:50:05.058
  Sep 10 23:50:05.061: INFO: Observed &Deployment event: ADDED
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-96p6j-5d576bd769"}
  Sep 10 23:50:05.061: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-96p6j-5d576bd769"}
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 10 23:50:05.061: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:03 +0000 UTC 2023-09-10 23:50:03 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-96p6j-5d576bd769" is progressing.}
  Sep 10 23:50:05.061: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 10 23:50:05.061: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-96p6j-5d576bd769" has successfully progressed.}
  Sep 10 23:50:05.062: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.062: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:04 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 10 23:50:05.062: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-10 23:50:04 +0000 UTC 2023-09-10 23:50:03 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-96p6j-5d576bd769" has successfully progressed.}
  Sep 10 23:50:05.062: INFO: Observed deployment test-deployment-96p6j in namespace deployment-6937 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 10 23:50:05.062: INFO: Observed &Deployment event: MODIFIED
  Sep 10 23:50:05.062: INFO: Found deployment test-deployment-96p6j in namespace deployment-6937 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 10 23:50:05.062: INFO: Deployment test-deployment-96p6j has a patched status
  Sep 10 23:50:05.069: INFO: Deployment "test-deployment-96p6j":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-96p6j",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6937",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6251e960-821b-4416-b684-7b7c60778386",
      ResourceVersion: (string) (len=5) "82800",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986602,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986602,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986605,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=56) "Found new replica set \"test-deployment-96p6j-5d576bd769\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 10 23:50:05.076: INFO: New ReplicaSet "test-deployment-96p6j-5d576bd769" of Deployment "test-deployment-96p6j":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-96p6j-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6937",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02312082-aa46-4bb0-a61c-aff3fe7ef4dd",
      ResourceVersion: (string) (len=5) "82796",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986603,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-96p6j",
          UID: (types.UID) (len=36) "6251e960-821b-4416-b684-7b7c60778386",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 36 32 35  |k:{\"uid\":\"625|
              00000120  31 65 39 36 30 2d 38 32  31 62 2d 34 34 31 36 2d  |1e960-821b-4416-|
              00000130  62 36 38 34 2d 37 62 37  63 36 30 37 37 38 33 38  |b684-7b7c6077838|
              00000140  36 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |6\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986604,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:50:05.086: INFO: Pod "test-deployment-96p6j-5d576bd769-f9lmv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-96p6j-5d576bd769-f9lmv",
      GenerateName: (string) (len=33) "test-deployment-96p6j-5d576bd769-",
      Namespace: (string) (len=15) "deployment-6937",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcfe73d4-ebac-4ebd-a3f9-5e38b40679d6",
      ResourceVersion: (string) (len=5) "82795",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986603,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "211c38944007fd4820b8736a174c739b1112a3702850d21439ca0dbf0c9e290a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.51/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.51/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-96p6j-5d576bd769",
          UID: (types.UID) (len=36) "02312082-aa46-4bb0-a61c-aff3fe7ef4dd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 30 32 33 31 32 30 38  32 2d 61 61 34 36 2d 34  |"02312082-aa46-4|
              000000a0  62 62 30 2d 61 36 31 63  2d 61 66 66 33 66 65 37  |bb0-a61c-aff3fe7|
              000000b0  65 66 34 64 64 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |ef4dd\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986604,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  35 31 5c 22 7d 22 3a 7b  |10.42.3.51\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7hh29",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7hh29",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986604,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986604,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829986603,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829986603,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829986604,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6361660b5a4de98c3909bf47fcf0a5b5c8ec132e54cbc0fc425dc9b5614e43e3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:50:05.099: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6937" for this suite. @ 09/10/23 23:50:05.105
• [2.149 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/10/23 23:50:05.115
  Sep 10 23:50:05.116: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/10/23 23:50:05.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:05.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:05.145
  STEP: Creating service test in namespace statefulset-3999 @ 09/10/23 23:50:05.15
  STEP: Creating statefulset ss in namespace statefulset-3999 @ 09/10/23 23:50:05.167
  Sep 10 23:50:05.179: INFO: Found 0 stateful pods, waiting for 1
  Sep 10 23:50:15.184: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/10/23 23:50:15.19
  STEP: Getting /status @ 09/10/23 23:50:15.201
  Sep 10 23:50:15.205: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/10/23 23:50:15.205
  Sep 10 23:50:15.217: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/10/23 23:50:15.217
  Sep 10 23:50:15.220: INFO: Observed &StatefulSet event: ADDED
  Sep 10 23:50:15.220: INFO: Found Statefulset ss in namespace statefulset-3999 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 10 23:50:15.220: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/10/23 23:50:15.22
  Sep 10 23:50:15.220: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 10 23:50:15.227: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/10/23 23:50:15.227
  Sep 10 23:50:15.229: INFO: Observed &StatefulSet event: ADDED
  Sep 10 23:50:15.229: INFO: Deleting all statefulset in ns statefulset-3999
  Sep 10 23:50:15.232: INFO: Scaling statefulset ss to 0
  Sep 10 23:50:25.256: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 10 23:50:25.261: INFO: Deleting statefulset ss
  Sep 10 23:50:25.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3999" for this suite. @ 09/10/23 23:50:25.29
• [20.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/10/23 23:50:25.299
  Sep 10 23:50:25.299: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/23 23:50:25.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:25.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:25.328
  Sep 10 23:50:25.351: INFO: created pod pod-service-account-defaultsa
  Sep 10 23:50:25.351: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 10 23:50:25.372: INFO: created pod pod-service-account-mountsa
  Sep 10 23:50:25.372: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 10 23:50:25.388: INFO: created pod pod-service-account-nomountsa
  Sep 10 23:50:25.389: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 10 23:50:25.410: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 10 23:50:25.411: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 10 23:50:25.430: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 10 23:50:25.430: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 10 23:50:25.451: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 10 23:50:25.485: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 10 23:50:25.505: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 10 23:50:25.506: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 10 23:50:25.515: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 10 23:50:25.515: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 10 23:50:25.528: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 10 23:50:25.529: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 10 23:50:25.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7834" for this suite. @ 09/10/23 23:50:25.546
• [0.263 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/10/23 23:50:25.571
  Sep 10 23:50:25.577: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/10/23 23:50:25.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:25.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:25.643
  Sep 10 23:50:29.678: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 10 23:50:29.683: INFO: Deleting pod "var-expansion-b3c41d9c-d815-4ce9-b808-e9e0a4dd6956" in namespace "var-expansion-5141"
  Sep 10 23:50:29.689: INFO: Wait up to 5m0s for pod "var-expansion-b3c41d9c-d815-4ce9-b808-e9e0a4dd6956" to be fully deleted
  STEP: Destroying namespace "var-expansion-5141" for this suite. @ 09/10/23 23:50:31.698
• [6.133 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/10/23 23:50:31.705
  Sep 10 23:50:31.705: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption @ 09/10/23 23:50:31.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:31.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:31.732
  STEP: creating the pdb @ 09/10/23 23:50:31.735
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:50:31.741
  STEP: updating the pdb @ 09/10/23 23:50:33.751
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:50:33.758
  STEP: patching the pdb @ 09/10/23 23:50:35.77
  STEP: Waiting for the pdb to be processed @ 09/10/23 23:50:35.781
  STEP: Waiting for the pdb to be deleted @ 09/10/23 23:50:35.796
  Sep 10 23:50:35.799: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7273" for this suite. @ 09/10/23 23:50:35.805
• [4.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/10/23 23:50:35.816
  Sep 10 23:50:35.816: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context @ 09/10/23 23:50:35.817
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:35.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:35.849
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/10/23 23:50:35.852
  STEP: Saw pod success @ 09/10/23 23:50:39.898
  Sep 10 23:50:39.900: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod security-context-13e4ef1b-f612-4ab9-986e-9f702834157c container test-container: <nil>
  STEP: delete the pod @ 09/10/23 23:50:39.908
  Sep 10 23:50:39.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2777" for this suite. @ 09/10/23 23:50:39.927
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/10/23 23:50:39.938
  Sep 10 23:50:39.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/23 23:50:39.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:39.953
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:39.958
  Sep 10 23:50:39.961: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:50:41.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3699" for this suite. @ 09/10/23 23:50:41.026
• [1.100 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/10/23 23:50:41.041
  Sep 10 23:50:41.041: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:50:41.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:41.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:41.061
  STEP: Setting up server cert @ 09/10/23 23:50:41.095
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:50:41.835
  STEP: Deploying the webhook pod @ 09/10/23 23:50:41.849
  STEP: Wait for the deployment to be ready @ 09/10/23 23:50:41.861
  Sep 10 23:50:41.876: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  Sep 10 23:50:43.885: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 10, 23, 50, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 50, 41, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 10, 23, 50, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 10, 23, 50, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/10/23 23:50:45.896
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:50:45.921
  Sep 10 23:50:46.921: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/10/23 23:50:46.991
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/23 23:50:47.079
  STEP: Deleting the collection of validation webhooks @ 09/10/23 23:50:47.19
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/10/23 23:50:47.237
  Sep 10 23:50:47.256: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-977" for this suite. @ 09/10/23 23:50:47.319
  STEP: Destroying namespace "webhook-markers-9052" for this suite. @ 09/10/23 23:50:47.327
• [6.311 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/10/23 23:50:47.352
  Sep 10 23:50:47.353: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/10/23 23:50:47.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:47.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:47.401
  STEP: Create a Replicaset @ 09/10/23 23:50:47.433
  STEP: Verify that the required pods have come up. @ 09/10/23 23:50:47.451
  Sep 10 23:50:47.459: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/23 23:50:47.48
  STEP: Getting /status @ 09/10/23 23:50:49.509
  Sep 10 23:50:49.513: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/10/23 23:50:49.513
  Sep 10 23:50:49.522: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/10/23 23:50:49.522
  Sep 10 23:50:49.524: INFO: Observed &ReplicaSet event: ADDED
  Sep 10 23:50:49.524: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.524: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.525: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.525: INFO: Found replicaset test-rs in namespace replicaset-7158 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 10 23:50:49.525: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/10/23 23:50:49.525
  Sep 10 23:50:49.525: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 10 23:50:49.532: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/10/23 23:50:49.533
  Sep 10 23:50:49.534: INFO: Observed &ReplicaSet event: ADDED
  Sep 10 23:50:49.535: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.535: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.536: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.536: INFO: Observed replicaset test-rs in namespace replicaset-7158 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 10 23:50:49.536: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 10 23:50:49.536: INFO: Found replicaset test-rs in namespace replicaset-7158 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 10 23:50:49.537: INFO: Replicaset test-rs has a patched status
  Sep 10 23:50:49.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7158" for this suite. @ 09/10/23 23:50:49.542
• [2.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/10/23 23:50:49.552
  Sep 10 23:50:49.552: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:50:49.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:49.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:49.573
  STEP: Creating a pod to test downward API volume plugin @ 09/10/23 23:50:49.575
  STEP: Saw pod success @ 09/10/23 23:50:53.622
  Sep 10 23:50:53.625: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-1ceb4f48-479d-42d0-8d2f-e9dd4e9a168a container client-container: <nil>
  STEP: delete the pod @ 09/10/23 23:50:53.634
  Sep 10 23:50:53.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5524" for this suite. @ 09/10/23 23:50:53.668
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/10/23 23:50:53.678
  Sep 10 23:50:53.678: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/10/23 23:50:53.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:50:53.693
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:50:53.701
  STEP: Creating service test in namespace statefulset-9025 @ 09/10/23 23:50:53.705
  STEP: Creating statefulset ss in namespace statefulset-9025 @ 09/10/23 23:50:53.717
  Sep 10 23:50:53.730: INFO: Found 0 stateful pods, waiting for 1
  Sep 10 23:51:03.738: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/10/23 23:51:03.743
  STEP: updating a scale subresource @ 09/10/23 23:51:03.747
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/10/23 23:51:03.753
  STEP: Patch a scale subresource @ 09/10/23 23:51:03.761
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/10/23 23:51:03.778
  Sep 10 23:51:03.789: INFO: Deleting all statefulset in ns statefulset-9025
  Sep 10 23:51:03.796: INFO: Scaling statefulset ss to 0
  Sep 10 23:51:13.854: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 10 23:51:13.857: INFO: Deleting statefulset ss
  Sep 10 23:51:13.874: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9025" for this suite. @ 09/10/23 23:51:13.879
• [20.209 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/10/23 23:51:13.889
  Sep 10 23:51:13.889: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:51:13.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:51:13.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:51:13.913
  STEP: Setting up server cert @ 09/10/23 23:51:13.937
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:51:14.442
  STEP: Deploying the webhook pod @ 09/10/23 23:51:14.45
  STEP: Wait for the deployment to be ready @ 09/10/23 23:51:14.465
  Sep 10 23:51:14.474: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/23 23:51:16.484
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:51:16.492
  Sep 10 23:51:17.492: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/10/23 23:51:17.499
  STEP: create a pod that should be updated by the webhook @ 09/10/23 23:51:17.526
  Sep 10 23:51:17.554: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9186" for this suite. @ 09/10/23 23:51:17.634
  STEP: Destroying namespace "webhook-markers-3491" for this suite. @ 09/10/23 23:51:17.655
• [3.773 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/10/23 23:51:17.662
  Sep 10 23:51:17.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pod-network-test @ 09/10/23 23:51:17.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:51:17.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:51:17.689
  STEP: Performing setup for networking test in namespace pod-network-test-4583 @ 09/10/23 23:51:17.692
  STEP: creating a selector @ 09/10/23 23:51:17.692
  STEP: Creating the service pods in kubernetes @ 09/10/23 23:51:17.692
  Sep 10 23:51:17.692: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/10/23 23:51:38.611
  Sep 10 23:51:40.646: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 10 23:51:40.646: INFO: Going to poll 10.42.0.24 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 10 23:51:40.649: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.24 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:51:40.649: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:51:40.650: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:51:40.650: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.24+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 10 23:51:41.760: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 10 23:51:41.760: INFO: Going to poll 10.42.2.28 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 10 23:51:41.764: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.28 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:51:41.764: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:51:41.765: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:51:41.765: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.28+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 10 23:51:42.892: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 10 23:51:42.893: INFO: Going to poll 10.42.1.20 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 10 23:51:42.896: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.20 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:51:42.896: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:51:42.897: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:51:42.898: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.20+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 10 23:51:44.002: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 10 23:51:44.003: INFO: Going to poll 10.42.3.61 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  Sep 10 23:51:44.006: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.61 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4583 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:51:44.006: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:51:44.007: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:51:44.007: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4583/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.61+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 10 23:51:45.112: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 10 23:51:45.112: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4583" for this suite. @ 09/10/23 23:51:45.122
• [27.469 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/10/23 23:51:45.132
  Sep 10 23:51:45.132: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/10/23 23:51:45.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:51:45.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:51:45.164
  STEP: create the container to handle the HTTPGet hook request. @ 09/10/23 23:51:45.181
  STEP: create the pod with lifecycle hook @ 09/10/23 23:51:47.207
  STEP: delete the pod with lifecycle hook @ 09/10/23 23:51:49.225
  STEP: check prestop hook @ 09/10/23 23:51:53.25
  Sep 10 23:51:53.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1480" for this suite. @ 09/10/23 23:51:53.337
• [8.211 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/10/23 23:51:53.345
  Sep 10 23:51:53.346: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/10/23 23:51:53.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:51:53.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:51:53.37
  STEP: Given a ReplicationController is created @ 09/10/23 23:51:53.373
  STEP: When the matched label of one of its pods change @ 09/10/23 23:51:53.379
  Sep 10 23:51:53.385: INFO: Pod name pod-release: Found 0 pods out of 1
  Sep 10 23:51:58.390: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/10/23 23:51:58.406
  Sep 10 23:51:59.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8630" for this suite. @ 09/10/23 23:51:59.42
• [6.080 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/10/23 23:51:59.427
  Sep 10 23:51:59.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/10/23 23:51:59.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:51:59.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:51:59.45
  STEP: creating service in namespace services-9555 @ 09/10/23 23:51:59.453
  STEP: creating service affinity-clusterip in namespace services-9555 @ 09/10/23 23:51:59.453
  STEP: creating replication controller affinity-clusterip in namespace services-9555 @ 09/10/23 23:51:59.483
  I0910 23:51:59.495988      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-9555, replica count: 3
  I0910 23:52:02.547931      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 10 23:52:02.554: INFO: Creating new exec pod
  Sep 10 23:52:05.578: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-9555 exec execpod-affinitylbshz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep 10 23:52:05.911: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 10 23:52:05.911: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 10 23:52:05.912: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-9555 exec execpod-affinitylbshz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.227.153 80'
  Sep 10 23:52:06.083: INFO: stderr: "+ nc -v -t -w 2 10.43.227.153 80\n+ echo hostName\nConnection to 10.43.227.153 80 port [tcp/http] succeeded!\n"
  Sep 10 23:52:06.083: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 10 23:52:06.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-9555 exec execpod-affinitylbshz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.227.153:80/ ; done'
  Sep 10 23:52:06.379: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.227.153:80/\n"
  Sep 10 23:52:06.379: INFO: stdout: "\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h\naffinity-clusterip-fmz4h"
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Received response from host: affinity-clusterip-fmz4h
  Sep 10 23:52:06.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 10 23:52:06.384: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-9555, will wait for the garbage collector to delete the pods @ 09/10/23 23:52:06.399
  Sep 10 23:52:06.460: INFO: Deleting ReplicationController affinity-clusterip took: 5.888453ms
  Sep 10 23:52:06.561: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.822366ms
  STEP: Destroying namespace "services-9555" for this suite. @ 09/10/23 23:52:09.784
• [10.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/10/23 23:52:09.794
  Sep 10 23:52:09.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:52:09.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:09.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:09.815
  STEP: Setting up server cert @ 09/10/23 23:52:09.846
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:52:10.277
  STEP: Deploying the webhook pod @ 09/10/23 23:52:10.284
  STEP: Wait for the deployment to be ready @ 09/10/23 23:52:10.297
  Sep 10 23:52:10.309: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/23 23:52:12.328
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:52:12.341
  Sep 10 23:52:13.341: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 10 23:52:13.347: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/10/23 23:52:13.858
  STEP: Creating a custom resource that should be denied by the webhook @ 09/10/23 23:52:13.888
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/10/23 23:52:15.914
  STEP: Updating the custom resource with disallowed data should be denied @ 09/10/23 23:52:15.925
  STEP: Deleting the custom resource should be denied @ 09/10/23 23:52:15.937
  STEP: Remove the offending key and value from the custom resource data @ 09/10/23 23:52:15.945
  STEP: Deleting the updated custom resource should be successful @ 09/10/23 23:52:15.957
  Sep 10 23:52:15.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7766" for this suite. @ 09/10/23 23:52:16.617
  STEP: Destroying namespace "webhook-markers-9" for this suite. @ 09/10/23 23:52:16.63
• [6.857 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/10/23 23:52:16.655
  Sep 10 23:52:16.655: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename events @ 09/10/23 23:52:16.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:16.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:16.688
  STEP: Create set of events @ 09/10/23 23:52:16.691
  Sep 10 23:52:16.697: INFO: created test-event-1
  Sep 10 23:52:16.704: INFO: created test-event-2
  Sep 10 23:52:16.712: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/10/23 23:52:16.713
  STEP: delete collection of events @ 09/10/23 23:52:16.716
  Sep 10 23:52:16.716: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/10/23 23:52:16.735
  Sep 10 23:52:16.735: INFO: requesting list of events to confirm quantity
  Sep 10 23:52:16.738: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-561" for this suite. @ 09/10/23 23:52:16.744
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/10/23 23:52:16.756
  Sep 10 23:52:16.756: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/23 23:52:16.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:16.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:16.786
  STEP: reading a file in the container @ 09/10/23 23:52:18.82
  Sep 10 23:52:18.820: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-902 pod-service-account-1034a7e4-8949-4583-a6b7-4828d4205164 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/10/23 23:52:19.03
  Sep 10 23:52:19.030: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-902 pod-service-account-1034a7e4-8949-4583-a6b7-4828d4205164 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/10/23 23:52:19.914
  Sep 10 23:52:19.915: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-902 pod-service-account-1034a7e4-8949-4583-a6b7-4828d4205164 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 10 23:52:20.114: INFO: Got root ca configmap in namespace "svcaccounts-902"
  Sep 10 23:52:20.116: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-902" for this suite. @ 09/10/23 23:52:20.119
• [3.370 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/10/23 23:52:20.125
  Sep 10 23:52:20.126: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/10/23 23:52:20.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:20.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:20.146
  STEP: Creating simple DaemonSet "daemon-set" @ 09/10/23 23:52:20.174
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/23 23:52:20.18
  Sep 10 23:52:20.193: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:52:20.193: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:52:21.203: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:52:21.203: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:52:22.215: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 10 23:52:22.215: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 09/10/23 23:52:22.219
  Sep 10 23:52:22.226: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/10/23 23:52:22.226
  Sep 10 23:52:22.239: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/10/23 23:52:22.239
  Sep 10 23:52:22.241: INFO: Observed &DaemonSet event: ADDED
  Sep 10 23:52:22.241: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.242: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.242: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.242: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.243: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.243: INFO: Found daemon set daemon-set in namespace daemonsets-2819 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 10 23:52:22.243: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/10/23 23:52:22.243
  STEP: watching for the daemon set status to be patched @ 09/10/23 23:52:22.251
  Sep 10 23:52:22.253: INFO: Observed &DaemonSet event: ADDED
  Sep 10 23:52:22.253: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Observed daemon set daemon-set in namespace daemonsets-2819 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 10 23:52:22.254: INFO: Observed &DaemonSet event: MODIFIED
  Sep 10 23:52:22.254: INFO: Found daemon set daemon-set in namespace daemonsets-2819 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 10 23:52:22.254: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/23 23:52:22.259
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2819, will wait for the garbage collector to delete the pods @ 09/10/23 23:52:22.259
  Sep 10 23:52:22.326: INFO: Deleting DaemonSet.extensions daemon-set took: 14.649667ms
  Sep 10 23:52:22.428: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.165641ms
  Sep 10 23:52:24.831: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:52:24.832: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 10 23:52:24.836: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"84455"},"items":null}

  Sep 10 23:52:24.843: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"84455"},"items":null}

  Sep 10 23:52:24.859: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2819" for this suite. @ 09/10/23 23:52:24.863
• [4.742 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/10/23 23:52:24.871
  Sep 10 23:52:24.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/10/23 23:52:24.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:24.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:24.899
  STEP: Creating a pod to test downward API volume plugin @ 09/10/23 23:52:24.902
  STEP: Saw pod success @ 09/10/23 23:52:28.922
  Sep 10 23:52:28.925: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-b5b45fe7-0a81-4fcc-b626-9d0ca161c050 container client-container: <nil>
  STEP: delete the pod @ 09/10/23 23:52:28.936
  Sep 10 23:52:28.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-954" for this suite. @ 09/10/23 23:52:28.955
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/10/23 23:52:28.964
  Sep 10 23:52:28.964: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context @ 09/10/23 23:52:28.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:28.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:28.984
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/10/23 23:52:28.987
  STEP: Saw pod success @ 09/10/23 23:52:33.007
  Sep 10 23:52:33.009: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod security-context-0553bb41-4485-4c79-b7a0-51c71ce495ba container test-container: <nil>
  STEP: delete the pod @ 09/10/23 23:52:33.017
  Sep 10 23:52:33.031: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8696" for this suite. @ 09/10/23 23:52:33.038
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/10/23 23:52:33.059
  Sep 10 23:52:33.059: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/10/23 23:52:33.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:33.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:33.13
  STEP: fetching the /apis discovery document @ 09/10/23 23:52:33.132
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/10/23 23:52:33.133
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/10/23 23:52:33.133
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/10/23 23:52:33.133
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/10/23 23:52:33.134
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/10/23 23:52:33.134
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/10/23 23:52:33.135
  Sep 10 23:52:33.135: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7677" for this suite. @ 09/10/23 23:52:33.139
• [0.087 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/10/23 23:52:33.148
  Sep 10 23:52:33.148: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/10/23 23:52:33.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:33.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:33.166
  STEP: Creating a pod to test service account token:  @ 09/10/23 23:52:33.169
  STEP: Saw pod success @ 09/10/23 23:52:37.192
  Sep 10 23:52:37.195: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod test-pod-1c981f7b-cbb1-4448-9460-1e0d8df9acce container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/23 23:52:37.203
  Sep 10 23:52:37.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2118" for this suite. @ 09/10/23 23:52:37.262
• [4.145 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/10/23 23:52:37.294
  Sep 10 23:52:37.294: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename proxy @ 09/10/23 23:52:37.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:37.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:37.359
  STEP: starting an echo server on multiple ports @ 09/10/23 23:52:37.373
  STEP: creating replication controller proxy-service-dwh49 in namespace proxy-3933 @ 09/10/23 23:52:37.373
  I0910 23:52:37.389290      21 runners.go:197] Created replication controller with name: proxy-service-dwh49, namespace: proxy-3933, replica count: 1
  I0910 23:52:38.442926      21 runners.go:197] proxy-service-dwh49 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0910 23:52:39.443573      21 runners.go:197] proxy-service-dwh49 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 10 23:52:39.453: INFO: Endpoint proxy-3933/proxy-service-dwh49 is not ready yet
  Sep 10 23:52:41.457: INFO: setup took 4.095510111s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/10/23 23:52:41.457
  Sep 10 23:52:41.478: INFO: (0) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 20.762563ms)
  Sep 10 23:52:41.489: INFO: (0) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 30.999818ms)
  Sep 10 23:52:41.496: INFO: (0) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 38.687377ms)
  Sep 10 23:52:41.497: INFO: (0) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 38.665417ms)
  Sep 10 23:52:41.518: INFO: (0) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 59.657753ms)
  Sep 10 23:52:41.519: INFO: (0) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 61.030932ms)
  Sep 10 23:52:41.519: INFO: (0) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 60.993483ms)
  Sep 10 23:52:41.519: INFO: (0) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 60.562746ms)
  Sep 10 23:52:41.520: INFO: (0) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 61.882754ms)
  Sep 10 23:52:41.525: INFO: (0) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 67.424533ms)
  Sep 10 23:52:41.525: INFO: (0) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 67.732958ms)
  Sep 10 23:52:41.531: INFO: (0) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 73.362327ms)
  Sep 10 23:52:41.532: INFO: (0) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 74.413742ms)
  Sep 10 23:52:41.532: INFO: (0) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 74.378371ms)
  Sep 10 23:52:41.532: INFO: (0) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 74.358111ms)
  Sep 10 23:52:41.532: INFO: (0) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 74.607365ms)
  Sep 10 23:52:41.545: INFO: (1) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 10.438997ms)
  Sep 10 23:52:41.557: INFO: (1) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 21.805328ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 23.963429ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 23.126657ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 23.944398ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 23.38661ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 24.07652ms)
  Sep 10 23:52:41.559: INFO: (1) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 23.552663ms)
  Sep 10 23:52:41.561: INFO: (1) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 25.628823ms)
  Sep 10 23:52:41.563: INFO: (1) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 27.716133ms)
  Sep 10 23:52:41.564: INFO: (1) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 28.459663ms)
  Sep 10 23:52:41.565: INFO: (1) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 29.653569ms)
  Sep 10 23:52:41.566: INFO: (1) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 30.758475ms)
  Sep 10 23:52:41.566: INFO: (1) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 31.417364ms)
  Sep 10 23:52:41.566: INFO: (1) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 30.832767ms)
  Sep 10 23:52:41.567: INFO: (1) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 32.768583ms)
  Sep 10 23:52:41.577: INFO: (2) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 9.88452ms)
  Sep 10 23:52:41.578: INFO: (2) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 10.373896ms)
  Sep 10 23:52:41.578: INFO: (2) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 10.62243ms)
  Sep 10 23:52:41.580: INFO: (2) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.06501ms)
  Sep 10 23:52:41.582: INFO: (2) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 14.386524ms)
  Sep 10 23:52:41.583: INFO: (2) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 14.915761ms)
  Sep 10 23:52:41.583: INFO: (2) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 15.420098ms)
  Sep 10 23:52:41.587: INFO: (2) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 19.431974ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 19.931411ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 20.354528ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 19.735659ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 19.924602ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 19.685858ms)
  Sep 10 23:52:41.588: INFO: (2) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 20.259686ms)
  Sep 10 23:52:41.590: INFO: (2) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 21.847209ms)
  Sep 10 23:52:41.590: INFO: (2) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 22.283335ms)
  Sep 10 23:52:41.598: INFO: (3) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 7.223883ms)
  Sep 10 23:52:41.600: INFO: (3) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 9.398053ms)
  Sep 10 23:52:41.602: INFO: (3) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 11.214488ms)
  Sep 10 23:52:41.605: INFO: (3) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 14.224621ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 15.896105ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.192309ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 16.28851ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 16.389312ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 16.638736ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 16.219969ms)
  Sep 10 23:52:41.607: INFO: (3) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 16.646486ms)
  Sep 10 23:52:41.608: INFO: (3) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 17.6728ms)
  Sep 10 23:52:41.609: INFO: (3) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 18.692895ms)
  Sep 10 23:52:41.610: INFO: (3) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 18.876667ms)
  Sep 10 23:52:41.611: INFO: (3) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 19.536367ms)
  Sep 10 23:52:41.611: INFO: (3) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 20.692493ms)
  Sep 10 23:52:41.625: INFO: (4) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 8.169806ms)
  Sep 10 23:52:41.628: INFO: (4) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 12.162802ms)
  Sep 10 23:52:41.630: INFO: (4) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.487317ms)
  Sep 10 23:52:41.630: INFO: (4) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 12.71561ms)
  Sep 10 23:52:41.631: INFO: (4) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.775495ms)
  Sep 10 23:52:41.631: INFO: (4) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.163806ms)
  Sep 10 23:52:41.631: INFO: (4) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 14.15929ms)
  Sep 10 23:52:41.631: INFO: (4) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 14.347463ms)
  Sep 10 23:52:41.631: INFO: (4) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 14.261172ms)
  Sep 10 23:52:41.632: INFO: (4) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 15.843194ms)
  Sep 10 23:52:41.632: INFO: (4) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 15.057303ms)
  Sep 10 23:52:41.634: INFO: (4) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 17.62888ms)
  Sep 10 23:52:41.635: INFO: (4) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 17.463757ms)
  Sep 10 23:52:41.635: INFO: (4) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 17.71409ms)
  Sep 10 23:52:41.635: INFO: (4) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 18.247459ms)
  Sep 10 23:52:41.636: INFO: (4) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 18.463341ms)
  Sep 10 23:52:41.646: INFO: (5) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 9.618586ms)
  Sep 10 23:52:41.648: INFO: (5) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 11.212289ms)
  Sep 10 23:52:41.649: INFO: (5) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 12.862442ms)
  Sep 10 23:52:41.649: INFO: (5) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 12.651199ms)
  Sep 10 23:52:41.650: INFO: (5) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 13.101315ms)
  Sep 10 23:52:41.650: INFO: (5) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 14.12771ms)
  Sep 10 23:52:41.650: INFO: (5) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 14.092589ms)
  Sep 10 23:52:41.650: INFO: (5) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.634683ms)
  Sep 10 23:52:41.654: INFO: (5) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 17.632169ms)
  Sep 10 23:52:41.654: INFO: (5) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 16.796957ms)
  Sep 10 23:52:41.654: INFO: (5) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 16.650476ms)
  Sep 10 23:52:41.654: INFO: (5) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 17.01091ms)
  Sep 10 23:52:41.656: INFO: (5) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 18.38183ms)
  Sep 10 23:52:41.656: INFO: (5) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 19.476105ms)
  Sep 10 23:52:41.657: INFO: (5) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 19.480816ms)
  Sep 10 23:52:41.657: INFO: (5) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 19.329173ms)
  Sep 10 23:52:41.673: INFO: (6) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 8.986817ms)
  Sep 10 23:52:41.676: INFO: (6) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.6742ms)
  Sep 10 23:52:41.681: INFO: (6) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 17.784571ms)
  Sep 10 23:52:41.682: INFO: (6) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 18.892647ms)
  Sep 10 23:52:41.682: INFO: (6) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 19.16063ms)
  Sep 10 23:52:41.682: INFO: (6) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 18.471121ms)
  Sep 10 23:52:41.684: INFO: (6) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 20.544231ms)
  Sep 10 23:52:41.684: INFO: (6) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 20.429798ms)
  Sep 10 23:52:41.684: INFO: (6) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 20.178485ms)
  Sep 10 23:52:41.684: INFO: (6) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 20.279397ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 22.091302ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 21.512214ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 22.047981ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 21.987381ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 21.880299ms)
  Sep 10 23:52:41.685: INFO: (6) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 21.568594ms)
  Sep 10 23:52:41.700: INFO: (7) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 9.590185ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 16.177568ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.963747ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 13.682894ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 14.392863ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 14.611176ms)
  Sep 10 23:52:41.707: INFO: (7) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 14.266032ms)
  Sep 10 23:52:41.711: INFO: (7) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 18.482231ms)
  Sep 10 23:52:41.711: INFO: (7) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 13.787285ms)
  Sep 10 23:52:41.711: INFO: (7) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 18.040785ms)
  Sep 10 23:52:41.711: INFO: (7) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 13.703733ms)
  Sep 10 23:52:41.713: INFO: (7) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 15.170645ms)
  Sep 10 23:52:41.713: INFO: (7) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 20.093954ms)
  Sep 10 23:52:41.714: INFO: (7) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 15.748892ms)
  Sep 10 23:52:41.714: INFO: (7) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 15.685791ms)
  Sep 10 23:52:41.719: INFO: (7) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 20.709743ms)
  Sep 10 23:52:41.728: INFO: (8) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 9.023848ms)
  Sep 10 23:52:41.729: INFO: (8) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 8.971807ms)
  Sep 10 23:52:41.732: INFO: (8) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 12.076681ms)
  Sep 10 23:52:41.732: INFO: (8) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 12.223863ms)
  Sep 10 23:52:41.733: INFO: (8) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 14.066849ms)
  Sep 10 23:52:41.735: INFO: (8) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 13.36028ms)
  Sep 10 23:52:41.735: INFO: (8) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 13.890257ms)
  Sep 10 23:52:41.736: INFO: (8) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 14.854551ms)
  Sep 10 23:52:41.736: INFO: (8) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 15.465389ms)
  Sep 10 23:52:41.737: INFO: (8) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 17.400636ms)
  Sep 10 23:52:41.737: INFO: (8) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 17.246814ms)
  Sep 10 23:52:41.737: INFO: (8) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 16.518374ms)
  Sep 10 23:52:41.738: INFO: (8) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.920289ms)
  Sep 10 23:52:41.738: INFO: (8) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 16.598255ms)
  Sep 10 23:52:41.738: INFO: (8) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 17.323035ms)
  Sep 10 23:52:41.738: INFO: (8) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 17.823482ms)
  Sep 10 23:52:41.746: INFO: (9) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 8.017604ms)
  Sep 10 23:52:41.751: INFO: (9) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.923993ms)
  Sep 10 23:52:41.751: INFO: (9) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.524107ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 13.021424ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 12.962703ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 13.48421ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 13.49088ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 13.327308ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 13.257037ms)
  Sep 10 23:52:41.752: INFO: (9) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.655253ms)
  Sep 10 23:52:41.756: INFO: (9) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 17.139012ms)
  Sep 10 23:52:41.756: INFO: (9) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 17.334676ms)
  Sep 10 23:52:41.756: INFO: (9) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 17.539308ms)
  Sep 10 23:52:41.756: INFO: (9) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 17.760291ms)
  Sep 10 23:52:41.756: INFO: (9) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 17.745841ms)
  Sep 10 23:52:41.757: INFO: (9) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 17.815972ms)
  Sep 10 23:52:41.764: INFO: (10) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 7.593717ms)
  Sep 10 23:52:41.769: INFO: (10) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 11.511573ms)
  Sep 10 23:52:41.769: INFO: (10) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 11.708685ms)
  Sep 10 23:52:41.770: INFO: (10) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 12.833551ms)
  Sep 10 23:52:41.771: INFO: (10) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 13.337229ms)
  Sep 10 23:52:41.771: INFO: (10) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 13.326688ms)
  Sep 10 23:52:41.771: INFO: (10) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 13.320828ms)
  Sep 10 23:52:41.774: INFO: (10) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 16.389691ms)
  Sep 10 23:52:41.774: INFO: (10) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 17.379596ms)
  Sep 10 23:52:41.775: INFO: (10) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 16.371472ms)
  Sep 10 23:52:41.775: INFO: (10) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 17.050801ms)
  Sep 10 23:52:41.777: INFO: (10) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 19.458715ms)
  Sep 10 23:52:41.778: INFO: (10) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 20.885736ms)
  Sep 10 23:52:41.778: INFO: (10) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 20.580401ms)
  Sep 10 23:52:41.779: INFO: (10) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 21.612475ms)
  Sep 10 23:52:41.780: INFO: (10) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 21.847248ms)
  Sep 10 23:52:41.792: INFO: (11) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 11.796378ms)
  Sep 10 23:52:41.792: INFO: (11) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 12.130082ms)
  Sep 10 23:52:41.792: INFO: (11) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 12.298844ms)
  Sep 10 23:52:41.799: INFO: (11) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 18.878718ms)
  Sep 10 23:52:41.801: INFO: (11) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 20.913056ms)
  Sep 10 23:52:41.801: INFO: (11) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 21.022337ms)
  Sep 10 23:52:41.801: INFO: (11) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 20.693913ms)
  Sep 10 23:52:41.801: INFO: (11) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 20.870526ms)
  Sep 10 23:52:41.801: INFO: (11) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 21.338672ms)
  Sep 10 23:52:41.804: INFO: (11) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 23.620004ms)
  Sep 10 23:52:41.804: INFO: (11) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 24.176902ms)
  Sep 10 23:52:41.806: INFO: (11) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 25.488941ms)
  Sep 10 23:52:41.806: INFO: (11) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 25.653763ms)
  Sep 10 23:52:41.806: INFO: (11) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 26.039369ms)
  Sep 10 23:52:41.808: INFO: (11) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 27.460209ms)
  Sep 10 23:52:41.811: INFO: (11) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 30.718354ms)
  Sep 10 23:52:41.822: INFO: (12) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 10.060152ms)
  Sep 10 23:52:41.822: INFO: (12) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 10.207885ms)
  Sep 10 23:52:41.822: INFO: (12) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 10.415327ms)
  Sep 10 23:52:41.822: INFO: (12) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 10.291205ms)
  Sep 10 23:52:41.822: INFO: (12) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 10.508859ms)
  Sep 10 23:52:41.825: INFO: (12) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 13.026954ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 16.402773ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.382242ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 16.317871ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 17.401066ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 16.730516ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 16.806818ms)
  Sep 10 23:52:41.829: INFO: (12) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 16.98653ms)
  Sep 10 23:52:41.832: INFO: (12) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 19.566667ms)
  Sep 10 23:52:41.832: INFO: (12) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 20.105065ms)
  Sep 10 23:52:41.832: INFO: (12) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 20.016433ms)
  Sep 10 23:52:41.847: INFO: (13) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 14.424284ms)
  Sep 10 23:52:41.847: INFO: (13) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 14.561686ms)
  Sep 10 23:52:41.850: INFO: (13) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 16.387342ms)
  Sep 10 23:52:41.850: INFO: (13) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 16.836727ms)
  Sep 10 23:52:41.850: INFO: (13) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.497043ms)
  Sep 10 23:52:41.850: INFO: (13) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 17.01924ms)
  Sep 10 23:52:41.850: INFO: (13) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 16.539783ms)
  Sep 10 23:52:41.852: INFO: (13) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 18.760405ms)
  Sep 10 23:52:41.853: INFO: (13) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 19.498706ms)
  Sep 10 23:52:41.853: INFO: (13) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 19.175521ms)
  Sep 10 23:52:41.853: INFO: (13) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 20.414989ms)
  Sep 10 23:52:41.854: INFO: (13) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 20.741563ms)
  Sep 10 23:52:41.855: INFO: (13) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 21.807488ms)
  Sep 10 23:52:41.856: INFO: (13) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 23.215948ms)
  Sep 10 23:52:41.856: INFO: (13) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 22.746592ms)
  Sep 10 23:52:41.856: INFO: (13) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 22.663851ms)
  Sep 10 23:52:41.862: INFO: (14) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 5.295444ms)
  Sep 10 23:52:41.862: INFO: (14) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 5.949754ms)
  Sep 10 23:52:41.863: INFO: (14) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 6.100776ms)
  Sep 10 23:52:41.867: INFO: (14) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 10.443248ms)
  Sep 10 23:52:41.869: INFO: (14) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 12.661809ms)
  Sep 10 23:52:41.873: INFO: (14) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 15.782113ms)
  Sep 10 23:52:41.873: INFO: (14) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 15.807323ms)
  Sep 10 23:52:41.873: INFO: (14) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.452482ms)
  Sep 10 23:52:41.876: INFO: (14) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 18.328089ms)
  Sep 10 23:52:41.876: INFO: (14) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 19.125761ms)
  Sep 10 23:52:41.877: INFO: (14) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 19.295272ms)
  Sep 10 23:52:41.877: INFO: (14) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 19.887691ms)
  Sep 10 23:52:41.877: INFO: (14) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 20.106874ms)
  Sep 10 23:52:41.879: INFO: (14) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 21.854298ms)
  Sep 10 23:52:41.880: INFO: (14) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 22.167063ms)
  Sep 10 23:52:41.880: INFO: (14) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 23.540043ms)
  Sep 10 23:52:41.888: INFO: (15) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 7.665449ms)
  Sep 10 23:52:41.893: INFO: (15) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 12.223194ms)
  Sep 10 23:52:41.893: INFO: (15) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 12.905643ms)
  Sep 10 23:52:41.894: INFO: (15) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.875593ms)
  Sep 10 23:52:41.894: INFO: (15) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 13.562402ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 13.654173ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.867856ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 14.15709ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 14.937212ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 14.501345ms)
  Sep 10 23:52:41.895: INFO: (15) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 14.435274ms)
  Sep 10 23:52:41.897: INFO: (15) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 16.275601ms)
  Sep 10 23:52:41.898: INFO: (15) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 17.174933ms)
  Sep 10 23:52:41.898: INFO: (15) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 17.135612ms)
  Sep 10 23:52:41.898: INFO: (15) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 17.860852ms)
  Sep 10 23:52:41.899: INFO: (15) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 18.732545ms)
  Sep 10 23:52:41.906: INFO: (16) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 6.308429ms)
  Sep 10 23:52:41.906: INFO: (16) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 6.804636ms)
  Sep 10 23:52:41.906: INFO: (16) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 6.763976ms)
  Sep 10 23:52:41.910: INFO: (16) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 10.083792ms)
  Sep 10 23:52:41.913: INFO: (16) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 12.958284ms)
  Sep 10 23:52:41.916: INFO: (16) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 16.245169ms)
  Sep 10 23:52:41.917: INFO: (16) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 16.404521ms)
  Sep 10 23:52:41.917: INFO: (16) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 16.477073ms)
  Sep 10 23:52:41.917: INFO: (16) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 16.566934ms)
  Sep 10 23:52:41.917: INFO: (16) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 17.821152ms)
  Sep 10 23:52:41.918: INFO: (16) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 18.110356ms)
  Sep 10 23:52:41.918: INFO: (16) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 18.612762ms)
  Sep 10 23:52:41.920: INFO: (16) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 19.752479ms)
  Sep 10 23:52:41.920: INFO: (16) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 20.168445ms)
  Sep 10 23:52:41.921: INFO: (16) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 20.825954ms)
  Sep 10 23:52:41.921: INFO: (16) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 20.680932ms)
  Sep 10 23:52:41.929: INFO: (17) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 7.592197ms)
  Sep 10 23:52:41.936: INFO: (17) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 13.366969ms)
  Sep 10 23:52:41.936: INFO: (17) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 14.493564ms)
  Sep 10 23:52:41.936: INFO: (17) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 14.642527ms)
  Sep 10 23:52:41.936: INFO: (17) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 14.083049ms)
  Sep 10 23:52:41.936: INFO: (17) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 14.440254ms)
  Sep 10 23:52:41.937: INFO: (17) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 15.526869ms)
  Sep 10 23:52:41.937: INFO: (17) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 15.060782ms)
  Sep 10 23:52:41.937: INFO: (17) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 15.647161ms)
  Sep 10 23:52:41.937: INFO: (17) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 15.636311ms)
  Sep 10 23:52:41.938: INFO: (17) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 15.749992ms)
  Sep 10 23:52:41.940: INFO: (17) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 18.42427ms)
  Sep 10 23:52:41.941: INFO: (17) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 18.568092ms)
  Sep 10 23:52:41.941: INFO: (17) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 19.702919ms)
  Sep 10 23:52:41.941: INFO: (17) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 19.923891ms)
  Sep 10 23:52:41.943: INFO: (17) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 21.551804ms)
  Sep 10 23:52:41.950: INFO: (18) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 6.208447ms)
  Sep 10 23:52:41.957: INFO: (18) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 12.606949ms)
  Sep 10 23:52:41.957: INFO: (18) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 13.474001ms)
  Sep 10 23:52:41.958: INFO: (18) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 12.937343ms)
  Sep 10 23:52:41.958: INFO: (18) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 13.584772ms)
  Sep 10 23:52:41.958: INFO: (18) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 13.865426ms)
  Sep 10 23:52:41.958: INFO: (18) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 13.761155ms)
  Sep 10 23:52:41.958: INFO: (18) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 14.14344ms)
  Sep 10 23:52:41.959: INFO: (18) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 15.026623ms)
  Sep 10 23:52:41.960: INFO: (18) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 15.048553ms)
  Sep 10 23:52:41.961: INFO: (18) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 17.304725ms)
  Sep 10 23:52:41.962: INFO: (18) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 17.267134ms)
  Sep 10 23:52:41.964: INFO: (18) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 19.779809ms)
  Sep 10 23:52:41.964: INFO: (18) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 20.061114ms)
  Sep 10 23:52:41.965: INFO: (18) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 20.652413ms)
  Sep 10 23:52:41.966: INFO: (18) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 20.986807ms)
  Sep 10 23:52:41.972: INFO: (19) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv/proxy/rewriteme">test</a> (200; 6.704545ms)
  Sep 10 23:52:41.972: INFO: (19) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">... (200; 6.38022ms)
  Sep 10 23:52:41.974: INFO: (19) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 8.572571ms)
  Sep 10 23:52:41.994: INFO: (19) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:460/proxy/: tls baz (200; 27.668201ms)
  Sep 10 23:52:41.994: INFO: (19) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:462/proxy/: tls qux (200; 27.302846ms)
  Sep 10 23:52:41.994: INFO: (19) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname1/proxy/: tls baz (200; 28.34534ms)
  Sep 10 23:52:41.995: INFO: (19) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 28.25197ms)
  Sep 10 23:52:41.995: INFO: (19) /api/v1/namespaces/proxy-3933/pods/http:proxy-service-dwh49-4dsfv:162/proxy/: bar (200; 28.172269ms)
  Sep 10 23:52:41.995: INFO: (19) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:160/proxy/: foo (200; 28.823547ms)
  Sep 10 23:52:41.995: INFO: (19) /api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/proxy-service-dwh49-4dsfv:1080/proxy/rewriteme">test<... (200; 28.102928ms)
  Sep 10 23:52:41.995: INFO: (19) /api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/: <a href="/api/v1/namespaces/proxy-3933/pods/https:proxy-service-dwh49-4dsfv:443/proxy/tlsrewritem... (200; 28.909579ms)
  Sep 10 23:52:41.998: INFO: (19) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname2/proxy/: bar (200; 32.344067ms)
  Sep 10 23:52:41.999: INFO: (19) /api/v1/namespaces/proxy-3933/services/http:proxy-service-dwh49:portname1/proxy/: foo (200; 32.436928ms)
  Sep 10 23:52:42.008: INFO: (19) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname2/proxy/: bar (200; 42.204357ms)
  Sep 10 23:52:42.008: INFO: (19) /api/v1/namespaces/proxy-3933/services/proxy-service-dwh49:portname1/proxy/: foo (200; 41.400365ms)
  Sep 10 23:52:42.009: INFO: (19) /api/v1/namespaces/proxy-3933/services/https:proxy-service-dwh49:tlsportname2/proxy/: tls qux (200; 41.935753ms)
  Sep 10 23:52:42.009: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-dwh49 in namespace proxy-3933, will wait for the garbage collector to delete the pods @ 09/10/23 23:52:42.018
  Sep 10 23:52:42.083: INFO: Deleting ReplicationController proxy-service-dwh49 took: 10.143064ms
  Sep 10 23:52:42.184: INFO: Terminating ReplicationController proxy-service-dwh49 pods took: 101.08225ms
  STEP: Destroying namespace "proxy-3933" for this suite. @ 09/10/23 23:52:43.485
• [6.197 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/10/23 23:52:43.493
  Sep 10 23:52:43.493: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/10/23 23:52:43.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:43.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:43.521
  STEP: create the deployment @ 09/10/23 23:52:43.523
  W0910 23:52:43.528345      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/10/23 23:52:43.528
  STEP: delete the deployment @ 09/10/23 23:52:44.04
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/10/23 23:52:44.046
  STEP: Gathering metrics @ 09/10/23 23:52:44.566
  Sep 10 23:52:46.467: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 10 23:52:46.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7057" for this suite. @ 09/10/23 23:52:46.472
• [2.986 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/10/23 23:52:46.479
  Sep 10 23:52:46.479: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/10/23 23:52:46.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:52:46.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:52:46.499
  STEP: Creating pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377 @ 09/10/23 23:52:46.502
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/23 23:52:48.524
  Sep 10 23:52:48.528: INFO: Initial restart count of pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e is 0
  Sep 10 23:52:48.531: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:52:50.535: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:52:52.539: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:52:54.543: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:52:56.547: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:52:58.550: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:00.554: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:02.558: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:04.562: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:06.565: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:08.570: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:10.577: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:12.581: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:14.586: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:16.591: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:18.594: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:20.597: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:22.603: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:24.606: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:26.614: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:28.619: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:30.624: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:32.628: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:34.632: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:36.637: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:38.641: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:40.645: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:42.650: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:44.653: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:46.657: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:48.660: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:50.663: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:52.667: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:54.671: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:56.677: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:53:58.681: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:00.685: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:02.690: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:04.694: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:06.698: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:08.701: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:10.708: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:12.711: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:14.716: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:16.720: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:18.723: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:20.727: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:23.073: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:25.077: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:27.082: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:29.087: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:31.096: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:33.100: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:35.107: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:37.111: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:39.114: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:41.118: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:43.123: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:45.127: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:47.131: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:49.135: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:51.138: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:53.142: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:55.146: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:57.150: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:54:59.154: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:01.158: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:03.163: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:05.167: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:07.171: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:09.282: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:11.286: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:13.291: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:15.298: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:17.302: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:19.305: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:21.313: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:23.317: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:25.325: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:27.329: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:29.333: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:31.340: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:33.344: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:35.347: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:37.351: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:39.355: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:41.359: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:43.363: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:45.367: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:47.371: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:49.375: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:51.379: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:53.383: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:55.387: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:57.392: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:55:59.396: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:01.401: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:03.405: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:05.408: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:07.414: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:09.418: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:11.439: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:13.443: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:15.447: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:17.453: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:19.457: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:21.461: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:23.466: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:25.470: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:27.478: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:29.481: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:31.486: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:33.491: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:35.495: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:37.499: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:39.503: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:41.506: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:43.510: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:45.514: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:47.518: INFO: Get pod busybox-38561612-77db-4558-9d34-fdb0cbcd5d0e in namespace container-probe-7377
  Sep 10 23:56:49.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/10/23 23:56:49.525
  STEP: Destroying namespace "container-probe-7377" for this suite. @ 09/10/23 23:56:49.608
• [243.137 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/10/23 23:56:49.62
  Sep 10 23:56:49.621: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/10/23 23:56:49.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:56:49.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:56:49.645
  STEP: Creating service test in namespace statefulset-6071 @ 09/10/23 23:56:49.649
  STEP: Creating a new StatefulSet @ 09/10/23 23:56:49.655
  Sep 10 23:56:49.669: INFO: Found 0 stateful pods, waiting for 3
  Sep 10 23:56:59.674: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:56:59.674: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:56:59.674: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/10/23 23:56:59.682
  Sep 10 23:56:59.701: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/10/23 23:56:59.701
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/10/23 23:57:09.722
  STEP: Performing a canary update @ 09/10/23 23:57:09.722
  Sep 10 23:57:09.742: INFO: Updating stateful set ss2
  Sep 10 23:57:09.754: INFO: Waiting for Pod statefulset-6071/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/10/23 23:57:19.784
  Sep 10 23:57:19.905: INFO: Found 2 stateful pods, waiting for 3
  Sep 10 23:57:29.915: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:57:29.915: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 10 23:57:29.915: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/10/23 23:57:29.921
  Sep 10 23:57:29.940: INFO: Updating stateful set ss2
  Sep 10 23:57:29.950: INFO: Waiting for Pod statefulset-6071/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 10 23:57:39.983: INFO: Updating stateful set ss2
  Sep 10 23:57:39.997: INFO: Waiting for StatefulSet statefulset-6071/ss2 to complete update
  Sep 10 23:57:39.997: INFO: Waiting for Pod statefulset-6071/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 10 23:57:50.009: INFO: Deleting all statefulset in ns statefulset-6071
  Sep 10 23:57:50.013: INFO: Scaling statefulset ss2 to 0
  Sep 10 23:58:00.031: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 10 23:58:00.034: INFO: Deleting statefulset ss2
  Sep 10 23:58:00.046: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6071" for this suite. @ 09/10/23 23:58:00.055
• [70.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/10/23 23:58:00.071
  Sep 10 23:58:00.071: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/10/23 23:58:00.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:00.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:00.102
  STEP: Creating two CSIDrivers @ 09/10/23 23:58:00.107
  STEP: Getting "inline-driver-9f95f1d2-2521-4569-84e5-aa2049326555" & "inline-driver-b5bc5fe5-376d-4de5-a90f-4657bf56bce5" @ 09/10/23 23:58:00.125
  STEP: Patching the CSIDriver "inline-driver-b5bc5fe5-376d-4de5-a90f-4657bf56bce5" @ 09/10/23 23:58:00.129
  STEP: Updating the CSIDriver "inline-driver-b5bc5fe5-376d-4de5-a90f-4657bf56bce5" @ 09/10/23 23:58:00.136
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6796" @ 09/10/23 23:58:00.144
  STEP: Deleting CSIDriver "inline-driver-9f95f1d2-2521-4569-84e5-aa2049326555" @ 09/10/23 23:58:00.147
  STEP: Confirm deletion of CSIDriver "inline-driver-9f95f1d2-2521-4569-84e5-aa2049326555" @ 09/10/23 23:58:00.153
  STEP: Deleting CSIDriver "inline-driver-b5bc5fe5-376d-4de5-a90f-4657bf56bce5" via DeleteCollection @ 09/10/23 23:58:00.156
  STEP: Confirm deletion of CSIDriver "inline-driver-b5bc5fe5-376d-4de5-a90f-4657bf56bce5" @ 09/10/23 23:58:00.162
  Sep 10 23:58:00.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6796" for this suite. @ 09/10/23 23:58:00.17
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/10/23 23:58:00.179
  Sep 10 23:58:00.179: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/10/23 23:58:00.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:00.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:00.2
  STEP: Creating a test headless service @ 09/10/23 23:58:00.202
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local;sleep 1; done
   @ 09/10/23 23:58:00.213
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-1908.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local;sleep 1; done
   @ 09/10/23 23:58:00.213
  STEP: creating a pod to probe DNS @ 09/10/23 23:58:00.213
  STEP: submitting the pod to kubernetes @ 09/10/23 23:58:00.213
  STEP: retrieving the pod @ 09/10/23 23:58:08.257
  STEP: looking for the results for each expected name from probers @ 09/10/23 23:58:08.26
  Sep 10 23:58:08.273: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.277: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.280: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.284: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.287: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.291: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.295: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.298: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:08.298: INFO: Lookups using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local]

  Sep 10 23:58:08.315: INFO: Pod client logs for webserver: 
  Sep 10 23:58:08.322: INFO: Pod client logs for querier: 
  Sep 10 23:58:08.328: INFO: Pod client logs for jessie-querier: 
  Sep 10 23:58:13.337: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.346: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.358: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.362: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.365: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.369: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.372: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.375: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:13.375: INFO: Lookups using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local]

  Sep 10 23:58:13.381: INFO: Pod client logs for webserver: 
  Sep 10 23:58:13.387: INFO: Pod client logs for querier: 
  Sep 10 23:58:13.392: INFO: Pod client logs for jessie-querier: 
  Sep 10 23:58:18.334: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.337: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.341: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.344: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.347: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.350: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.353: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.356: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:18.356: INFO: Lookups using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local]

  Sep 10 23:58:18.362: INFO: Pod client logs for webserver: 
  Sep 10 23:58:18.368: INFO: Pod client logs for querier: 
  Sep 10 23:58:18.374: INFO: Pod client logs for jessie-querier: 
  Sep 10 23:58:23.334: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.337: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.340: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.346: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.349: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.351: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.355: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.358: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:23.358: INFO: Lookups using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local]

  Sep 10 23:58:23.364: INFO: Pod client logs for webserver: 
  Sep 10 23:58:23.369: INFO: Pod client logs for querier: 
  Sep 10 23:58:23.376: INFO: Pod client logs for jessie-querier: 
  Sep 10 23:58:28.336: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.339: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.342: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.345: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.348: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.351: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.353: INFO: Unable to read jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.356: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local from pod dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5: the server could not find the requested resource (get pods dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5)
  Sep 10 23:58:28.356: INFO: Lookups using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local wheezy_udp@dns-test-service-2.dns-1908.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-1908.svc.cluster.local jessie_udp@dns-test-service-2.dns-1908.svc.cluster.local jessie_tcp@dns-test-service-2.dns-1908.svc.cluster.local]

  Sep 10 23:58:28.362: INFO: Pod client logs for webserver: 
  Sep 10 23:58:28.368: INFO: Pod client logs for querier: 
  Sep 10 23:58:28.374: INFO: Pod client logs for jessie-querier: 
  Sep 10 23:58:33.357: INFO: DNS probes using dns-1908/dns-test-f43c715c-fc79-4570-a185-c6b86ba7d2f5 succeeded

  Sep 10 23:58:33.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/10/23 23:58:33.361
  STEP: deleting the test headless service @ 09/10/23 23:58:33.39
  STEP: Destroying namespace "dns-1908" for this suite. @ 09/10/23 23:58:33.431
• [33.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/10/23 23:58:33.445
  Sep 10 23:58:33.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/10/23 23:58:33.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:33.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:33.497
  STEP: Counting existing ResourceQuota @ 09/10/23 23:58:33.504
  STEP: Creating a ResourceQuota @ 09/10/23 23:58:38.508
  STEP: Ensuring resource quota status is calculated @ 09/10/23 23:58:38.518
  Sep 10 23:58:40.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4916" for this suite. @ 09/10/23 23:58:40.527
• [7.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/10/23 23:58:40.536
  Sep 10 23:58:40.536: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:58:40.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:40.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:40.56
  STEP: Creating a pod to test downward API volume plugin @ 09/10/23 23:58:40.563
  STEP: Saw pod success @ 09/10/23 23:58:44.584
  Sep 10 23:58:44.587: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-9a3eb488-1243-4f1e-98ec-3cafa4f0c09b container client-container: <nil>
  STEP: delete the pod @ 09/10/23 23:58:44.593
  Sep 10 23:58:44.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5454" for this suite. @ 09/10/23 23:58:44.611
• [4.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/10/23 23:58:44.62
  Sep 10 23:58:44.620: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename containers @ 09/10/23 23:58:44.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:44.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:44.645
  Sep 10 23:58:46.669: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6114" for this suite. @ 09/10/23 23:58:46.674
• [2.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/10/23 23:58:46.686
  Sep 10 23:58:46.686: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/10/23 23:58:46.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:46.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:46.71
  STEP: Setting up server cert @ 09/10/23 23:58:46.735
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/10/23 23:58:47.737
  STEP: Deploying the webhook pod @ 09/10/23 23:58:47.744
  STEP: Wait for the deployment to be ready @ 09/10/23 23:58:47.756
  Sep 10 23:58:47.763: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/10/23 23:58:49.775
  STEP: Verifying the service has paired with the endpoint @ 09/10/23 23:58:49.788
  Sep 10 23:58:50.788: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/10/23 23:58:50.898
  STEP: Creating a configMap that should be mutated @ 09/10/23 23:58:50.921
  STEP: Deleting the collection of validation webhooks @ 09/10/23 23:58:50.972
  STEP: Creating a configMap that should not be mutated @ 09/10/23 23:58:51.047
  Sep 10 23:58:51.060: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8843" for this suite. @ 09/10/23 23:58:51.117
  STEP: Destroying namespace "webhook-markers-3806" for this suite. @ 09/10/23 23:58:51.125
• [4.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/10/23 23:58:51.148
  Sep 10 23:58:51.148: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/10/23 23:58:51.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:51.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:51.171
  STEP: Read namespace status @ 09/10/23 23:58:51.174
  Sep 10 23:58:51.178: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/10/23 23:58:51.178
  Sep 10 23:58:51.183: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/10/23 23:58:51.184
  Sep 10 23:58:51.193: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 10 23:58:51.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8863" for this suite. @ 09/10/23 23:58:51.199
• [0.058 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/10/23 23:58:51.206
  Sep 10 23:58:51.206: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/10/23 23:58:51.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:58:51.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:58:51.227
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/10/23 23:58:51.229
  Sep 10 23:58:51.230: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:58:53.305: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:59:00.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2101" for this suite. @ 09/10/23 23:59:00.781
• [9.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/10/23 23:59:00.797
  Sep 10 23:59:00.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/10/23 23:59:00.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:00.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:00.828
  STEP: creating the pod @ 09/10/23 23:59:00.83
  STEP: submitting the pod to kubernetes @ 09/10/23 23:59:00.83
  STEP: verifying QOS class is set on the pod @ 09/10/23 23:59:00.84
  Sep 10 23:59:00.846: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9250" for this suite. @ 09/10/23 23:59:00.851
• [0.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/10/23 23:59:00.864
  Sep 10 23:59:00.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/10/23 23:59:00.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:00.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:00.903
  STEP: creating a target pod @ 09/10/23 23:59:00.907
  STEP: adding an ephemeral container @ 09/10/23 23:59:02.93
  STEP: checking pod container endpoints @ 09/10/23 23:59:06.962
  Sep 10 23:59:06.962: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-8441 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 10 23:59:06.962: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 10 23:59:06.963: INFO: ExecWithOptions: Clientset creation
  Sep 10 23:59:06.963: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-8441/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 10 23:59:07.072: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/10/23 23:59:07.088
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/10/23 23:59:07.092
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/10/23 23:59:07.106
  Sep 10 23:59:07.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-8441" for this suite. @ 09/10/23 23:59:07.117
• [6.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/10/23 23:59:07.15
  Sep 10 23:59:07.150: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename init-container @ 09/10/23 23:59:07.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:07.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:07.175
  STEP: creating the pod @ 09/10/23 23:59:07.178
  Sep 10 23:59:07.178: INFO: PodSpec: initContainers in spec.initContainers
  Sep 10 23:59:12.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8795" for this suite. @ 09/10/23 23:59:12.827
• [5.694 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/10/23 23:59:12.846
  Sep 10 23:59:12.846: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/10/23 23:59:12.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:12.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:12.878
  Sep 10 23:59:12.881: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 10 23:59:12.897: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 10 23:59:17.902: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/10/23 23:59:17.903
  Sep 10 23:59:17.903: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 10 23:59:17.909: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 10 23:59:17.915: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep 10 23:59:20.199: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 10 23:59:20.202: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 10 23:59:20.219: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1238d40d-ca05-4dfd-a4fe-d799f41b110b",
      ResourceVersion: (string) (len=5) "87020",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 10 23:59:20.226: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c52500c-9e7f-49a0-8259-0f1921aaadfe",
      ResourceVersion: (string) (len=5) "87009",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1238d40d-ca05-4dfd-a4fe-d799f41b110b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 32 33 38 64 34  30 64 2d 63 61 30 35 2d  |\"1238d40d-ca05-|
              00000120  34 64 66 64 2d 61 34 66  65 2d 64 37 39 39 66 34  |4dfd-a4fe-d799f4|
              00000130  31 62 31 31 30 62 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |1b110b\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:59:20.227: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 10 23:59:20.227: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1a7eb1a8-ac40-44fd-b861-261e0687b365",
      ResourceVersion: (string) (len=5) "87018",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987152,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "1238d40d-ca05-4dfd-a4fe-d799f41b110b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 31 32 33 38 64 34 30  |"uid\":\"1238d40|
              000000b0  64 2d 63 61 30 35 2d 34  64 66 64 2d 61 34 66 65  |d-ca05-4dfd-a4fe|
              000000c0  2d 64 37 39 39 66 34 31  62 31 31 30 62 5c 22 7d  |-d799f41b110b\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 10 23:59:20.232: INFO: Pod "test-rolling-update-deployment-7f5c55c64-4t7pr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-4t7pr",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-5670",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13fb3533-05fb-4b0c-a0b4-a12b00640e06",
      ResourceVersion: (string) (len=5) "87008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.86/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.86/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f696d128290ca1c1c23126a06203dbfc4257b019e95031d6a4f6df3f3952b271"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "1c52500c-9e7f-49a0-8259-0f1921aaadfe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 63  35 32 35 30 30 63 2d 39  |d\":\"1c52500c-9|
              00000090  65 37 66 2d 34 39 61 30  2d 38 32 35 39 2d 30 66  |e7f-49a0-8259-0f|
              000000a0  31 39 32 31 61 61 61 64  66 65 5c 22 7d 22 3a 7b  |1921aaadfe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987158,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  38 36 5c 22 7d 22 3a 7b  |10.42.3.86\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xm4wt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xm4wt",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987157,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.86",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.86"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987157,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829987159,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://58d455cbf2b3729b5409903c946c8f07194002b80c8cdd6bfcb04876cee3ffa6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 10 23:59:20.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5670" for this suite. @ 09/10/23 23:59:20.24
• [7.401 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/10/23 23:59:20.248
  Sep 10 23:59:20.248: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/10/23 23:59:20.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:20.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:20.269
  STEP: Creating projection with secret that has name projected-secret-test-b7d3207a-adc0-4803-84ec-fe9b572fffb6 @ 09/10/23 23:59:20.272
  STEP: Creating a pod to test consume secrets @ 09/10/23 23:59:20.278
  STEP: Saw pod success @ 09/10/23 23:59:24.302
  Sep 10 23:59:24.306: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-8566b6c0-455d-453a-b5c9-ad3dde23287f container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/10/23 23:59:24.314
  Sep 10 23:59:24.329: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8844" for this suite. @ 09/10/23 23:59:24.334
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/10/23 23:59:24.344
  Sep 10 23:59:24.344: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename containers @ 09/10/23 23:59:24.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:24.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:24.368
  STEP: Creating a pod to test override all @ 09/10/23 23:59:24.372
  STEP: Saw pod success @ 09/10/23 23:59:28.394
  Sep 10 23:59:28.399: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod client-containers-251fcaff-5655-4b2f-b86d-28670725ba03 container agnhost-container: <nil>
  STEP: delete the pod @ 09/10/23 23:59:28.408
  Sep 10 23:59:28.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-5938" for this suite. @ 09/10/23 23:59:28.436
• [4.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/10/23 23:59:28.453
  Sep 10 23:59:28.453: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/10/23 23:59:28.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:28.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:28.496
  Sep 10 23:59:28.544: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/10/23 23:59:28.553
  Sep 10 23:59:28.611: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:59:28.611: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:59:29.628: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:59:29.629: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:59:30.620: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 10 23:59:30.620: INFO: Node ip-172-31-14-171.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:59:31.620: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 10 23:59:31.620: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/10/23 23:59:31.634
  STEP: Check that daemon pods images are updated. @ 09/10/23 23:59:31.675
  Sep 10 23:59:31.679: INFO: Wrong image for pod: daemon-set-c854v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:31.679: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:31.679: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:32.688: INFO: Wrong image for pod: daemon-set-c854v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:32.688: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:32.688: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:33.699: INFO: Wrong image for pod: daemon-set-c854v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:33.699: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:33.699: INFO: Pod daemon-set-xhxwl is not available
  Sep 10 23:59:33.699: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:34.689: INFO: Wrong image for pod: daemon-set-c854v. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:34.690: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:34.690: INFO: Pod daemon-set-xhxwl is not available
  Sep 10 23:59:34.690: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:35.688: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:35.688: INFO: Pod daemon-set-gfrg7 is not available
  Sep 10 23:59:35.688: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:36.691: INFO: Wrong image for pod: daemon-set-g5dml. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:36.692: INFO: Pod daemon-set-gfrg7 is not available
  Sep 10 23:59:36.692: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:37.688: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:38.689: INFO: Pod daemon-set-bjdzj is not available
  Sep 10 23:59:38.689: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:39.688: INFO: Pod daemon-set-bjdzj is not available
  Sep 10 23:59:39.688: INFO: Wrong image for pod: daemon-set-zrdsp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 10 23:59:40.690: INFO: Pod daemon-set-tv8lc is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/10/23 23:59:40.695
  Sep 10 23:59:40.706: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 10 23:59:40.707: INFO: Node ip-172-31-14-171.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:59:41.738: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 10 23:59:41.738: INFO: Node ip-172-31-14-171.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 10 23:59:42.716: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 10 23:59:42.716: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/10/23 23:59:42.74
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9803, will wait for the garbage collector to delete the pods @ 09/10/23 23:59:42.741
  Sep 10 23:59:42.807: INFO: Deleting DaemonSet.extensions daemon-set took: 8.370329ms
  Sep 10 23:59:42.908: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.833188ms
  Sep 10 23:59:44.813: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 10 23:59:44.814: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 10 23:59:44.819: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"87365"},"items":null}

  Sep 10 23:59:44.822: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"87365"},"items":null}

  Sep 10 23:59:44.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9803" for this suite. @ 09/10/23 23:59:44.845
• [16.399 seconds]
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/10/23 23:59:44.853
  Sep 10 23:59:44.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/10/23 23:59:44.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/10/23 23:59:44.878
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/10/23 23:59:44.881
  STEP: Creating pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677 @ 09/10/23 23:59:44.885
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/10/23 23:59:46.909
  Sep 10 23:59:46.919: INFO: Initial restart count of pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 is 0
  Sep 10 23:59:46.926: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:48.930: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:50.941: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:52.946: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:54.951: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:56.959: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 10 23:59:58.963: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:00.968: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:02.974: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:04.980: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:06.992: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:08.996: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:11.016: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:13.025: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:15.033: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:17.141: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:19.146: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:21.150: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:23.154: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:25.159: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:27.163: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:29.168: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:31.173: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:33.178: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:35.182: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:37.188: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:39.194: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:41.200: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:43.205: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:45.632: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:47.636: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:49.641: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:51.866: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:53.871: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:55.881: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:57.887: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:00:59.891: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:01.908: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:03.912: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:05.921: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:07.928: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:09.933: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:11.946: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:13.950: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:15.961: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:17.965: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:19.970: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:21.975: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:23.979: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:25.988: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:27.992: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:29.997: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:32.002: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:34.007: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:36.013: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:38.017: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:40.021: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:42.026: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:44.030: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:46.041: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:48.046: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:50.050: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:52.054: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:54.059: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:56.064: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:01:58.069: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:00.073: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:02.078: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:04.082: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:06.087: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:08.092: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:10.097: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:12.101: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:14.107: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:16.111: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:18.115: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:20.121: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:22.126: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:24.129: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:26.134: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:28.138: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:30.143: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:32.153: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:34.158: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:36.163: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:38.167: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:40.171: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:42.183: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:44.188: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:46.193: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:48.197: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:50.205: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:52.214: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:54.220: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:56.226: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:02:58.230: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:00.234: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:02.494: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:04.498: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:06.504: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:08.508: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:10.513: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:12.518: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:14.523: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:16.563: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:18.568: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:20.574: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:22.579: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:24.588: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:26.594: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:28.598: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:30.604: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:32.681: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:34.685: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:36.694: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:38.699: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:40.703: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:42.708: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:44.713: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:46.718: INFO: Get pod test-webserver-61af9d06-0dc7-464e-bb69-09c393869999 in namespace container-probe-7677
  Sep 11 00:03:48.719: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:03:48.727
  STEP: Destroying namespace "container-probe-7677" for this suite. @ 09/11/23 00:03:48.764
• [243.920 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/11/23 00:03:48.799
  Sep 11 00:03:48.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:03:48.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:03:48.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:03:48.827
  STEP: Creating configMap with name projected-configmap-test-volume-f3d31e60-7e66-42fa-9d57-47c4a6483568 @ 09/11/23 00:03:48.831
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:03:48.838
  STEP: Saw pod success @ 09/11/23 00:03:52.866
  Sep 11 00:03:52.870: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-09ba2e0c-a4d9-4f93-8827-c0671a77c0be container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:03:52.885
  Sep 11 00:03:52.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4089" for this suite. @ 09/11/23 00:03:52.904
• [4.114 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/11/23 00:03:52.914
  Sep 11 00:03:52.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 00:03:52.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:03:52.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:03:52.937
  STEP: Creating replication controller my-hostname-basic-5fd3d66f-fb3b-411c-95a8-eb958c4caefc @ 09/11/23 00:03:52.939
  Sep 11 00:03:52.977: INFO: Pod name my-hostname-basic-5fd3d66f-fb3b-411c-95a8-eb958c4caefc: Found 1 pods out of 1
  Sep 11 00:03:52.977: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-5fd3d66f-fb3b-411c-95a8-eb958c4caefc" are running
  Sep 11 00:03:54.987: INFO: Pod "my-hostname-basic-5fd3d66f-fb3b-411c-95a8-eb958c4caefc-kcs9z" is running and ready(conditions: [{Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-11 00:03:52 +0000 UTC Reason: Message:}])
  Sep 11 00:03:54.987: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/11/23 00:03:54.987
  Sep 11 00:03:55.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-219" for this suite. @ 09/11/23 00:03:55.006
• [2.292 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/11/23 00:03:55.207
  Sep 11 00:03:55.207: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 00:03:55.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:03:55.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:03:55.24
  STEP: Performing setup for networking test in namespace pod-network-test-4739 @ 09/11/23 00:03:55.243
  STEP: creating a selector @ 09/11/23 00:03:55.243
  STEP: Creating the service pods in kubernetes @ 09/11/23 00:03:55.243
  Sep 11 00:03:55.243: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/11/23 00:04:15.785
  Sep 11 00:04:17.831: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 00:04:17.831: INFO: Going to poll 10.42.0.28 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 00:04:17.834: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.28:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:04:17.834: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:04:17.835: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:04:17.835: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.28%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 00:04:17.937: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 11 00:04:17.937: INFO: Going to poll 10.42.2.37 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 00:04:17.940: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.37:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:04:17.941: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:04:17.943: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:04:17.943: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.37%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 00:04:18.059: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 11 00:04:18.059: INFO: Going to poll 10.42.1.29 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 00:04:18.063: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.29:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:04:18.063: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:04:18.064: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:04:18.064: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.29%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 00:04:18.188: INFO: Found all 1 expected endpoints: [netserver-2]
  Sep 11 00:04:18.188: INFO: Going to poll 10.42.3.94 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  Sep 11 00:04:18.191: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.94:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-4739 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:04:18.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:04:18.192: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:04:18.192: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-4739/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.94%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 11 00:04:18.284: INFO: Found all 1 expected endpoints: [netserver-3]
  Sep 11 00:04:18.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4739" for this suite. @ 09/11/23 00:04:18.289
• [23.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/11/23 00:04:18.3
  Sep 11 00:04:18.300: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename watch @ 09/11/23 00:04:18.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:18.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:18.324
  STEP: creating a watch on configmaps @ 09/11/23 00:04:18.327
  STEP: creating a new configmap @ 09/11/23 00:04:18.328
  STEP: modifying the configmap once @ 09/11/23 00:04:18.336
  STEP: closing the watch once it receives two notifications @ 09/11/23 00:04:18.347
  Sep 11 00:04:18.348: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-438  3a10ac1d-4130-481b-b3b1-e9b2fe040060 88619 0 2023-09-11 00:04:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 00:04:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 00:04:18.348: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-438  3a10ac1d-4130-481b-b3b1-e9b2fe040060 88620 0 2023-09-11 00:04:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 00:04:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/11/23 00:04:18.349
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/11/23 00:04:18.359
  STEP: deleting the configmap @ 09/11/23 00:04:18.361
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/11/23 00:04:18.367
  Sep 11 00:04:18.368: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-438  3a10ac1d-4130-481b-b3b1-e9b2fe040060 88621 0 2023-09-11 00:04:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 00:04:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 00:04:18.368: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-438  3a10ac1d-4130-481b-b3b1-e9b2fe040060 88622 0 2023-09-11 00:04:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-11 00:04:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 00:04:18.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-438" for this suite. @ 09/11/23 00:04:18.374
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/11/23 00:04:18.384
  Sep 11 00:04:18.384: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:04:18.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:18.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:18.408
  STEP: Setting up server cert @ 09/11/23 00:04:18.439
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:04:18.782
  STEP: Deploying the webhook pod @ 09/11/23 00:04:18.789
  STEP: Wait for the deployment to be ready @ 09/11/23 00:04:18.803
  Sep 11 00:04:18.815: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 00:04:20.826
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:04:21.206
  Sep 11 00:04:22.206: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/11/23 00:04:22.213
  STEP: create a configmap that should be updated by the webhook @ 09/11/23 00:04:22.262
  Sep 11 00:04:22.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2192" for this suite. @ 09/11/23 00:04:22.392
  STEP: Destroying namespace "webhook-markers-1496" for this suite. @ 09/11/23 00:04:22.403
• [4.025 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/11/23 00:04:22.419
  Sep 11 00:04:22.419: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:04:22.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:22.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:22.45
  STEP: creating service endpoint-test2 in namespace services-1761 @ 09/11/23 00:04:22.454
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1761 to expose endpoints map[] @ 09/11/23 00:04:22.468
  Sep 11 00:04:22.475: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Sep 11 00:04:23.498: INFO: successfully validated that service endpoint-test2 in namespace services-1761 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1761 @ 09/11/23 00:04:23.498
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1761 to expose endpoints map[pod1:[80]] @ 09/11/23 00:04:25.541
  Sep 11 00:04:25.552: INFO: successfully validated that service endpoint-test2 in namespace services-1761 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/11/23 00:04:25.552
  Sep 11 00:04:25.553: INFO: Creating new exec pod
  Sep 11 00:04:28.571: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 11 00:04:28.796: INFO: stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:28.796: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:04:28.797: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.231.71 80'
  Sep 11 00:04:28.969: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.231.71 80\nConnection to 10.43.231.71 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:28.970: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1761 @ 09/11/23 00:04:28.97
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1761 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/11/23 00:04:30.998
  Sep 11 00:04:31.019: INFO: successfully validated that service endpoint-test2 in namespace services-1761 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/11/23 00:04:31.019
  Sep 11 00:04:32.019: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 11 00:04:32.206: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:32.206: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:04:32.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.231.71 80'
  Sep 11 00:04:32.389: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.231.71 80\nConnection to 10.43.231.71 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:32.389: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1761 @ 09/11/23 00:04:32.389
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1761 to expose endpoints map[pod2:[80]] @ 09/11/23 00:04:32.405
  Sep 11 00:04:33.460: INFO: successfully validated that service endpoint-test2 in namespace services-1761 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/11/23 00:04:33.46
  Sep 11 00:04:34.461: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 11 00:04:34.649: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:34.649: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:04:34.649: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1761 exec execpodmz7gq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.231.71 80'
  Sep 11 00:04:34.840: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.231.71 80\nConnection to 10.43.231.71 80 port [tcp/http] succeeded!\n"
  Sep 11 00:04:34.840: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1761 @ 09/11/23 00:04:34.84
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1761 to expose endpoints map[] @ 09/11/23 00:04:34.874
  Sep 11 00:04:34.899: INFO: successfully validated that service endpoint-test2 in namespace services-1761 exposes endpoints map[]
  Sep 11 00:04:34.899: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1761" for this suite. @ 09/11/23 00:04:34.937
• [12.527 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/11/23 00:04:34.946
  Sep 11 00:04:34.946: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:04:34.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:34.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:34.973
  STEP: Creating the pod @ 09/11/23 00:04:34.978
  Sep 11 00:04:39.548: INFO: Successfully updated pod "annotationupdate66cfd216-0232-42ee-adde-b6030478efa8"
  Sep 11 00:04:41.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9454" for this suite. @ 09/11/23 00:04:41.579
• [6.640 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/11/23 00:04:41.588
  Sep 11 00:04:41.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:04:41.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:41.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:41.61
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:04:41.612
  STEP: Saw pod success @ 09/11/23 00:04:45.65
  Sep 11 00:04:45.653: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-2f955675-454f-4dcd-8ce0-36913049e0d6 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:04:45.662
  Sep 11 00:04:45.691: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1149" for this suite. @ 09/11/23 00:04:45.699
• [4.123 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/11/23 00:04:45.713
  Sep 11 00:04:45.714: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:04:45.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:04:45.737
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:04:45.742
  STEP: Creating secret with name s-test-opt-del-65a28ead-1be3-42cc-94ac-8994c291be25 @ 09/11/23 00:04:45.751
  STEP: Creating secret with name s-test-opt-upd-a7c298aa-ad6c-441e-b784-81961ddef643 @ 09/11/23 00:04:45.761
  STEP: Creating the pod @ 09/11/23 00:04:45.769
  STEP: Deleting secret s-test-opt-del-65a28ead-1be3-42cc-94ac-8994c291be25 @ 09/11/23 00:04:49.826
  STEP: Updating secret s-test-opt-upd-a7c298aa-ad6c-441e-b784-81961ddef643 @ 09/11/23 00:04:49.832
  STEP: Creating secret with name s-test-opt-create-ca744814-6b3d-4936-bcb8-7e374dc72984 @ 09/11/23 00:04:49.838
  STEP: waiting to observe update in volume @ 09/11/23 00:04:49.843
  Sep 11 00:05:34.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4392" for this suite. @ 09/11/23 00:05:34.133
• [48.429 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/11/23 00:05:34.143
  Sep 11 00:05:34.143: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename init-container @ 09/11/23 00:05:34.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:05:34.165
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:05:34.175
  STEP: creating the pod @ 09/11/23 00:05:34.181
  Sep 11 00:05:34.181: INFO: PodSpec: initContainers in spec.initContainers
  Sep 11 00:06:12.523: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4ae5eb07-4139-4e0e-bd7e-2e78fb9fce61", GenerateName:"", Namespace:"init-container-1504", SelfLink:"", UID:"2713fa72-0aea-458c-a64b-a2ef571b042d", ResourceVersion:"89398", Generation:0, CreationTimestamp:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"181661175"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"56ede0e0e63b94e0001c55ef419ab15e5f613f1f371196c64f6d67b124392fb3", "cni.projectcalico.org/podIP":"10.42.3.102/32", "cni.projectcalico.org/podIPs":"10.42.3.102/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045bdc08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045bdc38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 11, 0, 6, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045bdc80), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zvnbh", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc006ad6d80), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zvnbh", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zvnbh", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zvnbh", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc005489268), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-8-29.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00078c930), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc0054892e0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc005489300)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc005489308), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00548930c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000b23d20), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.8.29", HostIPs:[]v1.HostIP(nil), PodIP:"10.42.3.102", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.3.102"}}, StartTime:time.Date(2023, time.September, 11, 0, 5, 34, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00078ca80)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00078cbd0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://a43b34c9c5604d8c433a916b4026d878a85ac50e34fe5493981cff498a185590", Started:(*bool)(0xc0054893aa), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006ad6e00), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc0054893bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006ad6de0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00548938f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 11 00:06:12.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1504" for this suite. @ 09/11/23 00:06:12.531
• [38.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/11/23 00:06:12.546
  Sep 11 00:06:12.546: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename lease-test @ 09/11/23 00:06:12.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:06:12.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:06:12.57
  Sep 11 00:06:12.639: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9911" for this suite. @ 09/11/23 00:06:12.651
• [0.118 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/11/23 00:06:12.665
  Sep 11 00:06:12.666: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 00:06:12.667
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:06:12.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:06:12.698
  Sep 11 00:06:12.703: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: creating the pod @ 09/11/23 00:06:12.703
  STEP: submitting the pod to kubernetes @ 09/11/23 00:06:12.703
  Sep 11 00:06:14.758: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3612" for this suite. @ 09/11/23 00:06:14.766
• [2.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/11/23 00:06:14.774
  Sep 11 00:06:14.774: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 00:06:14.778
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:06:14.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:06:14.799
  STEP: Creating pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929 @ 09/11/23 00:06:14.803
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 00:06:16.832
  Sep 11 00:06:16.841: INFO: Initial restart count of pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b is 0
  Sep 11 00:06:16.855: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:18.861: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:20.866: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:22.870: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:24.874: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:26.898: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:29.193: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:31.197: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:33.202: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:35.207: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:37.212: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:39.216: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:41.223: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:43.227: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:45.231: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:47.237: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:49.243: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:51.248: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:53.254: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:55.261: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:57.265: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:06:59.271: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:01.276: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:03.850: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:05.855: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:07.860: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:09.864: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:11.870: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:13.876: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:15.883: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:17.887: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:19.892: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:21.897: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:23.900: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:25.907: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:27.913: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:29.918: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:31.923: INFO: Get pod test-grpc-78034395-808f-4be9-b437-8ea885579d9b in namespace container-probe-929
  Sep 11 00:07:31.923: INFO: Restart count of pod container-probe-929/test-grpc-78034395-808f-4be9-b437-8ea885579d9b is now 1 (1m15.08193192s elapsed)
  Sep 11 00:07:31.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:07:31.928
  STEP: Destroying namespace "container-probe-929" for this suite. @ 09/11/23 00:07:31.946
• [77.181 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/11/23 00:07:31.956
  Sep 11 00:07:31.956: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:07:31.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:07:31.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:07:31.986
  STEP: Creating a test headless service @ 09/11/23 00:07:31.989
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 122.63.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.63.122_udp@PTR;check="$$(dig +tcp +noall +answer +search 122.63.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.63.122_tcp@PTR;sleep 1; done
   @ 09/11/23 00:07:32.026
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-5975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-5975.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-5975.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-5975.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-5975.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 122.63.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.63.122_udp@PTR;check="$$(dig +tcp +noall +answer +search 122.63.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.63.122_tcp@PTR;sleep 1; done
   @ 09/11/23 00:07:32.026
  STEP: creating a pod to probe DNS @ 09/11/23 00:07:32.034
  STEP: submitting the pod to kubernetes @ 09/11/23 00:07:32.034
  STEP: retrieving the pod @ 09/11/23 00:07:36.459
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:07:36.462
  Sep 11 00:07:36.470: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.476: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.480: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.484: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.503: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.507: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.511: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.515: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:36.530: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:07:36.553: INFO: Pod client logs for webserver: 
  Sep 11 00:07:36.562: INFO: Pod client logs for querier: 
  Sep 11 00:07:36.575: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:07:41.585: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.598: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.602: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.609: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.627: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.631: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.635: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.639: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:41.653: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:07:41.660: INFO: Pod client logs for webserver: 
  Sep 11 00:07:41.668: INFO: Pod client logs for querier: 
  Sep 11 00:07:41.676: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:07:46.583: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.587: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.591: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.594: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.615: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.626: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.633: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.642: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:46.658: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:07:46.667: INFO: Pod client logs for webserver: 
  Sep 11 00:07:46.674: INFO: Pod client logs for querier: 
  Sep 11 00:07:46.680: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:07:51.580: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.583: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.587: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.591: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.611: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.616: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.621: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.625: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:51.640: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:07:51.648: INFO: Pod client logs for webserver: 
  Sep 11 00:07:51.654: INFO: Pod client logs for querier: 
  Sep 11 00:07:51.662: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:07:56.582: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.588: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.591: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.595: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.614: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.619: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.624: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.628: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:07:56.644: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:07:56.651: INFO: Pod client logs for webserver: 
  Sep 11 00:07:56.659: INFO: Pod client logs for querier: 
  Sep 11 00:07:56.667: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:08:01.579: INFO: Unable to read wheezy_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.584: INFO: Unable to read wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.588: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.596: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.624: INFO: Unable to read jessie_udp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.628: INFO: Unable to read jessie_tcp@dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.632: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.635: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local from pod dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581: the server could not find the requested resource (get pods dns-test-477190f0-a965-472a-82ff-a50b843d0581)
  Sep 11 00:08:01.649: INFO: Lookups using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 failed for: [wheezy_udp@dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@dns-test-service.dns-5975.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_udp@dns-test-service.dns-5975.svc.cluster.local jessie_tcp@dns-test-service.dns-5975.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-5975.svc.cluster.local]

  Sep 11 00:08:01.656: INFO: Pod client logs for webserver: 
  Sep 11 00:08:01.663: INFO: Pod client logs for querier: 
  Sep 11 00:08:01.670: INFO: Pod client logs for jessie-querier: 
  Sep 11 00:08:06.647: INFO: DNS probes using dns-5975/dns-test-477190f0-a965-472a-82ff-a50b843d0581 succeeded

  Sep 11 00:08:06.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:08:06.652
  STEP: deleting the test service @ 09/11/23 00:08:06.669
  STEP: deleting the test headless service @ 09/11/23 00:08:06.712
  STEP: Destroying namespace "dns-5975" for this suite. @ 09/11/23 00:08:06.75
• [34.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/11/23 00:08:06.77
  Sep 11 00:08:06.770: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:08:06.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:06.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:06.807
  STEP: Creating a ResourceQuota with best effort scope @ 09/11/23 00:08:06.811
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 00:08:06.817
  STEP: Creating a ResourceQuota with not best effort scope @ 09/11/23 00:08:08.828
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 00:08:08.834
  STEP: Creating a best-effort pod @ 09/11/23 00:08:10.847
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/11/23 00:08:10.873
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/11/23 00:08:12.878
  STEP: Deleting the pod @ 09/11/23 00:08:14.882
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 00:08:14.902
  STEP: Creating a not best-effort pod @ 09/11/23 00:08:16.914
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/11/23 00:08:16.934
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/11/23 00:08:18.941
  STEP: Deleting the pod @ 09/11/23 00:08:20.946
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 00:08:20.967
  Sep 11 00:08:22.974: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2140" for this suite. @ 09/11/23 00:08:22.98
• [16.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/11/23 00:08:22.993
  Sep 11 00:08:22.993: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:08:22.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:23.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:23.03
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8642.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8642.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/11/23 00:08:23.033
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8642.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8642.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/11/23 00:08:23.033
  STEP: creating a pod to probe /etc/hosts @ 09/11/23 00:08:23.033
  STEP: submitting the pod to kubernetes @ 09/11/23 00:08:23.033
  STEP: retrieving the pod @ 09/11/23 00:08:25.463
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:08:25.466
  Sep 11 00:08:25.487: INFO: DNS probes using dns-8642/dns-test-ae655943-72a9-4da4-9498-aca40b2f325f succeeded

  Sep 11 00:08:25.487: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:08:25.491
  STEP: Destroying namespace "dns-8642" for this suite. @ 09/11/23 00:08:25.504
• [2.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/11/23 00:08:25.515
  Sep 11 00:08:25.515: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 00:08:25.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:25.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:25.54
  STEP: getting /apis @ 09/11/23 00:08:25.542
  STEP: getting /apis/discovery.k8s.io @ 09/11/23 00:08:25.55
  STEP: getting /apis/discovery.k8s.iov1 @ 09/11/23 00:08:25.552
  STEP: creating @ 09/11/23 00:08:25.553
  STEP: getting @ 09/11/23 00:08:25.572
  STEP: listing @ 09/11/23 00:08:25.576
  STEP: watching @ 09/11/23 00:08:25.581
  Sep 11 00:08:25.581: INFO: starting watch
  STEP: cluster-wide listing @ 09/11/23 00:08:25.582
  STEP: cluster-wide watching @ 09/11/23 00:08:25.589
  Sep 11 00:08:25.589: INFO: starting watch
  STEP: patching @ 09/11/23 00:08:25.59
  STEP: updating @ 09/11/23 00:08:25.597
  Sep 11 00:08:25.605: INFO: waiting for watch events with expected annotations
  Sep 11 00:08:25.606: INFO: saw patched and updated annotations
  STEP: deleting @ 09/11/23 00:08:25.607
  STEP: deleting a collection @ 09/11/23 00:08:25.619
  Sep 11 00:08:25.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4423" for this suite. @ 09/11/23 00:08:25.649
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/11/23 00:08:25.658
  Sep 11 00:08:25.658: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:08:25.659
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:25.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:25.685
  STEP: Creating configMap with name configmap-test-volume-map-bd72504c-11ec-452a-ab04-44676f8201e9 @ 09/11/23 00:08:25.687
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:08:25.691
  STEP: Saw pod success @ 09/11/23 00:08:29.717
  Sep 11 00:08:29.721: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-e93a4c04-29b6-4c0f-8a57-4b481b4849ad container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:08:29.728
  Sep 11 00:08:29.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2314" for this suite. @ 09/11/23 00:08:29.755
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/11/23 00:08:29.765
  Sep 11 00:08:29.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 00:08:29.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:29.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:29.787
  STEP: Creating Indexed job @ 09/11/23 00:08:29.79
  STEP: Ensuring job reaches completions @ 09/11/23 00:08:29.798
  STEP: Ensuring pods with index for job exist @ 09/11/23 00:08:39.802
  Sep 11 00:08:39.808: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4648" for this suite. @ 09/11/23 00:08:39.812
• [10.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/11/23 00:08:39.823
  Sep 11 00:08:39.823: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:08:39.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:39.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:39.851
  STEP: Setting up server cert @ 09/11/23 00:08:39.891
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:08:41.021
  STEP: Deploying the webhook pod @ 09/11/23 00:08:41.035
  STEP: Wait for the deployment to be ready @ 09/11/23 00:08:41.057
  Sep 11 00:08:41.077: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 00:08:43.087
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:08:43.099
  Sep 11 00:08:44.099: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/11/23 00:08:44.109
  STEP: create a namespace for the webhook @ 09/11/23 00:08:44.228
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/11/23 00:08:44.247
  Sep 11 00:08:44.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3836" for this suite. @ 09/11/23 00:08:44.817
  STEP: Destroying namespace "webhook-markers-2097" for this suite. @ 09/11/23 00:08:44.826
  STEP: Destroying namespace "fail-closed-namespace-786" for this suite. @ 09/11/23 00:08:44.839
• [5.029 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/11/23 00:08:44.852
  Sep 11 00:08:44.852: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/11/23 00:08:44.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:44.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:44.909
  STEP: creating a Deployment @ 09/11/23 00:08:44.924
  STEP: waiting for Deployment to be created @ 09/11/23 00:08:44.937
  STEP: waiting for all Replicas to be Ready @ 09/11/23 00:08:44.945
  Sep 11 00:08:44.956: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:44.956: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:44.975: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:44.976: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:44.987: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:44.988: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:45.018: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:45.019: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 11 00:08:46.988: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 11 00:08:46.988: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 11 00:08:47.257: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/11/23 00:08:47.257
  Sep 11 00:08:47.278: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/11/23 00:08:47.279
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.281: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 0
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.282: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.290: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.290: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.330: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.330: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:47.358: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:47.358: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:48.995: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:48.995: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:49.034: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  STEP: listing Deployments @ 09/11/23 00:08:49.036
  Sep 11 00:08:49.042: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/11/23 00:08:49.042
  Sep 11 00:08:49.058: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/11/23 00:08:49.058
  Sep 11 00:08:49.069: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:49.070: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:49.124: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:49.144: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:50.136: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:51.004: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:51.058: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:51.070: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 11 00:08:54.296: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/11/23 00:08:54.318
  STEP: fetching the DeploymentStatus @ 09/11/23 00:08:54.333
  Sep 11 00:08:54.341: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:54.342: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:54.342: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:54.342: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 1
  Sep 11 00:08:54.343: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:54.343: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 3
  Sep 11 00:08:54.343: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:54.344: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 2
  Sep 11 00:08:54.344: INFO: observed Deployment test-deployment in namespace deployment-7214 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/11/23 00:08:54.344
  Sep 11 00:08:54.356: INFO: observed event type MODIFIED
  Sep 11 00:08:54.356: INFO: observed event type MODIFIED
  Sep 11 00:08:54.357: INFO: observed event type MODIFIED
  Sep 11 00:08:54.357: INFO: observed event type MODIFIED
  Sep 11 00:08:54.358: INFO: observed event type MODIFIED
  Sep 11 00:08:54.358: INFO: observed event type MODIFIED
  Sep 11 00:08:54.359: INFO: observed event type MODIFIED
  Sep 11 00:08:54.359: INFO: observed event type MODIFIED
  Sep 11 00:08:54.360: INFO: observed event type MODIFIED
  Sep 11 00:08:54.360: INFO: observed event type MODIFIED
  Sep 11 00:08:54.360: INFO: observed event type MODIFIED
  Sep 11 00:08:54.360: INFO: observed event type MODIFIED
  Sep 11 00:08:54.365: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 11 00:08:54.370: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5d1fa66-6130-4822-af1a-cc5c13cf33fb",
      ResourceVersion: (string) (len=5) "90607",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987727,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "840e6dbb-0feb-4dd5-a963-afcaea076d60",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 30 65  36 64 62 62 2d 30 66 65  |":\"840e6dbb-0fe|
              00000130  62 2d 34 64 64 35 2d 61  39 36 33 2d 61 66 63 61  |b-4dd5-a963-afca|
              00000140  65 61 30 37 36 64 36 30  5c 22 7d 22 3a 7b 7d 7d  |ea076d60\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 00:08:54.380: INFO: pod: "test-deployment-64fd565c98-cw7q4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-cw7q4",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be8d356b-6bc4-424e-bd78-7330b78524d5",
      ResourceVersion: (string) (len=5) "90601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987736,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c219abd412d43a65771839819b7131e25dc711fe1928f8f4717fbba7b0182ed8",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.31/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.31/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "b5d1fa66-6130-4822-af1a-cc5c13cf33fb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 35 64 31 66 61 36 36  |uid\":\"b5d1fa66|
              000000a0  2d 36 31 33 30 2d 34 38  32 32 2d 61 66 31 61 2d  |-6130-4822-af1a-|
              000000b0  63 63 35 63 31 33 63 66  33 33 66 62 5c 22 7d 22  |cc5c13cf33fb\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 31 2e  33 31 5c 22 7d 22 3a 7b  |10.42.1.31\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s6b4k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s6b4k",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.15.132",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.1.31",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.31"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829987730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://f340127b8ba000193779699fd47c52a8cc40659527f964c5affb201da07eb398",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 00:08:54.383: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2215923-9742-4a81-aaf0-77ba56e2ecc4",
      ResourceVersion: (string) (len=5) "90481",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987724,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "840e6dbb-0feb-4dd5-a963-afcaea076d60",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987728,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 30 65  36 64 62 62 2d 30 66 65  |":\"840e6dbb-0fe|
              00000130  62 2d 34 64 64 35 2d 61  39 36 33 2d 61 66 63 61  |b-4dd5-a963-afca|
              00000140  65 61 30 37 36 64 36 30  5c 22 7d 22 3a 7b 7d 7d  |ea076d60\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 00:08:54.394: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ec169830-9829-44ca-892e-5ad863d9fc87",
      ResourceVersion: (string) (len=5) "90599",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "840e6dbb-0feb-4dd5-a963-afcaea076d60",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 38 34 30 65  36 64 62 62 2d 30 66 65  |":\"840e6dbb-0fe|
              00000130  62 2d 34 64 64 35 2d 61  39 36 33 2d 61 66 63 61  |b-4dd5-a963-afca|
              00000140  65 61 30 37 36 64 36 30  5c 22 7d 22 3a 7b 7d 7d  |ea076d60\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 11 00:08:54.411: INFO: pod: "test-deployment-79ff746c4-m6lql":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-m6lql",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70805288-6d4d-4b45-8ad6-22f270ab311c",
      ResourceVersion: (string) (len=5) "90615",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8636387ba0b89e6c293acbe6c0f2184ab35474158fb13bb3ff821d49e3fd94e5",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.39/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.39/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "ec169830-9829-44ca-892e-5ad863d9fc87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 63 31 36 39 38 33 30  |uid\":\"ec169830|
              000000a0  2d 39 38 32 39 2d 34 34  63 61 2d 38 39 32 65 2d  |-9829-44ca-892e-|
              000000b0  35 61 64 38 36 33 64 39  66 63 38 37 5c 22 7d 22  |5ad863d9fc87\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987733,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 32 2e  33 39 5c 22 7d 22 3a 7b  |10.42.2.39\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brxfs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brxfs",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987734,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987731,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.2.39",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.39"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987731,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829987733,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9cc18adf7f4a603d99757c9c476e019a5a60a0a6f7bfddda339819486a3724d6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 00:08:54.417: INFO: pod: "test-deployment-79ff746c4-r8vx7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-r8vx7",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-7214",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f412d688-fd77-40ad-8e96-edf46a54163b",
      ResourceVersion: (string) (len=5) "90616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987735,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d5e60b03c3991b939f512a5917e2ff80f590ffbdc4b4f0609f4b6a54759a4969",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.115/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.115/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "ec169830-9829-44ca-892e-5ad863d9fc87",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 63 31 36 39 38 33 30  |uid\":\"ec169830|
              000000a0  2d 39 38 32 39 2d 34 34  63 61 2d 38 39 32 65 2d  |-9829-44ca-892e-|
              000000b0  35 61 64 38 36 33 64 39  66 63 38 37 5c 22 7d 22  |5ad863d9fc87\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 31 35 5c 22 7d 22 3a  |10.42.3.115\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-db6cm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-db6cm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987730,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829987729,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829987729,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829987730,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://55cde7c6f05ece70fc9427a0a75bf52af709bd735ca28fd07e7007e57698dfd0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 11 00:08:54.420: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7214" for this suite. @ 09/11/23 00:08:54.427
• [9.584 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/11/23 00:08:54.442
  Sep 11 00:08:54.442: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 00:08:54.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:54.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:54.473
  STEP: create the deployment @ 09/11/23 00:08:54.477
  W0911 00:08:54.484937      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/11/23 00:08:54.485
  STEP: delete the deployment @ 09/11/23 00:08:54.491
  STEP: wait for all rs to be garbage collected @ 09/11/23 00:08:54.51
  STEP: expected 0 pods, got 2 pods @ 09/11/23 00:08:54.522
  STEP: Gathering metrics @ 09/11/23 00:08:55.055
  Sep 11 00:08:55.186: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 00:08:55.188: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2717" for this suite. @ 09/11/23 00:08:55.193
• [0.757 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/11/23 00:08:55.199
  Sep 11 00:08:55.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 00:08:55.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:08:55.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:08:55.221
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/11/23 00:08:55.246
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 00:08:55.253
  Sep 11 00:08:55.262: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 00:08:55.262: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:08:56.275: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 00:08:56.275: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:08:57.271: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 11 00:08:57.271: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:08:58.272: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 00:08:58.272: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/11/23 00:08:58.275
  Sep 11 00:08:58.309: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 00:08:58.309: INFO: Node ip-172-31-8-29.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:08:59.321: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 00:08:59.321: INFO: Node ip-172-31-8-29.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:09:00.319: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 00:09:00.319: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/11/23 00:09:00.319
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 00:09:00.327
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5867, will wait for the garbage collector to delete the pods @ 09/11/23 00:09:00.327
  Sep 11 00:09:00.393: INFO: Deleting DaemonSet.extensions daemon-set took: 11.009734ms
  Sep 11 00:09:00.494: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.922939ms
  Sep 11 00:09:03.199: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 00:09:03.199: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 00:09:03.202: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"90856"},"items":null}

  Sep 11 00:09:03.206: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"90856"},"items":null}

  Sep 11 00:09:03.225: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5867" for this suite. @ 09/11/23 00:09:03.23
• [8.038 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/11/23 00:09:03.237
  Sep 11 00:09:03.237: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 00:09:03.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:09:03.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:09:03.262
  STEP: Creating service test in namespace statefulset-7755 @ 09/11/23 00:09:03.267
  STEP: Looking for a node to schedule stateful set and pod @ 09/11/23 00:09:03.278
  STEP: Creating pod with conflicting port in namespace statefulset-7755 @ 09/11/23 00:09:03.287
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7755 @ 09/11/23 00:09:03.299
  STEP: Creating statefulset with conflicting port in namespace statefulset-7755 @ 09/11/23 00:09:07.31
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7755 @ 09/11/23 00:09:07.316
  Sep 11 00:09:07.329: INFO: Observed stateful pod in namespace: statefulset-7755, name: ss-0, uid: 55993d69-3515-4e58-b11b-0f0411ea1b20, status phase: Pending. Waiting for statefulset controller to delete.
  Sep 11 00:09:07.354: INFO: Observed stateful pod in namespace: statefulset-7755, name: ss-0, uid: 55993d69-3515-4e58-b11b-0f0411ea1b20, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 11 00:09:07.368: INFO: Observed stateful pod in namespace: statefulset-7755, name: ss-0, uid: 55993d69-3515-4e58-b11b-0f0411ea1b20, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 11 00:09:07.372: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-7755
  STEP: Removing pod with conflicting port in namespace statefulset-7755 @ 09/11/23 00:09:07.372
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7755 and will be in running state @ 09/11/23 00:09:07.401
  Sep 11 00:09:09.413: INFO: Deleting all statefulset in ns statefulset-7755
  Sep 11 00:09:09.416: INFO: Scaling statefulset ss to 0
  Sep 11 00:09:19.436: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 00:09:19.439: INFO: Deleting statefulset ss
  Sep 11 00:09:19.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7755" for this suite. @ 09/11/23 00:09:19.459
• [16.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/11/23 00:09:19.474
  Sep 11 00:09:19.474: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 00:09:19.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:09:19.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:09:19.498
  STEP: Creating a job @ 09/11/23 00:09:19.501
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/11/23 00:09:19.511
  STEP: patching /status @ 09/11/23 00:09:21.516
  STEP: updating /status @ 09/11/23 00:09:21.526
  STEP: get /status @ 09/11/23 00:09:21.543
  Sep 11 00:09:21.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-447" for this suite. @ 09/11/23 00:09:21.554
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/11/23 00:09:21.584
  Sep 11 00:09:21.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:09:21.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:09:21.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:09:21.607
  STEP: Setting up server cert @ 09/11/23 00:09:21.636
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:09:22.324
  STEP: Deploying the webhook pod @ 09/11/23 00:09:22.333
  STEP: Wait for the deployment to be ready @ 09/11/23 00:09:22.349
  Sep 11 00:09:22.360: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 00:09:24.371
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:09:24.39
  Sep 11 00:09:25.391: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 00:09:25.398: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4895-crds.webhook.example.com via the AdmissionRegistration API @ 09/11/23 00:09:25.91
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/11/23 00:09:26.013
  Sep 11 00:09:28.054: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9134" for this suite. @ 09/11/23 00:09:28.67
  STEP: Destroying namespace "webhook-markers-8938" for this suite. @ 09/11/23 00:09:28.681
• [7.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/11/23 00:09:28.695
  Sep 11 00:09:28.695: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 00:09:28.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:09:28.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:09:28.718
  STEP: Creating pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378 @ 09/11/23 00:09:28.721
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 00:09:30.74
  Sep 11 00:09:30.743: INFO: Initial restart count of pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 is 0
  Sep 11 00:09:30.746: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:32.750: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:34.754: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:36.764: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:38.768: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:40.777: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:42.783: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:44.787: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:46.793: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:48.797: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:50.803: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:50.804: INFO: Restart count of pod container-probe-378/liveness-c817c608-39c6-4161-85d2-cf06fad80558 is now 1 (20.060673908s elapsed)
  Sep 11 00:09:52.808: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:54.812: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:56.819: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:09:58.823: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:00.829: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:02.835: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:04.965: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:06.972: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:08.977: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:10.983: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:10.983: INFO: Restart count of pod container-probe-378/liveness-c817c608-39c6-4161-85d2-cf06fad80558 is now 2 (40.240319051s elapsed)
  Sep 11 00:10:12.987: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:14.991: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:16.996: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:19.000: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:21.011: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:23.557: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:25.561: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:27.570: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:29.575: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:31.579: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:31.579: INFO: Restart count of pod container-probe-378/liveness-c817c608-39c6-4161-85d2-cf06fad80558 is now 3 (1m0.836382589s elapsed)
  Sep 11 00:10:33.584: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:35.588: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:37.595: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:39.599: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:41.603: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:43.609: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:45.613: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:47.618: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:49.622: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:51.628: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:51.628: INFO: Restart count of pod container-probe-378/liveness-c817c608-39c6-4161-85d2-cf06fad80558 is now 4 (1m20.885224905s elapsed)
  Sep 11 00:10:53.637: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:55.645: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:57.656: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:10:59.660: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:01.665: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:03.670: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:05.675: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:07.679: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:09.684: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:11.983: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:13.987: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:15.991: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:18.218: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:20.223: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:22.229: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:24.234: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:26.238: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:28.242: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:30.246: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:32.438: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:34.442: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:36.445: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:38.450: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:40.517: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:42.522: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:44.526: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:46.530: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:48.534: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:50.539: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:52.547: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:54.551: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:56.555: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:11:58.560: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:12:00.564: INFO: Get pod liveness-c817c608-39c6-4161-85d2-cf06fad80558 in namespace container-probe-378
  Sep 11 00:12:00.564: INFO: Restart count of pod container-probe-378/liveness-c817c608-39c6-4161-85d2-cf06fad80558 is now 5 (2m29.821618157s elapsed)
  Sep 11 00:12:00.565: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:12:00.57
  STEP: Destroying namespace "container-probe-378" for this suite. @ 09/11/23 00:12:00.584
• [151.908 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/11/23 00:12:00.603
  Sep 11 00:12:00.604: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 00:12:00.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:00.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:00.638
  STEP: Deleting RuntimeClass runtimeclass-4811-delete-me @ 09/11/23 00:12:00.648
  STEP: Waiting for the RuntimeClass to disappear @ 09/11/23 00:12:00.656
  Sep 11 00:12:00.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4811" for this suite. @ 09/11/23 00:12:00.677
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/11/23 00:12:00.69
  Sep 11 00:12:00.690: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:12:00.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:00.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:00.718
  STEP: Creating configMap with name cm-test-opt-del-3ec958a4-0029-4024-befd-e6621c0eecb1 @ 09/11/23 00:12:00.727
  STEP: Creating configMap with name cm-test-opt-upd-4e93e0a5-4c62-4c18-b967-405c4deaa4ea @ 09/11/23 00:12:00.734
  STEP: Creating the pod @ 09/11/23 00:12:00.782
  STEP: Deleting configmap cm-test-opt-del-3ec958a4-0029-4024-befd-e6621c0eecb1 @ 09/11/23 00:12:05.256
  STEP: Updating configmap cm-test-opt-upd-4e93e0a5-4c62-4c18-b967-405c4deaa4ea @ 09/11/23 00:12:05.262
  STEP: Creating configMap with name cm-test-opt-create-dd61a918-35a7-4f98-b825-0dfe54f49aa6 @ 09/11/23 00:12:05.268
  STEP: waiting to observe update in volume @ 09/11/23 00:12:05.273
  Sep 11 00:12:42.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6441" for this suite. @ 09/11/23 00:12:42.924
• [42.243 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/11/23 00:12:42.935
  Sep 11 00:12:42.935: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:12:42.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:42.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:42.964
  STEP: Setting up server cert @ 09/11/23 00:12:43.002
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:12:43.369
  STEP: Deploying the webhook pod @ 09/11/23 00:12:43.454
  STEP: Wait for the deployment to be ready @ 09/11/23 00:12:43.468
  Sep 11 00:12:43.481: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 00:12:45.496
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:12:45.507
  Sep 11 00:12:46.508: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/11/23 00:12:46.519
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/11/23 00:12:46.554
  STEP: Creating a configMap that should not be mutated @ 09/11/23 00:12:46.563
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/11/23 00:12:46.58
  STEP: Creating a configMap that should be mutated @ 09/11/23 00:12:46.59
  Sep 11 00:12:46.630: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1014" for this suite. @ 09/11/23 00:12:46.692
  STEP: Destroying namespace "webhook-markers-9640" for this suite. @ 09/11/23 00:12:46.706
• [3.791 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/11/23 00:12:46.727
  Sep 11 00:12:46.727: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 00:12:46.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:46.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:46.748
  STEP: Create a ReplicaSet @ 09/11/23 00:12:46.752
  STEP: Verify that the required pods have come up @ 09/11/23 00:12:46.758
  Sep 11 00:12:46.762: INFO: Pod name sample-pod: Found 0 pods out of 3
  Sep 11 00:12:52.108: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/11/23 00:12:52.108
  Sep 11 00:12:52.121: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/11/23 00:12:52.122
  STEP: DeleteCollection of the ReplicaSets @ 09/11/23 00:12:52.127
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/11/23 00:12:52.135
  Sep 11 00:12:52.139: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8331" for this suite. @ 09/11/23 00:12:52.145
• [5.464 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/11/23 00:12:52.199
  Sep 11 00:12:52.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 00:12:52.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:52.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:52.311
  Sep 11 00:12:52.319: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/11/23 00:12:54.27
  Sep 11 00:12:54.270: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-9939 --namespace=crd-publish-openapi-9939 create -f -'
  Sep 11 00:12:55.089: INFO: stderr: ""
  Sep 11 00:12:55.089: INFO: stdout: "e2e-test-crd-publish-openapi-1294-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 11 00:12:55.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-9939 --namespace=crd-publish-openapi-9939 delete e2e-test-crd-publish-openapi-1294-crds test-cr'
  Sep 11 00:12:55.177: INFO: stderr: ""
  Sep 11 00:12:55.177: INFO: stdout: "e2e-test-crd-publish-openapi-1294-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 11 00:12:55.177: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-9939 --namespace=crd-publish-openapi-9939 apply -f -'
  Sep 11 00:12:55.398: INFO: stderr: ""
  Sep 11 00:12:55.398: INFO: stdout: "e2e-test-crd-publish-openapi-1294-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 11 00:12:55.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-9939 --namespace=crd-publish-openapi-9939 delete e2e-test-crd-publish-openapi-1294-crds test-cr'
  Sep 11 00:12:55.680: INFO: stderr: ""
  Sep 11 00:12:55.680: INFO: stdout: "e2e-test-crd-publish-openapi-1294-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/11/23 00:12:55.68
  Sep 11 00:12:55.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-9939 explain e2e-test-crd-publish-openapi-1294-crds'
  Sep 11 00:12:56.441: INFO: stderr: ""
  Sep 11 00:12:56.441: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1294-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 11 00:12:58.291: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9939" for this suite. @ 09/11/23 00:12:58.3
• [6.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/11/23 00:12:58.317
  Sep 11 00:12:58.317: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:12:58.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:12:58.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:12:58.34
  STEP: creating service in namespace services-1638 @ 09/11/23 00:12:58.343
  STEP: creating service affinity-nodeport-transition in namespace services-1638 @ 09/11/23 00:12:58.343
  STEP: creating replication controller affinity-nodeport-transition in namespace services-1638 @ 09/11/23 00:12:58.372
  I0911 00:12:58.382483      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-1638, replica count: 3
  I0911 00:13:01.434593      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 00:13:01.445: INFO: Creating new exec pod
  Sep 11 00:13:06.513: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 11 00:13:06.721: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 11 00:13:06.721: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:13:06.721: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.208.28 80'
  Sep 11 00:13:06.915: INFO: stderr: "+ nc -v -t -w 2 10.43.208.28 80\nConnection to 10.43.208.28 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep 11 00:13:06.915: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:13:06.916: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.10.18 32373'
  Sep 11 00:13:07.099: INFO: stderr: "+ nc -v -t -w 2 172.31.10.18 32373\n+ echo hostName\nConnection to 172.31.10.18 32373 port [tcp/*] succeeded!\n"
  Sep 11 00:13:07.099: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:13:07.099: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 32373'
  Sep 11 00:13:07.282: INFO: stderr: "+ nc -v -t -w 2 172.31.15.132 32373\n+ echo hostName\nConnection to 172.31.15.132 32373 port [tcp/*] succeeded!\n"
  Sep 11 00:13:07.282: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:13:07.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.18:32373/ ; done'
  Sep 11 00:13:07.665: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n"
  Sep 11 00:13:07.665: INFO: stdout: "\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-g6drp\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-g6drp\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-g6drp\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-pn2r9\naffinity-nodeport-transition-g6drp"
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-g6drp
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-g6drp
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-g6drp
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-pn2r9
  Sep 11 00:13:07.665: INFO: Received response from host: affinity-nodeport-transition-g6drp
  Sep 11 00:13:07.677: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1638 exec execpod-affinity5trh5 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.18:32373/ ; done'
  Sep 11 00:13:07.963: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:32373/\n"
  Sep 11 00:13:07.963: INFO: stdout: "\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9\naffinity-nodeport-transition-xf6p9"
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Received response from host: affinity-nodeport-transition-xf6p9
  Sep 11 00:13:07.963: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 00:13:07.968: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-1638, will wait for the garbage collector to delete the pods @ 09/11/23 00:13:07.983
  Sep 11 00:13:08.050: INFO: Deleting ReplicationController affinity-nodeport-transition took: 8.555121ms
  Sep 11 00:13:08.151: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.650599ms
  STEP: Destroying namespace "services-1638" for this suite. @ 09/11/23 00:13:12.008
• [13.718 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/11/23 00:13:12.038
  Sep 11 00:13:12.038: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 00:13:12.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:13:12.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:13:12.074
  STEP: Creating a ForbidConcurrent cronjob @ 09/11/23 00:13:12.078
  STEP: Ensuring a job is scheduled @ 09/11/23 00:13:12.087
  STEP: Ensuring exactly one is scheduled @ 09/11/23 00:14:02.098
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/11/23 00:14:02.11
  STEP: Ensuring no more jobs are scheduled @ 09/11/23 00:14:02.119
  STEP: Removing cronjob @ 09/11/23 00:19:02.153
  Sep 11 00:19:02.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9197" for this suite. @ 09/11/23 00:19:02.196
• [350.188 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/11/23 00:19:02.227
  Sep 11 00:19:02.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:19:02.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:19:02.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:19:02.255
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/11/23 00:19:02.259
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/11/23 00:19:02.259
  STEP: creating a pod to probe DNS @ 09/11/23 00:19:02.259
  STEP: submitting the pod to kubernetes @ 09/11/23 00:19:02.259
  STEP: retrieving the pod @ 09/11/23 00:19:06.285
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:19:06.288
  Sep 11 00:19:06.311: INFO: DNS probes using dns-5133/dns-test-a4069886-00d6-416d-96fc-976160c60ed9 succeeded

  Sep 11 00:19:06.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:19:06.316
  STEP: Destroying namespace "dns-5133" for this suite. @ 09/11/23 00:19:06.339
• [4.119 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/11/23 00:19:06.347
  Sep 11 00:19:06.347: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 00:19:06.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:19:06.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:19:06.368
  STEP: create the rc1 @ 09/11/23 00:19:06.376
  STEP: create the rc2 @ 09/11/23 00:19:06.385
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/11/23 00:19:12.411
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/11/23 00:19:14.25
  STEP: wait for the rc to be deleted @ 09/11/23 00:19:14.28
  Sep 11 00:19:19.373: INFO: 65 pods remaining
  Sep 11 00:19:19.373: INFO: 65 pods has nil DeletionTimestamp
  Sep 11 00:19:19.373: INFO: 
  STEP: Gathering metrics @ 09/11/23 00:19:24.341
  Sep 11 00:19:24.748: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 00:19:24.749: INFO: Deleting pod "simpletest-rc-to-be-deleted-22b4k" in namespace "gc-3758"
  Sep 11 00:19:24.776: INFO: Deleting pod "simpletest-rc-to-be-deleted-2bnd7" in namespace "gc-3758"
  Sep 11 00:19:24.803: INFO: Deleting pod "simpletest-rc-to-be-deleted-2xhv5" in namespace "gc-3758"
  Sep 11 00:19:24.825: INFO: Deleting pod "simpletest-rc-to-be-deleted-4g7kq" in namespace "gc-3758"
  Sep 11 00:19:24.870: INFO: Deleting pod "simpletest-rc-to-be-deleted-4hbr9" in namespace "gc-3758"
  Sep 11 00:19:24.913: INFO: Deleting pod "simpletest-rc-to-be-deleted-4v7sg" in namespace "gc-3758"
  Sep 11 00:19:24.942: INFO: Deleting pod "simpletest-rc-to-be-deleted-4w76p" in namespace "gc-3758"
  Sep 11 00:19:24.966: INFO: Deleting pod "simpletest-rc-to-be-deleted-4xbx4" in namespace "gc-3758"
  Sep 11 00:19:24.993: INFO: Deleting pod "simpletest-rc-to-be-deleted-5cj6r" in namespace "gc-3758"
  Sep 11 00:19:25.021: INFO: Deleting pod "simpletest-rc-to-be-deleted-5skzl" in namespace "gc-3758"
  Sep 11 00:19:25.047: INFO: Deleting pod "simpletest-rc-to-be-deleted-5vfj9" in namespace "gc-3758"
  Sep 11 00:19:25.067: INFO: Deleting pod "simpletest-rc-to-be-deleted-67kcd" in namespace "gc-3758"
  Sep 11 00:19:25.093: INFO: Deleting pod "simpletest-rc-to-be-deleted-6c6hk" in namespace "gc-3758"
  Sep 11 00:19:25.115: INFO: Deleting pod "simpletest-rc-to-be-deleted-6cmw7" in namespace "gc-3758"
  Sep 11 00:19:25.167: INFO: Deleting pod "simpletest-rc-to-be-deleted-6hhvf" in namespace "gc-3758"
  Sep 11 00:19:25.191: INFO: Deleting pod "simpletest-rc-to-be-deleted-6j95n" in namespace "gc-3758"
  Sep 11 00:19:25.270: INFO: Deleting pod "simpletest-rc-to-be-deleted-6js6z" in namespace "gc-3758"
  Sep 11 00:19:25.294: INFO: Deleting pod "simpletest-rc-to-be-deleted-6q4b2" in namespace "gc-3758"
  Sep 11 00:19:25.312: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qwb8" in namespace "gc-3758"
  Sep 11 00:19:25.352: INFO: Deleting pod "simpletest-rc-to-be-deleted-6wrgc" in namespace "gc-3758"
  Sep 11 00:19:25.382: INFO: Deleting pod "simpletest-rc-to-be-deleted-6zn9s" in namespace "gc-3758"
  Sep 11 00:19:25.451: INFO: Deleting pod "simpletest-rc-to-be-deleted-7552s" in namespace "gc-3758"
  Sep 11 00:19:25.528: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ksdd" in namespace "gc-3758"
  Sep 11 00:19:25.554: INFO: Deleting pod "simpletest-rc-to-be-deleted-7ljdq" in namespace "gc-3758"
  Sep 11 00:19:25.613: INFO: Deleting pod "simpletest-rc-to-be-deleted-7mstp" in namespace "gc-3758"
  Sep 11 00:19:25.637: INFO: Deleting pod "simpletest-rc-to-be-deleted-7vzkv" in namespace "gc-3758"
  Sep 11 00:19:25.669: INFO: Deleting pod "simpletest-rc-to-be-deleted-7z2jg" in namespace "gc-3758"
  Sep 11 00:19:25.735: INFO: Deleting pod "simpletest-rc-to-be-deleted-875sx" in namespace "gc-3758"
  Sep 11 00:19:25.763: INFO: Deleting pod "simpletest-rc-to-be-deleted-8mhqr" in namespace "gc-3758"
  Sep 11 00:19:25.786: INFO: Deleting pod "simpletest-rc-to-be-deleted-8p5l2" in namespace "gc-3758"
  Sep 11 00:19:25.810: INFO: Deleting pod "simpletest-rc-to-be-deleted-96hjh" in namespace "gc-3758"
  Sep 11 00:19:25.874: INFO: Deleting pod "simpletest-rc-to-be-deleted-9ksz8" in namespace "gc-3758"
  Sep 11 00:19:25.899: INFO: Deleting pod "simpletest-rc-to-be-deleted-b6wx6" in namespace "gc-3758"
  Sep 11 00:19:25.940: INFO: Deleting pod "simpletest-rc-to-be-deleted-bl48k" in namespace "gc-3758"
  Sep 11 00:19:25.977: INFO: Deleting pod "simpletest-rc-to-be-deleted-blfr7" in namespace "gc-3758"
  Sep 11 00:19:26.035: INFO: Deleting pod "simpletest-rc-to-be-deleted-cd4tc" in namespace "gc-3758"
  Sep 11 00:19:26.072: INFO: Deleting pod "simpletest-rc-to-be-deleted-czzgb" in namespace "gc-3758"
  Sep 11 00:19:26.087: INFO: Deleting pod "simpletest-rc-to-be-deleted-d8hwz" in namespace "gc-3758"
  Sep 11 00:19:26.106: INFO: Deleting pod "simpletest-rc-to-be-deleted-d9v4n" in namespace "gc-3758"
  Sep 11 00:19:26.162: INFO: Deleting pod "simpletest-rc-to-be-deleted-dl66g" in namespace "gc-3758"
  Sep 11 00:19:26.182: INFO: Deleting pod "simpletest-rc-to-be-deleted-dlz22" in namespace "gc-3758"
  Sep 11 00:19:26.202: INFO: Deleting pod "simpletest-rc-to-be-deleted-dp8v7" in namespace "gc-3758"
  Sep 11 00:19:26.233: INFO: Deleting pod "simpletest-rc-to-be-deleted-fbvht" in namespace "gc-3758"
  Sep 11 00:19:26.273: INFO: Deleting pod "simpletest-rc-to-be-deleted-flths" in namespace "gc-3758"
  Sep 11 00:19:26.301: INFO: Deleting pod "simpletest-rc-to-be-deleted-gflml" in namespace "gc-3758"
  Sep 11 00:19:26.363: INFO: Deleting pod "simpletest-rc-to-be-deleted-gkqpb" in namespace "gc-3758"
  Sep 11 00:19:26.435: INFO: Deleting pod "simpletest-rc-to-be-deleted-gnvtz" in namespace "gc-3758"
  Sep 11 00:19:26.471: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtlmv" in namespace "gc-3758"
  Sep 11 00:19:26.512: INFO: Deleting pod "simpletest-rc-to-be-deleted-gtvv2" in namespace "gc-3758"
  Sep 11 00:19:26.545: INFO: Deleting pod "simpletest-rc-to-be-deleted-h5pqn" in namespace "gc-3758"
  Sep 11 00:19:26.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3758" for this suite. @ 09/11/23 00:19:26.586
• [20.263 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/11/23 00:19:26.611
  Sep 11 00:19:26.611: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:19:26.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:19:26.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:19:26.669
  STEP: creating Agnhost RC @ 09/11/23 00:19:26.675
  Sep 11 00:19:26.675: INFO: namespace kubectl-9233
  Sep 11 00:19:26.675: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9233 create -f -'
  Sep 11 00:19:28.157: INFO: stderr: ""
  Sep 11 00:19:28.157: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 00:19:28.157
  Sep 11 00:19:29.175: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:19:29.175: INFO: Found 0 / 1
  Sep 11 00:19:30.166: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:19:30.166: INFO: Found 0 / 1
  Sep 11 00:19:31.163: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:19:31.163: INFO: Found 0 / 1
  Sep 11 00:19:32.163: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:19:32.163: INFO: Found 1 / 1
  Sep 11 00:19:32.163: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 11 00:19:32.170: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:19:32.170: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 00:19:32.170: INFO: wait on agnhost-primary startup in kubectl-9233 
  Sep 11 00:19:32.171: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9233 logs agnhost-primary-kvzhk agnhost-primary'
  Sep 11 00:19:32.316: INFO: stderr: ""
  Sep 11 00:19:32.316: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/11/23 00:19:32.316
  Sep 11 00:19:32.316: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9233 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep 11 00:19:32.444: INFO: stderr: ""
  Sep 11 00:19:32.444: INFO: stdout: "service/rm2 exposed\n"
  Sep 11 00:19:32.457: INFO: Service rm2 in namespace kubectl-9233 found.
  STEP: exposing service @ 09/11/23 00:19:34.471
  Sep 11 00:19:34.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9233 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 11 00:19:34.630: INFO: stderr: ""
  Sep 11 00:19:34.630: INFO: stdout: "service/rm3 exposed\n"
  Sep 11 00:19:34.639: INFO: Service rm3 in namespace kubectl-9233 found.
  Sep 11 00:19:36.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9233" for this suite. @ 09/11/23 00:19:36.661
• [10.069 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/11/23 00:19:36.681
  Sep 11 00:19:36.681: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 00:19:36.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:19:36.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:19:36.709
  STEP: create the rc @ 09/11/23 00:19:36.716
  W0911 00:19:36.727750      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/11/23 00:19:42.744
  STEP: wait for the rc to be deleted @ 09/11/23 00:19:42.762
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/11/23 00:19:47.771
  STEP: Gathering metrics @ 09/11/23 00:20:17.788
  Sep 11 00:20:17.871: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 00:20:17.871: INFO: Deleting pod "simpletest.rc-268dw" in namespace "gc-5639"
  Sep 11 00:20:18.043: INFO: Deleting pod "simpletest.rc-2ff5d" in namespace "gc-5639"
  Sep 11 00:20:18.718: INFO: Deleting pod "simpletest.rc-464zt" in namespace "gc-5639"
  Sep 11 00:20:18.751: INFO: Deleting pod "simpletest.rc-46dbq" in namespace "gc-5639"
  Sep 11 00:20:18.791: INFO: Deleting pod "simpletest.rc-4ftwl" in namespace "gc-5639"
  Sep 11 00:20:18.826: INFO: Deleting pod "simpletest.rc-4pl7p" in namespace "gc-5639"
  Sep 11 00:20:18.859: INFO: Deleting pod "simpletest.rc-4x8zn" in namespace "gc-5639"
  Sep 11 00:20:18.894: INFO: Deleting pod "simpletest.rc-52tt7" in namespace "gc-5639"
  Sep 11 00:20:18.938: INFO: Deleting pod "simpletest.rc-59d9q" in namespace "gc-5639"
  Sep 11 00:20:18.970: INFO: Deleting pod "simpletest.rc-5crtg" in namespace "gc-5639"
  Sep 11 00:20:19.023: INFO: Deleting pod "simpletest.rc-5ghqh" in namespace "gc-5639"
  Sep 11 00:20:19.060: INFO: Deleting pod "simpletest.rc-5mjcr" in namespace "gc-5639"
  Sep 11 00:20:19.105: INFO: Deleting pod "simpletest.rc-68jcz" in namespace "gc-5639"
  Sep 11 00:20:19.150: INFO: Deleting pod "simpletest.rc-6fwmk" in namespace "gc-5639"
  Sep 11 00:20:19.186: INFO: Deleting pod "simpletest.rc-6r9dr" in namespace "gc-5639"
  Sep 11 00:20:19.208: INFO: Deleting pod "simpletest.rc-76cdx" in namespace "gc-5639"
  Sep 11 00:20:19.242: INFO: Deleting pod "simpletest.rc-7b549" in namespace "gc-5639"
  Sep 11 00:20:19.288: INFO: Deleting pod "simpletest.rc-7hn72" in namespace "gc-5639"
  Sep 11 00:20:19.320: INFO: Deleting pod "simpletest.rc-7j6b5" in namespace "gc-5639"
  Sep 11 00:20:19.359: INFO: Deleting pod "simpletest.rc-7j9q7" in namespace "gc-5639"
  Sep 11 00:20:19.440: INFO: Deleting pod "simpletest.rc-7n8z5" in namespace "gc-5639"
  Sep 11 00:20:19.521: INFO: Deleting pod "simpletest.rc-7qdk2" in namespace "gc-5639"
  Sep 11 00:20:19.571: INFO: Deleting pod "simpletest.rc-7shnv" in namespace "gc-5639"
  Sep 11 00:20:19.620: INFO: Deleting pod "simpletest.rc-877wd" in namespace "gc-5639"
  Sep 11 00:20:19.669: INFO: Deleting pod "simpletest.rc-8cmlr" in namespace "gc-5639"
  Sep 11 00:20:19.756: INFO: Deleting pod "simpletest.rc-9clxb" in namespace "gc-5639"
  Sep 11 00:20:19.785: INFO: Deleting pod "simpletest.rc-b5j75" in namespace "gc-5639"
  Sep 11 00:20:19.831: INFO: Deleting pod "simpletest.rc-bxs44" in namespace "gc-5639"
  Sep 11 00:20:19.848: INFO: Deleting pod "simpletest.rc-c2smx" in namespace "gc-5639"
  Sep 11 00:20:19.874: INFO: Deleting pod "simpletest.rc-c6nrl" in namespace "gc-5639"
  Sep 11 00:20:19.898: INFO: Deleting pod "simpletest.rc-dsm5z" in namespace "gc-5639"
  Sep 11 00:20:19.926: INFO: Deleting pod "simpletest.rc-dtzhg" in namespace "gc-5639"
  Sep 11 00:20:19.989: INFO: Deleting pod "simpletest.rc-dxx5c" in namespace "gc-5639"
  Sep 11 00:20:20.027: INFO: Deleting pod "simpletest.rc-dzk2t" in namespace "gc-5639"
  Sep 11 00:20:20.063: INFO: Deleting pod "simpletest.rc-fdmkw" in namespace "gc-5639"
  Sep 11 00:20:20.082: INFO: Deleting pod "simpletest.rc-fj87c" in namespace "gc-5639"
  Sep 11 00:20:20.116: INFO: Deleting pod "simpletest.rc-fqjwg" in namespace "gc-5639"
  Sep 11 00:20:20.145: INFO: Deleting pod "simpletest.rc-frv5x" in namespace "gc-5639"
  Sep 11 00:20:20.188: INFO: Deleting pod "simpletest.rc-fxrpw" in namespace "gc-5639"
  Sep 11 00:20:20.218: INFO: Deleting pod "simpletest.rc-g66m4" in namespace "gc-5639"
  Sep 11 00:20:20.246: INFO: Deleting pod "simpletest.rc-g8mr4" in namespace "gc-5639"
  Sep 11 00:20:20.302: INFO: Deleting pod "simpletest.rc-gtslc" in namespace "gc-5639"
  Sep 11 00:20:20.329: INFO: Deleting pod "simpletest.rc-h76kw" in namespace "gc-5639"
  Sep 11 00:20:20.357: INFO: Deleting pod "simpletest.rc-hpt55" in namespace "gc-5639"
  Sep 11 00:20:20.416: INFO: Deleting pod "simpletest.rc-hqlkd" in namespace "gc-5639"
  Sep 11 00:20:20.458: INFO: Deleting pod "simpletest.rc-hzxxs" in namespace "gc-5639"
  Sep 11 00:20:20.498: INFO: Deleting pod "simpletest.rc-jjw7c" in namespace "gc-5639"
  Sep 11 00:20:20.570: INFO: Deleting pod "simpletest.rc-jtgkr" in namespace "gc-5639"
  Sep 11 00:20:20.620: INFO: Deleting pod "simpletest.rc-jzljj" in namespace "gc-5639"
  Sep 11 00:20:20.652: INFO: Deleting pod "simpletest.rc-k8jtm" in namespace "gc-5639"
  Sep 11 00:20:20.667: INFO: Deleting pod "simpletest.rc-kb4xf" in namespace "gc-5639"
  Sep 11 00:20:20.692: INFO: Deleting pod "simpletest.rc-kl5rg" in namespace "gc-5639"
  Sep 11 00:20:20.719: INFO: Deleting pod "simpletest.rc-klgp8" in namespace "gc-5639"
  Sep 11 00:20:20.748: INFO: Deleting pod "simpletest.rc-kxnkb" in namespace "gc-5639"
  Sep 11 00:20:20.791: INFO: Deleting pod "simpletest.rc-kz6gc" in namespace "gc-5639"
  Sep 11 00:20:20.827: INFO: Deleting pod "simpletest.rc-l65qm" in namespace "gc-5639"
  Sep 11 00:20:20.848: INFO: Deleting pod "simpletest.rc-lb8vh" in namespace "gc-5639"
  Sep 11 00:20:20.890: INFO: Deleting pod "simpletest.rc-lmqvm" in namespace "gc-5639"
  Sep 11 00:20:20.919: INFO: Deleting pod "simpletest.rc-lvf5l" in namespace "gc-5639"
  Sep 11 00:20:20.974: INFO: Deleting pod "simpletest.rc-mmbl6" in namespace "gc-5639"
  Sep 11 00:20:21.010: INFO: Deleting pod "simpletest.rc-mrfm6" in namespace "gc-5639"
  Sep 11 00:20:21.058: INFO: Deleting pod "simpletest.rc-mwlgz" in namespace "gc-5639"
  Sep 11 00:20:21.103: INFO: Deleting pod "simpletest.rc-mznbl" in namespace "gc-5639"
  Sep 11 00:20:21.125: INFO: Deleting pod "simpletest.rc-njv88" in namespace "gc-5639"
  Sep 11 00:20:21.215: INFO: Deleting pod "simpletest.rc-pd4hz" in namespace "gc-5639"
  Sep 11 00:20:21.255: INFO: Deleting pod "simpletest.rc-pz9gp" in namespace "gc-5639"
  Sep 11 00:20:21.270: INFO: Deleting pod "simpletest.rc-pzksw" in namespace "gc-5639"
  Sep 11 00:20:21.293: INFO: Deleting pod "simpletest.rc-qftpz" in namespace "gc-5639"
  Sep 11 00:20:21.312: INFO: Deleting pod "simpletest.rc-qgv4s" in namespace "gc-5639"
  Sep 11 00:20:21.337: INFO: Deleting pod "simpletest.rc-qwlzq" in namespace "gc-5639"
  Sep 11 00:20:21.368: INFO: Deleting pod "simpletest.rc-rr8xn" in namespace "gc-5639"
  Sep 11 00:20:21.395: INFO: Deleting pod "simpletest.rc-rswwv" in namespace "gc-5639"
  Sep 11 00:20:21.428: INFO: Deleting pod "simpletest.rc-rw42r" in namespace "gc-5639"
  Sep 11 00:20:21.467: INFO: Deleting pod "simpletest.rc-smkjf" in namespace "gc-5639"
  Sep 11 00:20:21.486: INFO: Deleting pod "simpletest.rc-sp8v7" in namespace "gc-5639"
  Sep 11 00:20:21.511: INFO: Deleting pod "simpletest.rc-stgkh" in namespace "gc-5639"
  Sep 11 00:20:21.532: INFO: Deleting pod "simpletest.rc-stng9" in namespace "gc-5639"
  Sep 11 00:20:21.550: INFO: Deleting pod "simpletest.rc-t46gk" in namespace "gc-5639"
  Sep 11 00:20:21.615: INFO: Deleting pod "simpletest.rc-tn999" in namespace "gc-5639"
  Sep 11 00:20:21.640: INFO: Deleting pod "simpletest.rc-tq777" in namespace "gc-5639"
  Sep 11 00:20:21.695: INFO: Deleting pod "simpletest.rc-tsw7d" in namespace "gc-5639"
  Sep 11 00:20:21.724: INFO: Deleting pod "simpletest.rc-v6ksj" in namespace "gc-5639"
  Sep 11 00:20:21.764: INFO: Deleting pod "simpletest.rc-v7khk" in namespace "gc-5639"
  Sep 11 00:20:21.798: INFO: Deleting pod "simpletest.rc-vldmz" in namespace "gc-5639"
  Sep 11 00:20:21.844: INFO: Deleting pod "simpletest.rc-vm2vn" in namespace "gc-5639"
  Sep 11 00:20:21.878: INFO: Deleting pod "simpletest.rc-vvtwr" in namespace "gc-5639"
  Sep 11 00:20:21.904: INFO: Deleting pod "simpletest.rc-whhrr" in namespace "gc-5639"
  Sep 11 00:20:21.941: INFO: Deleting pod "simpletest.rc-x5ztr" in namespace "gc-5639"
  Sep 11 00:20:22.029: INFO: Deleting pod "simpletest.rc-xdv9n" in namespace "gc-5639"
  Sep 11 00:20:22.065: INFO: Deleting pod "simpletest.rc-xfmdh" in namespace "gc-5639"
  Sep 11 00:20:22.094: INFO: Deleting pod "simpletest.rc-xks2f" in namespace "gc-5639"
  Sep 11 00:20:22.151: INFO: Deleting pod "simpletest.rc-xmjmp" in namespace "gc-5639"
  Sep 11 00:20:22.180: INFO: Deleting pod "simpletest.rc-xtl44" in namespace "gc-5639"
  Sep 11 00:20:22.214: INFO: Deleting pod "simpletest.rc-xv2dt" in namespace "gc-5639"
  Sep 11 00:20:22.251: INFO: Deleting pod "simpletest.rc-xw8vn" in namespace "gc-5639"
  Sep 11 00:20:22.270: INFO: Deleting pod "simpletest.rc-z2dft" in namespace "gc-5639"
  Sep 11 00:20:22.296: INFO: Deleting pod "simpletest.rc-z82p9" in namespace "gc-5639"
  Sep 11 00:20:22.331: INFO: Deleting pod "simpletest.rc-z8z4w" in namespace "gc-5639"
  Sep 11 00:20:22.371: INFO: Deleting pod "simpletest.rc-zbbms" in namespace "gc-5639"
  Sep 11 00:20:22.426: INFO: Deleting pod "simpletest.rc-zvx82" in namespace "gc-5639"
  Sep 11 00:20:22.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5639" for this suite. @ 09/11/23 00:20:22.485
• [45.845 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/11/23 00:20:22.527
  Sep 11 00:20:22.527: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:20:22.528
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:20:22.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:20:22.63
  STEP: Creating configMap with name projected-configmap-test-volume-map-5d3a752d-1fa4-49c7-af03-860d796c077d @ 09/11/23 00:20:22.639
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:20:22.651
  STEP: Saw pod success @ 09/11/23 00:20:32.716
  Sep 11 00:20:32.721: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-41a0a80e-a71a-4c77-b51b-9d9fe254fbcb container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:20:32.748
  Sep 11 00:20:32.783: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3091" for this suite. @ 09/11/23 00:20:32.79
• [10.272 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/11/23 00:20:32.799
  Sep 11 00:20:32.799: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:20:32.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:20:32.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:20:32.827
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/11/23 00:20:32.83
  STEP: Saw pod success @ 09/11/23 00:20:36.865
  Sep 11 00:20:36.878: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-094ea000-44be-4729-a6a1-e44c1f10da47 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:20:36.887
  Sep 11 00:20:36.903: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6698" for this suite. @ 09/11/23 00:20:36.915
• [4.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/11/23 00:20:36.926
  Sep 11 00:20:36.926: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:20:36.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:20:36.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:20:36.951
  STEP: Creating Pod @ 09/11/23 00:20:36.954
  STEP: Reading file content from the nginx-container @ 09/11/23 00:20:38.98
  Sep 11 00:20:38.981: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-2159 PodName:pod-sharedvolume-a0926b19-5cc4-4739-8540-22a1745ec7c2 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:20:38.981: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:20:38.982: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:20:38.982: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-2159/pods/pod-sharedvolume-a0926b19-5cc4-4739-8540-22a1745ec7c2/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  Sep 11 00:20:39.085: INFO: Exec stderr: ""
  Sep 11 00:20:39.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2159" for this suite. @ 09/11/23 00:20:39.091
• [2.172 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/11/23 00:20:39.099
  Sep 11 00:20:39.099: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename controllerrevisions @ 09/11/23 00:20:39.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:20:39.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:20:39.123
  STEP: Creating DaemonSet "e2e-zmfv2-daemon-set" @ 09/11/23 00:20:39.15
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 00:20:39.158
  Sep 11 00:20:39.177: INFO: Number of nodes with available pods controlled by daemonset e2e-zmfv2-daemon-set: 0
  Sep 11 00:20:39.177: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:20:40.193: INFO: Number of nodes with available pods controlled by daemonset e2e-zmfv2-daemon-set: 0
  Sep 11 00:20:40.193: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:20:41.188: INFO: Number of nodes with available pods controlled by daemonset e2e-zmfv2-daemon-set: 2
  Sep 11 00:20:41.189: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  Sep 11 00:20:42.190: INFO: Number of nodes with available pods controlled by daemonset e2e-zmfv2-daemon-set: 4
  Sep 11 00:20:42.190: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset e2e-zmfv2-daemon-set
  STEP: Confirm DaemonSet "e2e-zmfv2-daemon-set" successfully created with "daemonset-name=e2e-zmfv2-daemon-set" label @ 09/11/23 00:20:42.193
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zmfv2-daemon-set" @ 09/11/23 00:20:42.201
  Sep 11 00:20:42.206: INFO: Located ControllerRevision: "e2e-zmfv2-daemon-set-79d57bf95d"
  STEP: Patching ControllerRevision "e2e-zmfv2-daemon-set-79d57bf95d" @ 09/11/23 00:20:42.209
  Sep 11 00:20:42.217: INFO: e2e-zmfv2-daemon-set-79d57bf95d has been patched
  STEP: Create a new ControllerRevision @ 09/11/23 00:20:42.217
  Sep 11 00:20:42.223: INFO: Created ControllerRevision: e2e-zmfv2-daemon-set-5b746554cb
  STEP: Confirm that there are two ControllerRevisions @ 09/11/23 00:20:42.223
  Sep 11 00:20:42.223: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 00:20:42.227: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zmfv2-daemon-set-79d57bf95d" @ 09/11/23 00:20:42.227
  STEP: Confirm that there is only one ControllerRevision @ 09/11/23 00:20:42.234
  Sep 11 00:20:42.235: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 00:20:42.238: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zmfv2-daemon-set-5b746554cb" @ 09/11/23 00:20:42.242
  Sep 11 00:20:42.251: INFO: e2e-zmfv2-daemon-set-5b746554cb has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/11/23 00:20:42.251
  W0911 00:20:42.263353      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/11/23 00:20:42.263
  Sep 11 00:20:42.263: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 00:20:43.269: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 00:20:43.275: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zmfv2-daemon-set-5b746554cb=updated" @ 09/11/23 00:20:43.275
  STEP: Confirm that there is only one ControllerRevision @ 09/11/23 00:20:43.288
  Sep 11 00:20:43.288: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 11 00:20:43.295: INFO: Found 1 ControllerRevisions
  Sep 11 00:20:43.301: INFO: ControllerRevision "e2e-zmfv2-daemon-set-7c7fc4c745" has revision 3
  STEP: Deleting DaemonSet "e2e-zmfv2-daemon-set" @ 09/11/23 00:20:43.306
  STEP: deleting DaemonSet.extensions e2e-zmfv2-daemon-set in namespace controllerrevisions-4563, will wait for the garbage collector to delete the pods @ 09/11/23 00:20:43.307
  Sep 11 00:20:43.374: INFO: Deleting DaemonSet.extensions e2e-zmfv2-daemon-set took: 8.816364ms
  Sep 11 00:20:43.475: INFO: Terminating DaemonSet.extensions e2e-zmfv2-daemon-set pods took: 101.35104ms
  Sep 11 00:20:45.279: INFO: Number of nodes with available pods controlled by daemonset e2e-zmfv2-daemon-set: 0
  Sep 11 00:20:45.280: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zmfv2-daemon-set
  Sep 11 00:20:45.283: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"98269"},"items":null}

  Sep 11 00:20:45.286: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"98269"},"items":null}

  Sep 11 00:20:45.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-4563" for this suite. @ 09/11/23 00:20:45.307
• [6.216 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/11/23 00:20:45.315
  Sep 11 00:20:45.315: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 00:20:45.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:20:45.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:20:45.339
  STEP: Performing setup for networking test in namespace pod-network-test-9971 @ 09/11/23 00:20:45.342
  STEP: creating a selector @ 09/11/23 00:20:45.343
  STEP: Creating the service pods in kubernetes @ 09/11/23 00:20:45.343
  Sep 11 00:20:45.343: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/11/23 00:21:07.555
  Sep 11 00:21:09.660: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 00:21:09.660: INFO: Breadth first check of 10.42.0.81 on host 172.31.10.18...
  Sep 11 00:21:09.663: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.185:9080/dial?request=hostname&protocol=http&host=10.42.0.81&port=8083&tries=1'] Namespace:pod-network-test-9971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:21:09.663: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:21:09.664: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:21:09.664: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 00:21:09.789: INFO: Waiting for responses: map[]
  Sep 11 00:21:09.790: INFO: reached 10.42.0.81 after 0/1 tries
  Sep 11 00:21:09.790: INFO: Breadth first check of 10.42.2.96 on host 172.31.14.171...
  Sep 11 00:21:09.800: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.185:9080/dial?request=hostname&protocol=http&host=10.42.2.96&port=8083&tries=1'] Namespace:pod-network-test-9971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:21:09.801: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:21:09.802: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:21:09.802: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.96%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 00:21:09.909: INFO: Waiting for responses: map[]
  Sep 11 00:21:09.909: INFO: reached 10.42.2.96 after 0/1 tries
  Sep 11 00:21:09.909: INFO: Breadth first check of 10.42.1.86 on host 172.31.15.132...
  Sep 11 00:21:09.913: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.185:9080/dial?request=hostname&protocol=http&host=10.42.1.86&port=8083&tries=1'] Namespace:pod-network-test-9971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:21:09.913: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:21:09.913: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:21:09.913: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.86%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 00:21:10.006: INFO: Waiting for responses: map[]
  Sep 11 00:21:10.007: INFO: reached 10.42.1.86 after 0/1 tries
  Sep 11 00:21:10.007: INFO: Breadth first check of 10.42.3.184 on host 172.31.8.29...
  Sep 11 00:21:10.012: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.185:9080/dial?request=hostname&protocol=http&host=10.42.3.184&port=8083&tries=1'] Namespace:pod-network-test-9971 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:21:10.012: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:21:10.013: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:21:10.013: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9971/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.185%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.184%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 00:21:10.102: INFO: Waiting for responses: map[]
  Sep 11 00:21:10.102: INFO: reached 10.42.3.184 after 0/1 tries
  Sep 11 00:21:10.103: INFO: Going to retry 0 out of 4 pods....
  Sep 11 00:21:10.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9971" for this suite. @ 09/11/23 00:21:10.111
• [24.803 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/11/23 00:21:10.119
  Sep 11 00:21:10.119: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:21:10.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:10.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:10.144
  STEP: Creating configMap with name configmap-test-volume-map-a4e9b295-6d77-4b90-b742-4c4b36b5b9dd @ 09/11/23 00:21:10.147
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:21:10.199
  STEP: Saw pod success @ 09/11/23 00:21:14.227
  Sep 11 00:21:14.230: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-7141b54f-c76a-44e4-b8cf-f4a2bd7e4dac container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:21:14.238
  Sep 11 00:21:14.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-662" for this suite. @ 09/11/23 00:21:14.259
• [4.151 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/11/23 00:21:14.27
  Sep 11 00:21:14.270: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 00:21:14.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:14.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:14.292
  Sep 11 00:21:14.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:21:14.851: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6100" for this suite. @ 09/11/23 00:21:14.868
• [0.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/11/23 00:21:14.889
  Sep 11 00:21:14.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:21:14.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:14.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:14.917
  STEP: Setting up server cert @ 09/11/23 00:21:14.953
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:21:15.392
  STEP: Deploying the webhook pod @ 09/11/23 00:21:15.434
  STEP: Wait for the deployment to be ready @ 09/11/23 00:21:15.483
  Sep 11 00:21:15.499: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 09/11/23 00:21:17.511
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:21:17.523
  Sep 11 00:21:18.525: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/11/23 00:21:18.532
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 00:21:18.557
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/11/23 00:21:18.574
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 00:21:18.587
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/11/23 00:21:18.603
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/11/23 00:21:18.612
  Sep 11 00:21:18.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1714" for this suite. @ 09/11/23 00:21:18.683
  STEP: Destroying namespace "webhook-markers-75" for this suite. @ 09/11/23 00:21:18.699
• [3.824 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/11/23 00:21:18.716
  Sep 11 00:21:18.716: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:21:18.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:18.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:18.739
  STEP: creating service nodeport-test with type=NodePort in namespace services-4484 @ 09/11/23 00:21:18.743
  STEP: creating replication controller nodeport-test in namespace services-4484 @ 09/11/23 00:21:18.759
  I0911 00:21:18.770110      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-4484, replica count: 2
  I0911 00:21:21.820964      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 00:21:21.821: INFO: Creating new exec pod
  Sep 11 00:21:24.877: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 11 00:21:25.085: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:25.085: INFO: stdout: ""
  Sep 11 00:21:26.087: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 11 00:21:26.278: INFO: stderr: "+ nc -v -t -w 2 nodeport-test 80\n+ echo hostName\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:26.278: INFO: stdout: "nodeport-test-8fnp6"
  Sep 11 00:21:26.279: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:26.516: INFO: stderr: "+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep 11 00:21:26.516: INFO: stdout: ""
  Sep 11 00:21:27.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:27.734: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:27.734: INFO: stdout: ""
  Sep 11 00:21:28.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:28.688: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:28.688: INFO: stdout: ""
  Sep 11 00:21:29.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:29.708: INFO: stderr: "+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  Sep 11 00:21:29.709: INFO: stdout: ""
  Sep 11 00:21:30.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:30.716: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:30.716: INFO: stdout: ""
  Sep 11 00:21:31.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.58.103 80'
  Sep 11 00:21:31.693: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.58.103 80\nConnection to 10.43.58.103 80 port [tcp/http] succeeded!\n"
  Sep 11 00:21:31.693: INFO: stdout: "nodeport-test-8fnp6"
  Sep 11 00:21:31.693: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 30264'
  Sep 11 00:21:31.919: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.132 30264\nConnection to 172.31.15.132 30264 port [tcp/*] succeeded!\n"
  Sep 11 00:21:31.919: INFO: stdout: ""
  Sep 11 00:21:32.919: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 30264'
  Sep 11 00:21:33.085: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.132 30264\nConnection to 172.31.15.132 30264 port [tcp/*] succeeded!\n"
  Sep 11 00:21:33.085: INFO: stdout: ""
  Sep 11 00:21:33.920: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 30264'
  Sep 11 00:21:34.089: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.132 30264\nConnection to 172.31.15.132 30264 port [tcp/*] succeeded!\n"
  Sep 11 00:21:34.089: INFO: stdout: "nodeport-test-fx5gn"
  Sep 11 00:21:34.089: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4484 exec execpodbqj8f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.171 30264'
  Sep 11 00:21:34.314: INFO: stderr: "+ nc -v -t -w 2 172.31.14.171 30264\nConnection to 172.31.14.171 30264 port [tcp/*] succeeded!\n+ echo hostName\n"
  Sep 11 00:21:34.314: INFO: stdout: "nodeport-test-fx5gn"
  Sep 11 00:21:34.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4484" for this suite. @ 09/11/23 00:21:34.32
• [15.611 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/11/23 00:21:34.327
  Sep 11 00:21:34.327: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:21:34.328
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:34.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:34.35
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/11/23 00:21:34.352
  STEP: Saw pod success @ 09/11/23 00:21:38.383
  Sep 11 00:21:38.387: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-5ded6fc2-0316-4626-a8da-a5f78e92d2d4 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:21:38.396
  Sep 11 00:21:38.418: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1883" for this suite. @ 09/11/23 00:21:38.428
• [4.110 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/11/23 00:21:38.439
  Sep 11 00:21:38.439: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 00:21:38.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:38.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:38.469
  STEP: create the rc @ 09/11/23 00:21:38.479
  W0911 00:21:38.485899      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/11/23 00:21:45.184
  STEP: wait for the rc to be deleted @ 09/11/23 00:21:45.235
  Sep 11 00:21:46.450: INFO: 88 pods remaining
  Sep 11 00:21:46.451: INFO: 83 pods has nil DeletionTimestamp
  Sep 11 00:21:46.451: INFO: 
  Sep 11 00:21:47.260: INFO: 70 pods remaining
  Sep 11 00:21:47.260: INFO: 70 pods has nil DeletionTimestamp
  Sep 11 00:21:47.260: INFO: 
  Sep 11 00:21:49.129: INFO: 60 pods remaining
  Sep 11 00:21:49.135: INFO: 51 pods has nil DeletionTimestamp
  Sep 11 00:21:49.135: INFO: 
  Sep 11 00:21:49.259: INFO: 40 pods remaining
  Sep 11 00:21:49.259: INFO: 40 pods has nil DeletionTimestamp
  Sep 11 00:21:49.259: INFO: 
  Sep 11 00:21:50.299: INFO: 31 pods remaining
  Sep 11 00:21:50.300: INFO: 30 pods has nil DeletionTimestamp
  Sep 11 00:21:50.300: INFO: 
  Sep 11 00:21:51.275: INFO: 20 pods remaining
  Sep 11 00:21:51.275: INFO: 20 pods has nil DeletionTimestamp
  Sep 11 00:21:51.276: INFO: 
  STEP: Gathering metrics @ 09/11/23 00:21:52.259
  Sep 11 00:21:52.705: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 00:21:52.705: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2788" for this suite. @ 09/11/23 00:21:52.719
• [14.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/11/23 00:21:52.729
  Sep 11 00:21:52.729: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:21:52.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:52.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:52.764
  Sep 11 00:21:52.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3185" for this suite. @ 09/11/23 00:21:52.88
• [0.159 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/11/23 00:21:52.889
  Sep 11 00:21:52.889: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:21:52.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:21:52.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:21:52.921
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/11/23 00:21:52.933
  STEP: Saw pod success @ 09/11/23 00:22:05.032
  Sep 11 00:22:05.036: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-c8201fd0-fa6a-4f4e-ab22-cf52a4225713 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:22:05.046
  Sep 11 00:22:05.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-993" for this suite. @ 09/11/23 00:22:05.072
• [12.272 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/11/23 00:22:05.163
  Sep 11 00:22:05.164: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 00:22:05.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:22:05.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:22:05.197
  Sep 11 00:22:05.243: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4840" for this suite. @ 09/11/23 00:22:05.264
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/11/23 00:22:05.284
  Sep 11 00:22:05.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:22:05.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:22:05.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:22:05.346
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:22:05.35
  STEP: Saw pod success @ 09/11/23 00:22:09.399
  Sep 11 00:22:09.404: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-37a7293d-aa76-469d-88d0-dfcd4430152c container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:22:09.411
  Sep 11 00:22:09.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5725" for this suite. @ 09/11/23 00:22:09.435
• [4.160 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/11/23 00:22:09.445
  Sep 11 00:22:09.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 00:22:09.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:22:09.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:22:09.491
  Sep 11 00:22:09.494: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 00:22:09.505: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 00:22:09.509: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-18.us-east-2.compute.internal before test
  Sep 11 00:22:09.524: INFO: cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:52 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.524: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.524: INFO: etcd-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:26 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.524: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:22:09.524: INFO: helm-install-rke2-canal-wfr9f from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-coredns-rbzhs from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-ingress-nginx-f6vgj from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-metrics-server-tlnph from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-snapshot-controller-4gnfg from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-snapshot-controller-crd-m4bzm from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: helm-install-rke2-snapshot-validation-webhook-g98tk from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:22:09.525: INFO: kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:45 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: kube-proxy-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:10:11 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-canal-d7lfd from kube-system started at 2023-09-10 18:10:24 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-coredns-rke2-coredns-67f86d96c-ncf6n from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629 from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container autoscaler ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-ingress-nginx-controller-479nb from kube-system started at 2023-09-10 18:11:44 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-metrics-server-c6fb46b64-jjcx6 from kube-system started at 2023-09-10 18:11:25 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-snapshot-controller-59cc9cd8f4-qxkng from kube-system started at 2023-09-10 18:11:26 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: rke2-snapshot-validation-webhook-54c5989b65-lbplz from kube-system started at 2023-09-10 18:11:30 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.525: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:22:09.525: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-171.us-east-2.compute.internal before test
  Sep 11 00:22:09.540: INFO: cloud-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.540: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.540: INFO: etcd-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.541: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:22:09.541: INFO: kube-apiserver-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:13:31 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.541: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:22:09.541: INFO: kube-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.541: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.541: INFO: kube-proxy-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:59 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.541: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:22:09.541: INFO: kube-scheduler-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.541: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:22:09.541: INFO: rke2-canal-zz74w from kube-system started at 2023-09-10 18:13:51 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.542: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:22:09.542: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:22:09.542: INFO: rke2-ingress-nginx-controller-9ws57 from kube-system started at 2023-09-10 18:15:34 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.542: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:22:09.542: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-rbrkn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.542: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:22:09.542: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:22:09.542: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-132.us-east-2.compute.internal before test
  Sep 11 00:22:09.553: INFO: cloud-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.553: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: etcd-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:40 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: kube-apiserver-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: kube-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: kube-proxy-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:04 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: kube-scheduler-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: rke2-canal-vgq26 from kube-system started at 2023-09-10 18:13:00 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container calico-node ready: true, restart count 2
  Sep 11 00:22:09.554: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: rke2-ingress-nginx-controller-jtphg from kube-system started at 2023-09-10 18:14:53 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-llrqn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.554: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:22:09.554: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-29.us-east-2.compute.internal before test
  Sep 11 00:22:09.565: INFO: kube-proxy-ip-172-31-8-29.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:03 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.565: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:22:09.566: INFO: rke2-canal-sf5n2 from kube-system started at 2023-09-10 18:14:02 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.566: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:22:09.566: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:22:09.566: INFO: rke2-coredns-rke2-coredns-67f86d96c-c5vvl from kube-system started at 2023-09-10 18:14:42 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.566: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 00:22:09.566: INFO: rke2-ingress-nginx-controller-mlgjl from kube-system started at 2023-09-10 18:14:42 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.566: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:22:09.566: INFO: test-runtimeclass-runtimeclass-4840-preconfigured-handler-4mkdk from runtimeclass-4840 started at 2023-09-11 00:22:05 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.566: INFO: 	Container test ready: false, restart count 0
  Sep 11 00:22:09.566: INFO: sonobuoy from sonobuoy started at 2023-09-10 23:38:16 +0000 UTC (1 container statuses recorded)
  Sep 11 00:22:09.567: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 00:22:09.567: INFO: sonobuoy-e2e-job-e21707e8889b4c9c from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.567: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 00:22:09.567: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:22:09.567: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-955v9 from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:22:09.567: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:22:09.567: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 00:22:09.567
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 00:22:13.602
  STEP: Trying to apply a random label on the found node. @ 09/11/23 00:22:13.62
  STEP: verifying the node has the label kubernetes.io/e2e-d60c1f38-e55f-4496-9122-21f42ba3c0db 95 @ 09/11/23 00:22:13.653
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/11/23 00:22:13.657
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.8.29 on the node which pod4 resides and expect not scheduled @ 09/11/23 00:22:17.706
  STEP: removing the label kubernetes.io/e2e-d60c1f38-e55f-4496-9122-21f42ba3c0db off the node ip-172-31-8-29.us-east-2.compute.internal @ 09/11/23 00:27:17.722
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d60c1f38-e55f-4496-9122-21f42ba3c0db @ 09/11/23 00:27:17.742
  Sep 11 00:27:17.748: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-5191" for this suite. @ 09/11/23 00:27:17.762
• [308.337 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/11/23 00:27:17.783
  Sep 11 00:27:17.783: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:27:17.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:17.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:17.828
  STEP: Creating projection with secret that has name projected-secret-test-map-9e64e217-16a3-4413-9420-7bebfd2fa411 @ 09/11/23 00:27:17.831
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:27:17.836
  STEP: Saw pod success @ 09/11/23 00:27:21.86
  Sep 11 00:27:21.865: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-339c077e-d276-4244-85c3-a20c9620f836 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:27:21.909
  Sep 11 00:27:21.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9403" for this suite. @ 09/11/23 00:27:21.972
• [4.209 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/11/23 00:27:21.992
  Sep 11 00:27:21.992: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:27:21.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:22.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:22.045
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/11/23 00:27:22.048
  STEP: Saw pod success @ 09/11/23 00:27:26.102
  Sep 11 00:27:26.105: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-075955d2-ee45-4ed5-9dda-84f021f2ba3b container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:27:26.112
  Sep 11 00:27:26.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-183" for this suite. @ 09/11/23 00:27:26.131
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/11/23 00:27:26.139
  Sep 11 00:27:26.139: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename proxy @ 09/11/23 00:27:26.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:26.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:26.163
  Sep 11 00:27:26.165: INFO: Creating pod...
  Sep 11 00:27:28.189: INFO: Creating service...
  Sep 11 00:27:28.204: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/DELETE
  Sep 11 00:27:28.215: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 00:27:28.215: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/GET
  Sep 11 00:27:28.222: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 11 00:27:28.222: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/HEAD
  Sep 11 00:27:28.228: INFO: http.Client request:HEAD | StatusCode:200
  Sep 11 00:27:28.228: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 11 00:27:28.246: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 00:27:28.246: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/PATCH
  Sep 11 00:27:28.253: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 00:27:28.254: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/POST
  Sep 11 00:27:28.258: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 00:27:28.258: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/pods/agnhost/proxy/some/path/with/PUT
  Sep 11 00:27:28.263: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 00:27:28.263: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/DELETE
  Sep 11 00:27:28.268: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 00:27:28.269: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/GET
  Sep 11 00:27:28.274: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 11 00:27:28.274: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/HEAD
  Sep 11 00:27:28.280: INFO: http.Client request:HEAD | StatusCode:200
  Sep 11 00:27:28.280: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/OPTIONS
  Sep 11 00:27:28.286: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 00:27:28.286: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/PATCH
  Sep 11 00:27:28.291: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 00:27:28.291: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/POST
  Sep 11 00:27:28.301: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 00:27:28.301: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8394/services/test-service/proxy/some/path/with/PUT
  Sep 11 00:27:28.307: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 00:27:28.307: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8394" for this suite. @ 09/11/23 00:27:28.313
• [2.181 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/11/23 00:27:28.322
  Sep 11 00:27:28.322: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename certificates @ 09/11/23 00:27:28.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:28.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:28.35
  STEP: getting /apis @ 09/11/23 00:27:29.168
  STEP: getting /apis/certificates.k8s.io @ 09/11/23 00:27:29.173
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/11/23 00:27:29.174
  STEP: creating @ 09/11/23 00:27:29.175
  STEP: getting @ 09/11/23 00:27:29.195
  STEP: listing @ 09/11/23 00:27:29.197
  STEP: watching @ 09/11/23 00:27:29.201
  Sep 11 00:27:29.201: INFO: starting watch
  STEP: patching @ 09/11/23 00:27:29.202
  STEP: updating @ 09/11/23 00:27:29.208
  Sep 11 00:27:29.214: INFO: waiting for watch events with expected annotations
  Sep 11 00:27:29.215: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/11/23 00:27:29.215
  STEP: patching /approval @ 09/11/23 00:27:29.22
  STEP: updating /approval @ 09/11/23 00:27:29.227
  STEP: getting /status @ 09/11/23 00:27:29.237
  STEP: patching /status @ 09/11/23 00:27:29.241
  STEP: updating /status @ 09/11/23 00:27:29.248
  STEP: deleting @ 09/11/23 00:27:29.258
  STEP: deleting a collection @ 09/11/23 00:27:29.276
  Sep 11 00:27:29.294: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-6087" for this suite. @ 09/11/23 00:27:29.299
• [0.984 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/11/23 00:27:29.306
  Sep 11 00:27:29.306: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename watch @ 09/11/23 00:27:29.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:29.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:29.328
  STEP: getting a starting resourceVersion @ 09/11/23 00:27:29.331
  STEP: starting a background goroutine to produce watch events @ 09/11/23 00:27:29.334
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/11/23 00:27:29.334
  Sep 11 00:27:32.125: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4484" for this suite. @ 09/11/23 00:27:32.166
• [2.912 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/11/23 00:27:32.219
  Sep 11 00:27:32.219: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:27:32.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:32.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:32.243
  STEP: Creating secret with name projected-secret-test-73118b61-8f1c-4e4b-9fc6-51e00f3678a0 @ 09/11/23 00:27:32.247
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:27:32.254
  STEP: Saw pod success @ 09/11/23 00:27:36.278
  Sep 11 00:27:36.281: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-40789cd3-f84d-41e3-9990-c2b4f80b3e17 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:27:36.288
  Sep 11 00:27:36.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5045" for this suite. @ 09/11/23 00:27:36.31
• [4.101 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/11/23 00:27:36.321
  Sep 11 00:27:36.321: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:27:36.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:36.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:36.347
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 00:27:36.349
  Sep 11 00:27:36.349: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3798 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 11 00:27:36.433: INFO: stderr: ""
  Sep 11 00:27:36.433: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/11/23 00:27:36.433
  Sep 11 00:27:36.434: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3798 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep 11 00:27:36.550: INFO: stderr: ""
  Sep 11 00:27:36.550: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 00:27:36.55
  Sep 11 00:27:36.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3798 delete pods e2e-test-httpd-pod'
  Sep 11 00:27:37.735: INFO: stderr: ""
  Sep 11 00:27:37.735: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 00:27:37.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3798" for this suite. @ 09/11/23 00:27:37.74
• [1.425 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/11/23 00:27:37.747
  Sep 11 00:27:37.747: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 00:27:37.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:37.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:37.768
  Sep 11 00:27:37.770: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  W0911 00:27:40.309159      21 warnings.go:70] unknown field "alpha"
  W0911 00:27:40.309184      21 warnings.go:70] unknown field "beta"
  W0911 00:27:40.309193      21 warnings.go:70] unknown field "delta"
  W0911 00:27:40.309199      21 warnings.go:70] unknown field "epsilon"
  W0911 00:27:40.309204      21 warnings.go:70] unknown field "gamma"
  Sep 11 00:27:40.840: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7715" for this suite. @ 09/11/23 00:27:40.878
• [3.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/11/23 00:27:40.894
  Sep 11 00:27:40.894: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:27:40.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:27:40.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:27:40.925
  STEP: Creating configMap with name configmap-test-upd-51c971db-8037-464a-bd11-4953bcdf5b62 @ 09/11/23 00:27:40.933
  STEP: Creating the pod @ 09/11/23 00:27:40.94
  STEP: Updating configmap configmap-test-upd-51c971db-8037-464a-bd11-4953bcdf5b62 @ 09/11/23 00:27:45.02
  STEP: waiting to observe update in volume @ 09/11/23 00:27:45.025
  Sep 11 00:28:25.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4025" for this suite. @ 09/11/23 00:28:25.587
• [44.703 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/11/23 00:28:25.599
  Sep 11 00:28:25.599: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 00:28:25.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:25.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:25.627
  STEP: Waiting for pod completion @ 09/11/23 00:28:25.641
  Sep 11 00:28:29.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1686" for this suite. @ 09/11/23 00:28:29.673
• [4.083 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/11/23 00:28:29.682
  Sep 11 00:28:29.682: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/11/23 00:28:29.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:29.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:29.703
  STEP: mirroring a new custom Endpoint @ 09/11/23 00:28:29.716
  Sep 11 00:28:29.733: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/11/23 00:28:31.738
  STEP: mirroring deletion of a custom Endpoint @ 09/11/23 00:28:31.752
  Sep 11 00:28:31.768: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Sep 11 00:28:33.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-877" for this suite. @ 09/11/23 00:28:33.785
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/11/23 00:28:33.795
  Sep 11 00:28:33.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 00:28:33.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:33.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:33.83
  STEP: Updating Namespace "namespaces-1845" @ 09/11/23 00:28:33.833
  Sep 11 00:28:33.845: INFO: Namespace "namespaces-1845" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"180666b6-9620-4ecf-b8e5-e8d285cb1913", "kubernetes.io/metadata.name":"namespaces-1845", "namespaces-1845":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 11 00:28:33.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1845" for this suite. @ 09/11/23 00:28:33.852
• [0.065 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/11/23 00:28:33.862
  Sep 11 00:28:33.862: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 00:28:33.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:33.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:33.886
  STEP: creating a ReplicationController @ 09/11/23 00:28:33.892
  STEP: waiting for RC to be added @ 09/11/23 00:28:33.899
  STEP: waiting for available Replicas @ 09/11/23 00:28:33.899
  STEP: patching ReplicationController @ 09/11/23 00:28:35.905
  STEP: waiting for RC to be modified @ 09/11/23 00:28:35.919
  STEP: patching ReplicationController status @ 09/11/23 00:28:35.919
  STEP: waiting for RC to be modified @ 09/11/23 00:28:35.93
  STEP: waiting for available Replicas @ 09/11/23 00:28:35.93
  STEP: fetching ReplicationController status @ 09/11/23 00:28:35.942
  STEP: patching ReplicationController scale @ 09/11/23 00:28:35.946
  STEP: waiting for RC to be modified @ 09/11/23 00:28:35.953
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/11/23 00:28:35.954
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/11/23 00:28:38.016
  STEP: updating ReplicationController status @ 09/11/23 00:28:38.02
  STEP: waiting for RC to be modified @ 09/11/23 00:28:38.028
  STEP: listing all ReplicationControllers @ 09/11/23 00:28:38.028
  STEP: checking that ReplicationController has expected values @ 09/11/23 00:28:38.034
  STEP: deleting ReplicationControllers by collection @ 09/11/23 00:28:38.035
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/11/23 00:28:38.044
  Sep 11 00:28:38.102: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 00:28:38.103558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-7800" for this suite. @ 09/11/23 00:28:38.108
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/11/23 00:28:38.116
  Sep 11 00:28:38.116: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption @ 09/11/23 00:28:38.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:38.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:38.14
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:28:38.148
  E0911 00:28:39.103787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:40.104398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 09/11/23 00:28:40.157
  STEP: Waiting for all pods to be running @ 09/11/23 00:28:40.168
  Sep 11 00:28:40.174: INFO: running pods: 0 < 1
  E0911 00:28:41.104792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:42.104769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/11/23 00:28:42.194
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:28:42.235
  STEP: Patching PodDisruptionBudget status @ 09/11/23 00:28:42.261
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:28:42.292
  Sep 11 00:28:42.310: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-366" for this suite. @ 09/11/23 00:28:42.319
• [4.222 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/11/23 00:28:42.339
  Sep 11 00:28:42.339: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename tables @ 09/11/23 00:28:42.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:42.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:42.385
  Sep 11 00:28:42.416: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1703" for this suite. @ 09/11/23 00:28:42.426
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/11/23 00:28:42.44
  Sep 11 00:28:42.440: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:28:42.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:42.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:42.487
  STEP: Creating a pod to test downward api env vars @ 09/11/23 00:28:42.492
  E0911 00:28:43.105716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:44.109637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:45.109200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:46.109664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:47.109692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:48.110234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:28:48.555
  Sep 11 00:28:48.558: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downward-api-f531a414-9c4b-4f4e-87fc-01a74360dca1 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 00:28:48.566
  Sep 11 00:28:48.581: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2221" for this suite. @ 09/11/23 00:28:48.587
• [6.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/11/23 00:28:48.596
  Sep 11 00:28:48.596: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:28:48.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:48.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:48.629
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 00:28:48.632
  Sep 11 00:28:48.632: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1638 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep 11 00:28:48.742: INFO: stderr: ""
  Sep 11 00:28:48.742: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/11/23 00:28:48.742
  Sep 11 00:28:48.748: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1638 delete pods e2e-test-httpd-pod'
  E0911 00:28:49.110523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:28:49.944: INFO: stderr: ""
  Sep 11 00:28:49.944: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 00:28:49.944: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1638" for this suite. @ 09/11/23 00:28:49.949
• [1.363 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/11/23 00:28:49.96
  Sep 11 00:28:49.960: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 00:28:49.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:28:49.979
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:28:49.983
  Sep 11 00:28:50.011: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 00:28:50.110826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:51.110940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:52.111539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:53.112183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:54.112216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:55.112385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:56.112823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:57.112876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:58.113738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:28:59.113940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:00.114329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:01.114465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:02.115560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:03.115658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:04.115849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:05.116323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:06.117076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:07.117230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:08.117463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:09.117813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:10.118375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:11.118150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:12.118331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:13.118462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:14.121829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:15.120410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:16.121622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:17.121728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:18.122587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:19.123051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:20.123889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:21.123978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:22.125065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:23.125182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:24.125357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:25.125333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:26.130818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:27.131871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:28.131986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:29.132214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:30.132364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:31.132456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:32.133232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:33.133270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:34.133859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:35.134538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:36.135226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:37.136205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:38.136861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:39.137098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:40.137748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:41.137869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:42.139079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:43.139210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:44.139878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:45.140800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:46.141473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:47.141592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:48.142412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:49.142942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:29:50.069: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/11/23 00:29:50.079
  Sep 11 00:29:50.080: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/11/23 00:29:50.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:29:50.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:29:50.103
  STEP: Finding an available node @ 09/11/23 00:29:50.111
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 00:29:50.111
  E0911 00:29:50.143691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:51.144150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 00:29:52.139
  E0911 00:29:52.144626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:29:52.157: INFO: found a healthy node: ip-172-31-8-29.us-east-2.compute.internal
  E0911 00:29:53.146501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:54.147419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:55.148085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:56.148524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:57.148602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:29:58.149687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:29:58.276: INFO: pods created so far: [1 1 1]
  Sep 11 00:29:58.276: INFO: length of pods created so far: 3
  E0911 00:29:59.151254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:00.153978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:01.154549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:02.154892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:03.155549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:04.156161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:30:04.288: INFO: pods created so far: [2 2 1]
  E0911 00:30:05.156484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:06.156710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:07.156904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:08.156927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:09.157537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:10.157625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:11.158075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:30:11.289: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 00:30:11.338: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4392" for this suite. @ 09/11/23 00:30:11.466
  STEP: Destroying namespace "sched-preemption-5789" for this suite. @ 09/11/23 00:30:11.479
• [81.531 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/11/23 00:30:11.492
  Sep 11 00:30:11.492: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 00:30:11.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:30:11.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:30:11.521
  STEP: creating a ServiceAccount @ 09/11/23 00:30:11.524
  STEP: watching for the ServiceAccount to be added @ 09/11/23 00:30:11.533
  STEP: patching the ServiceAccount @ 09/11/23 00:30:11.537
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/11/23 00:30:11.545
  STEP: deleting the ServiceAccount @ 09/11/23 00:30:11.552
  Sep 11 00:30:11.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4993" for this suite. @ 09/11/23 00:30:11.571
• [0.087 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/11/23 00:30:11.581
  Sep 11 00:30:11.581: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:30:11.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:30:11.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:30:11.611
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/11/23 00:30:11.615
  E0911 00:30:12.158176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:13.158429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:14.158898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:15.159456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:30:15.645
  Sep 11 00:30:15.648: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-27c2df7a-174c-4d77-b333-3a9ddbf42fae container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:30:15.656
  Sep 11 00:30:15.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2657" for this suite. @ 09/11/23 00:30:15.675
• [4.101 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/11/23 00:30:15.682
  Sep 11 00:30:15.682: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-watch @ 09/11/23 00:30:15.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:30:15.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:30:15.707
  Sep 11 00:30:15.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:30:16.160332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:17.160773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:18.160759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 09/11/23 00:30:18.261
  Sep 11 00:30:18.335: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:18Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:18Z]] name:name1 resourceVersion:103007 uid:a270fcbf-c669-465c-a4c6-55717e0ac547] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:30:19.162004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:20.162869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:21.164640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:22.164739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:23.165096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:24.165181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:25.165311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:26.166088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:27.166190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:28.166340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 09/11/23 00:30:28.335
  Sep 11 00:30:28.345: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:28Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:28Z]] name:name2 resourceVersion:103054 uid:966e4f33-2fea-4b39-a75f-32be5cf47e7d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:30:29.167006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:30.167528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:31.167876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:32.174489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:33.169758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:34.170065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:35.170236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:36.170979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:37.171881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:38.172275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 09/11/23 00:30:38.345
  Sep 11 00:30:38.354: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:38Z]] name:name1 resourceVersion:103093 uid:a270fcbf-c669-465c-a4c6-55717e0ac547] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:30:39.172404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:40.172547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:41.172672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:42.173147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:43.173235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:44.173359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:45.173447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:46.173578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:47.173996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:48.174117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 09/11/23 00:30:48.355
  Sep 11 00:30:48.367: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:48Z]] name:name2 resourceVersion:103132 uid:966e4f33-2fea-4b39-a75f-32be5cf47e7d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:30:49.175091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:50.175971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:51.176345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:52.176442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:53.176558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:54.177199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:55.177766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:56.177857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:57.177981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:30:58.178195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 09/11/23 00:30:58.368
  Sep 11 00:30:58.377: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:18Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:38Z]] name:name1 resourceVersion:103169 uid:a270fcbf-c669-465c-a4c6-55717e0ac547] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:30:59.178296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:00.178427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:01.178686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:02.178964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:03.179946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:04.180212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:05.180578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:06.180628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:07.180787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:08.180872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 09/11/23 00:31:08.384
  Sep 11 00:31:08.406: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-11T00:30:28Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-11T00:30:48Z]] name:name2 resourceVersion:103209 uid:966e4f33-2fea-4b39-a75f-32be5cf47e7d] num:map[num1:9223372036854775807 num2:1000000]]}
  E0911 00:31:09.180994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:10.181898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:11.182194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:12.182402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:13.182573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:14.182781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:15.186402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:16.186496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:17.186791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:18.186901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:18.922: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-4262" for this suite. @ 09/11/23 00:31:18.927
• [63.257 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/11/23 00:31:18.94
  Sep 11 00:31:18.940: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:31:18.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:31:18.966
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:31:18.979
  STEP: Creating secret with name secret-test-b9c573d0-617f-4764-bb09-0ff169cf9dff @ 09/11/23 00:31:19.041
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:31:19.053
  E0911 00:31:19.187172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:20.187578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:21.188024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:22.188322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:31:23.096
  Sep 11 00:31:23.099: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-47540c58-891a-47cd-8dda-58551297d263 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:31:23.107
  Sep 11 00:31:23.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6057" for this suite. @ 09/11/23 00:31:23.128
  STEP: Destroying namespace "secret-namespace-6416" for this suite. @ 09/11/23 00:31:23.138
• [4.206 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/11/23 00:31:23.15
  Sep 11 00:31:23.150: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:31:23.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:31:23.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:31:23.178
  STEP: validating api versions @ 09/11/23 00:31:23.181
  Sep 11 00:31:23.182: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3318 api-versions'
  E0911 00:31:23.188433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:23.266: INFO: stderr: ""
  Sep 11 00:31:23.266: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsnapshot.storage.k8s.io/v1\nsnapshot.storage.k8s.io/v1beta1\nstorage.k8s.io/v1\nv1\n"
  Sep 11 00:31:23.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3318" for this suite. @ 09/11/23 00:31:23.279
• [0.135 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/11/23 00:31:23.288
  Sep 11 00:31:23.288: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename aggregator @ 09/11/23 00:31:23.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:31:23.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:31:23.311
  Sep 11 00:31:23.314: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Registering the sample API server. @ 09/11/23 00:31:23.315
  Sep 11 00:31:23.790: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 11 00:31:23.820: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0911 00:31:24.188715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:25.188957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:25.948: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:26.189715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:27.190809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:27.952: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:28.191259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:29.191465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:29.954: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:30.192398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:31.192527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:31.980: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:32.203643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:33.203763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:33.955: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:34.203922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:35.204986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:35.952: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:36.205107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:37.205193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:37.953: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:38.205396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:39.208121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:39.951: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:40.209136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:41.209271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:41.963: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:42.210182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:43.210312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:43.952: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:44.210417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:45.211415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:45.954: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:31:46.212056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:47.212175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:31:48.081: INFO: Waited 122.488167ms for the sample-apiserver to be ready to handle requests.
  E0911 00:31:48.212233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/11/23 00:31:48.634
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/11/23 00:31:48.64
  STEP: List APIServices @ 09/11/23 00:31:48.767
  Sep 11 00:31:48.779: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/11/23 00:31:48.78
  Sep 11 00:31:48.798: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/11/23 00:31:48.799
  Sep 11 00:31:48.810: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 11, 0, 31, 47, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/11/23 00:31:48.81
  Sep 11 00:31:48.815: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-11 00:31:47 +0000 UTC Passed all checks passed}
  Sep 11 00:31:48.815: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 00:31:48.815: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/11/23 00:31:48.815
  Sep 11 00:31:48.831: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-661573870" @ 09/11/23 00:31:48.831
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/11/23 00:31:48.903
  E0911 00:31:49.216858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/11/23 00:31:49.928
  STEP: Patch APIService Status @ 09/11/23 00:31:49.932
  E0911 00:31:50.221824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/11/23 00:31:50.233
  Sep 11 00:31:50.244: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-11 00:31:47 +0000 UTC Passed all checks passed}
  Sep 11 00:31:50.245: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 11 00:31:50.245: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 11 00:31:50.245: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/11/23 00:31:50.245
  STEP: Confirm that the generated APIService has been deleted @ 09/11/23 00:31:50.254
  Sep 11 00:31:50.254: INFO: Requesting list of APIServices to confirm quantity
  Sep 11 00:31:50.260: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep 11 00:31:50.260: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 11 00:31:50.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-457" for this suite. @ 09/11/23 00:31:50.465
• [27.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/11/23 00:31:50.476
  Sep 11 00:31:50.476: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:31:50.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:31:50.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:31:50.513
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:31:50.531
  E0911 00:31:51.221888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:52.222083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:53.223180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:54.224974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:55.225537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:56.225867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:57.226573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:31:58.227024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:31:58.863
  Sep 11 00:31:58.867: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-32d0fde1-6600-4715-9c67-ac18cdbbaed3 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:31:58.874
  Sep 11 00:31:58.893: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2133" for this suite. @ 09/11/23 00:31:58.898
• [8.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/11/23 00:31:58.914
  Sep 11 00:31:58.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 00:31:58.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:31:58.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:31:58.946
  Sep 11 00:31:58.955: INFO: Got root ca configmap in namespace "svcaccounts-2690"
  Sep 11 00:31:58.962: INFO: Deleted root ca configmap in namespace "svcaccounts-2690"
  E0911 00:31:59.227797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 09/11/23 00:31:59.463
  Sep 11 00:31:59.466: INFO: Recreated root ca configmap in namespace "svcaccounts-2690"
  Sep 11 00:31:59.472: INFO: Updated root ca configmap in namespace "svcaccounts-2690"
  STEP: waiting for the root ca configmap reconciled @ 09/11/23 00:31:59.972
  Sep 11 00:31:59.977: INFO: Reconciled root ca configmap in namespace "svcaccounts-2690"
  Sep 11 00:31:59.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2690" for this suite. @ 09/11/23 00:31:59.981
• [1.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/11/23 00:31:59.992
  Sep 11 00:31:59.992: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 00:31:59.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:32:00.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:32:00.035
  STEP: Create a pod @ 09/11/23 00:32:00.039
  E0911 00:32:00.228062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:01.228529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 09/11/23 00:32:02.074
  Sep 11 00:32:02.086: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 11 00:32:02.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3726" for this suite. @ 09/11/23 00:32:02.091
• [2.111 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/11/23 00:32:02.104
  Sep 11 00:32:02.104: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename discovery @ 09/11/23 00:32:02.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:32:02.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:32:02.13
  STEP: Setting up server cert @ 09/11/23 00:32:02.135
  E0911 00:32:02.229383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:32:02.661: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 11 00:32:02.662: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 11 00:32:02.662: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 11 00:32:02.662: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 11 00:32:02.662: INFO: Checking APIGroup: apps
  Sep 11 00:32:02.664: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 11 00:32:02.664: INFO: Versions found [{apps/v1 v1}]
  Sep 11 00:32:02.664: INFO: apps/v1 matches apps/v1
  Sep 11 00:32:02.664: INFO: Checking APIGroup: events.k8s.io
  Sep 11 00:32:02.666: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 11 00:32:02.666: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 11 00:32:02.666: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 11 00:32:02.666: INFO: Checking APIGroup: authentication.k8s.io
  Sep 11 00:32:02.667: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 11 00:32:02.667: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 11 00:32:02.667: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 11 00:32:02.667: INFO: Checking APIGroup: authorization.k8s.io
  Sep 11 00:32:02.668: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 11 00:32:02.668: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 11 00:32:02.668: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 11 00:32:02.668: INFO: Checking APIGroup: autoscaling
  Sep 11 00:32:02.670: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 11 00:32:02.670: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 11 00:32:02.670: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 11 00:32:02.670: INFO: Checking APIGroup: batch
  Sep 11 00:32:02.670: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 11 00:32:02.670: INFO: Versions found [{batch/v1 v1}]
  Sep 11 00:32:02.670: INFO: batch/v1 matches batch/v1
  Sep 11 00:32:02.670: INFO: Checking APIGroup: certificates.k8s.io
  Sep 11 00:32:02.671: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 11 00:32:02.671: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 11 00:32:02.671: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 11 00:32:02.671: INFO: Checking APIGroup: networking.k8s.io
  Sep 11 00:32:02.672: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 11 00:32:02.672: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 11 00:32:02.672: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 11 00:32:02.672: INFO: Checking APIGroup: policy
  Sep 11 00:32:02.673: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 11 00:32:02.673: INFO: Versions found [{policy/v1 v1}]
  Sep 11 00:32:02.673: INFO: policy/v1 matches policy/v1
  Sep 11 00:32:02.673: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 11 00:32:02.674: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 11 00:32:02.674: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 11 00:32:02.674: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 11 00:32:02.674: INFO: Checking APIGroup: storage.k8s.io
  Sep 11 00:32:02.675: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 11 00:32:02.675: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 11 00:32:02.675: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 11 00:32:02.675: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 11 00:32:02.676: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 11 00:32:02.676: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 11 00:32:02.676: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 11 00:32:02.676: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 11 00:32:02.677: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 11 00:32:02.677: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 11 00:32:02.677: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 11 00:32:02.677: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 11 00:32:02.678: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 11 00:32:02.678: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 11 00:32:02.678: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 11 00:32:02.678: INFO: Checking APIGroup: coordination.k8s.io
  Sep 11 00:32:02.679: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 11 00:32:02.679: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 11 00:32:02.679: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 11 00:32:02.679: INFO: Checking APIGroup: node.k8s.io
  Sep 11 00:32:02.680: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 11 00:32:02.680: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 11 00:32:02.680: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 11 00:32:02.680: INFO: Checking APIGroup: discovery.k8s.io
  Sep 11 00:32:02.681: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 11 00:32:02.681: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 11 00:32:02.681: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 11 00:32:02.681: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 11 00:32:02.682: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep 11 00:32:02.682: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep 11 00:32:02.682: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep 11 00:32:02.682: INFO: Checking APIGroup: crd.projectcalico.org
  Sep 11 00:32:02.683: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Sep 11 00:32:02.683: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Sep 11 00:32:02.683: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Sep 11 00:32:02.683: INFO: Checking APIGroup: helm.cattle.io
  Sep 11 00:32:02.684: INFO: PreferredVersion.GroupVersion: helm.cattle.io/v1
  Sep 11 00:32:02.684: INFO: Versions found [{helm.cattle.io/v1 v1}]
  Sep 11 00:32:02.684: INFO: helm.cattle.io/v1 matches helm.cattle.io/v1
  Sep 11 00:32:02.684: INFO: Checking APIGroup: k3s.cattle.io
  Sep 11 00:32:02.685: INFO: PreferredVersion.GroupVersion: k3s.cattle.io/v1
  Sep 11 00:32:02.685: INFO: Versions found [{k3s.cattle.io/v1 v1}]
  Sep 11 00:32:02.685: INFO: k3s.cattle.io/v1 matches k3s.cattle.io/v1
  Sep 11 00:32:02.685: INFO: Checking APIGroup: snapshot.storage.k8s.io
  Sep 11 00:32:02.686: INFO: PreferredVersion.GroupVersion: snapshot.storage.k8s.io/v1
  Sep 11 00:32:02.686: INFO: Versions found [{snapshot.storage.k8s.io/v1 v1} {snapshot.storage.k8s.io/v1beta1 v1beta1}]
  Sep 11 00:32:02.686: INFO: snapshot.storage.k8s.io/v1 matches snapshot.storage.k8s.io/v1
  Sep 11 00:32:02.686: INFO: Checking APIGroup: metrics.k8s.io
  Sep 11 00:32:02.687: INFO: PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  Sep 11 00:32:02.687: INFO: Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  Sep 11 00:32:02.687: INFO: metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  Sep 11 00:32:02.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7028" for this suite. @ 09/11/23 00:32:02.693
• [0.597 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/11/23 00:32:02.702
  Sep 11 00:32:02.702: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:32:02.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:32:02.722
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:32:02.724
  STEP: Creating a test headless service @ 09/11/23 00:32:02.727
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6173.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-6173.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/11/23 00:32:02.734
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-6173.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-6173.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/11/23 00:32:02.734
  STEP: creating a pod to probe DNS @ 09/11/23 00:32:02.734
  STEP: submitting the pod to kubernetes @ 09/11/23 00:32:02.734
  E0911 00:32:03.230461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:04.230867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 00:32:05.058
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:32:05.076
  Sep 11 00:32:05.109: INFO: DNS probes using dns-6173/dns-test-101fed7b-8f45-453d-90ad-4122f5150af5 succeeded

  Sep 11 00:32:05.109: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:32:05.115
  STEP: deleting the test headless service @ 09/11/23 00:32:05.155
  STEP: Destroying namespace "dns-6173" for this suite. @ 09/11/23 00:32:05.2
• [2.509 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/11/23 00:32:05.212
  Sep 11 00:32:05.212: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 00:32:05.213
  E0911 00:32:05.231337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:32:05.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:32:05.305
  STEP: Creating a ReplaceConcurrent cronjob @ 09/11/23 00:32:05.308
  STEP: Ensuring a job is scheduled @ 09/11/23 00:32:05.315
  E0911 00:32:06.231526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:07.234582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:08.235021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:09.236124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:10.236893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:11.237016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:12.237175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:13.237775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:14.238562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:15.239509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:16.239634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:17.239913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:18.240720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:19.243539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:20.243651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:21.243781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:22.244174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:23.244303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:24.244436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:25.245440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:26.246104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:27.246202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:28.246434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:29.246779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:30.247699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:31.248232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:32.248392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:33.248460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:34.248573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:35.249293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:36.250160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:37.250281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:38.250305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:39.250435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:40.251525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:41.252142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:42.252269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:43.252434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:44.252564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:45.253473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:46.253576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:47.260214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:48.260334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:49.260449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:50.260585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:51.260723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:52.260877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:53.261016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:54.261144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:55.261285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:56.261426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:57.261564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:58.261751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:32:59.262190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:00.262358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:01.263060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 09/11/23 00:33:01.326
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/11/23 00:33:01.336
  STEP: Ensuring the job is replaced with a new one @ 09/11/23 00:33:01.34
  E0911 00:33:02.263037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:03.263134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:04.263198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:05.263356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:06.263560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:07.263854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:08.264894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:09.265031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:10.265168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:11.265332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:12.266017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:13.266856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:14.267109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:15.267925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:16.267856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:17.267976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:18.268106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:19.268381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:20.268512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:21.268658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:22.268803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:23.268983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:24.269081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:25.269226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:26.269424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:27.269539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:28.269709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:29.271484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:30.270945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:31.271179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:32.271240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:33.271378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:34.271528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:35.271664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:36.271848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:37.271955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:38.272100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:39.272283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:40.272857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:41.272996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:42.273085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:43.273405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:44.273513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:45.274615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:46.274800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:47.274976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:48.275755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:49.276567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:50.276694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:51.276858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:52.277234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:53.277365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:54.277416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:55.278239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:56.278854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:57.279031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:58.279952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:33:59.280322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:00.281031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:01.281168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 09/11/23 00:34:01.348
  Sep 11 00:34:01.355: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3552" for this suite. @ 09/11/23 00:34:01.36
• [116.159 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/11/23 00:34:01.374
  Sep 11 00:34:01.374: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 00:34:01.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:34:01.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:34:01.42
  STEP: Creating a suspended cronjob @ 09/11/23 00:34:01.438
  STEP: Ensuring no jobs are scheduled @ 09/11/23 00:34:01.447
  E0911 00:34:02.282068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:03.282331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:04.282296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:05.282447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:06.282883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:07.283010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:08.283741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:09.284347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:10.284538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:11.284673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:12.284985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:13.285146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:14.285291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:15.285460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:16.285614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:17.285951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:18.286081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:19.286374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:20.286784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:21.286864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:22.286897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:23.287344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:24.287838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:25.288631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:26.288883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:27.289036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:28.289137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:29.289310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:30.290432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:31.290999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:32.291849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:33.292406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:34.293279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:35.293387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:36.294432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:37.294594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:38.295337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:39.295477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:40.295934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:41.296122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:42.296289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:43.296368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:44.296714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:45.297143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:46.297267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:47.297396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:48.297526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:49.297663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:50.297899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:51.298034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:52.298179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:53.298314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:54.298451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:55.298583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:56.299979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:57.299967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:58.300046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:34:59.300297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:00.300424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:01.300560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:02.300700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:03.300831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:04.301851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:05.301977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:06.302134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:07.302279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:08.302315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:09.302792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:10.302846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:11.302964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:12.303911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:13.304744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:14.305368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:15.305714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:16.305983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:17.306128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:18.306801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:19.306949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:20.307518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:21.307887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:22.308841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:23.308967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:24.309098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:25.310287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:26.310561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:27.310789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:28.310990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:29.311951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:30.313012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:31.313173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:32.313493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:33.313749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:34.313872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:35.314412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:36.314856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:37.316084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:38.316928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:39.317244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:40.318222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:41.318371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:42.318827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:43.318871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:44.318990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:45.319119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:46.319406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:47.319575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:48.319768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:49.319861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:50.319989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:51.320936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:52.321264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:53.321463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:54.321619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:55.322744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:56.322889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:57.323318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:58.323459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:35:59.323903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:00.324600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:01.324923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:02.325134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:03.325640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:04.325789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:05.325880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:06.326123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:07.326158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:08.326817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:09.326976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:10.327889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:11.328254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:12.328368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:13.328478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:14.329388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:15.329514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:16.329751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:17.329895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:18.329990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:19.330157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:20.330280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:21.330823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:22.330946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:23.331820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:24.331913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:25.332728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:26.332855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:27.332970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:28.333150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:29.333312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:30.333799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:31.334087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:32.334802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:33.335996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:34.336153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:35.336267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:36.336407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:37.336538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:38.336664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:39.337305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:40.337409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:41.337519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:42.338090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:43.337932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:44.338136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:45.338922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:46.339111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:47.339932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:48.340017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:49.340187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:50.341220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:51.341315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:52.341417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:53.341519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:54.341665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:55.342381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:56.342515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:57.342780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:58.342878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:36:59.343261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:00.343866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:01.344325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:02.344617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:03.345474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:04.345518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:05.346276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:06.346974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:07.346950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:08.347055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:09.347193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:10.347811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:11.347924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:12.348065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:13.348347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:14.348455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:15.348557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:16.348691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:17.348804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:18.348915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:19.349038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:20.349166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:21.349559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:22.349703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:23.349823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:24.349950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:25.350854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:26.350979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:27.355035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:28.356189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:29.356285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:30.356412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:31.356526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:32.357066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:33.357393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:34.357508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:35.358353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:36.358770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:37.359900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:38.360000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:39.362383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:40.362508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:41.362673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:42.362751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:43.362810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:44.362994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:45.363140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:46.363289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:47.363441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:48.363594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:49.363742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:50.364198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:51.364056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:52.364384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:53.364782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:54.365532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:55.366159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:56.366382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:57.366829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:58.367424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:37:59.367557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:00.367836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:01.367960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:02.368115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:03.368186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:04.368340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:05.368450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:06.368572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:07.368792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:08.369391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:09.369529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:10.369726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:11.369929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:12.370040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:13.370242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:14.370427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:15.370554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:16.370630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:17.370818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:18.371866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:19.372452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:20.372653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:21.372966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:22.373373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:23.374023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:24.373531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:25.373701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:26.373778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:27.373901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:28.374421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:29.374680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:30.375748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:31.375973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:32.376056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:33.376723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:34.376829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:35.376964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:36.377093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:37.377265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:38.377466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:39.378094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:40.378614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:41.378855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:42.378986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:43.379127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:44.379216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:45.379845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:46.379985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:47.380359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:48.380556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:49.380926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:50.381112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:51.381229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:52.381399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:53.381554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:54.382851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:55.383634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:56.384373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:57.384720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:58.385756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:38:59.385822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:00.386718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:01.387047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/11/23 00:39:01.458
  STEP: Removing cronjob @ 09/11/23 00:39:01.461
  Sep 11 00:39:01.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4739" for this suite. @ 09/11/23 00:39:01.472
• [300.107 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/11/23 00:39:01.48
  Sep 11 00:39:01.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 00:39:01.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:39:01.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:39:01.503
  STEP: creating the pod @ 09/11/23 00:39:01.506
  STEP: waiting for pod running @ 09/11/23 00:39:01.514
  E0911 00:39:02.388153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:03.388202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/11/23 00:39:03.526
  Sep 11 00:39:03.533: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-9685 PodName:var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:39:03.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:39:03.534: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:39:03.535: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-9685/pods/var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/11/23 00:39:03.641
  Sep 11 00:39:03.644: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-9685 PodName:var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:39:03.644: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:39:03.645: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:39:03.646: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-9685/pods/var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/11/23 00:39:03.755
  Sep 11 00:39:04.272: INFO: Successfully updated pod "var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b"
  STEP: waiting for annotated pod running @ 09/11/23 00:39:04.273
  STEP: deleting the pod gracefully @ 09/11/23 00:39:04.277
  Sep 11 00:39:04.277: INFO: Deleting pod "var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b" in namespace "var-expansion-9685"
  Sep 11 00:39:04.287: INFO: Wait up to 5m0s for pod "var-expansion-51c41024-e3a2-43cd-ba74-54b30c6cdb6b" to be fully deleted
  E0911 00:39:04.389925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:05.390165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:06.391019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:07.391101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:08.392511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:09.392691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:10.393509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:11.393664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:12.394716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:13.394921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:14.395282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:15.395749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:16.396470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:17.396613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:18.397729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:19.398297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:20.398701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:21.398801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:22.399833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:23.399952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:24.401051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:25.401737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:26.402600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:27.402799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:28.403576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:29.403789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:30.404650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:31.404770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:32.405435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:33.406549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:34.406605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:35.406838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:36.407733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:37.407913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:39:38.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 00:39:38.409246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-9685" for this suite. @ 09/11/23 00:39:38.416
• [36.943 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/11/23 00:39:38.425
  Sep 11 00:39:38.425: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 00:39:38.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:39:38.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:39:38.449
  E0911 00:39:39.409893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:40.409853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:41.410213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:42.410564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:39:42.496: INFO: Got logs for pod "busybox-privileged-false-3b86a3a9-a983-4366-80e9-bf954e4c792c": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 11 00:39:42.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-6322" for this suite. @ 09/11/23 00:39:42.502
• [4.084 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/11/23 00:39:42.509
  Sep 11 00:39:42.509: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 00:39:42.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:39:42.529
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:39:42.532
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/11/23 00:39:42.535
  E0911 00:39:43.411116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:44.411114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 09/11/23 00:39:44.559
  STEP: Then the orphan pod is adopted @ 09/11/23 00:39:44.566
  E0911 00:39:45.411198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:39:45.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2762" for this suite. @ 09/11/23 00:39:45.58
• [3.078 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/11/23 00:39:45.59
  Sep 11 00:39:45.590: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 00:39:45.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:39:45.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:39:45.616
  STEP: set up a multi version CRD @ 09/11/23 00:39:45.619
  Sep 11 00:39:45.620: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:39:46.411912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:47.412725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:48.413560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:49.414004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 09/11/23 00:39:50.206
  STEP: check the new version name is served @ 09/11/23 00:39:50.221
  E0911 00:39:50.414496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:51.415617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 09/11/23 00:39:52.256
  E0911 00:39:52.416061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/11/23 00:39:52.997
  E0911 00:39:53.416478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:54.417298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:55.418294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:56.418282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:39:56.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1669" for this suite. @ 09/11/23 00:39:56.433
• [10.850 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/11/23 00:39:56.441
  Sep 11 00:39:56.441: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/11/23 00:39:56.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:39:56.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:39:56.463
  Sep 11 00:39:56.466: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:39:57.418818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:58.419812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:39:59.419836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:00.420428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:01.420657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:02.421215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:40:02.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9635" for this suite. @ 09/11/23 00:40:02.867
• [6.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/11/23 00:40:02.878
  Sep 11 00:40:02.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 00:40:02.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:40:02.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:40:02.928
  Sep 11 00:40:02.954: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 00:40:03.421457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:04.421866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:05.421993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:06.422051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:07.422519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:08.422629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:09.423710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:10.429486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:11.430303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:12.430563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:13.430702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:14.430781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:15.431892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:16.432091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:17.432772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:18.432840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:19.433841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:20.434524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:21.435434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:22.435605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:23.436488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:24.436608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:25.436768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:26.436835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:27.437447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:28.437581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:29.437937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:30.438042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:31.438248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:32.438365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:33.439399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:34.439558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:35.440032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:36.440046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:37.442793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:38.442891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:39.443961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:40.446808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:41.447330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:42.447434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:43.447780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:44.447919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:45.448810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:46.448937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:47.449152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:48.449250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:49.449339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:50.449948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:51.450340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:52.450482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:53.450798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:54.451531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:55.452480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:56.452630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:57.453394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:58.453556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:40:59.454002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:00.454869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:01.455898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:02.456044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:03.000: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/11/23 00:41:03.004
  Sep 11 00:41:03.045: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 11 00:41:03.053: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 11 00:41:03.109: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 11 00:41:03.117: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 11 00:41:03.170: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 11 00:41:03.183: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 11 00:41:03.219: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 11 00:41:03.238: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/11/23 00:41:03.238
  E0911 00:41:03.456226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:04.459007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:05.459052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:06.459146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/11/23 00:41:07.282
  E0911 00:41:07.461487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:08.461569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:09.462180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:10.463158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:11.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-181" for this suite. @ 09/11/23 00:41:11.45
  E0911 00:41:11.464091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [68.588 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/11/23 00:41:11.468
  Sep 11 00:41:11.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:41:11.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:11.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:11.519
  STEP: Creating a pod to test downward api env vars @ 09/11/23 00:41:11.533
  E0911 00:41:12.466790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:13.467116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:14.467903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:15.468913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:41:15.6
  Sep 11 00:41:15.602: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downward-api-dbd3bdea-8cd1-4cfa-9f63-f86d8259c0aa container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 00:41:15.618
  Sep 11 00:41:15.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9335" for this suite. @ 09/11/23 00:41:15.642
• [4.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/11/23 00:41:15.649
  Sep 11 00:41:15.649: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 00:41:15.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:15.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:15.673
  STEP: Creating pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419 @ 09/11/23 00:41:15.676
  E0911 00:41:16.471093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:17.472474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 00:41:17.704
  Sep 11 00:41:17.712: INFO: Initial restart count of pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 is 0
  Sep 11 00:41:17.719: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:18.472583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:19.472618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:19.724: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:20.472679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:21.472900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:21.730: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:22.473031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:23.473188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:23.735: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:24.473305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:25.474192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:25.745: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:26.475427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:27.476311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:27.749: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:28.476485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:29.477280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:29.754: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:30.478221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:31.478814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:31.759: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:32.479779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:33.479845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:33.764: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:34.480898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:35.480936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:35.770: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  E0911 00:41:36.481075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:37.482817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:37.775: INFO: Get pod liveness-e57850b3-85fd-4330-a983-e12b6867c819 in namespace container-probe-9419
  Sep 11 00:41:37.775: INFO: Restart count of pod container-probe-9419/liveness-e57850b3-85fd-4330-a983-e12b6867c819 is now 1 (20.062591528s elapsed)
  Sep 11 00:41:37.775: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:41:37.78
  STEP: Destroying namespace "container-probe-9419" for this suite. @ 09/11/23 00:41:37.794
• [22.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/11/23 00:41:37.821
  Sep 11 00:41:37.822: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:41:37.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:37.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:37.85
  STEP: creating service multi-endpoint-test in namespace services-4908 @ 09/11/23 00:41:37.853
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4908 to expose endpoints map[] @ 09/11/23 00:41:37.868
  Sep 11 00:41:37.875: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E0911 00:41:38.483181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:38.889: INFO: successfully validated that service multi-endpoint-test in namespace services-4908 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4908 @ 09/11/23 00:41:38.889
  E0911 00:41:39.483719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:40.483981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4908 to expose endpoints map[pod1:[100]] @ 09/11/23 00:41:40.917
  Sep 11 00:41:40.930: INFO: successfully validated that service multi-endpoint-test in namespace services-4908 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-4908 @ 09/11/23 00:41:40.93
  E0911 00:41:41.484890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:42.485587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4908 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/11/23 00:41:42.948
  Sep 11 00:41:42.966: INFO: successfully validated that service multi-endpoint-test in namespace services-4908 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/11/23 00:41:42.967
  Sep 11 00:41:42.967: INFO: Creating new exec pod
  E0911 00:41:43.490907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:44.491193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:45.491469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:45.987: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4908 exec execpodmhr6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 11 00:41:46.264: INFO: stderr: "+ + echo hostName\nnc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 11 00:41:46.264: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:41:46.264: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4908 exec execpodmhr6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.228.75 80'
  E0911 00:41:46.491590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:46.533: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.228.75 80\nConnection to 10.43.228.75 80 port [tcp/http] succeeded!\n"
  Sep 11 00:41:46.534: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:41:46.534: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4908 exec execpodmhr6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 11 00:41:46.746: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 11 00:41:46.746: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 00:41:46.746: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-4908 exec execpodmhr6r -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.228.75 81'
  Sep 11 00:41:46.961: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.228.75 81\nConnection to 10.43.228.75 81 port [tcp/*] succeeded!\n"
  Sep 11 00:41:46.961: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4908 @ 09/11/23 00:41:46.961
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4908 to expose endpoints map[pod2:[101]] @ 09/11/23 00:41:46.982
  Sep 11 00:41:47.007: INFO: successfully validated that service multi-endpoint-test in namespace services-4908 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-4908 @ 09/11/23 00:41:47.007
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-4908 to expose endpoints map[] @ 09/11/23 00:41:47.021
  E0911 00:41:47.493729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:48.035: INFO: successfully validated that service multi-endpoint-test in namespace services-4908 exposes endpoints map[]
  Sep 11 00:41:48.036: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4908" for this suite. @ 09/11/23 00:41:48.065
• [10.253 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/11/23 00:41:48.076
  Sep 11 00:41:48.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 00:41:48.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:48.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:48.097
  Sep 11 00:41:48.099: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 00:41:48.109: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 00:41:48.113: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-18.us-east-2.compute.internal before test
  Sep 11 00:41:48.124: INFO: cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:52 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.125: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.125: INFO: etcd-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:26 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.125: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:41:48.125: INFO: helm-install-rke2-canal-wfr9f from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.126: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.126: INFO: helm-install-rke2-coredns-rbzhs from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.126: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.126: INFO: helm-install-rke2-ingress-nginx-f6vgj from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.126: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.126: INFO: helm-install-rke2-metrics-server-tlnph from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.126: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.126: INFO: helm-install-rke2-snapshot-controller-4gnfg from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.126: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.127: INFO: helm-install-rke2-snapshot-controller-crd-m4bzm from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.127: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.127: INFO: helm-install-rke2-snapshot-validation-webhook-g98tk from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.127: INFO: 	Container helm ready: false, restart count 0
  Sep 11 00:41:48.127: INFO: kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:45 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: kube-proxy-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:10:11 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: rke2-canal-d7lfd from kube-system started at 2023-09-10 18:10:24 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: rke2-coredns-rke2-coredns-67f86d96c-ncf6n from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629 from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.128: INFO: 	Container autoscaler ready: true, restart count 0
  Sep 11 00:41:48.128: INFO: rke2-ingress-nginx-controller-479nb from kube-system started at 2023-09-10 18:11:44 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.129: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: rke2-metrics-server-c6fb46b64-jjcx6 from kube-system started at 2023-09-10 18:11:25 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.129: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: rke2-snapshot-controller-59cc9cd8f4-qxkng from kube-system started at 2023-09-10 18:11:26 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.129: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: rke2-snapshot-validation-webhook-54c5989b65-lbplz from kube-system started at 2023-09-10 18:11:30 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.129: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.129: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:41:48.129: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-171.us-east-2.compute.internal before test
  Sep 11 00:41:48.141: INFO: cloud-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: etcd-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: kube-apiserver-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:13:31 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: kube-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: kube-proxy-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:59 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: kube-scheduler-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: rke2-canal-zz74w from kube-system started at 2023-09-10 18:13:51 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: rke2-ingress-nginx-controller-9ws57 from kube-system started at 2023-09-10 18:15:34 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-rbrkn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.141: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:41:48.141: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-132.us-east-2.compute.internal before test
  Sep 11 00:41:48.151: INFO: cloud-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.152: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.152: INFO: etcd-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:40 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.152: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 00:41:48.152: INFO: kube-apiserver-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.152: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 00:41:48.152: INFO: kube-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: kube-proxy-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:04 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: kube-scheduler-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: rke2-canal-vgq26 from kube-system started at 2023-09-10 18:13:00 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container calico-node ready: true, restart count 2
  Sep 11 00:41:48.153: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: rke2-ingress-nginx-controller-jtphg from kube-system started at 2023-09-10 18:14:53 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-llrqn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.153: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 00:41:48.153: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-29.us-east-2.compute.internal before test
  Sep 11 00:41:48.163: INFO: kube-proxy-ip-172-31-8-29.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:03 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.163: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: rke2-canal-sf5n2 from kube-system started at 2023-09-10 18:14:02 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: rke2-coredns-rke2-coredns-67f86d96c-c5vvl from kube-system started at 2023-09-10 18:14:42 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: rke2-ingress-nginx-controller-mlgjl from kube-system started at 2023-09-10 18:14:42 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: execpodmhr6r from services-4908 started at 2023-09-11 00:41:42 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container agnhost-container ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: sonobuoy from sonobuoy started at 2023-09-10 23:38:16 +0000 UTC (1 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: sonobuoy-e2e-job-e21707e8889b4c9c from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-955v9 from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 00:41:48.164: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 00:41:48.164: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/11/23 00:41:48.164
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1783b15f6ad23fe5], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling..] @ 09/11/23 00:41:48.201
  E0911 00:41:48.494582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:49.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8807" for this suite. @ 09/11/23 00:41:49.211
• [1.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/11/23 00:41:49.223
  Sep 11 00:41:49.223: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 00:41:49.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:49.242
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:49.245
  STEP: Creating ReplicationController "e2e-rc-nnpt7" @ 09/11/23 00:41:49.251
  Sep 11 00:41:49.257: INFO: Get Replication Controller "e2e-rc-nnpt7" to confirm replicas
  E0911 00:41:49.495063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:50.262: INFO: Get Replication Controller "e2e-rc-nnpt7" to confirm replicas
  Sep 11 00:41:50.266: INFO: Found 1 replicas for "e2e-rc-nnpt7" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-nnpt7" @ 09/11/23 00:41:50.266
  STEP: Updating a scale subresource @ 09/11/23 00:41:50.269
  STEP: Verifying replicas where modified for replication controller "e2e-rc-nnpt7" @ 09/11/23 00:41:50.275
  Sep 11 00:41:50.275: INFO: Get Replication Controller "e2e-rc-nnpt7" to confirm replicas
  E0911 00:41:50.495884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:51.281: INFO: Get Replication Controller "e2e-rc-nnpt7" to confirm replicas
  Sep 11 00:41:51.309: INFO: Found 2 replicas for "e2e-rc-nnpt7" replication controller
  Sep 11 00:41:51.309: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8160" for this suite. @ 09/11/23 00:41:51.318
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/11/23 00:41:51.336
  Sep 11 00:41:51.336: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:41:51.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:51.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:51.369
  STEP: creating a Service @ 09/11/23 00:41:51.376
  STEP: watching for the Service to be added @ 09/11/23 00:41:51.389
  Sep 11 00:41:51.395: INFO: Found Service test-service-ztcvw in namespace services-6933 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep 11 00:41:51.395: INFO: Service test-service-ztcvw created
  STEP: Getting /status @ 09/11/23 00:41:51.395
  Sep 11 00:41:51.399: INFO: Service test-service-ztcvw has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/11/23 00:41:51.399
  STEP: watching for the Service to be patched @ 09/11/23 00:41:51.406
  Sep 11 00:41:51.409: INFO: observed Service test-service-ztcvw in namespace services-6933 with annotations: map[] & LoadBalancer: {[]}
  Sep 11 00:41:51.409: INFO: Found Service test-service-ztcvw in namespace services-6933 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep 11 00:41:51.409: INFO: Service test-service-ztcvw has service status patched
  STEP: updating the ServiceStatus @ 09/11/23 00:41:51.409
  Sep 11 00:41:51.420: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/11/23 00:41:51.42
  Sep 11 00:41:51.422: INFO: Observed Service test-service-ztcvw in namespace services-6933 with annotations: map[] & Conditions: {[]}
  Sep 11 00:41:51.423: INFO: Observed event: &Service{ObjectMeta:{test-service-ztcvw  services-6933  a0aec03e-f016-4d15-a915-645951be8ea1 106528 0 2023-09-11 00:41:51 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-11 00:41:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-11 00:41:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.206.20,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.206.20],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 11 00:41:51.423: INFO: Found Service test-service-ztcvw in namespace services-6933 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 11 00:41:51.423: INFO: Service test-service-ztcvw has service status updated
  STEP: patching the service @ 09/11/23 00:41:51.424
  STEP: watching for the Service to be patched @ 09/11/23 00:41:51.437
  Sep 11 00:41:51.439: INFO: observed Service test-service-ztcvw in namespace services-6933 with labels: map[test-service-static:true]
  Sep 11 00:41:51.440: INFO: observed Service test-service-ztcvw in namespace services-6933 with labels: map[test-service-static:true]
  Sep 11 00:41:51.440: INFO: observed Service test-service-ztcvw in namespace services-6933 with labels: map[test-service-static:true]
  Sep 11 00:41:51.440: INFO: Found Service test-service-ztcvw in namespace services-6933 with labels: map[test-service:patched test-service-static:true]
  Sep 11 00:41:51.440: INFO: Service test-service-ztcvw patched
  STEP: deleting the service @ 09/11/23 00:41:51.44
  STEP: watching for the Service to be deleted @ 09/11/23 00:41:51.465
  Sep 11 00:41:51.467: INFO: Observed event: ADDED
  Sep 11 00:41:51.467: INFO: Observed event: MODIFIED
  Sep 11 00:41:51.467: INFO: Observed event: MODIFIED
  Sep 11 00:41:51.468: INFO: Observed event: MODIFIED
  Sep 11 00:41:51.468: INFO: Found Service test-service-ztcvw in namespace services-6933 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 11 00:41:51.468: INFO: Service test-service-ztcvw deleted
  Sep 11 00:41:51.468: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6933" for this suite. @ 09/11/23 00:41:51.473
• [0.149 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/11/23 00:41:51.485
  Sep 11 00:41:51.485: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename proxy @ 09/11/23 00:41:51.486
  E0911 00:41:51.496156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:51.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:51.511
  Sep 11 00:41:51.514: INFO: Creating pod...
  E0911 00:41:52.496611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:53.496864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:53.542: INFO: Creating service...
  Sep 11 00:41:53.675: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=DELETE
  Sep 11 00:41:53.693: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 00:41:53.693: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=OPTIONS
  Sep 11 00:41:53.697: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 00:41:53.697: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=PATCH
  Sep 11 00:41:53.701: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 00:41:53.701: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=POST
  Sep 11 00:41:53.705: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 00:41:53.705: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=PUT
  Sep 11 00:41:53.726: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 00:41:53.727: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 11 00:41:53.735: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 11 00:41:53.735: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 11 00:41:53.742: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 11 00:41:53.742: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 11 00:41:53.747: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 11 00:41:53.747: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=POST
  Sep 11 00:41:53.752: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 11 00:41:53.752: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 11 00:41:53.759: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 11 00:41:53.759: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=GET
  Sep 11 00:41:53.762: INFO: http.Client request:GET StatusCode:301
  Sep 11 00:41:53.762: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=GET
  Sep 11 00:41:53.768: INFO: http.Client request:GET StatusCode:301
  Sep 11 00:41:53.768: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/pods/agnhost/proxy?method=HEAD
  Sep 11 00:41:53.771: INFO: http.Client request:HEAD StatusCode:301
  Sep 11 00:41:53.772: INFO: Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-8260/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 11 00:41:53.777: INFO: http.Client request:HEAD StatusCode:301
  Sep 11 00:41:53.777: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8260" for this suite. @ 09/11/23 00:41:53.783
• [2.313 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/11/23 00:41:53.8
  Sep 11 00:41:53.800: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 00:41:53.802
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:41:53.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:41:53.826
  STEP: Create set of pods @ 09/11/23 00:41:53.831
  Sep 11 00:41:53.841: INFO: created test-pod-1
  Sep 11 00:41:53.848: INFO: created test-pod-2
  Sep 11 00:41:53.857: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/11/23 00:41:53.857
  E0911 00:41:54.496642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:55.499094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:56.500034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:41:57.500364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 09/11/23 00:41:57.954
  Sep 11 00:41:57.963: INFO: Pod quantity 3 is different from expected quantity 0
  E0911 00:41:58.505899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:58.977: INFO: Pod quantity 3 is different from expected quantity 0
  E0911 00:41:59.507005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:41:59.972: INFO: Pod quantity 2 is different from expected quantity 0
  E0911 00:42:00.507795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:00.973: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3960" for this suite. @ 09/11/23 00:42:00.978
• [7.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/11/23 00:42:00.989
  Sep 11 00:42:00.989: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/11/23 00:42:00.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:01.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:01.012
  STEP: Setting up the test @ 09/11/23 00:42:01.015
  STEP: Creating hostNetwork=false pod @ 09/11/23 00:42:01.015
  E0911 00:42:01.511726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:02.512153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 09/11/23 00:42:03.052
  E0911 00:42:03.512333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:04.512688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 09/11/23 00:42:05.075
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/11/23 00:42:05.075
  Sep 11 00:42:05.075: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.075: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.076: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.076: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 00:42:05.168: INFO: Exec stderr: ""
  Sep 11 00:42:05.169: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.169: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.169: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.170: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 00:42:05.263: INFO: Exec stderr: ""
  Sep 11 00:42:05.263: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.263: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.264: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.264: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 00:42:05.365: INFO: Exec stderr: ""
  Sep 11 00:42:05.365: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.365: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.365: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.365: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 00:42:05.492: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/11/23 00:42:05.492
  Sep 11 00:42:05.492: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.492: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.493: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.493: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  E0911 00:42:05.512821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:05.597: INFO: Exec stderr: ""
  Sep 11 00:42:05.597: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.597: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.598: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.598: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 11 00:42:05.711: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/11/23 00:42:05.714
  Sep 11 00:42:05.714: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.717: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.719: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.719: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 00:42:05.865: INFO: Exec stderr: ""
  Sep 11 00:42:05.865: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.865: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.866: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.866: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 11 00:42:05.972: INFO: Exec stderr: ""
  Sep 11 00:42:05.972: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:05.972: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:05.973: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:05.973: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 00:42:06.073: INFO: Exec stderr: ""
  Sep 11 00:42:06.073: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4298 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:42:06.073: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:42:06.074: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:42:06.074: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4298/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 11 00:42:06.182: INFO: Exec stderr: ""
  Sep 11 00:42:06.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4298" for this suite. @ 09/11/23 00:42:06.187
• [5.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/11/23 00:42:06.196
  Sep 11 00:42:06.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:42:06.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:06.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:06.225
  STEP: Creating a test headless service @ 09/11/23 00:42:06.228
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1503 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1503;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1503 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1503;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1503.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1503.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1503.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1503.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1503.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1503.svc;check="$$(dig +notcp +noall +answer +search 52.249.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.249.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.249.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.249.52_tcp@PTR;sleep 1; done
   @ 09/11/23 00:42:06.26
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1503 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1503;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1503 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1503;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1503.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1503.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1503.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1503.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1503.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1503.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1503.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1503.svc;check="$$(dig +notcp +noall +answer +search 52.249.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.249.52_udp@PTR;check="$$(dig +tcp +noall +answer +search 52.249.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.249.52_tcp@PTR;sleep 1; done
   @ 09/11/23 00:42:06.26
  STEP: creating a pod to probe DNS @ 09/11/23 00:42:06.26
  STEP: submitting the pod to kubernetes @ 09/11/23 00:42:06.261
  E0911 00:42:06.512857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:07.513253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:08.513750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:09.513891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:10.514827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:11.518860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:12.519665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:13.520157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:14.521224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:15.521394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 00:42:16.315
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:42:16.32
  Sep 11 00:42:16.328: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.332: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.337: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.341: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.345: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.349: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.355: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.360: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.390: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.394: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.399: INFO: Unable to read jessie_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.404: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.408: INFO: Unable to read jessie_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.414: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.419: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.425: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:16.446: INFO: Lookups using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1503 wheezy_tcp@dns-test-service.dns-1503 wheezy_udp@dns-test-service.dns-1503.svc wheezy_tcp@dns-test-service.dns-1503.svc wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1503 jessie_tcp@dns-test-service.dns-1503 jessie_udp@dns-test-service.dns-1503.svc jessie_tcp@dns-test-service.dns-1503.svc jessie_udp@_http._tcp.dns-test-service.dns-1503.svc jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc]

  Sep 11 00:42:16.469: INFO: Pod client logs for webserver: 
  Sep 11 00:42:16.476: INFO: Pod client logs for querier: 
  Sep 11 00:42:16.492: INFO: Pod client logs for jessie-querier: 
  E0911 00:42:16.521517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:17.521679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:18.521753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:19.522138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:20.522158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:21.496: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.501: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  E0911 00:42:21.522843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:21.613: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.618: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.622: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.628: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.633: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.638: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.687: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.692: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.700: INFO: Unable to read jessie_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.706: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.714: INFO: Unable to read jessie_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.719: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.726: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.734: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:21.755: INFO: Lookups using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1503 wheezy_tcp@dns-test-service.dns-1503 wheezy_udp@dns-test-service.dns-1503.svc wheezy_tcp@dns-test-service.dns-1503.svc wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1503 jessie_tcp@dns-test-service.dns-1503 jessie_udp@dns-test-service.dns-1503.svc jessie_tcp@dns-test-service.dns-1503.svc jessie_udp@_http._tcp.dns-test-service.dns-1503.svc jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc]

  Sep 11 00:42:21.769: INFO: Pod client logs for webserver: 
  Sep 11 00:42:21.802: INFO: Pod client logs for querier: 
  Sep 11 00:42:21.822: INFO: Pod client logs for jessie-querier: 
  E0911 00:42:22.522965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:23.523235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:24.523343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:25.523490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:26.496: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.500: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.508: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.512: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.516: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.520: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.523: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  E0911 00:42:26.523477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:26.527: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.550: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.555: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.559: INFO: Unable to read jessie_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.565: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.570: INFO: Unable to read jessie_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.576: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.581: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.587: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:26.610: INFO: Lookups using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1503 wheezy_tcp@dns-test-service.dns-1503 wheezy_udp@dns-test-service.dns-1503.svc wheezy_tcp@dns-test-service.dns-1503.svc wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1503 jessie_tcp@dns-test-service.dns-1503 jessie_udp@dns-test-service.dns-1503.svc jessie_tcp@dns-test-service.dns-1503.svc jessie_udp@_http._tcp.dns-test-service.dns-1503.svc jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc]

  Sep 11 00:42:26.617: INFO: Pod client logs for webserver: 
  Sep 11 00:42:26.625: INFO: Pod client logs for querier: 
  Sep 11 00:42:26.633: INFO: Pod client logs for jessie-querier: 
  E0911 00:42:27.524544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:28.524677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:29.524764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:30.525729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:31.498: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.502: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.506: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.511: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.518: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.522: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  E0911 00:42:31.526389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:31.527: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.532: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.555: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.559: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.565: INFO: Unable to read jessie_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.569: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.575: INFO: Unable to read jessie_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.580: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.584: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.589: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:31.633: INFO: Lookups using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1503 wheezy_tcp@dns-test-service.dns-1503 wheezy_udp@dns-test-service.dns-1503.svc wheezy_tcp@dns-test-service.dns-1503.svc wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1503 jessie_tcp@dns-test-service.dns-1503 jessie_udp@dns-test-service.dns-1503.svc jessie_tcp@dns-test-service.dns-1503.svc jessie_udp@_http._tcp.dns-test-service.dns-1503.svc jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc]

  Sep 11 00:42:31.644: INFO: Pod client logs for webserver: 
  Sep 11 00:42:31.654: INFO: Pod client logs for querier: 
  Sep 11 00:42:31.670: INFO: Pod client logs for jessie-querier: 
  E0911 00:42:32.526848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:33.527892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:34.528020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:35.528414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:36.497: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.500: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.505: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.509: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.512: INFO: Unable to read wheezy_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.515: INFO: Unable to read wheezy_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.519: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.522: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  E0911 00:42:36.529330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:36.539: INFO: Unable to read jessie_udp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.543: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.547: INFO: Unable to read jessie_udp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.550: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503 from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.554: INFO: Unable to read jessie_udp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.558: INFO: Unable to read jessie_tcp@dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.561: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.565: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc from pod dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665: the server could not find the requested resource (get pods dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665)
  Sep 11 00:42:36.580: INFO: Lookups using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1503 wheezy_tcp@dns-test-service.dns-1503 wheezy_udp@dns-test-service.dns-1503.svc wheezy_tcp@dns-test-service.dns-1503.svc wheezy_udp@_http._tcp.dns-test-service.dns-1503.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1503.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1503 jessie_tcp@dns-test-service.dns-1503 jessie_udp@dns-test-service.dns-1503.svc jessie_tcp@dns-test-service.dns-1503.svc jessie_udp@_http._tcp.dns-test-service.dns-1503.svc jessie_tcp@_http._tcp.dns-test-service.dns-1503.svc]

  Sep 11 00:42:36.587: INFO: Pod client logs for webserver: 
  Sep 11 00:42:36.594: INFO: Pod client logs for querier: 
  Sep 11 00:42:36.601: INFO: Pod client logs for jessie-querier: 
  E0911 00:42:37.530577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:38.530808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:39.531306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:40.531392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:41.532385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:41.609: INFO: DNS probes using dns-1503/dns-test-9a0a9de6-0e5b-451e-ad1b-636b0b737665 succeeded

  Sep 11 00:42:41.610: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:42:41.616
  STEP: deleting the test service @ 09/11/23 00:42:41.67
  STEP: deleting the test headless service @ 09/11/23 00:42:41.755
  STEP: Destroying namespace "dns-1503" for this suite. @ 09/11/23 00:42:41.792
• [35.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/11/23 00:42:41.808
  Sep 11 00:42:41.808: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename limitrange @ 09/11/23 00:42:41.811
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:41.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:41.848
  STEP: Creating LimitRange "e2e-limitrange-whcvv" in namespace "limitrange-9600" @ 09/11/23 00:42:41.853
  STEP: Creating another limitRange in another namespace @ 09/11/23 00:42:41.864
  Sep 11 00:42:41.886: INFO: Namespace "e2e-limitrange-whcvv-656" created
  Sep 11 00:42:41.887: INFO: Creating LimitRange "e2e-limitrange-whcvv" in namespace "e2e-limitrange-whcvv-656"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-whcvv" @ 09/11/23 00:42:41.897
  Sep 11 00:42:41.900: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-whcvv" in "limitrange-9600" namespace @ 09/11/23 00:42:41.9
  Sep 11 00:42:41.949: INFO: LimitRange "e2e-limitrange-whcvv" has been patched
  STEP: Delete LimitRange "e2e-limitrange-whcvv" by Collection with labelSelector: "e2e-limitrange-whcvv=patched" @ 09/11/23 00:42:41.949
  STEP: Confirm that the limitRange "e2e-limitrange-whcvv" has been deleted @ 09/11/23 00:42:41.992
  Sep 11 00:42:41.992: INFO: Requesting list of LimitRange to confirm quantity
  Sep 11 00:42:42.007: INFO: Found 0 LimitRange with label "e2e-limitrange-whcvv=patched"
  Sep 11 00:42:42.007: INFO: LimitRange "e2e-limitrange-whcvv" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-whcvv" @ 09/11/23 00:42:42.007
  Sep 11 00:42:42.024: INFO: Found 1 limitRange
  Sep 11 00:42:42.025: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9600" for this suite. @ 09/11/23 00:42:42.038
  STEP: Destroying namespace "e2e-limitrange-whcvv-656" for this suite. @ 09/11/23 00:42:42.103
• [0.327 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/11/23 00:42:42.136
  Sep 11 00:42:42.136: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:42:42.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:42.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:42.199
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:42:42.202
  E0911 00:42:42.532699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:43.533436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:44.533488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:45.533780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:42:46.288
  Sep 11 00:42:46.291: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-947606d8-3535-4399-837b-3b79e3180e34 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:42:46.304
  Sep 11 00:42:46.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1013" for this suite. @ 09/11/23 00:42:46.324
• [4.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/11/23 00:42:46.331
  Sep 11 00:42:46.331: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 00:42:46.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:46.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:46.352
  STEP: apply creating a deployment @ 09/11/23 00:42:46.354
  Sep 11 00:42:46.356: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3574" for this suite. @ 09/11/23 00:42:46.38
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/11/23 00:42:46.392
  Sep 11 00:42:46.392: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:42:46.393
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:46.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:46.414
  Sep 11 00:42:46.418: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 create -f -'
  E0911 00:42:46.534199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:47.536635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:47.923: INFO: stderr: ""
  Sep 11 00:42:47.923: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 11 00:42:47.923: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 create -f -'
  E0911 00:42:48.536922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:48.794: INFO: stderr: ""
  Sep 11 00:42:48.794: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 00:42:48.794
  E0911 00:42:49.537240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:49.801: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:42:49.802: INFO: Found 1 / 1
  Sep 11 00:42:49.802: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 11 00:42:49.807: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 00:42:49.807: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 00:42:49.807: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 describe pod agnhost-primary-5thlx'
  Sep 11 00:42:49.926: INFO: stderr: ""
  Sep 11 00:42:49.926: INFO: stdout: "Name:             agnhost-primary-5thlx\nNamespace:        kubectl-8022\nPriority:         0\nService Account:  default\nNode:             ip-172-31-8-29.us-east-2.compute.internal/172.31.8.29\nStart Time:       Mon, 11 Sep 2023 00:42:47 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: d7241d0b59e2303b8d960dc94e3ea0e45c0d93fac7e3740ed2901e0bf376abb2\n                  cni.projectcalico.org/podIP: 10.42.3.7/32\n                  cni.projectcalico.org/podIPs: 10.42.3.7/32\nStatus:           Running\nIP:               10.42.3.7\nIPs:\n  IP:           10.42.3.7\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://6abe15442998a7ca780c3b4872e8ef650b17a81ceb4c76428dd89b48879d2e26\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 11 Sep 2023 00:42:49 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-t5tng (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-t5tng:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-8022/agnhost-primary-5thlx to ip-172-31-8-29.us-east-2.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  Sep 11 00:42:49.926: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 describe rc agnhost-primary'
  Sep 11 00:42:50.392: INFO: stderr: ""
  Sep 11 00:42:50.392: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-8022\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  3s    replication-controller  Created pod: agnhost-primary-5thlx\n"
  Sep 11 00:42:50.393: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 describe service agnhost-primary'
  Sep 11 00:42:50.515: INFO: stderr: ""
  Sep 11 00:42:50.515: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-8022\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.247.133\nIPs:               10.43.247.133\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.3.7:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep 11 00:42:50.520: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 describe node ip-172-31-10-18.us-east-2.compute.internal'
  E0911 00:42:50.537667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:42:50.665: INFO: stderr: ""
  Sep 11 00:42:50.665: INFO: stdout: "Name:               ip-172-31-10-18.us-east-2.compute.internal\nRoles:              control-plane,etcd,master\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=rke2\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-10-18.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/master=true\n                    node.kubernetes.io/instance-type=rke2\nAnnotations:        etcd.rke2.cattle.io/node-address: 172.31.10.18\n                    etcd.rke2.cattle.io/node-name: ip-172-31-10-18.us-east-2.compute.internal-e52c064f\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"ee:06:4e:18:95:11\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.10.18\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4IPIPTunnelAddr: 10.42.0.1\n                    rke2.io/encryption-config-hash: start-2517fe428109ca2ffdd603799388eeef7fef0fd443b3e14e15cd30f71b53ac07\n                    rke2.io/external-ip: 3.144.84.109\n                    rke2.io/hostname: ip-172-31-10-18.us-east-2.compute.internal\n                    rke2.io/internal-ip: 172.31.10.18\n                    rke2.io/node-args:\n                      [\"server\",\"--write-kubeconfig-mode\",\"0644\",\"--tls-san\",\"fake.fqdn.value\",\"--node-name\",\"ip-172-31-10-18.us-east-2.compute.internal\",\"--pro...\n                    rke2.io/node-config-hash: LP6LD32QTOOCHGFHS6X64VXLPBCOR6CSPYZAIZG3TIHQHZZLNJDA====\n                    rke2.io/node-env: {}\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Sun, 10 Sep 2023 18:09:52 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-10-18.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 11 Sep 2023 00:42:43 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Sun, 10 Sep 2023 18:11:10 +0000   Sun, 10 Sep 2023 18:11:10 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Mon, 11 Sep 2023 00:41:32 +0000   Sun, 10 Sep 2023 18:09:52 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 11 Sep 2023 00:41:32 +0000   Sun, 10 Sep 2023 18:09:52 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 11 Sep 2023 00:41:32 +0000   Sun, 10 Sep 2023 18:09:52 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 11 Sep 2023 00:41:32 +0000   Sun, 10 Sep 2023 18:11:02 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  172.31.10.18\n  ExternalIP:  3.144.84.109\n  Hostname:    ip-172-31-10-18.us-east-2.compute.internal\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      20937708Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      20368202327\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3961848Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 ec2dbb9847ba2f9ab5783fca9d445766\n  System UUID:                ec2dbb98-47ba-2f9a-b578-3fca9d445766\n  Boot ID:                    0652b067-a1b2-40cd-a124-eff858515476\n  Kernel Version:             5.14.21-150400.22-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP4\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.3-k3s1\n  Kubelet Version:            v1.28.1+rke2r1\n  Kube-Proxy Version:         v1.28.1+rke2r1\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nProviderID:                   rke2://ip-172-31-10-18.us-east-2.compute.internal\nNon-terminated Pods:          (14 in total)\n  Namespace                   Name                                                                   CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                                   ------------  ----------  ---------------  -------------  ---\n  kube-system                 cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal    100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         6h32m\n  kube-system                 etcd-ip-172-31-10-18.us-east-2.compute.internal                        200m (10%)    0 (0%)      512Mi (13%)      0 (0%)         6h32m\n  kube-system                 kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal              250m (12%)    0 (0%)      1Gi (26%)        0 (0%)         6h32m\n  kube-system                 kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal     200m (10%)    0 (0%)      256Mi (6%)       0 (0%)         6h32m\n  kube-system                 kube-proxy-ip-172-31-10-18.us-east-2.compute.internal                  250m (12%)    0 (0%)      128Mi (3%)       0 (0%)         6h32m\n  kube-system                 kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal              100m (5%)     0 (0%)      128Mi (3%)       0 (0%)         6h32m\n  kube-system                 rke2-canal-d7lfd                                                       250m (12%)    0 (0%)      0 (0%)           0 (0%)         6h32m\n  kube-system                 rke2-coredns-rke2-coredns-67f86d96c-ncf6n                              100m (5%)     100m (5%)   128Mi (3%)       128Mi (3%)     6h32m\n  kube-system                 rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629                   25m (1%)      100m (5%)   16Mi (0%)        64Mi (1%)      6h32m\n  kube-system                 rke2-ingress-nginx-controller-479nb                                    100m (5%)     0 (0%)      90Mi (2%)        0 (0%)         6h31m\n  kube-system                 rke2-metrics-server-c6fb46b64-jjcx6                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         6h31m\n  kube-system                 rke2-snapshot-controller-59cc9cd8f4-qxkng                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         6h31m\n  kube-system                 rke2-snapshot-validation-webhook-54c5989b65-lbplz                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         6h31m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n                0 (0%)        0 (0%)      0 (0%)           0 (0%)         64m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests      Limits\n  --------               --------      ------\n  cpu                    1575m (78%)   200m (10%)\n  memory                 2410Mi (62%)  192Mi (4%)\n  ephemeral-storage      0 (0%)        0 (0%)\n  hugepages-1Gi          0 (0%)        0 (0%)\n  hugepages-2Mi          0 (0%)        0 (0%)\n  scheduling.k8s.io/foo  0             0\nEvents:                  <none>\n"
  Sep 11 00:42:50.666: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8022 describe namespace kubectl-8022'
  Sep 11 00:42:50.770: INFO: stderr: ""
  Sep 11 00:42:50.770: INFO: stdout: "Name:         kubectl-8022\nLabels:       e2e-framework=kubectl\n              e2e-run=180666b6-9620-4ecf-b8e5-e8d285cb1913\n              kubernetes.io/metadata.name=kubectl-8022\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 11 00:42:50.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8022" for this suite. @ 09/11/23 00:42:50.775
• [4.394 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/11/23 00:42:50.787
  Sep 11 00:42:50.787: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 00:42:50.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:42:50.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:42:50.829
  STEP: set up a multi version CRD @ 09/11/23 00:42:50.831
  Sep 11 00:42:50.832: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:42:51.538496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:52.539258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:53.540029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:54.540704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mark a version not serverd @ 09/11/23 00:42:55.081
  STEP: check the unserved version gets removed @ 09/11/23 00:42:55.098
  E0911 00:42:55.541783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:56.542403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 09/11/23 00:42:56.754
  E0911 00:42:57.542826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:58.543360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:42:59.543677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:43:00.189: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8924" for this suite. @ 09/11/23 00:43:00.196
• [9.416 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/11/23 00:43:00.204
  Sep 11 00:43:00.204: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:43:00.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:00.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:00.229
  STEP: creating a secret @ 09/11/23 00:43:00.232
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/11/23 00:43:00.238
  STEP: patching the secret @ 09/11/23 00:43:00.245
  STEP: deleting the secret using a LabelSelector @ 09/11/23 00:43:00.256
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/11/23 00:43:00.265
  Sep 11 00:43:00.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6990" for this suite. @ 09/11/23 00:43:00.276
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/11/23 00:43:00.288
  Sep 11 00:43:00.288: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:43:00.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:00.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:00.31
  STEP: Creating configMap with name configmap-test-volume-map-bc1e67b7-ab8b-466c-a098-75f78023ca26 @ 09/11/23 00:43:00.313
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:43:00.318
  E0911 00:43:00.543951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:01.544736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:02.544636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:03.545029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:43:04.345
  Sep 11 00:43:04.349: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-a03ac05b-d3ba-4357-a356-09b9cb29ceec container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:43:04.356
  Sep 11 00:43:04.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-930" for this suite. @ 09/11/23 00:43:04.38
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/11/23 00:43:04.389
  Sep 11 00:43:04.390: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subpath @ 09/11/23 00:43:04.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:04.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:04.415
  STEP: Setting up data @ 09/11/23 00:43:04.418
  STEP: Creating pod pod-subpath-test-configmap-bxkc @ 09/11/23 00:43:04.429
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 00:43:04.43
  E0911 00:43:04.545734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:05.546792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:06.546767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:07.547707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:08.548636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:09.548860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:10.549346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:11.550913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:12.551742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:13.551948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:14.552888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:15.553024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:16.553645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:17.553727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:18.554780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:19.554932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:20.555581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:21.556019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:22.556468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:23.556614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:24.556958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:25.557204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:26.561046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:27.607104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:43:28.526
  Sep 11 00:43:28.529: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-subpath-test-configmap-bxkc container test-container-subpath-configmap-bxkc: <nil>
  STEP: delete the pod @ 09/11/23 00:43:28.538
  STEP: Deleting pod pod-subpath-test-configmap-bxkc @ 09/11/23 00:43:28.557
  Sep 11 00:43:28.557: INFO: Deleting pod "pod-subpath-test-configmap-bxkc" in namespace "subpath-8628"
  Sep 11 00:43:28.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8628" for this suite. @ 09/11/23 00:43:28.565
• [24.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/11/23 00:43:28.579
  Sep 11 00:43:28.579: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 00:43:28.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:28.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:28.602
  E0911 00:43:28.607894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:29.608856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:30.608179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:31.608525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:32.608492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:43:32.625: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2784" for this suite. @ 09/11/23 00:43:32.629
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/11/23 00:43:32.639
  Sep 11 00:43:32.639: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:43:32.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:32.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:32.662
  STEP: Creating configMap with name configmap-projected-all-test-volume-551f1196-ac9a-4b10-bf76-6a7fed849803 @ 09/11/23 00:43:32.665
  STEP: Creating secret with name secret-projected-all-test-volume-9bc01c00-271e-4017-bce5-1bb1f8b21962 @ 09/11/23 00:43:32.67
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/11/23 00:43:32.675
  E0911 00:43:33.608964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:34.609301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:35.609551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:36.609809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:43:36.694
  Sep 11 00:43:36.697: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod projected-volume-5b071291-56e1-4a64-b477-6b2099346cd2 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:43:36.705
  Sep 11 00:43:36.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4538" for this suite. @ 09/11/23 00:43:36.729
• [4.097 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/11/23 00:43:36.737
  Sep 11 00:43:36.737: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename server-version @ 09/11/23 00:43:36.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:36.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:36.763
  STEP: Request ServerVersion @ 09/11/23 00:43:36.766
  STEP: Confirm major version @ 09/11/23 00:43:36.77
  Sep 11 00:43:36.770: INFO: Major version: 1
  STEP: Confirm minor version @ 09/11/23 00:43:36.77
  Sep 11 00:43:36.770: INFO: cleanMinorVersion: 28
  Sep 11 00:43:36.770: INFO: Minor version: 28
  Sep 11 00:43:36.770: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-2385" for this suite. @ 09/11/23 00:43:36.78
• [0.055 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/11/23 00:43:36.792
  Sep 11 00:43:36.792: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 00:43:36.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:36.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:36.824
  E0911 00:43:37.615529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:38.615822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:43:38.865: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6608" for this suite. @ 09/11/23 00:43:38.87
• [2.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/11/23 00:43:38.878
  Sep 11 00:43:38.878: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption @ 09/11/23 00:43:38.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:38.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:38.903
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:43:38.913
  E0911 00:43:39.615827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:40.616211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/11/23 00:43:40.958
  Sep 11 00:43:40.969: INFO: running pods: 0 < 3
  E0911 00:43:41.626843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:42.627122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:43:42.975: INFO: running pods: 0 < 3
  E0911 00:43:43.627621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:44.628702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:43:44.977: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3490" for this suite. @ 09/11/23 00:43:44.982
• [6.112 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/11/23 00:43:44.993
  Sep 11 00:43:44.993: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:43:44.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:45.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:45.502
  STEP: Creating configMap with name projected-configmap-test-volume-dc485d50-8a71-4c96-8b53-1f43a8d14f50 @ 09/11/23 00:43:45.505
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:43:45.514
  E0911 00:43:45.628752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:46.628829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:47.629114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:48.639041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:43:49.538
  Sep 11 00:43:49.542: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-45f00c49-8f3c-4f25-b020-2346388febfc container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:43:49.55
  Sep 11 00:43:49.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-323" for this suite. @ 09/11/23 00:43:49.571
• [4.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/11/23 00:43:49.58
  Sep 11 00:43:49.580: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 00:43:49.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:49.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:49.606
  STEP: Creating a suspended job @ 09/11/23 00:43:49.613
  STEP: Patching the Job @ 09/11/23 00:43:49.621
  E0911 00:43:49.638932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Watching for Job to be patched @ 09/11/23 00:43:49.643
  Sep 11 00:43:49.645: INFO: Event ADDED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw] and annotations: map[]
  Sep 11 00:43:49.645: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw] and annotations: map[]
  Sep 11 00:43:49.645: INFO: Event MODIFIED found for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[]
  STEP: Updating the job @ 09/11/23 00:43:49.645
  STEP: Watching for Job to be updated @ 09/11/23 00:43:49.656
  Sep 11 00:43:49.658: INFO: Event MODIFIED found for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:49.658: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/11/23 00:43:49.658
  Sep 11 00:43:49.662: INFO: Job: e2e-sv5dw as labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched]
  STEP: Waiting for job to complete @ 09/11/23 00:43:49.663
  E0911 00:43:50.639908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:51.640271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:52.640635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:53.640987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:54.641229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:55.641652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:56.641731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:57.642048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:58.642413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:43:59.642782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 09/11/23 00:43:59.667
  STEP: Watching for Job to be deleted @ 09/11/23 00:43:59.678
  Sep 11 00:43:59.680: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.681: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.681: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.681: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.681: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.682: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.682: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.682: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.682: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.683: INFO: Event MODIFIED observed for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  Sep 11 00:43:59.683: INFO: Event DELETED found for Job e2e-sv5dw in namespace job-654 with labels: map[e2e-job-label:e2e-sv5dw e2e-sv5dw:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/11/23 00:43:59.683
  Sep 11 00:43:59.693: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-654" for this suite. @ 09/11/23 00:43:59.7
• [10.138 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/11/23 00:43:59.719
  Sep 11 00:43:59.719: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:43:59.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:43:59.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:43:59.759
  STEP: Creating a ResourceQuota with terminating scope @ 09/11/23 00:43:59.803
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 00:43:59.808
  E0911 00:44:00.643251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:01.644218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 09/11/23 00:44:01.815
  STEP: Ensuring ResourceQuota status is calculated @ 09/11/23 00:44:01.837
  E0911 00:44:02.644644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:03.644810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 09/11/23 00:44:03.845
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/11/23 00:44:03.859
  E0911 00:44:04.644997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:05.645478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/11/23 00:44:05.865
  E0911 00:44:06.646042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:07.647176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 00:44:07.87
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 00:44:08.383
  E0911 00:44:08.647396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:09.647404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 09/11/23 00:44:10.387
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/11/23 00:44:10.406
  E0911 00:44:10.647882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:11.648001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/11/23 00:44:12.412
  E0911 00:44:12.648456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:13.648574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 00:44:14.416
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 00:44:14.441
  E0911 00:44:14.648763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:15.649462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:16.448: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6017" for this suite. @ 09/11/23 00:44:16.456
• [16.754 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/11/23 00:44:16.476
  Sep 11 00:44:16.476: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:44:16.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:44:16.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:44:16.503
  STEP: Creating the pod @ 09/11/23 00:44:16.506
  E0911 00:44:16.650433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:17.650904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:18.651486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:19.069: INFO: Successfully updated pod "annotationupdatef3acd6d1-27b2-4fdd-aa55-553e8cd5a431"
  E0911 00:44:19.651854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:20.652052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:21.088: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1556" for this suite. @ 09/11/23 00:44:21.093
• [4.625 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/11/23 00:44:21.103
  Sep 11 00:44:21.103: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename limitrange @ 09/11/23 00:44:21.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:44:21.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:44:21.127
  STEP: Creating a LimitRange @ 09/11/23 00:44:21.131
  STEP: Setting up watch @ 09/11/23 00:44:21.131
  STEP: Submitting a LimitRange @ 09/11/23 00:44:21.236
  STEP: Verifying LimitRange creation was observed @ 09/11/23 00:44:21.246
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/11/23 00:44:21.246
  Sep 11 00:44:21.250: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 11 00:44:21.250: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/11/23 00:44:21.25
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/11/23 00:44:21.257
  Sep 11 00:44:21.270: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 11 00:44:21.270: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/11/23 00:44:21.27
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/11/23 00:44:21.28
  Sep 11 00:44:21.289: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 11 00:44:21.289: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/11/23 00:44:21.289
  STEP: Failing to create a Pod with more than max resources @ 09/11/23 00:44:21.292
  STEP: Updating a LimitRange @ 09/11/23 00:44:21.296
  STEP: Verifying LimitRange updating is effective @ 09/11/23 00:44:21.304
  E0911 00:44:21.652984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:22.653098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 09/11/23 00:44:23.309
  STEP: Failing to create a Pod with more than max resources @ 09/11/23 00:44:23.315
  STEP: Deleting a LimitRange @ 09/11/23 00:44:23.318
  STEP: Verifying the LimitRange was deleted @ 09/11/23 00:44:23.33
  E0911 00:44:23.653199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:24.653359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:25.653509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:26.653870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:27.654176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:28.335: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/11/23 00:44:28.336
  Sep 11 00:44:28.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7525" for this suite. @ 09/11/23 00:44:28.352
• [7.257 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/11/23 00:44:28.363
  Sep 11 00:44:28.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename dns @ 09/11/23 00:44:28.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:44:28.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:44:28.396
  STEP: Creating a test externalName service @ 09/11/23 00:44:28.398
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:44:28.407
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:44:28.407
  STEP: creating a pod to probe DNS @ 09/11/23 00:44:28.407
  STEP: submitting the pod to kubernetes @ 09/11/23 00:44:28.407
  E0911 00:44:28.654849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:29.654980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:30.655767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:31.655868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 00:44:32.443
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:44:32.447
  Sep 11 00:44:32.459: INFO: DNS probes using dns-test-afc28764-0b0d-47ff-8b78-4cb5b2d4f36b succeeded

  STEP: changing the externalName to bar.example.com @ 09/11/23 00:44:32.459
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:44:32.469
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:44:32.47
  STEP: creating a second pod to probe DNS @ 09/11/23 00:44:32.47
  STEP: submitting the pod to kubernetes @ 09/11/23 00:44:32.47
  E0911 00:44:32.657543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:33.658954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:34.659745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:35.662878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 00:44:36.493
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:44:36.496
  Sep 11 00:44:36.505: INFO: File wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:36.510: INFO: File jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:36.510: INFO: Lookups using dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a failed for: [wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local]

  Sep 11 00:44:36.517: INFO: Pod client logs for webserver: 
  Sep 11 00:44:36.525: INFO: Pod client logs for querier: 
  Sep 11 00:44:36.533: INFO: Pod client logs for jessie-querier: 
  E0911 00:44:36.663863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:37.663967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:38.664034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:39.664240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:40.664265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:41.538: INFO: File wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:41.543: INFO: File jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:41.543: INFO: Lookups using dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a failed for: [wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local]

  Sep 11 00:44:41.551: INFO: Pod client logs for webserver: 
  Sep 11 00:44:41.557: INFO: Pod client logs for querier: 
  Sep 11 00:44:41.564: INFO: Pod client logs for jessie-querier: 
  E0911 00:44:41.667301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:42.667394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:43.667899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:44.668030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:45.668166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:46.538: INFO: File wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:46.543: INFO: File jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:46.543: INFO: Lookups using dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a failed for: [wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local]

  Sep 11 00:44:46.553: INFO: Pod client logs for webserver: 
  Sep 11 00:44:46.560: INFO: Pod client logs for querier: 
  Sep 11 00:44:46.571: INFO: Pod client logs for jessie-querier: 
  E0911 00:44:46.668919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:47.669157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:48.669310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:49.669876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:50.670004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:51.539: INFO: File wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:51.543: INFO: File jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:51.543: INFO: Lookups using dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a failed for: [wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local]

  Sep 11 00:44:51.551: INFO: Pod client logs for webserver: 
  Sep 11 00:44:51.560: INFO: Pod client logs for querier: 
  Sep 11 00:44:51.567: INFO: Pod client logs for jessie-querier: 
  E0911 00:44:51.671006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:52.671910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:53.672269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:54.672679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:55.672781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:44:56.552: INFO: File wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:56.557: INFO: File jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local from pod  dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 11 00:44:56.558: INFO: Lookups using dns-4115/dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a failed for: [wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local]

  Sep 11 00:44:56.578: INFO: Pod client logs for webserver: 
  Sep 11 00:44:56.591: INFO: Pod client logs for querier: 
  Sep 11 00:44:56.613: INFO: Pod client logs for jessie-querier: 
  E0911 00:44:56.673435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:57.673868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:58.674011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:44:59.674144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:00.674282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:45:01.542: INFO: DNS probes using dns-test-b6cbc2fa-833a-4366-9d31-62da60eccd1a succeeded

  STEP: changing the service to type=ClusterIP @ 09/11/23 00:45:01.542
  W0911 00:45:01.564667      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:45:01.564
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-4115.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-4115.svc.cluster.local; sleep 1; done
   @ 09/11/23 00:45:01.564
  STEP: creating a third pod to probe DNS @ 09/11/23 00:45:01.564
  STEP: submitting the pod to kubernetes @ 09/11/23 00:45:01.57
  E0911 00:45:01.675173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:02.675181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/11/23 00:45:03.601
  STEP: looking for the results for each expected name from probers @ 09/11/23 00:45:03.604
  Sep 11 00:45:03.615: INFO: DNS probes using dns-test-74523dbe-fb90-477f-98f8-92d5acbca2a1 succeeded

  Sep 11 00:45:03.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 00:45:03.619
  STEP: deleting the pod @ 09/11/23 00:45:03.634
  STEP: deleting the pod @ 09/11/23 00:45:03.659
  STEP: deleting the test externalName service @ 09/11/23 00:45:03.679
  E0911 00:45:03.679625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "dns-4115" for this suite. @ 09/11/23 00:45:03.719
• [35.366 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/11/23 00:45:03.731
  Sep 11 00:45:03.731: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 00:45:03.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:03.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:03.831
  STEP: Create a pod template @ 09/11/23 00:45:03.855
  STEP: Replace a pod template @ 09/11/23 00:45:03.877
  Sep 11 00:45:03.906: INFO: Found updated podtemplate annotation: "true"

  Sep 11 00:45:03.907: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8653" for this suite. @ 09/11/23 00:45:03.919
• [0.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/11/23 00:45:03.982
  Sep 11 00:45:03.982: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:45:03.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:04.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:04.035
  STEP: validating cluster-info @ 09/11/23 00:45:04.038
  Sep 11 00:45:04.038: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-7687 cluster-info'
  Sep 11 00:45:04.230: INFO: stderr: ""
  Sep 11 00:45:04.230: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 11 00:45:04.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7687" for this suite. @ 09/11/23 00:45:04.236
• [0.261 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/11/23 00:45:04.243
  Sep 11 00:45:04.243: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-webhook @ 09/11/23 00:45:04.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:04.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:04.279
  STEP: Setting up server cert @ 09/11/23 00:45:04.282
  E0911 00:45:04.680011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/11/23 00:45:05.394
  STEP: Deploying the custom resource conversion webhook pod @ 09/11/23 00:45:05.407
  STEP: Wait for the deployment to be ready @ 09/11/23 00:45:05.654
  E0911 00:45:05.680225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:45:05.698: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:0, UpdatedReplicas:0, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 45, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 45, 5, 0, time.Local), Reason:"NewReplicaSetCreated", Message:"Created new replica set \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\""}, v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 45, 5, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 45, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}}, CollisionCount:(*int32)(nil)}
  E0911 00:45:06.682272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:07.683147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 00:45:07.775
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:45:07.788
  E0911 00:45:08.684003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:45:08.788: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 11 00:45:08.795: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:45:09.684580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:10.684740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/11/23 00:45:11.655
  E0911 00:45:11.686880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create a v2 custom resource @ 09/11/23 00:45:11.706
  STEP: List CRs in v1 @ 09/11/23 00:45:11.748
  STEP: List CRs in v2 @ 09/11/23 00:45:11.757
  Sep 11 00:45:11.767: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-5728" for this suite. @ 09/11/23 00:45:12.36
• [8.144 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/11/23 00:45:12.388
  Sep 11 00:45:12.388: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:45:12.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:12.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:12.429
  STEP: creating a ConfigMap @ 09/11/23 00:45:12.432
  STEP: fetching the ConfigMap @ 09/11/23 00:45:12.439
  STEP: patching the ConfigMap @ 09/11/23 00:45:12.45
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/11/23 00:45:12.465
  STEP: deleting the ConfigMap by collection with a label selector @ 09/11/23 00:45:12.47
  STEP: listing all ConfigMaps in test namespace @ 09/11/23 00:45:12.479
  Sep 11 00:45:12.482: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1627" for this suite. @ 09/11/23 00:45:12.49
• [0.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/11/23 00:45:12.504
  Sep 11 00:45:12.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:45:12.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:12.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:12.532
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/11/23 00:45:12.543
  Sep 11 00:45:12.543: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-2806 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E0911 00:45:12.691946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:45:12.740: INFO: stderr: ""
  Sep 11 00:45:12.740: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/11/23 00:45:12.74
  E0911 00:45:13.692013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:14.692006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:15.692358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:16.693301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:17.693414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/11/23 00:45:17.793
  Sep 11 00:45:17.793: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-2806 get pod e2e-test-httpd-pod -o json'
  Sep 11 00:45:17.931: INFO: stderr: ""
  Sep 11 00:45:17.931: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"cdb5c933d67d7855848ff91b7c7f603ac761bab845bbdd808c9e5798fe226a8d\",\n            \"cni.projectcalico.org/podIP\": \"10.42.3.26/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.3.26/32\"\n        },\n        \"creationTimestamp\": \"2023-09-11T00:45:12Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2806\",\n        \"resourceVersion\": \"108417\",\n        \"uid\": \"92e66afe-f15c-4011-86be-2f07e3c01277\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-d8d62\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-8-29.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-d8d62\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T00:45:12Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T00:45:14Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T00:45:14Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-11T00:45:12Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://8f23c22086390efee9b5553661f238615f494e05574277832093d11a88f3de95\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-11T00:45:13Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.8.29\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.26\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.26\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-11T00:45:12Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/11/23 00:45:17.932
  Sep 11 00:45:17.932: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-2806 replace -f -'
  Sep 11 00:45:18.337: INFO: stderr: ""
  Sep 11 00:45:18.337: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/11/23 00:45:18.337
  Sep 11 00:45:18.341: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-2806 delete pods e2e-test-httpd-pod'
  E0911 00:45:18.693674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:19.694936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:20.695854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:45:20.737: INFO: stderr: ""
  Sep 11 00:45:20.737: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 11 00:45:20.737: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2806" for this suite. @ 09/11/23 00:45:20.742
• [8.245 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/11/23 00:45:20.749
  Sep 11 00:45:20.749: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename cronjob @ 09/11/23 00:45:20.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:45:20.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:45:20.788
  STEP: Creating a cronjob @ 09/11/23 00:45:20.79
  STEP: Ensuring more than one job is running at a time @ 09/11/23 00:45:20.795
  E0911 00:45:21.696186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:22.696711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:23.696770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:24.696848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:25.696974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:26.697248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:27.697276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:28.697460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:29.697577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:30.697730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:31.698125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:32.698316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:33.698601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:34.698817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:35.699909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:36.700036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:37.715778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:38.715914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:39.716020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:40.716055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:41.716213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:42.716344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:43.717294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:44.717450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:45.717583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:46.718375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:47.718787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:48.719094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:49.719272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:50.719429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:51.722861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:52.723020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:53.723681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:54.723864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:55.724579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:56.724699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:57.724859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:58.724995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:45:59.725126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:00.726167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:01.726464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:02.726813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:03.726849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:04.728736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:05.728836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:06.728955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:07.729896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:08.730014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:09.730118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:10.730781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:11.731250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:12.731367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:13.732327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:14.732569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:15.732719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:16.732919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:17.733519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:18.733577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:19.733689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:20.734433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:21.735294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:22.735591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:23.735721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:24.735839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:25.735975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:26.736297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:27.736518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:28.736998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:29.737163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:30.737317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:31.738069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:32.738779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:33.739039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:34.739951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:35.740193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:36.740601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:37.740750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:38.741105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:39.741466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:40.742257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:41.742360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:42.742492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:43.743603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:44.743672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:45.743862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:46.744578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:47.744698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:48.745315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:49.745719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:50.745831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:51.746668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:52.746855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:53.746977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:54.747913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:55.748040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:56.748174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:57.748261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:58.748480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:46:59.749403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:00.750195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/11/23 00:47:00.801
  STEP: Removing cronjob @ 09/11/23 00:47:00.805
  Sep 11 00:47:00.813: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-471" for this suite. @ 09/11/23 00:47:00.819
• [100.080 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/11/23 00:47:00.83
  Sep 11 00:47:00.830: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename events @ 09/11/23 00:47:00.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:00.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:00.877
  STEP: Create set of events @ 09/11/23 00:47:00.887
  STEP: get a list of Events with a label in the current namespace @ 09/11/23 00:47:00.97
  STEP: delete a list of events @ 09/11/23 00:47:00.975
  Sep 11 00:47:00.975: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/11/23 00:47:01.005
  Sep 11 00:47:01.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6760" for this suite. @ 09/11/23 00:47:01.021
• [0.201 seconds]
------------------------------
SSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/11/23 00:47:01.034
  Sep 11 00:47:01.034: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename prestop @ 09/11/23 00:47:01.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:01.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:01.06
  STEP: Creating server pod server in namespace prestop-1451 @ 09/11/23 00:47:01.064
  STEP: Waiting for pods to come up. @ 09/11/23 00:47:01.078
  E0911 00:47:01.750608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:02.751134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-1451 @ 09/11/23 00:47:03.101
  E0911 00:47:03.754897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:04.755022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 09/11/23 00:47:05.122
  E0911 00:47:05.759021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:06.759902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:07.760054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:08.760168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:09.760433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:10.142: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep 11 00:47:10.142: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/11/23 00:47:10.147
  STEP: Destroying namespace "prestop-1451" for this suite. @ 09/11/23 00:47:10.169
• [9.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/11/23 00:47:10.185
  Sep 11 00:47:10.185: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:47:10.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:10.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:10.21
  STEP: Creating a ResourceQuota @ 09/11/23 00:47:10.213
  STEP: Getting a ResourceQuota @ 09/11/23 00:47:10.218
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/11/23 00:47:10.225
  STEP: Patching the ResourceQuota @ 09/11/23 00:47:10.23
  STEP: Deleting a Collection of ResourceQuotas @ 09/11/23 00:47:10.255
  STEP: Verifying the deleted ResourceQuota @ 09/11/23 00:47:10.264
  Sep 11 00:47:10.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2043" for this suite. @ 09/11/23 00:47:10.271
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/11/23 00:47:10.282
  Sep 11 00:47:10.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 00:47:10.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:10.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:10.322
  STEP: creating the pod @ 09/11/23 00:47:10.331
  STEP: submitting the pod to kubernetes @ 09/11/23 00:47:10.331
  W0911 00:47:10.340964      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0911 00:47:10.760996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:11.761573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/11/23 00:47:12.362
  STEP: updating the pod @ 09/11/23 00:47:12.365
  E0911 00:47:12.762348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:12.879: INFO: Successfully updated pod "pod-update-activedeadlineseconds-f142abdf-78cb-45bc-ac15-6637efa8f0dc"
  E0911 00:47:13.762410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:14.763054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:15.763303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:16.765849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:16.895: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6294" for this suite. @ 09/11/23 00:47:16.9
• [6.629 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/11/23 00:47:16.912
  Sep 11 00:47:16.912: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:47:16.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:16.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:16.946
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:47:16.949
  E0911 00:47:17.766349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:18.766169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:19.766555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:20.766992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:47:20.977
  Sep 11 00:47:20.981: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-92e82fed-7ef3-4c2f-9131-11954a5da230 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:47:20.997
  Sep 11 00:47:21.336: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4667" for this suite. @ 09/11/23 00:47:21.344
• [4.451 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/11/23 00:47:21.369
  Sep 11 00:47:21.369: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename discovery @ 09/11/23 00:47:21.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:21.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:21.416
  STEP: Setting up server cert @ 09/11/23 00:47:21.421
  E0911 00:47:21.767883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 09/11/23 00:47:21.971
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/11/23 00:47:21.973
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/11/23 00:47:21.974
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/11/23 00:47:21.984
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/11/23 00:47:21.986
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/11/23 00:47:21.988
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/11/23 00:47:21.989
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/11/23 00:47:21.99
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/11/23 00:47:21.992
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/11/23 00:47:21.994
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/11/23 00:47:21.996
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/11/23 00:47:22.003
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/11/23 00:47:22.007
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/11/23 00:47:22.01
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/11/23 00:47:22.011
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/11/23 00:47:22.014
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/11/23 00:47:22.015
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/11/23 00:47:22.018
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/11/23 00:47:22.022
  Sep 11 00:47:22.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1816" for this suite. @ 09/11/23 00:47:22.044
• [0.707 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/11/23 00:47:22.078
  Sep 11 00:47:22.078: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 00:47:22.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:22.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:22.162
  Sep 11 00:47:22.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3496" for this suite. @ 09/11/23 00:47:22.248
• [0.180 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/11/23 00:47:22.259
  Sep 11 00:47:22.259: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:47:22.26
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:22.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:22.293
  STEP: Counting existing ResourceQuota @ 09/11/23 00:47:22.296
  E0911 00:47:22.767940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:23.768594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:24.769111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:25.769219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:26.769309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 00:47:27.301
  STEP: Ensuring resource quota status is calculated @ 09/11/23 00:47:27.308
  E0911 00:47:27.769427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:28.769710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 09/11/23 00:47:29.315
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/11/23 00:47:29.333
  E0911 00:47:29.770355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:30.770679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/11/23 00:47:31.344
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/11/23 00:47:31.349
  STEP: Ensuring a pod cannot update its resource requirements @ 09/11/23 00:47:31.356
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/11/23 00:47:31.376
  E0911 00:47:31.771189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:32.771600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 09/11/23 00:47:33.38
  STEP: Ensuring resource quota status released the pod usage @ 09/11/23 00:47:33.391
  E0911 00:47:33.773411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:34.774053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:35.396: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5801" for this suite. @ 09/11/23 00:47:35.401
• [13.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/11/23 00:47:35.412
  Sep 11 00:47:35.412: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:47:35.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:35.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:35.435
  STEP: Creating configMap with name configmap-test-volume-5c5ef955-3ced-42a1-a689-374ba6788ab3 @ 09/11/23 00:47:35.438
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:47:35.443
  E0911 00:47:35.774189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:36.774574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:37.775397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:38.775801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:47:39.47
  Sep 11 00:47:39.473: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-c77e2394-0610-435b-90ac-d1d71d81642e container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:47:39.491
  Sep 11 00:47:39.507: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8507" for this suite. @ 09/11/23 00:47:39.512
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/11/23 00:47:39.52
  Sep 11 00:47:39.520: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 00:47:39.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:39.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:39.542
  STEP: Creating simple DaemonSet "daemon-set" @ 09/11/23 00:47:39.57
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 00:47:39.576
  Sep 11 00:47:39.584: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 00:47:39.584: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 00:47:39.776297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:40.597: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 00:47:40.597: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 00:47:40.777376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:41.594: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 00:47:41.594: INFO: Node ip-172-31-15-132.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 00:47:41.777929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:47:42.596: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 00:47:42.597: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/11/23 00:47:42.6
  STEP: DeleteCollection of the DaemonSets @ 09/11/23 00:47:42.604
  STEP: Verify that ReplicaSets have been deleted @ 09/11/23 00:47:42.612
  Sep 11 00:47:42.636: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"109330"},"items":null}

  Sep 11 00:47:42.648: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"109333"},"items":[{"metadata":{"name":"daemon-set-22zdq","generateName":"daemon-set-","namespace":"daemonsets-5726","uid":"861ed32d-e0b9-435b-8a96-0e813f87b4fc","resourceVersion":"109330","creationTimestamp":"2023-09-11T00:47:39Z","deletionTimestamp":"2023-09-11T00:48:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"2fd578f305a91bbe7a171932026de4eb82a174dda0ba1c491350bc0b9f9891b9","cni.projectcalico.org/podIP":"10.42.3.34/32","cni.projectcalico.org/podIPs":"10.42.3.34/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"96a93989-a9f5-425d-9014-d8b2c31b9353","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96a93989-a9f5-425d-9014-d8b2c31b9353\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.34\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-t8n4h","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-t8n4h","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-8-29.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-8-29.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"}],"hostIP":"172.31.8.29","podIP":"10.42.3.34","podIPs":[{"ip":"10.42.3.34"}],"startTime":"2023-09-11T00:47:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T00:47:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d925a89685180e4be1d2774406774279a46aaddecbd5478a69eabd7908fd18e9","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6wtgf","generateName":"daemon-set-","namespace":"daemonsets-5726","uid":"6bb77d86-e3e9-40d3-8d4c-f962cd38c26b","resourceVersion":"109333","creationTimestamp":"2023-09-11T00:47:39Z","deletionTimestamp":"2023-09-11T00:48:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ca1d5be3a97bc4c9d0b5a5d87ecee20a0301aeeaf9fac0cf98cce3bb5f1be2df","cni.projectcalico.org/podIP":"10.42.2.128/32","cni.projectcalico.org/podIPs":"10.42.2.128/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"96a93989-a9f5-425d-9014-d8b2c31b9353","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96a93989-a9f5-425d-9014-d8b2c31b9353\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.128\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-2m56t","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-2m56t","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-14-171.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-14-171.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"}],"hostIP":"172.31.14.171","podIP":"10.42.2.128","podIPs":[{"ip":"10.42.2.128"}],"startTime":"2023-09-11T00:47:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T00:47:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://4706ca3bcb9cd7aecc3dfbba6801951b0f13fc1863eef930acb206b137742c6e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jnsl2","generateName":"daemon-set-","namespace":"daemonsets-5726","uid":"f4ab7793-2b12-4810-a17e-30f7d7142457","resourceVersion":"109332","creationTimestamp":"2023-09-11T00:47:39Z","deletionTimestamp":"2023-09-11T00:48:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"f7b78fd8768b89ccecc236b7217e16bdd6a817049e2344787edd87bb9fa6492c","cni.projectcalico.org/podIP":"10.42.1.117/32","cni.projectcalico.org/podIPs":"10.42.1.117/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"96a93989-a9f5-425d-9014-d8b2c31b9353","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96a93989-a9f5-425d-9014-d8b2c31b9353\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.117\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-n2v49","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-n2v49","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-15-132.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-15-132.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"}],"hostIP":"172.31.15.132","podIP":"10.42.1.117","podIPs":[{"ip":"10.42.1.117"}],"startTime":"2023-09-11T00:47:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T00:47:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a70e037e7145e7ec11f7e950ac7c4cfb808322c9aef8f1650644601029cb0885","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-x5mjx","generateName":"daemon-set-","namespace":"daemonsets-5726","uid":"069f68b3-9151-411a-a7a8-b45465a36466","resourceVersion":"109331","creationTimestamp":"2023-09-11T00:47:39Z","deletionTimestamp":"2023-09-11T00:48:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"156dafdcdc6ef24cee487563b8a3236ba686eb8b82a7950ea3160f0e54079ea6","cni.projectcalico.org/podIP":"10.42.0.110/32","cni.projectcalico.org/podIPs":"10.42.0.110/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"96a93989-a9f5-425d-9014-d8b2c31b9353","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"96a93989-a9f5-425d-9014-d8b2c31b9353\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2023-09-11T00:47:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.110\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dhb8m","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dhb8m","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-10-18.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-10-18.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-11T00:47:39Z"}],"hostIP":"172.31.10.18","podIP":"10.42.0.110","podIPs":[{"ip":"10.42.0.110"}],"startTime":"2023-09-11T00:47:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-11T00:47:41Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://536b41f04d01f30fb54be9b65a3291e50514f7477e6f1ed0204dbadc70cb3aee","started":true}],"qosClass":"BestEffort"}}]}

  Sep 11 00:47:42.670: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5726" for this suite. @ 09/11/23 00:47:42.675
• [3.163 seconds]
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/11/23 00:47:42.683
  Sep 11 00:47:42.683: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 00:47:42.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:47:42.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:47:42.711
  E0911 00:47:42.778058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:43.779173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:44.779402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:45.779385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:46.779473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:47.779918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 09/11/23 00:47:47.819
  E0911 00:47:48.780718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:49.781598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:50.781892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:51.782017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:52.782149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing matching pods with named port @ 09/11/23 00:47:52.831
  E0911 00:47:53.782308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:54.783122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:55.783264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:56.783422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:57.783551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/11/23 00:47:57.839
  E0911 00:47:58.783706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:47:59.783947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:00.784127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:01.784423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:02.784991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: recreating EndpointSlices after they've been deleted @ 09/11/23 00:48:02.846
  Sep 11 00:48:02.875: INFO: EndpointSlice for Service endpointslice-5063/example-named-port not found
  E0911 00:48:03.785193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:04.786035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:05.785795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:06.785873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:07.786751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:08.786835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:09.787720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:10.788654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:11.789912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:12.789977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:12.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5063" for this suite. @ 09/11/23 00:48:12.889
• [30.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/11/23 00:48:12.902
  Sep 11 00:48:12.902: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 00:48:12.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:12.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:12.932
  E0911 00:48:13.794875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:14.795178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:14.964: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4278" for this suite. @ 09/11/23 00:48:14.969
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/11/23 00:48:14.979
  Sep 11 00:48:14.979: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:48:14.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:14.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:15.002
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:48:15.005
  E0911 00:48:15.795699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:16.795818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:17.796482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:18.806939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:48:19.03
  Sep 11 00:48:19.034: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-c7fb0f42-0971-440a-8254-74611c965968 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:48:19.042
  Sep 11 00:48:19.065: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2416" for this suite. @ 09/11/23 00:48:19.071
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/11/23 00:48:19.082
  Sep 11 00:48:19.082: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:48:19.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:19.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:19.116
  E0911 00:48:19.799634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:20.799678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:21.800739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:22.800856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:23.800968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:24.801276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:25.802159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:26.807427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:27.804365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:28.804763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:29.805582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:30.805731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:31.806288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:32.807124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:33.807228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:34.807478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:35.808363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/11/23 00:48:36.125
  E0911 00:48:36.808519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:37.809364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:38.809628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:39.809691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:40.809795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 00:48:41.131
  STEP: Ensuring resource quota status is calculated @ 09/11/23 00:48:41.147
  E0911 00:48:41.809981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:42.810896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 09/11/23 00:48:43.151
  STEP: Ensuring resource quota status captures configMap creation @ 09/11/23 00:48:43.174
  E0911 00:48:43.811007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:44.811103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 09/11/23 00:48:45.179
  STEP: Ensuring resource quota status released usage @ 09/11/23 00:48:45.19
  E0911 00:48:45.811970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:46.812355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:47.195: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3513" for this suite. @ 09/11/23 00:48:47.2
• [28.125 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/11/23 00:48:47.21
  Sep 11 00:48:47.210: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 00:48:47.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:47.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:47.239
  Sep 11 00:48:47.242: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  W0911 00:48:47.243635      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0016194e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0911 00:48:47.813268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:48.813407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 00:48:49.786232      21 warnings.go:70] unknown field "alpha"
  W0911 00:48:49.786268      21 warnings.go:70] unknown field "beta"
  W0911 00:48:49.786276      21 warnings.go:70] unknown field "delta"
  W0911 00:48:49.786283      21 warnings.go:70] unknown field "epsilon"
  W0911 00:48:49.786288      21 warnings.go:70] unknown field "gamma"
  E0911 00:48:49.814516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:50.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-893" for this suite. @ 09/11/23 00:48:50.403
• [3.206 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/11/23 00:48:50.417
  Sep 11 00:48:50.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:48:50.418
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:50.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:50.437
  STEP: creating the pod @ 09/11/23 00:48:50.442
  Sep 11 00:48:50.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 create -f -'
  E0911 00:48:50.814791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:50.934: INFO: stderr: ""
  Sep 11 00:48:50.934: INFO: stdout: "pod/pause created\n"
  E0911 00:48:51.815069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:52.815076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/11/23 00:48:52.945
  Sep 11 00:48:52.945: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 label pods pause testing-label=testing-label-value'
  Sep 11 00:48:53.046: INFO: stderr: ""
  Sep 11 00:48:53.046: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/11/23 00:48:53.046
  Sep 11 00:48:53.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 get pod pause -L testing-label'
  Sep 11 00:48:53.128: INFO: stderr: ""
  Sep 11 00:48:53.128: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/11/23 00:48:53.128
  Sep 11 00:48:53.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 label pods pause testing-label-'
  Sep 11 00:48:53.219: INFO: stderr: ""
  Sep 11 00:48:53.220: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/11/23 00:48:53.22
  Sep 11 00:48:53.220: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 get pod pause -L testing-label'
  Sep 11 00:48:53.319: INFO: stderr: ""
  Sep 11 00:48:53.319: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 09/11/23 00:48:53.319
  Sep 11 00:48:53.319: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 delete --grace-period=0 --force -f -'
  Sep 11 00:48:53.417: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 00:48:53.417: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 11 00:48:53.417: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 get rc,svc -l name=pause --no-headers'
  Sep 11 00:48:53.511: INFO: stderr: "No resources found in kubectl-1120 namespace.\n"
  Sep 11 00:48:53.511: INFO: stdout: ""
  Sep 11 00:48:53.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-1120 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 00:48:53.602: INFO: stderr: ""
  Sep 11 00:48:53.602: INFO: stdout: ""
  Sep 11 00:48:53.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1120" for this suite. @ 09/11/23 00:48:53.607
• [3.197 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/11/23 00:48:53.614
  Sep 11 00:48:53.614: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename events @ 09/11/23 00:48:53.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:53.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:53.644
  STEP: creating a test event @ 09/11/23 00:48:53.647
  STEP: listing events in all namespaces @ 09/11/23 00:48:53.655
  STEP: listing events in test namespace @ 09/11/23 00:48:53.658
  STEP: listing events with field selection filtering on source @ 09/11/23 00:48:53.662
  STEP: listing events with field selection filtering on reportingController @ 09/11/23 00:48:53.665
  STEP: getting the test event @ 09/11/23 00:48:53.669
  STEP: patching the test event @ 09/11/23 00:48:53.672
  STEP: getting the test event @ 09/11/23 00:48:53.683
  STEP: updating the test event @ 09/11/23 00:48:53.686
  STEP: getting the test event @ 09/11/23 00:48:53.693
  STEP: deleting the test event @ 09/11/23 00:48:53.702
  STEP: listing events in all namespaces @ 09/11/23 00:48:53.719
  STEP: listing events in test namespace @ 09/11/23 00:48:53.723
  Sep 11 00:48:53.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2109" for this suite. @ 09/11/23 00:48:53.73
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/11/23 00:48:53.737
  Sep 11 00:48:53.737: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename disruption @ 09/11/23 00:48:53.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:48:53.755
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:48:53.759
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/11/23 00:48:53.762
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:48:53.768
  E0911 00:48:53.815460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:54.816176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/11/23 00:48:55.783
  STEP: Waiting for all pods to be running @ 09/11/23 00:48:55.784
  Sep 11 00:48:55.789: INFO: pods: 0 < 3
  E0911 00:48:55.816754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:56.817160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:48:57.793: INFO: running pods: 1 < 3
  E0911 00:48:57.817849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:48:58.818014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/11/23 00:48:59.793
  E0911 00:48:59.818940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating the pdb to allow a pod to be evicted @ 09/11/23 00:48:59.822
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:48:59.833
  E0911 00:49:00.819013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:01.819307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/11/23 00:49:01.852
  STEP: Waiting for all pods to be running @ 09/11/23 00:49:01.852
  STEP: Waiting for the pdb to observed all healthy pods @ 09/11/23 00:49:01.86
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/11/23 00:49:01.927
  STEP: Waiting for the pdb to be processed @ 09/11/23 00:49:02.032
  STEP: Waiting for all pods to be running @ 09/11/23 00:49:02.049
  Sep 11 00:49:02.071: INFO: running pods: 2 < 3
  E0911 00:49:02.819454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:03.819569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:49:04.076: INFO: running pods: 2 < 3
  E0911 00:49:04.820134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:05.820786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 09/11/23 00:49:06.075
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/11/23 00:49:06.086
  STEP: Waiting for the pdb to be deleted @ 09/11/23 00:49:06.093
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/11/23 00:49:06.097
  STEP: Waiting for all pods to be running @ 09/11/23 00:49:06.097
  Sep 11 00:49:06.119: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4128" for this suite. @ 09/11/23 00:49:06.132
• [12.410 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/11/23 00:49:06.182
  Sep 11 00:49:06.183: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 00:49:06.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:49:06.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:49:06.215
  Sep 11 00:49:06.239: INFO: created pod
  E0911 00:49:06.821762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:07.822001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:08.821976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:09.822965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:49:10.26
  E0911 00:49:10.823171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:11.823486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:12.823591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:13.823736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:14.824120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:15.824291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:16.824864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:17.824982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:18.825396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:19.825632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:20.825784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:21.825890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:22.827225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:23.827054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:24.827114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:25.827246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:26.827402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:27.827519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:28.827646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:29.828641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:30.828802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:31.828950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:32.829054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:33.829364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:34.830169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:35.830307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:36.830804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:37.831623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:38.831956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:39.832736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:49:40.261: INFO: polling logs
  Sep 11 00:49:40.271: INFO: Pod logs: 
  I0911 00:49:07.332513       1 log.go:194] OK: Got token
  I0911 00:49:07.332602       1 log.go:194] validating with in-cluster discovery
  I0911 00:49:07.332965       1 log.go:194] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0911 00:49:07.333018       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8229:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000048430), NotBefore:(*jwt.NumericDate)(0xc000048518), IssuedAt:(*jwt.NumericDate)(0xc000048440), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8229", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9574ee83-18da-40e1-a6a9-977d6de4b44e"}}}
  I0911 00:49:07.341533       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0911 00:49:07.345485       1 log.go:194] OK: Validated signature on JWT
  I0911 00:49:07.345634       1 log.go:194] OK: Got valid claims from token!
  I0911 00:49:07.345671       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-8229:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000049490), NotBefore:(*jwt.NumericDate)(0xc0000494b8), IssuedAt:(*jwt.NumericDate)(0xc000049498), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-8229", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"9574ee83-18da-40e1-a6a9-977d6de4b44e"}}}

  Sep 11 00:49:40.272: INFO: completed pod
  Sep 11 00:49:40.278: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8229" for this suite. @ 09/11/23 00:49:40.283
• [34.109 seconds]
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/11/23 00:49:40.291
  Sep 11 00:49:40.291: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 00:49:40.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:49:40.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:49:40.316
  Sep 11 00:49:40.335: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 00:49:40.832820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:41.832920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:42.833112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:43.833192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:44.834179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:45.834333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:46.834476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:47.834789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:48.835408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:49.835482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:50.838900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:51.839057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:52.839117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:53.839273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:54.840054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:55.840979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:56.841171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:57.841335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:58.841497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:49:59.842580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:00.842760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:01.843139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:02.843203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:03.843933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:04.844923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:05.845058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:06.845719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:07.845843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:08.846675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:09.847416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:10.847931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:11.848104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:12.848147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:13.848265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:14.848976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:15.849315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:16.850395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:17.850845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:18.851638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:19.852713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:20.853578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:21.853700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:22.853841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:23.853979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:24.854063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:25.854470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:26.854598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:27.854879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:28.855614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:29.856640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:30.857594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:31.857846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:32.858600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:33.858862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:34.858951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:35.859056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:36.859317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:37.859946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:38.860461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:39.860621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:50:40.382: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/11/23 00:50:40.387
  Sep 11 00:50:40.413: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 11 00:50:40.420: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 11 00:50:40.458: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 11 00:50:40.472: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  Sep 11 00:50:40.514: INFO: Created pod: pod2-0-sched-preemption-medium-priority
  Sep 11 00:50:40.528: INFO: Created pod: pod2-1-sched-preemption-medium-priority
  Sep 11 00:50:40.561: INFO: Created pod: pod3-0-sched-preemption-medium-priority
  Sep 11 00:50:40.570: INFO: Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/11/23 00:50:40.57
  E0911 00:50:40.861494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:41.864887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:42.865033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:43.865530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/11/23 00:50:44.621
  E0911 00:50:44.866481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:45.866672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:46.866906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:47.867915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:50:48.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2712" for this suite. @ 09/11/23 00:50:48.786
• [68.512 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/11/23 00:50:48.805
  Sep 11 00:50:48.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 00:50:48.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:50:48.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:50:48.833
  STEP: Setting up server cert @ 09/11/23 00:50:48.864
  E0911 00:50:48.868194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 00:50:49.637
  STEP: Deploying the webhook pod @ 09/11/23 00:50:49.646
  STEP: Wait for the deployment to be ready @ 09/11/23 00:50:49.661
  Sep 11 00:50:49.687: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 00:50:49.868724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:50.869134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 00:50:51.709
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:50:51.731
  E0911 00:50:51.869564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:50:52.731: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 11 00:50:52.739: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:50:52.870267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8188-crds.webhook.example.com via the AdmissionRegistration API @ 09/11/23 00:50:53.251
  STEP: Creating a custom resource while v1 is storage version @ 09/11/23 00:50:53.271
  E0911 00:50:53.870352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:54.871486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/11/23 00:50:55.315
  STEP: Patching the custom resource while v2 is storage version @ 09/11/23 00:50:55.345
  Sep 11 00:50:55.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 00:50:55.873147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9933" for this suite. @ 09/11/23 00:50:56.118
  STEP: Destroying namespace "webhook-markers-2839" for this suite. @ 09/11/23 00:50:56.138
• [7.348 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/11/23 00:50:56.153
  Sep 11 00:50:56.153: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 00:50:56.154
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:50:56.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:50:56.194
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 00:50:56.203
  E0911 00:50:56.873113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:57.875125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/11/23 00:50:58.245
  E0911 00:50:58.882877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:50:59.883792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 09/11/23 00:51:00.261
  E0911 00:51:00.883804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:01.883937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:02.884978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:03.885445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 09/11/23 00:51:04.287
  Sep 11 00:51:04.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2686" for this suite. @ 09/11/23 00:51:04.303
• [8.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/11/23 00:51:04.326
  Sep 11 00:51:04.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:51:04.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:04.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:04.357
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/11/23 00:51:04.36
  E0911 00:51:04.886442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:05.887016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:06.887904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:07.888288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:08.387
  Sep 11 00:51:08.390: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-971c8177-de96-43e7-87aa-a4195418c621 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:51:08.397
  Sep 11 00:51:08.413: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6572" for this suite. @ 09/11/23 00:51:08.419
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/11/23 00:51:08.427
  Sep 11 00:51:08.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 00:51:08.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:08.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:08.451
  Sep 11 00:51:08.458: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2121" for this suite. @ 09/11/23 00:51:08.463
• [0.042 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/11/23 00:51:08.47
  Sep 11 00:51:08.470: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename conformance-tests @ 09/11/23 00:51:08.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:08.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:08.493
  STEP: Getting node addresses @ 09/11/23 00:51:08.496
  Sep 11 00:51:08.496: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 11 00:51:08.508: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4745" for this suite. @ 09/11/23 00:51:08.512
• [0.050 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/11/23 00:51:08.521
  Sep 11 00:51:08.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replicaset @ 09/11/23 00:51:08.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:08.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:08.556
  Sep 11 00:51:08.594: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 00:51:08.594
  E0911 00:51:08.888654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:09.891165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up "test-rs" replicaset  @ 09/11/23 00:51:10.603
  Sep 11 00:51:10.614: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/11/23 00:51:10.615
  Sep 11 00:51:10.632: INFO: observed ReplicaSet test-rs in namespace replicaset-7430 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 00:51:10.646: INFO: observed ReplicaSet test-rs in namespace replicaset-7430 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 00:51:10.663: INFO: observed ReplicaSet test-rs in namespace replicaset-7430 with ReadyReplicas 1, AvailableReplicas 1
  Sep 11 00:51:10.676: INFO: observed ReplicaSet test-rs in namespace replicaset-7430 with ReadyReplicas 1, AvailableReplicas 1
  E0911 00:51:10.891782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:11.891990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:51:12.238: INFO: observed ReplicaSet test-rs in namespace replicaset-7430 with ReadyReplicas 2, AvailableReplicas 2
  Sep 11 00:51:12.489: INFO: observed Replicaset test-rs in namespace replicaset-7430 with ReadyReplicas 3 found true
  Sep 11 00:51:12.489: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7430" for this suite. @ 09/11/23 00:51:12.494
• [3.979 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/11/23 00:51:12.503
  Sep 11 00:51:12.503: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:51:12.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:12.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:12.524
  STEP: Creating secret with name secret-test-d8e96cd0-1aa7-437d-bb55-bd9d19104ad8 @ 09/11/23 00:51:12.526
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:51:12.532
  E0911 00:51:12.893313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:13.892790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:14.893581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:15.893491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:16.56
  Sep 11 00:51:16.564: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-1deee0f0-6282-4a8e-959a-27cfe05a985b container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:51:16.575
  Sep 11 00:51:16.596: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2135" for this suite. @ 09/11/23 00:51:16.601
• [4.107 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/11/23 00:51:16.612
  Sep 11 00:51:16.612: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename ingressclass @ 09/11/23 00:51:16.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:16.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:16.64
  STEP: getting /apis @ 09/11/23 00:51:16.642
  STEP: getting /apis/networking.k8s.io @ 09/11/23 00:51:16.652
  STEP: getting /apis/networking.k8s.iov1 @ 09/11/23 00:51:16.654
  STEP: creating @ 09/11/23 00:51:16.655
  STEP: getting @ 09/11/23 00:51:16.675
  STEP: listing @ 09/11/23 00:51:16.678
  STEP: watching @ 09/11/23 00:51:16.682
  Sep 11 00:51:16.682: INFO: starting watch
  STEP: patching @ 09/11/23 00:51:16.683
  STEP: updating @ 09/11/23 00:51:16.691
  Sep 11 00:51:16.698: INFO: waiting for watch events with expected annotations
  Sep 11 00:51:16.698: INFO: saw patched and updated annotations
  STEP: deleting @ 09/11/23 00:51:16.698
  STEP: deleting a collection @ 09/11/23 00:51:16.712
  Sep 11 00:51:16.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8193" for this suite. @ 09/11/23 00:51:16.739
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/11/23 00:51:16.751
  Sep 11 00:51:16.751: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 00:51:16.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:16.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:16.777
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/11/23 00:51:16.783
  E0911 00:51:16.893939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:17.901985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:18.898961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:19.899661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:20.901186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:21.901301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:22.814
  Sep 11 00:51:22.817: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-9a1d6639-4078-4106-bcd1-f5b72a7e8f21 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 00:51:22.824
  Sep 11 00:51:22.843: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2966" for this suite. @ 09/11/23 00:51:22.848
• [6.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/11/23 00:51:22.863
  Sep 11 00:51:22.863: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 00:51:22.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:22.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:22.887
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 00:51:22.889
  E0911 00:51:22.902224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:23.902996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:24.903540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:25.904614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:26.905189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:26.917
  Sep 11 00:51:26.922: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-4fdbe39f-c294-4baa-a4a1-60674cddde4b container client-container: <nil>
  STEP: delete the pod @ 09/11/23 00:51:26.931
  Sep 11 00:51:26.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5028" for this suite. @ 09/11/23 00:51:26.959
• [4.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/11/23 00:51:26.972
  Sep 11 00:51:26.972: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 00:51:26.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:26.994
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:26.997
  STEP: Creating configMap configmap-5870/configmap-test-3783363e-ce4f-4382-ab0d-e584fb3a343b @ 09/11/23 00:51:26.999
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:51:27.008
  E0911 00:51:27.905408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:28.905757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:29.906713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:30.906810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:31.037
  Sep 11 00:51:31.044: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-7d5b13f7-26be-41e5-9544-da8a0e0d17ae container env-test: <nil>
  STEP: delete the pod @ 09/11/23 00:51:31.062
  Sep 11 00:51:31.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5870" for this suite. @ 09/11/23 00:51:31.099
• [4.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/11/23 00:51:31.11
  Sep 11 00:51:31.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:51:31.111
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:31.135
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:31.141
  STEP: Counting existing ResourceQuota @ 09/11/23 00:51:31.145
  E0911 00:51:31.907050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:32.907878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:33.908392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:34.909161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:35.909219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 00:51:36.149
  STEP: Ensuring resource quota status is calculated @ 09/11/23 00:51:36.155
  E0911 00:51:36.909316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:37.910021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 09/11/23 00:51:38.162
  STEP: Ensuring resource quota status captures replication controller creation @ 09/11/23 00:51:38.183
  E0911 00:51:38.910128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:39.910673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 09/11/23 00:51:40.187
  STEP: Ensuring resource quota status released usage @ 09/11/23 00:51:40.197
  E0911 00:51:40.910798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:41.910890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:51:42.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3147" for this suite. @ 09/11/23 00:51:42.21
• [11.108 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/11/23 00:51:42.222
  Sep 11 00:51:42.222: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename containers @ 09/11/23 00:51:42.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:42.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:42.246
  STEP: Creating a pod to test override command @ 09/11/23 00:51:42.249
  E0911 00:51:42.911083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:43.911462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:44.911397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:45.911678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:51:46.278
  Sep 11 00:51:46.285: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod client-containers-58937635-d08e-4eb2-ae05-c8fef507970c container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:51:46.294
  Sep 11 00:51:46.311: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9360" for this suite. @ 09/11/23 00:51:46.317
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/11/23 00:51:46.328
  Sep 11 00:51:46.328: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:51:46.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:46.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:46.356
  STEP: Creating the pod @ 09/11/23 00:51:46.359
  E0911 00:51:46.912269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:47.912570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:51:48.911: INFO: Successfully updated pod "labelsupdate330555fb-47e7-41e1-81ce-3242a77498cc"
  E0911 00:51:48.912493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:49.912786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:50.912907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:51:50.931: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2451" for this suite. @ 09/11/23 00:51:50.938
• [4.622 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/11/23 00:51:50.951
  Sep 11 00:51:50.951: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename replication-controller @ 09/11/23 00:51:50.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:50.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:50.973
  Sep 11 00:51:50.976: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/11/23 00:51:50.988
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/11/23 00:51:50.995
  E0911 00:51:51.913887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/11/23 00:51:52.013
  Sep 11 00:51:52.057: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/11/23 00:51:52.057
  Sep 11 00:51:52.075: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2919" for this suite. @ 09/11/23 00:51:52.106
• [1.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/11/23 00:51:52.133
  Sep 11 00:51:52.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 00:51:52.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:51:52.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:51:52.171
  STEP: create the rc @ 09/11/23 00:51:52.174
  W0911 00:51:52.184796      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0911 00:51:52.913809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:53.914097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:54.914254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:55.914459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:56.915798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 09/11/23 00:51:57.28
  STEP: wait for all pods to be garbage collected @ 09/11/23 00:51:57.298
  E0911 00:51:57.916107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:58.916165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:51:59.916862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:00.917134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:01.917281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 09/11/23 00:52:02.307
  Sep 11 00:52:02.436: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 11 00:52:02.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4929" for this suite. @ 09/11/23 00:52:02.446
• [10.322 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/11/23 00:52:02.456
  Sep 11 00:52:02.456: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:52:02.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:02.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:02.482
  STEP: Counting existing ResourceQuota @ 09/11/23 00:52:02.486
  E0911 00:52:02.917321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:03.918112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:04.918800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:05.930548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:06.930737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 00:52:07.495
  STEP: Ensuring resource quota status is calculated @ 09/11/23 00:52:07.501
  E0911 00:52:07.931623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:08.931758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 09/11/23 00:52:09.506
  STEP: Creating a NodePort Service @ 09/11/23 00:52:09.525
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/11/23 00:52:09.557
  STEP: Ensuring resource quota status captures service creation @ 09/11/23 00:52:09.582
  E0911 00:52:09.932471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:10.932593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 09/11/23 00:52:11.586
  STEP: Ensuring resource quota status released usage @ 09/11/23 00:52:11.677
  E0911 00:52:11.933564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:12.933844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:52:13.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6923" for this suite. @ 09/11/23 00:52:13.686
• [11.238 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/11/23 00:52:13.695
  Sep 11 00:52:13.695: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-webhook @ 09/11/23 00:52:13.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:13.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:13.718
  STEP: Setting up server cert @ 09/11/23 00:52:13.722
  E0911 00:52:13.934005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/11/23 00:52:14.539
  STEP: Deploying the custom resource conversion webhook pod @ 09/11/23 00:52:14.548
  STEP: Wait for the deployment to be ready @ 09/11/23 00:52:14.562
  Sep 11 00:52:14.569: INFO: deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0911 00:52:14.934815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:15.935593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:52:16.579: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 0, 52, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 52, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 0, 52, 14, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 0, 52, 14, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-7ff47d8d4c\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 00:52:16.935854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:17.936785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 00:52:18.586
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 00:52:18.602
  E0911 00:52:18.937774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:52:19.602: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 11 00:52:19.612: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 00:52:19.938616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:20.948845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:21.949443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 09/11/23 00:52:22.191
  STEP: v2 custom resource should be converted @ 09/11/23 00:52:22.205
  Sep 11 00:52:22.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-3085" for this suite. @ 09/11/23 00:52:22.801
• [9.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/11/23 00:52:22.818
  Sep 11 00:52:22.818: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename hostport @ 09/11/23 00:52:22.819
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:22.837
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:22.844
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/11/23 00:52:22.855
  E0911 00:52:22.950495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:23.951099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.10.18 on the node which pod1 resides and expect scheduled @ 09/11/23 00:52:24.88
  E0911 00:52:24.951151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:25.951324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:26.951896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:27.952858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.10.18 but use UDP protocol on the node which pod2 resides @ 09/11/23 00:52:28.907
  E0911 00:52:28.952943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:29.953712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:30.954804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:31.954930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/11/23 00:52:32.946
  Sep 11 00:52:32.946: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.10.18 http://127.0.0.1:54323/hostname] Namespace:hostport-7650 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:52:32.946: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:52:32.947: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:52:32.947: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7650/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.10.18+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0911 00:52:32.955726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.10.18, port: 54323 @ 09/11/23 00:52:33.457
  Sep 11 00:52:33.457: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.10.18:54323/hostname] Namespace:hostport-7650 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:52:33.458: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:52:33.459: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:52:33.459: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7650/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.10.18%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.10.18, port: 54323 UDP @ 09/11/23 00:52:33.572
  Sep 11 00:52:33.573: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.10.18 54323] Namespace:hostport-7650 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 00:52:33.573: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 00:52:33.574: INFO: ExecWithOptions: Clientset creation
  Sep 11 00:52:33.574: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7650/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.10.18+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E0911 00:52:33.955997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:34.956723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:35.957054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:36.957201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:37.957410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:52:38.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7650" for this suite. @ 09/11/23 00:52:38.686
• [15.877 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/11/23 00:52:38.698
  Sep 11 00:52:38.698: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 00:52:38.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:38.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:38.723
  STEP: create the container @ 09/11/23 00:52:38.726
  W0911 00:52:38.735679      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/11/23 00:52:38.735
  E0911 00:52:38.958459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:39.959552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:40.960577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:41.961161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 00:52:42.772
  STEP: the container should be terminated @ 09/11/23 00:52:42.777
  STEP: the termination message should be set @ 09/11/23 00:52:42.777
  Sep 11 00:52:42.777: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/11/23 00:52:42.777
  Sep 11 00:52:42.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4766" for this suite. @ 09/11/23 00:52:42.805
• [4.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/11/23 00:52:42.812
  Sep 11 00:52:42.812: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 00:52:42.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:42.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:42.836
  STEP: Counting existing ResourceQuota @ 09/11/23 00:52:42.838
  E0911 00:52:42.962143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:43.962543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:44.963271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:45.963312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:46.963850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 00:52:47.845
  STEP: Ensuring resource quota status is calculated @ 09/11/23 00:52:47.855
  E0911 00:52:47.964754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:48.965713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/11/23 00:52:49.861
  STEP: Ensuring resource quota status captures replicaset creation @ 09/11/23 00:52:49.874
  E0911 00:52:49.966375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:50.966723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/11/23 00:52:51.895
  STEP: Ensuring resource quota status released usage @ 09/11/23 00:52:51.911
  E0911 00:52:51.967083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:52.967885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:52:53.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4787" for this suite. @ 09/11/23 00:52:53.922
• [11.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/11/23 00:52:53.939
  Sep 11 00:52:53.939: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:52:53.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:53.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:53.966
  E0911 00:52:53.968575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating secret with name secret-test-122be4e0-2030-43a3-ae5e-4ca186504625 @ 09/11/23 00:52:53.971
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:52:53.98
  E0911 00:52:54.970150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:55.970452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:56.970591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:57.970899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:52:58.018
  Sep 11 00:52:58.022: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-07c03b28-5806-48e5-bdda-317d8df10040 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:52:58.03
  Sep 11 00:52:58.051: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3239" for this suite. @ 09/11/23 00:52:58.056
• [4.123 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/11/23 00:52:58.063
  Sep 11 00:52:58.063: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subpath @ 09/11/23 00:52:58.064
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:52:58.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:52:58.091
  STEP: Setting up data @ 09/11/23 00:52:58.098
  STEP: Creating pod pod-subpath-test-configmap-rlvx @ 09/11/23 00:52:58.113
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 00:52:58.113
  E0911 00:52:58.971754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:52:59.972714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:00.972815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:01.972902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:02.974716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:03.975582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:04.976291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:05.976503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:06.976573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:07.976637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:08.976683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:09.977453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:10.977531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:11.977642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:12.977964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:13.979016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:14.979892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:15.980028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:16.980166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:17.980289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:18.981358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:19.981727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:20.981876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:21.982190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:53:22.189
  Sep 11 00:53:22.197: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-subpath-test-configmap-rlvx container test-container-subpath-configmap-rlvx: <nil>
  STEP: delete the pod @ 09/11/23 00:53:22.208
  STEP: Deleting pod pod-subpath-test-configmap-rlvx @ 09/11/23 00:53:22.232
  Sep 11 00:53:22.233: INFO: Deleting pod "pod-subpath-test-configmap-rlvx" in namespace "subpath-9315"
  Sep 11 00:53:22.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9315" for this suite. @ 09/11/23 00:53:22.257
• [24.202 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/11/23 00:53:22.267
  Sep 11 00:53:22.267: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 00:53:22.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:53:22.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:53:22.296
  STEP: creating the pod @ 09/11/23 00:53:22.3
  STEP: submitting the pod to kubernetes @ 09/11/23 00:53:22.3
  E0911 00:53:22.986914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:23.987643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 09/11/23 00:53:24.333
  STEP: updating the pod @ 09/11/23 00:53:24.337
  Sep 11 00:53:24.855: INFO: Successfully updated pod "pod-update-aea207fb-8164-4ed1-b19a-a3a8b7ff415b"
  STEP: verifying the updated pod is in kubernetes @ 09/11/23 00:53:24.862
  Sep 11 00:53:24.866: INFO: Pod update OK
  Sep 11 00:53:24.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2033" for this suite. @ 09/11/23 00:53:24.871
• [2.616 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/11/23 00:53:24.89
  Sep 11 00:53:24.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/11/23 00:53:24.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:53:24.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:53:24.912
  Sep 11 00:53:24.915: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 00:53:24.988215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:25.988832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:26.989437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:27.989616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:28.990555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:29.991349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:30.992024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:31.992122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:32.994858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:33.994982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:34.996045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:35.996967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:36.997958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:37.998092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:38.999045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:39.999141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:40.999794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:41.999946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:43.000564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:44.001148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:45.001725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:46.002251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:47.002368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:48.002808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:49.010845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:50.011768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:51.012026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:52.012438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:53.013198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:54.013363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:55.013987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:56.014368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:57.015023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:58.015163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:53:59.015146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:00.016283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:01.016983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:02.017061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:03.018442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:04.018820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:05.019067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:06.019882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:07.020173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:08.020584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:09.021090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:10.021693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:11.022521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:12.022770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:13.023197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:14.023283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:15.023464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:16.023699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:17.024203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:18.024663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:19.029159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:20.029869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:21.030795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:22.031228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:23.031314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:24.031479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:54:24.952: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 00:54:24.956: INFO: Starting informer...
  STEP: Starting pods... @ 09/11/23 00:54:24.956
  E0911 00:54:25.032010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:54:25.178: INFO: Pod1 is running on ip-172-31-8-29.us-east-2.compute.internal. Tainting Node
  E0911 00:54:26.033148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:27.033601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:54:27.417: INFO: Pod2 is running on ip-172-31-8-29.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/11/23 00:54:27.418
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 00:54:27.445
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/11/23 00:54:27.452
  E0911 00:54:28.033589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:29.033735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:30.034186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:31.034542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:32.035547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:33.074928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:54:33.674: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  E0911 00:54:34.075004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:35.075430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:36.075726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:37.075844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:38.076298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:39.076371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:40.076857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:41.080343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:42.080599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:43.080788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:44.081019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:45.081477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:46.081621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:47.081769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:48.083586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:49.082837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:50.086819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:51.087111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:52.087243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:53.088119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:54:53.428: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep 11 00:54:53.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 00:54:53.455
  STEP: Destroying namespace "taint-multiple-pods-6130" for this suite. @ 09/11/23 00:54:53.46
• [88.590 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/11/23 00:54:53.482
  Sep 11 00:54:53.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 00:54:53.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:54:53.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:54:53.538
  Sep 11 00:54:53.541: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8852 version'
  Sep 11 00:54:53.615: INFO: stderr: ""
  Sep 11 00:54:53.615: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1+rke2r1\n"
  Sep 11 00:54:53.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8852" for this suite. @ 09/11/23 00:54:53.624
• [0.151 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/11/23 00:54:53.633
  Sep 11 00:54:53.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 00:54:53.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:54:53.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:54:53.66
  STEP: Creating a test namespace @ 09/11/23 00:54:53.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:54:53.686
  STEP: Creating a service in the namespace @ 09/11/23 00:54:53.689
  STEP: Deleting the namespace @ 09/11/23 00:54:53.703
  STEP: Waiting for the namespace to be removed. @ 09/11/23 00:54:53.718
  E0911 00:54:54.090814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:55.091782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:56.092370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:57.092536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:58.093358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:54:59.094408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 09/11/23 00:54:59.728
  STEP: Verifying there is no service in the namespace @ 09/11/23 00:54:59.751
  Sep 11 00:54:59.763: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8789" for this suite. @ 09/11/23 00:54:59.783
  STEP: Destroying namespace "nsdeletetest-978" for this suite. @ 09/11/23 00:54:59.791
  Sep 11 00:54:59.802: INFO: Namespace nsdeletetest-978 was already deleted
  STEP: Destroying namespace "nsdeletetest-469" for this suite. @ 09/11/23 00:54:59.803
• [6.177 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/11/23 00:54:59.821
  Sep 11 00:54:59.821: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 00:54:59.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:54:59.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:54:59.854
  STEP: Creating configMap with name projected-configmap-test-volume-map-92bf7398-2c9b-4fff-a617-d46c71665fdc @ 09/11/23 00:54:59.857
  STEP: Creating a pod to test consume configMaps @ 09/11/23 00:54:59.862
  E0911 00:55:00.095188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:01.095556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:02.096399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:03.096639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:55:03.901
  Sep 11 00:55:03.904: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-46bcee79-fa95-4694-9e92-8108d60c832e container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 00:55:03.92
  Sep 11 00:55:03.943: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5313" for this suite. @ 09/11/23 00:55:03.949
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/11/23 00:55:03.964
  Sep 11 00:55:03.964: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption @ 09/11/23 00:55:03.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:55:03.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:55:03.999
  Sep 11 00:55:04.058: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 00:55:04.098883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:05.099294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:06.099471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:07.099614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:08.100611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:09.100802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:10.101624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:11.101762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:12.102614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:13.102906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:14.104873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:15.105798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:16.106698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:17.106815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:18.107292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:19.107389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:20.108241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:21.108496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:22.109095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:23.110041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:24.110520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:25.111446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:26.112385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:27.112504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:28.112755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:29.113074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:30.113875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:31.114110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:32.114519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:33.114791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:34.115471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:35.116607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:36.117385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:37.117489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:38.118357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:39.118443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:40.119674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:41.119885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:42.121666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:43.121764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:44.122014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:45.122724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:46.123438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:47.123824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:48.124870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:49.125446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:50.127961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:51.128663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:52.128879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:53.129350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:54.129844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:55.130109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:56.130787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:57.130812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:58.131405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:55:59.131900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:00.132858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:01.133543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:02.134469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:03.134807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:04.115: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/11/23 00:56:04.118
  Sep 11 00:56:04.119: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/11/23 00:56:04.12
  E0911 00:56:04.135824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:56:04.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:56:04.14
  Sep 11 00:56:04.160: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 11 00:56:04.164: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 11 00:56:04.186: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 00:56:04.203: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4256" for this suite. @ 09/11/23 00:56:04.271
  STEP: Destroying namespace "sched-preemption-5658" for this suite. @ 09/11/23 00:56:04.279
• [60.322 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/11/23 00:56:04.287
  Sep 11 00:56:04.287: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 00:56:04.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:56:04.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:56:04.311
  STEP: Creating secret with name secret-test-map-05979407-a54a-442a-ae19-44c1f1d01d07 @ 09/11/23 00:56:04.316
  STEP: Creating a pod to test consume secrets @ 09/11/23 00:56:04.323
  E0911 00:56:05.137850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:06.138269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:07.139424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:08.139445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 00:56:08.35
  Sep 11 00:56:08.353: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-5c6a5170-e848-4a76-a541-9ff9c9a72fa8 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 00:56:08.364
  Sep 11 00:56:08.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8326" for this suite. @ 09/11/23 00:56:08.387
• [4.110 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/11/23 00:56:08.398
  Sep 11 00:56:08.398: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 00:56:08.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:56:08.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:56:08.428
  Sep 11 00:56:08.440: INFO: Endpoints addresses: [3.12.162.85 3.14.244.67 3.144.84.109] , ports: [6443]
  Sep 11 00:56:08.440: INFO: EndpointSlices addresses: [3.12.162.85 3.14.244.67 3.144.84.109] , ports: [6443]
  Sep 11 00:56:08.441: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6535" for this suite. @ 09/11/23 00:56:08.459
• [0.074 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/11/23 00:56:08.474
  Sep 11 00:56:08.474: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubelet-test @ 09/11/23 00:56:08.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:56:08.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:56:08.501
  Sep 11 00:56:08.541: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7476" for this suite. @ 09/11/23 00:56:08.546
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/11/23 00:56:08.56
  Sep 11 00:56:08.560: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 00:56:08.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 00:56:08.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 00:56:08.6
  STEP: Creating pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449 @ 09/11/23 00:56:08.603
  E0911 00:56:09.139555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:10.140114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 00:56:10.638
  Sep 11 00:56:10.646: INFO: Initial restart count of pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a is 0
  Sep 11 00:56:10.650: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:11.140840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:12.141065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:12.654: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:13.141211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:14.141360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:14.659: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:15.142462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:16.142532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:16.665: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:17.142832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:18.143016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:18.669: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:19.143080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:20.143377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:20.673: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:21.144046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:22.144234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:22.678: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:23.145090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:24.145327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:24.683: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:25.147128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:26.147245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:26.687: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:27.148286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:28.148843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:28.700: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:29.148924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:30.149027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:30.708: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:31.149164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:32.149299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:32.713: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:33.150129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:34.150350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:34.717: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:35.150481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:36.154860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:36.721: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:37.155557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:38.155861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:38.727: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:39.156568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:40.156708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:40.732: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:41.157420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:42.157592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:42.735: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:43.158702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:44.158843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:44.748: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:45.159406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:46.160186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:46.753: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:47.160816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:48.160939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:48.757: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:49.161873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:50.163113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:50.761: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:51.166812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:52.166884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:52.765: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:53.167013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:54.167174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:54.769: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:55.167297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:56.167432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:56.776: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:57.168421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:56:58.168820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:56:58.782: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:56:59.169673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:00.170112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:00.787: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:01.170841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:02.170989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:02.791: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:03.171100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:04.173064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:04.795: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:05.172271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:06.172865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:06.806: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:07.173695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:08.173810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:08.811: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:09.173940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:10.174804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:10.822: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:11.174943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:12.175082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:12.830: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:13.175221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:14.175587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:14.835: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:15.176090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:16.176877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:16.845: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:17.177041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:18.177152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:18.849: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:19.178134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:20.178742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:20.854: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:21.179257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:22.179342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:22.858: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:23.180230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:24.180500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:24.865: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:25.181221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:26.181307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:26.870: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:27.181650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:28.181783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:28.874: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:29.182769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:30.183597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:30.880: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:31.183688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:32.183960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:32.884: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:33.184540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:34.184884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:34.892: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:35.185753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:36.185913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:36.901: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:37.186753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:38.186781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:38.906: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:39.186898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:40.187005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:40.912: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:41.187881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:42.187993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:42.916: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:43.188804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:44.188933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:44.920: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:45.189353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:46.189522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:46.925: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:47.190065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:48.190208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:48.929: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:49.190881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:50.191883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:50.933: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:51.191989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:52.192787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:52.937: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:53.193617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:54.193970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:54.942: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:55.194990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:56.195191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:56.951: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:57.195687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:57:58.196271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:57:58.955: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:57:59.196981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:00.197676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:00.961: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:01.199049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:02.199161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:02.966: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:03.199802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:04.199934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:04.971: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:05.200420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:06.200644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:06.976: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:07.202430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:08.202411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:08.987: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:09.202459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:10.202534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:10.992: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:11.203594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:12.204348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:12.996: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:13.204420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:14.204529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:15.009: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:15.205432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:16.205629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:17.015: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:17.206304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:18.206810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:19.019: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:19.207927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:20.208929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:21.024: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:21.209086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:22.209303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:23.028: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:23.209391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:24.209535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:25.034: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:25.210236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:26.210702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:27.039: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:27.210815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:28.210931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:29.046: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:29.211061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:30.211756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:31.051: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:31.211888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:32.212020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:33.057: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:33.212523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:34.212800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:35.062: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:35.213110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:36.213289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:37.066: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:37.213969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:38.214445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:39.070: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:39.214852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:40.215633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:41.074: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:41.215794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:42.216268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:43.079: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:43.216246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:44.216335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:45.085: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:45.216665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:46.216796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:47.092: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:47.217031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:48.217206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:49.098: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:49.217908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:50.218782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:51.103: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:51.222797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:52.222899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:53.107: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:53.223514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:54.223842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:55.113: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:55.224888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:56.224990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:57.118: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:57.225458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:58:58.225684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:58:59.122: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:58:59.226675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:00.226809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:01.126: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:01.227510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:02.227916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:03.130: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:03.228448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:04.228577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:05.136: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:05.228962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:06.229322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:07.144: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:07.230311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:08.230493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:09.167: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:09.231456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:10.231629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:11.171: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:11.232195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:12.232340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:13.174: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:13.233100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:14.233254      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:15.178: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:15.234231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:16.234798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:17.183: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:17.235639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:18.236580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:19.188: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:19.237430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:20.237563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:21.194: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:21.237618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:22.237787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:23.202: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:23.237911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:24.238002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:25.209: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:25.238079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:26.238848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:27.214: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:27.239427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:28.239584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:29.218: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:29.240594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:30.241591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:31.222: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:31.242041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:32.242162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:33.227: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:33.242536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:34.242737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:35.231: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:35.243242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:36.245181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:37.235: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:37.250345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:38.250464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:39.240: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:39.250789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:40.251327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:41.244: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:41.252215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:42.252697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:43.249: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:43.253465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:44.253634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:45.253: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:45.253896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:46.254066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:47.254595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:47.258: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:48.254836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:49.254957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:49.262: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:50.255876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:51.257855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:51.266: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:52.258102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:53.258221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:53.270: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:54.258814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:55.260032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:55.275: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:56.260132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:57.260378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:57.279: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 00:59:58.260470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 00:59:59.260530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 00:59:59.284: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:00.261158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:01.261403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:01.290: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:02.262275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:03.262425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:03.294: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:04.262544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:05.263701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:05.303: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:06.263957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:07.272105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:07.309: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:08.272290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:09.272643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:09.314: INFO: Get pod liveness-8fc535dd-53a7-49f7-9009-a6b3edb7600a in namespace container-probe-2449
  E0911 01:00:10.272834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:11.272953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:11.315: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 01:00:11.32
  STEP: Destroying namespace "container-probe-2449" for this suite. @ 09/11/23 01:00:11.339
• [242.788 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/11/23 01:00:11.349
  Sep 11 01:00:11.349: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 01:00:11.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:11.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:11.392
  Sep 11 01:00:11.456: INFO: Create a RollingUpdate DaemonSet
  Sep 11 01:00:11.463: INFO: Check that daemon pods launch on every node of the cluster
  Sep 11 01:00:11.473: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:00:11.473: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:00:12.273221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:12.489: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:00:12.489: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:00:13.273301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:13.481: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 11 01:00:13.481: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:00:14.273586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:14.488: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 01:00:14.488: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  Sep 11 01:00:14.488: INFO: Update the DaemonSet to trigger a rollout
  Sep 11 01:00:14.501: INFO: Updating DaemonSet daemon-set
  E0911 01:00:15.273867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:16.274896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:16.524: INFO: Roll back the DaemonSet before rollout is complete
  Sep 11 01:00:16.535: INFO: Updating DaemonSet daemon-set
  Sep 11 01:00:16.535: INFO: Make sure DaemonSet rollback is complete
  Sep 11 01:00:16.540: INFO: Wrong image for pod: daemon-set-72qmg. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 11 01:00:16.540: INFO: Pod daemon-set-72qmg is not available
  E0911 01:00:17.275339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:18.275881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:18.551: INFO: Pod daemon-set-9r6lf is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 01:00:18.565
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6997, will wait for the garbage collector to delete the pods @ 09/11/23 01:00:18.565
  Sep 11 01:00:18.646: INFO: Deleting DaemonSet.extensions daemon-set took: 27.640566ms
  Sep 11 01:00:18.754: INFO: Terminating DaemonSet.extensions daemon-set pods took: 107.847364ms
  E0911 01:00:19.276102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:20.261: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:00:20.261: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 01:00:20.265: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"114161"},"items":null}

  Sep 11 01:00:20.270: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"114161"},"items":null}

  E0911 01:00:20.277031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:20.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6997" for this suite. @ 09/11/23 01:00:20.293
• [8.950 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/11/23 01:00:20.3
  Sep 11 01:00:20.300: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 01:00:20.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:20.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:20.323
  Sep 11 01:00:20.325: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:00:21.277238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:22.277376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0911 01:00:22.859267      21 warnings.go:70] unknown field "alpha"
  W0911 01:00:22.859506      21 warnings.go:70] unknown field "beta"
  W0911 01:00:22.859695      21 warnings.go:70] unknown field "delta"
  W0911 01:00:22.859824      21 warnings.go:70] unknown field "epsilon"
  W0911 01:00:22.860008      21 warnings.go:70] unknown field "gamma"
  E0911 01:00:23.277496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:23.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9530" for this suite. @ 09/11/23 01:00:23.409
• [3.115 seconds]
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/11/23 01:00:23.416
  Sep 11 01:00:23.416: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:00:23.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:23.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:23.439
  STEP: creating all guestbook components @ 09/11/23 01:00:23.441
  Sep 11 01:00:23.442: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 11 01:00:23.442: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  Sep 11 01:00:23.795: INFO: stderr: ""
  Sep 11 01:00:23.795: INFO: stdout: "service/agnhost-replica created\n"
  Sep 11 01:00:23.795: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 11 01:00:23.795: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  Sep 11 01:00:24.150: INFO: stderr: ""
  Sep 11 01:00:24.150: INFO: stdout: "service/agnhost-primary created\n"
  Sep 11 01:00:24.150: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 11 01:00:24.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  E0911 01:00:24.277516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:24.471: INFO: stderr: ""
  Sep 11 01:00:24.471: INFO: stdout: "service/frontend created\n"
  Sep 11 01:00:24.471: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 11 01:00:24.471: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  Sep 11 01:00:24.695: INFO: stderr: ""
  Sep 11 01:00:24.695: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 11 01:00:24.695: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 11 01:00:24.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  Sep 11 01:00:24.928: INFO: stderr: ""
  Sep 11 01:00:24.928: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 11 01:00:24.928: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 11 01:00:24.928: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 create -f -'
  E0911 01:00:25.278290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:25.638: INFO: stderr: ""
  Sep 11 01:00:25.638: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/11/23 01:00:25.638
  Sep 11 01:00:25.638: INFO: Waiting for all frontend pods to be Running.
  E0911 01:00:26.278537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:27.279479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:28.279960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:29.280186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:30.280877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:30.690: INFO: Waiting for frontend to serve content.
  Sep 11 01:00:30.704: INFO: Trying to add a new entry to the guestbook.
  Sep 11 01:00:30.718: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/11/23 01:00:30.734
  Sep 11 01:00:30.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  Sep 11 01:00:30.860: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:30.860: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 01:00:30.86
  Sep 11 01:00:30.860: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  Sep 11 01:00:31.029: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:31.029: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 01:00:31.029
  Sep 11 01:00:31.029: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  Sep 11 01:00:31.134: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:31.134: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 01:00:31.134
  Sep 11 01:00:31.134: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  Sep 11 01:00:31.224: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:31.224: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 01:00:31.224
  Sep 11 01:00:31.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  E0911 01:00:31.292071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:31.369: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:31.369: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/11/23 01:00:31.369
  Sep 11 01:00:31.369: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3267 delete --grace-period=0 --force -f -'
  Sep 11 01:00:31.560: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:00:31.560: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 11 01:00:31.564: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3267" for this suite. @ 09/11/23 01:00:31.579
• [8.194 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/11/23 01:00:31.61
  Sep 11 01:00:31.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/11/23 01:00:31.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:31.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:31.651
  Sep 11 01:00:31.663: INFO: Creating simple deployment test-new-deployment
  Sep 11 01:00:31.693: INFO: deployment "test-new-deployment" doesn't have the required revision set
  E0911 01:00:32.293884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:33.294198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:00:33.707: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 1, 0, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 1, 0, 31, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 1, 0, 31, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 1, 0, 31, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-557759b7c7\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 01:00:34.294190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:35.294404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 09/11/23 01:00:35.727
  STEP: updating a scale subresource @ 09/11/23 01:00:35.754
  STEP: verifying the deployment Spec.Replicas was modified @ 09/11/23 01:00:35.768
  STEP: Patch a scale subresource @ 09/11/23 01:00:35.793
  Sep 11 01:00:35.966: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5b2b76b-1da7-49c1-932c-f70fd6beb058",
      ResourceVersion: (string) (len=6) "114506",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 2,
      UpdatedReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 01:00:35.983: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7724e20f-79ef-440b-a412-9c8106d77a92",
      ResourceVersion: (string) (len=6) "114505",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "e5b2b76b-1da7-49c1-932c-f70fd6beb058",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 35 62 32 62 37  36 62 2d 31 64 61 37 2d  |\"e5b2b76b-1da7-|
              00000120  34 39 63 31 2d 39 33 32  63 2d 66 37 30 66 64 36  |49c1-932c-f70fd6|
              00000130  62 65 62 30 35 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |beb058\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 01:00:36.006: INFO: Pod "test-new-deployment-557759b7c7-26fls" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-26fls",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bca13382-242f-4939-be4f-13dcc4998fab",
      ResourceVersion: (string) (len=6) "114514",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e20f-79ef-440b-a412-9c8106d77a92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 32 30 66 2d 37  |d\":\"7724e20f-7|
              00000090  39 65 66 2d 34 34 30 62  2d 61 34 31 32 2d 39 63  |9ef-440b-a412-9c|
              000000a0  38 31 30 36 64 37 37 61  39 32 5c 22 7d 22 3a 7b  |8106d77a92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vv8gw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vv8gw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-15-132.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:00:36.008: INFO: Pod "test-new-deployment-557759b7c7-6hgdp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-6hgdp",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c8e4e103-12db-4af7-bc09-98274ef8aaf5",
      ResourceVersion: (string) (len=6) "114483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5e842f84ff886130e5dea73d6ab315ea789b2a3c4c8deba9b54706b93dd971ca",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.3.74/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.3.74/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e20f-79ef-440b-a412-9c8106d77a92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 32 30 66 2d 37  |d\":\"7724e20f-7|
              00000090  39 65 66 2d 34 34 30 62  2d 61 34 31 32 2d 39 63  |9ef-440b-a412-9c|
              000000a0  38 31 30 36 64 37 37 61  39 32 5c 22 7d 22 3a 7b  |8106d77a92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  37 34 5c 22 7d 22 3a 7b  |10.42.3.74\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nflq4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nflq4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990834,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990831,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.42.3.74",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.74"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990831,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829990833,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a5ced04e7900cb865c9df49ae5fcdc3e86b3cb4e91097ef9b347941d835879ba",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:00:36.017: INFO: Pod "test-new-deployment-557759b7c7-s5228" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-s5228",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bb1e9418-c735-4cfb-8e05-fb3494d2345a",
      ResourceVersion: (string) (len=6) "114503",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e20f-79ef-440b-a412-9c8106d77a92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 32 30 66 2d 37  |d\":\"7724e20f-7|
              00000090  39 65 66 2d 34 34 30 62  2d 61 34 31 32 2d 39 63  |9ef-440b-a412-9c|
              000000a0  38 31 30 36 64 37 37 61  39 32 5c 22 7d 22 3a 7b  |8106d77a92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hblsl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hblsl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=43) "ip-172-31-14-171.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.31.14.171",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:00:36.019: INFO: Pod "test-new-deployment-557759b7c7-slxcm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-slxcm",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-1190",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f67b79bc-0979-4e6b-85dc-cb8b368e7542",
      ResourceVersion: (string) (len=6) "114512",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829990835,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "7724e20f-79ef-440b-a412-9c8106d77a92",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 37  32 34 65 32 30 66 2d 37  |d\":\"7724e20f-7|
              00000090  39 65 66 2d 34 34 30 62  2d 61 34 31 32 2d 39 63  |9ef-440b-a412-9c|
              000000a0  38 31 30 36 64 37 37 61  39 32 5c 22 7d 22 3a 7b  |8106d77a92\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cs996",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cs996",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-10-18.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829990835,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:00:36.020: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1190" for this suite. @ 09/11/23 01:00:36.04
• [4.465 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/11/23 01:00:36.076
  Sep 11 01:00:36.076: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:00:36.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:36.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:36.155
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/11/23 01:00:36.158
  E0911 01:00:36.295375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:37.296613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:38.296819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:39.299120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:00:40.187
  Sep 11 01:00:40.192: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-55680518-cbf0-49f0-837f-3e17ccd79768 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:00:40.208
  Sep 11 01:00:40.240: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5253" for this suite. @ 09/11/23 01:00:40.245
• [4.182 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/11/23 01:00:40.258
  Sep 11 01:00:40.258: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 01:00:40.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:00:40.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:00:40.291
  E0911 01:00:40.298969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating resourceQuota "e2e-rq-status-l9fpc" @ 09/11/23 01:00:40.307
  Sep 11 01:00:40.320: INFO: Resource quota "e2e-rq-status-l9fpc" reports spec: hard cpu limit of 500m
  Sep 11 01:00:40.320: INFO: Resource quota "e2e-rq-status-l9fpc" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-l9fpc" /status @ 09/11/23 01:00:40.321
  STEP: Confirm /status for "e2e-rq-status-l9fpc" resourceQuota via watch @ 09/11/23 01:00:40.329
  Sep 11 01:00:40.331: INFO: observed resourceQuota "e2e-rq-status-l9fpc" in namespace "resourcequota-7295" with hard status: v1.ResourceList(nil)
  Sep 11 01:00:40.331: INFO: Found resourceQuota "e2e-rq-status-l9fpc" in namespace "resourcequota-7295" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 11 01:00:40.331: INFO: ResourceQuota "e2e-rq-status-l9fpc" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/11/23 01:00:40.336
  Sep 11 01:00:40.342: INFO: Resource quota "e2e-rq-status-l9fpc" reports spec: hard cpu limit of 1
  Sep 11 01:00:40.342: INFO: Resource quota "e2e-rq-status-l9fpc" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-l9fpc" /status @ 09/11/23 01:00:40.342
  STEP: Confirm /status for "e2e-rq-status-l9fpc" resourceQuota via watch @ 09/11/23 01:00:40.35
  Sep 11 01:00:40.351: INFO: observed resourceQuota "e2e-rq-status-l9fpc" in namespace "resourcequota-7295" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 11 01:00:40.352: INFO: Found resourceQuota "e2e-rq-status-l9fpc" in namespace "resourcequota-7295" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 11 01:00:40.352: INFO: ResourceQuota "e2e-rq-status-l9fpc" /status was patched
  STEP: Get "e2e-rq-status-l9fpc" /status @ 09/11/23 01:00:40.352
  Sep 11 01:00:40.356: INFO: Resourcequota "e2e-rq-status-l9fpc" reports status: hard cpu of 1
  Sep 11 01:00:40.356: INFO: Resourcequota "e2e-rq-status-l9fpc" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-l9fpc" /status before checking Spec is unchanged @ 09/11/23 01:00:40.359
  Sep 11 01:00:40.369: INFO: Resourcequota "e2e-rq-status-l9fpc" reports status: hard cpu of 2
  Sep 11 01:00:40.369: INFO: Resourcequota "e2e-rq-status-l9fpc" reports status: hard memory of 2Gi
  Sep 11 01:00:40.370: INFO: Found resourceQuota "e2e-rq-status-l9fpc" in namespace "resourcequota-7295" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0911 01:00:41.299395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:42.299839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:43.299814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:44.299988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:45.300083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:46.300217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:47.300375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:48.300512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:49.300624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:50.300806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:51.301226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:52.302194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:53.302281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:54.302386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:55.302490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:56.302621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:57.302877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:58.303073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:00:59.303894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:00.304820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:01.305637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:02.305714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:03.305823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:04.306025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:05.306812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:06.309333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:07.309888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:08.310570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:09.311091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:10.311822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:11.311944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:12.312275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:13.312531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:14.312681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:15.313241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:16.313807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:17.313897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:18.314243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:19.314569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:20.315427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:21.315570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:22.315700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:23.316826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:24.317111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:25.317236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:26.317593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:27.317700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:28.317812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:29.318061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:30.318864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:31.319878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:32.319995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:33.320163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:34.320294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:35.320505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:36.320548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:37.320672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:38.320806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:39.320984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:40.321810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:41.321949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:42.322037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:43.322478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:44.322583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:45.322821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:46.322951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:47.323086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:48.323194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:49.323373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:50.323462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:51.324537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:52.324586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:53.324691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:54.325314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:55.325489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:56.325866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:57.325937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:58.326036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:01:59.326793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:00.326928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:01.327901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:02.328283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:03.328591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:04.328677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:05.329302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:06.329693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:07.330277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:08.330406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:09.330786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:10.330926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:11.331019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:12.331169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:13.331300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:14.331421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:15.331567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:16.331767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:17.331899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:18.332020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:19.332185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:20.333033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:21.333195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:22.333333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:23.336820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:24.335564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:25.335794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:26.335920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:27.336055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:28.336165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:29.336284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:30.337107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:31.337235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:32.337342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:33.337464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:34.337882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:35.338348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:36.338844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:37.344274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:38.344407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:39.344573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:40.345280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:41.345398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:42.345652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:43.346673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:44.346778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:45.347520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:46.347641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:47.348171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:48.348386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:49.348498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:50.348629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:51.348990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:52.349129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:53.349242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:54.349929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:55.350059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:56.350262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:57.350426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:58.350577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:02:59.350745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:00.351482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:01.351594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:02.351763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:03.351854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:04.352041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:05.352192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:06.352323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:07.352441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:08.352734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:09.352860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:10.353565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:11.354441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:12.354825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:13.355168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:14.355506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:15.355996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:16.356145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:17.356312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:18.356397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:19.356703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:20.356830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:21.356968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:22.357321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:23.357608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:24.358148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:25.358610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:26.358822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:27.359884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:28.360021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:29.360196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:30.360924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:31.361118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:32.361280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:33.361890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:34.362062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:35.362158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:36.362301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:37.362517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:38.362845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:39.362967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:40.363750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:41.363864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:42.364419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:43.364539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:44.364618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:45.364750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:46.365113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:47.365241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:48.365353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:49.365541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:50.365755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:51.365948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:52.366789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:53.366914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:54.368108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:55.368160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:56.368290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:57.368406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:58.368594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:03:59.368936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:00.369027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:01.369212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:02.369325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:03.369450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:04.369974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:05.370099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:06.370250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:07.370356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:08.378205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:09.379245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:10.379751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:11.379898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:12.380028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:13.380242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:14.380455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:15.381427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:16.381687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:17.381828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:18.381935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:19.382086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:20.383113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:21.383609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:22.383786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:23.383945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:24.384535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:25.385099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:26.385273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:27.387501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:28.387650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:29.387818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:30.388296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:31.388502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:32.388843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:33.389398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:34.389490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:35.390048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:36.390350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:37.390956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:38.391302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:39.391888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:40.392884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:41.393070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:42.393268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:43.393457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:44.393658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:45.394517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:46.394732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:47.394856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:48.395019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:49.395136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:50.395764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:51.395911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:52.396296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:53.397280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:54.398000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:55.399019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:56.399195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:57.399311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:58.399366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:04:59.399491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:00.400252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:01.400397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:02.400563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:03.400634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:04.400771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:05.401468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:06.401604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:07.402098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:08.402315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:09.406816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:10.379: INFO: ResourceQuota "e2e-rq-status-l9fpc" Spec was unchanged and /status reset
  Sep 11 01:05:10.379: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7295" for this suite. @ 09/11/23 01:05:10.387
• [270.143 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/11/23 01:05:10.401
  Sep 11 01:05:10.401: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 01:05:10.403
  E0911 01:05:10.407571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:05:10.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:05:10.426
  STEP: Creating service test in namespace statefulset-685 @ 09/11/23 01:05:10.429
  STEP: Creating stateful set ss in namespace statefulset-685 @ 09/11/23 01:05:10.437
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-685 @ 09/11/23 01:05:10.45
  Sep 11 01:05:10.458: INFO: Found 0 stateful pods, waiting for 1
  E0911 01:05:11.407876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:12.407911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:13.408318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:14.408626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:15.409550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:16.409782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:17.409912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:18.409984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:19.410162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:20.410333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:20.464: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/11/23 01:05:20.464
  Sep 11 01:05:20.469: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 01:05:20.695: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:05:20.695: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:05:20.695: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:05:20.699: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0911 01:05:21.410370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:22.410510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:23.410757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:24.410825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:25.411188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:26.411311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:27.411436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:28.411584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:29.411836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:30.412857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:30.705: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:05:30.705: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 01:05:30.728: INFO: POD   NODE                                       PHASE    GRACE  CONDITIONS
  Sep 11 01:05:30.728: INFO: ss-0  ip-172-31-8-29.us-east-2.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC  }]
  Sep 11 01:05:30.728: INFO: 
  Sep 11 01:05:30.728: INFO: StatefulSet ss has not reached scale 3, at 1
  E0911 01:05:31.413861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:31.736: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995262796s
  E0911 01:05:32.413982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:32.740: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.988283739s
  E0911 01:05:33.414890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:33.746: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.98323398s
  E0911 01:05:34.415940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:34.750: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.978414221s
  E0911 01:05:35.416052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:35.755: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.974304772s
  E0911 01:05:36.416236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:36.760: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968864137s
  E0911 01:05:37.416403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:37.770: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963677886s
  E0911 01:05:38.416967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:38.775: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953972023s
  E0911 01:05:39.418141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:39.780: INFO: Verifying statefulset ss doesn't scale past 3 for another 948.794502ms
  E0911 01:05:40.418830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-685 @ 09/11/23 01:05:40.781
  Sep 11 01:05:40.786: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:05:41.028: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 01:05:41.028: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:05:41.028: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:05:41.028: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:05:41.253: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 11 01:05:41.253: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:05:41.253: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:05:41.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0911 01:05:41.419836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:41.480: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 11 01:05:41.480: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:05:41.480: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:05:41.485: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  E0911 01:05:42.420011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:43.420257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:44.420371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:45.420511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:46.420710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:47.421135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:48.421362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:49.421607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:50.421972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:51.422156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:51.492: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 01:05:51.492: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 01:05:51.492: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/11/23 01:05:51.492
  Sep 11 01:05:51.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 01:05:52.079: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:05:52.079: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:05:52.079: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:05:52.079: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 01:05:52.321: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:05:52.321: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:05:52.321: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:05:52.321: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-685 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0911 01:05:52.422391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:05:52.797: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:05:52.797: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:05:52.797: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:05:52.797: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 01:05:52.800: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0911 01:05:53.423415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:54.423767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:55.424272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:56.424523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:57.424679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:58.424928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:05:59.425016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:00.425195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:01.425365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:02.425529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:02.808: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:06:02.808: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:06:02.808: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:06:02.822: INFO: POD   NODE                                         PHASE    GRACE  CONDITIONS
  Sep 11 01:06:02.822: INFO: ss-0  ip-172-31-8-29.us-east-2.compute.internal    Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:52 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC  }]
  Sep 11 01:06:02.823: INFO: ss-1  ip-172-31-14-171.us-east-2.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC  }]
  Sep 11 01:06:02.823: INFO: ss-2  ip-172-31-15-132.us-east-2.compute.internal  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC  }]
  Sep 11 01:06:02.823: INFO: 
  Sep 11 01:06:02.823: INFO: StatefulSet ss has not reached scale 0, at 3
  E0911 01:06:03.426684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:03.827: INFO: POD   NODE                                         PHASE      GRACE  CONDITIONS
  Sep 11 01:06:03.827: INFO: ss-0  ip-172-31-8-29.us-east-2.compute.internal    Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:52 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:52 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:10 +0000 UTC  }]
  Sep 11 01:06:03.827: INFO: ss-2  ip-172-31-15-132.us-east-2.compute.internal  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:53 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-11 01:05:30 +0000 UTC  }]
  Sep 11 01:06:03.827: INFO: 
  Sep 11 01:06:03.827: INFO: StatefulSet ss has not reached scale 0, at 2
  E0911 01:06:04.426863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:04.832: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.989313806s
  E0911 01:06:05.427021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:05.837: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.985360931s
  E0911 01:06:06.427910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:06.841: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.980504336s
  E0911 01:06:07.427968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:07.846: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97554199s
  E0911 01:06:08.428092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:08.850: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.971623818s
  E0911 01:06:09.433757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:09.855: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.967346269s
  E0911 01:06:10.433960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:10.859: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.962438783s
  E0911 01:06:11.435010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:11.865: INFO: Verifying statefulset ss doesn't scale past 0 for another 958.464967ms
  E0911 01:06:12.435930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-685 @ 09/11/23 01:06:12.866
  Sep 11 01:06:12.870: INFO: Scaling statefulset ss to 0
  Sep 11 01:06:12.882: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 01:06:12.885: INFO: Deleting all statefulset in ns statefulset-685
  Sep 11 01:06:12.889: INFO: Scaling statefulset ss to 0
  Sep 11 01:06:12.900: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 11 01:06:12.904: INFO: Deleting statefulset ss
  Sep 11 01:06:12.923: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-685" for this suite. @ 09/11/23 01:06:12.93
• [62.538 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/11/23 01:06:12.94
  Sep 11 01:06:12.940: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename endpointslice @ 09/11/23 01:06:12.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:06:12.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:06:12.966
  E0911 01:06:13.436116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:14.436187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:15.068: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3013" for this suite. @ 09/11/23 01:06:15.077
• [2.148 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/11/23 01:06:15.089
  Sep 11 01:06:15.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 01:06:15.09
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:06:15.114
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:06:15.118
  STEP: Creating a ResourceQuota @ 09/11/23 01:06:15.121
  STEP: Getting a ResourceQuota @ 09/11/23 01:06:15.129
  STEP: Updating a ResourceQuota @ 09/11/23 01:06:15.137
  STEP: Verifying a ResourceQuota was modified @ 09/11/23 01:06:15.151
  STEP: Deleting a ResourceQuota @ 09/11/23 01:06:15.157
  STEP: Verifying the deleted ResourceQuota @ 09/11/23 01:06:15.17
  Sep 11 01:06:15.178: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-743" for this suite. @ 09/11/23 01:06:15.183
• [0.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/11/23 01:06:15.195
  Sep 11 01:06:15.195: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 01:06:15.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:06:15.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:06:15.221
  E0911 01:06:15.436716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:16.437123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:17.437417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:18.437553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:19.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7308" for this suite. @ 09/11/23 01:06:19.273
• [4.087 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/11/23 01:06:19.282
  Sep 11 01:06:19.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 01:06:19.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:06:19.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:06:19.321
  STEP: Creating service test in namespace statefulset-4529 @ 09/11/23 01:06:19.324
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/11/23 01:06:19.34
  STEP: Creating stateful set ss in namespace statefulset-4529 @ 09/11/23 01:06:19.364
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4529 @ 09/11/23 01:06:19.371
  Sep 11 01:06:19.375: INFO: Found 0 stateful pods, waiting for 1
  E0911 01:06:19.438427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:20.438958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:21.439815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:22.439935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:23.440071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:24.440187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:25.440334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:26.440624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:27.441382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:28.441479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:29.380: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/11/23 01:06:29.38
  Sep 11 01:06:29.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0911 01:06:29.442205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:29.592: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:06:29.592: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:06:29.592: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:06:29.596: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0911 01:06:30.441834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:31.442696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:32.443388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:33.443503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:34.444506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:35.444622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:36.446856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:37.446967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:38.447080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:39.447231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:39.601: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:06:39.601: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 01:06:39.621: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.9999997s
  E0911 01:06:40.447938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:40.627: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.992463892s
  E0911 01:06:41.448050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:41.631: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.98629432s
  E0911 01:06:42.449103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:42.640: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.981042242s
  E0911 01:06:43.449220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:43.648: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.972185535s
  E0911 01:06:44.450296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:44.652: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.965264344s
  E0911 01:06:45.451207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:45.657: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.96013317s
  E0911 01:06:46.451342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:46.661: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.956084879s
  E0911 01:06:47.451510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:47.666: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.950916065s
  E0911 01:06:48.451807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:48.673: INFO: Verifying statefulset ss doesn't scale past 1 for another 946.3903ms
  E0911 01:06:49.454804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4529 @ 09/11/23 01:06:49.674
  Sep 11 01:06:49.680: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:06:49.940: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 01:06:49.940: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:06:49.940: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:06:49.955: INFO: Found 1 stateful pods, waiting for 3
  E0911 01:06:50.454948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:51.455323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:52.455505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:53.455929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:54.456813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:55.456913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:56.457142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:57.457258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:58.457381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:06:59.457600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:06:59.961: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 01:06:59.961: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 01:06:59.961: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/11/23 01:06:59.961
  STEP: Scale down will halt with unhealthy stateful pod @ 09/11/23 01:06:59.961
  Sep 11 01:06:59.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 01:07:00.206: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:07:00.206: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:07:00.206: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:07:00.206: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 11 01:07:00.411: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:07:00.411: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:07:00.412: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:07:00.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0911 01:07:00.458225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:00.629: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 11 01:07:00.629: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 11 01:07:00.629: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 11 01:07:00.629: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 11 01:07:00.633: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  E0911 01:07:01.458989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:02.459110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:03.459892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:04.461231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:05.461331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:06.461483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:07.461629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:08.461753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:09.461915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:10.462088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:10.643: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:07:10.643: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:07:10.643: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 11 01:07:10.656: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.99999965s
  E0911 01:07:11.462236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:11.661: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.995505964s
  E0911 01:07:12.462392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:12.666: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.991089909s
  E0911 01:07:13.463480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:13.671: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.985922334s
  E0911 01:07:14.464035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:14.676: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.980375927s
  E0911 01:07:15.464145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:15.684: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.975207239s
  E0911 01:07:16.465101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:16.692: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.968193579s
  E0911 01:07:17.465264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:17.698: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.95920318s
  E0911 01:07:18.465575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:18.706: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.953656768s
  E0911 01:07:19.468012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:19.713: INFO: Verifying statefulset ss doesn't scale past 3 for another 945.396268ms
  E0911 01:07:20.468106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4529 @ 09/11/23 01:07:20.714
  Sep 11 01:07:20.719: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:07:20.940: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 01:07:20.940: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:07:20.940: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:07:20.940: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:07:21.207: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 01:07:21.207: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:07:21.207: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:07:21.208: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=statefulset-4529 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 11 01:07:21.430: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 11 01:07:21.430: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 11 01:07:21.430: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 11 01:07:21.430: INFO: Scaling statefulset ss to 0
  E0911 01:07:21.469144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:22.469862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:23.469998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:24.470444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:25.471043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:26.471049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:27.474781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:28.474865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:29.475098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:30.475706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/11/23 01:07:31.448
  Sep 11 01:07:31.449: INFO: Deleting all statefulset in ns statefulset-4529
  Sep 11 01:07:31.454: INFO: Scaling statefulset ss to 0
  Sep 11 01:07:31.474: INFO: Waiting for statefulset status.replicas updated to 0
  E0911 01:07:31.476569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:07:31.479: INFO: Deleting statefulset ss
  Sep 11 01:07:31.503: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4529" for this suite. @ 09/11/23 01:07:31.509
• [72.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/11/23 01:07:31.52
  Sep 11 01:07:31.520: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 01:07:31.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:07:31.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:07:31.549
  STEP: creating the pod with failed condition @ 09/11/23 01:07:31.552
  E0911 01:07:32.477357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:33.477334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:34.477454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:35.478180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:36.478917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:37.482716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:38.483167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:39.483850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:40.484944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:41.485171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:42.485420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:43.485574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:44.485727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:45.486162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:46.486825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:47.488823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:48.488905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:49.489017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:50.489699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:51.490024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:52.490166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:53.490393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:54.490561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:55.490805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:56.491799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:57.492671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:58.492824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:07:59.492942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:00.493054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:01.493323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:02.496235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:03.496332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:04.496545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:05.497367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:06.498248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:07.506518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:08.507005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:09.507868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:10.508050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:11.508286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:12.508938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:13.509159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:14.509726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:15.510007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:16.510372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:17.519078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:18.519852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:19.520065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:20.520367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:21.520649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:22.521736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:23.521957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:24.522079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:25.522791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:26.523294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:27.523869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:28.523989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:29.524314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:30.530783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:31.530978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:32.531981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:33.532128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:34.532228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:35.532363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:36.532450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:37.532936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:38.533913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:39.534098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:40.534101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:41.534264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:42.534375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:43.534720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:44.535148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:45.535264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:46.535407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:47.535791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:48.535943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:49.536058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:50.536425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:51.536343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:52.536306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:53.536433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:54.536835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:55.537263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:56.537451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:57.537607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:58.538002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:08:59.538594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:00.539302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:01.538933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:02.539908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:03.540584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:04.540665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:05.540776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:06.541660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:07.541807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:08.542529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:09.542795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:10.542906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:11.543916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:12.544808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:13.545234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:14.545707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:15.546475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:16.546869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:17.546976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:18.547586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:19.547661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:20.548122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:21.548250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:22.548763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:23.548854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:24.549741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:25.550325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:26.550821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:27.550964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:28.551549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:29.552086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:30.554916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:31.555046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 09/11/23 01:09:31.563
  Sep 11 01:09:32.112: INFO: Successfully updated pod "var-expansion-5f235ef6-5e0d-42a4-a82a-226b4cb442a5"
  STEP: waiting for pod running @ 09/11/23 01:09:32.113
  E0911 01:09:32.555902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:33.556002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/11/23 01:09:34.141
  Sep 11 01:09:34.141: INFO: Deleting pod "var-expansion-5f235ef6-5e0d-42a4-a82a-226b4cb442a5" in namespace "var-expansion-759"
  Sep 11 01:09:34.152: INFO: Wait up to 5m0s for pod "var-expansion-5f235ef6-5e0d-42a4-a82a-226b4cb442a5" to be fully deleted
  E0911 01:09:34.556289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:35.556428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:36.557146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:37.558902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:38.559402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:39.559526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:40.560365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:41.560846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:42.561010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:43.561108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:44.561236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:45.562280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:46.562913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:47.565278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:48.565945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:49.566767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:50.566812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:51.566906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:52.567950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:53.568075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:54.568649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:55.570782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:56.571984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:57.574823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:58.575711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:09:59.576114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:00.577150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:01.577351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:02.577924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:03.578036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:04.582978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:05.583636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:06.269: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-759" for this suite. @ 09/11/23 01:10:06.273
• [154.762 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/11/23 01:10:06.282
  Sep 11 01:10:06.282: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename daemonsets @ 09/11/23 01:10:06.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:10:06.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:10:06.308
  STEP: Creating simple DaemonSet "daemon-set" @ 09/11/23 01:10:06.338
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/11/23 01:10:06.344
  Sep 11 01:10:06.355: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:10:06.356: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:06.587589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:07.368: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:10:07.369: INFO: Node ip-172-31-10-18.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:07.588175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:08.366: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 01:10:08.366: INFO: Node ip-172-31-14-171.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:08.588262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:09.370: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 01:10:09.371: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/11/23 01:10:09.375
  Sep 11 01:10:09.415: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 01:10:09.415: INFO: Node ip-172-31-15-132.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:09.589267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:10.425: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 01:10:10.425: INFO: Node ip-172-31-15-132.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:10.590249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:11.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 3
  Sep 11 01:10:11.427: INFO: Node ip-172-31-15-132.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0911 01:10:11.590875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:12.429: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 4
  Sep 11 01:10:12.430: INFO: Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/11/23 01:10:12.444
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8279, will wait for the garbage collector to delete the pods @ 09/11/23 01:10:12.445
  Sep 11 01:10:12.507: INFO: Deleting DaemonSet.extensions daemon-set took: 6.629183ms
  E0911 01:10:12.591622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:12.607: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.175042ms
  E0911 01:10:13.592081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:14.592852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:15.112: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 11 01:10:15.112: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 11 01:10:15.115: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"117498"},"items":null}

  Sep 11 01:10:15.118: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"117498"},"items":null}

  Sep 11 01:10:15.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8279" for this suite. @ 09/11/23 01:10:15.141
• [8.866 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/11/23 01:10:15.149
  Sep 11 01:10:15.149: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 01:10:15.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:10:15.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:10:15.187
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/11/23 01:10:15.191
  Sep 11 01:10:15.192: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:10:15.593573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:16.594014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:17.595567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:18.595515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:19.596463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:20.597171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:21.597349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/11/23 01:10:22.324
  Sep 11 01:10:22.326: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:10:22.597995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:23.598210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:24.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:10:24.598599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:25.598896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:26.599247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:27.600972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:28.602810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:29.603288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:30.603490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:31.604435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:10:32.137: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4467" for this suite. @ 09/11/23 01:10:32.145
• [17.002 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/11/23 01:10:32.153
  Sep 11 01:10:32.153: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename taint-single-pod @ 09/11/23 01:10:32.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:10:32.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:10:32.185
  Sep 11 01:10:32.191: INFO: Waiting up to 1m0s for all nodes to be ready
  E0911 01:10:32.605186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:33.605442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:34.606099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:35.606144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:36.607267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:37.608911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:38.607995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:39.608172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:40.608738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:41.609134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:42.609265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:43.609404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:44.610375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:45.610787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:46.610941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:47.611065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:48.611190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:49.611336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:50.611999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:51.612135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:52.613081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:53.613236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:54.613388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:55.613621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:56.614169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:57.615096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:58.615515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:10:59.615615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:00.616399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:01.616656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:02.616928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:03.616991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:04.617120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:05.617279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:06.617441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:07.619965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:08.617747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:09.618019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:10.618734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:11.618901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:12.619717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:13.619993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:14.620970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:15.621519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:16.621647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:17.621789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:18.622584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:19.622846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:20.623256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:21.624019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:22.625136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:23.625223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:24.625709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:25.626224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:26.626941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:27.627035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:28.627926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:29.628129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:30.628279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:31.628631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:11:32.236: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 01:11:32.240: INFO: Starting informer...
  STEP: Starting pod... @ 09/11/23 01:11:32.24
  Sep 11 01:11:32.460: INFO: Pod is running on ip-172-31-8-29.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/11/23 01:11:32.46
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 01:11:32.478
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/11/23 01:11:32.487
  Sep 11 01:11:32.487: INFO: Pod wasn't evicted. Proceeding
  Sep 11 01:11:32.487: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/11/23 01:11:32.543
  E0911 01:11:32.629296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting some time to make sure that toleration time passed. @ 09/11/23 01:11:32.696
  E0911 01:11:33.629428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:34.629792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:35.629803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:36.629978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:37.630340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:38.630889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:39.631325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:40.631897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:41.632444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:42.632704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:43.633040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:44.633479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:45.635517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:46.635895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:47.636501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:48.636635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:49.636731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:50.636856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:51.637032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:52.637113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:53.637517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:54.637648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:55.637732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:56.637886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:57.637998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:58.638129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:11:59.638280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:00.638840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:01.639902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:02.640261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:03.640606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:04.641033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:05.641526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:06.642028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:07.642144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:08.642445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:09.642793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:10.642911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:11.643047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:12.643148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:13.643479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:14.643644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:15.643791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:16.643942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:17.644071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:18.644432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:19.644825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:20.645881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:21.646019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:22.646117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:23.646230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:24.646714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:25.646786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:26.647896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:27.648033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:28.648159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:29.648398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:30.648503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:31.648632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:32.648799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:33.648864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:34.649007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:35.649813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:36.650153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:37.650823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:38.650906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:39.651061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:40.651210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:41.652339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:42.652449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:43.653504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:44.653644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:45.653762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:46.653896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:47.654011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:12:47.697: INFO: Pod wasn't evicted. Test successful
  Sep 11 01:12:47.697: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2719" for this suite. @ 09/11/23 01:12:47.703
• [135.555 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/11/23 01:12:47.71
  Sep 11 01:12:47.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename runtimeclass @ 09/11/23 01:12:47.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:12:47.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:12:47.735
  E0911 01:12:48.654121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:49.654290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:12:49.762: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8607" for this suite. @ 09/11/23 01:12:49.772
• [2.070 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/11/23 01:12:49.784
  Sep 11 01:12:49.784: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:12:49.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:12:49.803
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:12:49.808
  STEP: create deployment with httpd image @ 09/11/23 01:12:49.81
  Sep 11 01:12:49.810: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3455 create -f -'
  Sep 11 01:12:50.066: INFO: stderr: ""
  Sep 11 01:12:50.066: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/11/23 01:12:50.066
  Sep 11 01:12:50.066: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3455 diff -f -'
  E0911 01:12:50.654918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:12:50.744: INFO: rc: 1
  Sep 11 01:12:50.745: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-3455 delete -f -'
  Sep 11 01:12:50.884: INFO: stderr: ""
  Sep 11 01:12:50.884: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 11 01:12:50.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3455" for this suite. @ 09/11/23 01:12:50.892
• [1.118 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/11/23 01:12:50.9
  Sep 11 01:12:50.900: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:12:50.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:12:50.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:12:50.952
  STEP: creating a replication controller @ 09/11/23 01:12:50.956
  Sep 11 01:12:50.956: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 create -f -'
  Sep 11 01:12:51.278: INFO: stderr: ""
  Sep 11 01:12:51.278: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 01:12:51.278
  Sep 11 01:12:51.278: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:12:51.413: INFO: stderr: ""
  Sep 11 01:12:51.413: INFO: stdout: "update-demo-nautilus-b9p4d update-demo-nautilus-n9hrr "
  Sep 11 01:12:51.413: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods update-demo-nautilus-b9p4d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:12:51.490: INFO: stderr: ""
  Sep 11 01:12:51.490: INFO: stdout: ""
  Sep 11 01:12:51.490: INFO: update-demo-nautilus-b9p4d is created but not running
  E0911 01:12:51.655366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:52.655743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:53.656816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:54.656820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:55.657255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:12:56.490: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:12:56.618: INFO: stderr: ""
  Sep 11 01:12:56.618: INFO: stdout: "update-demo-nautilus-b9p4d update-demo-nautilus-n9hrr "
  Sep 11 01:12:56.618: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods update-demo-nautilus-b9p4d -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0911 01:12:56.658003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:12:56.734: INFO: stderr: ""
  Sep 11 01:12:56.734: INFO: stdout: "true"
  Sep 11 01:12:56.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods update-demo-nautilus-b9p4d -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:12:56.851: INFO: stderr: ""
  Sep 11 01:12:56.851: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:12:56.851: INFO: validating pod update-demo-nautilus-b9p4d
  Sep 11 01:12:56.859: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:12:56.859: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:12:56.859: INFO: update-demo-nautilus-b9p4d is verified up and running
  Sep 11 01:12:56.859: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods update-demo-nautilus-n9hrr -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:12:56.942: INFO: stderr: ""
  Sep 11 01:12:56.942: INFO: stdout: "true"
  Sep 11 01:12:56.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods update-demo-nautilus-n9hrr -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:12:57.042: INFO: stderr: ""
  Sep 11 01:12:57.042: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:12:57.042: INFO: validating pod update-demo-nautilus-n9hrr
  Sep 11 01:12:57.050: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:12:57.050: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:12:57.050: INFO: update-demo-nautilus-n9hrr is verified up and running
  STEP: using delete to clean up resources @ 09/11/23 01:12:57.05
  Sep 11 01:12:57.051: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 delete --grace-period=0 --force -f -'
  Sep 11 01:12:57.142: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:12:57.142: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 11 01:12:57.142: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get rc,svc -l name=update-demo --no-headers'
  Sep 11 01:12:57.238: INFO: stderr: "No resources found in kubectl-9925 namespace.\n"
  Sep 11 01:12:57.238: INFO: stdout: ""
  Sep 11 01:12:57.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9925 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 01:12:57.330: INFO: stderr: ""
  Sep 11 01:12:57.330: INFO: stdout: ""
  Sep 11 01:12:57.330: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9925" for this suite. @ 09/11/23 01:12:57.335
• [6.442 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/11/23 01:12:57.343
  Sep 11 01:12:57.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:12:57.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:12:57.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:12:57.367
  STEP: Creating projection with secret that has name projected-secret-test-4f24ce8f-3268-48e6-8707-427c35ceeb3a @ 09/11/23 01:12:57.37
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:12:57.376
  E0911 01:12:57.659002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:58.659610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:12:59.660493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:00.660661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:01.660725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:02.660889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:13:03.408
  Sep 11 01:13:03.410: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-78e571ba-ff13-45e1-ac50-6513419460d6 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:13:03.427
  Sep 11 01:13:03.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5968" for this suite. @ 09/11/23 01:13:03.459
• [6.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/11/23 01:13:03.468
  Sep 11 01:13:03.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 01:13:03.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:03.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:03.49
  STEP: creating the pod @ 09/11/23 01:13:03.493
  STEP: setting up watch @ 09/11/23 01:13:03.493
  STEP: submitting the pod to kubernetes @ 09/11/23 01:13:03.596
  STEP: verifying the pod is in kubernetes @ 09/11/23 01:13:03.606
  STEP: verifying pod creation was observed @ 09/11/23 01:13:03.609
  E0911 01:13:03.661743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:04.662816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 09/11/23 01:13:05.622
  STEP: verifying pod deletion was observed @ 09/11/23 01:13:05.642
  E0911 01:13:05.663085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:06.665277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:07.667018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:07.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8547" for this suite. @ 09/11/23 01:13:07.991
• [4.537 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/11/23 01:13:08.007
  Sep 11 01:13:08.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:13:08.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:08.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:08.03
  STEP: creating a collection of services @ 09/11/23 01:13:08.033
  Sep 11 01:13:08.033: INFO: Creating e2e-svc-a-rvss6
  Sep 11 01:13:08.048: INFO: Creating e2e-svc-b-qrpm4
  Sep 11 01:13:08.062: INFO: Creating e2e-svc-c-ptx6j
  STEP: deleting service collection @ 09/11/23 01:13:08.087
  Sep 11 01:13:08.123: INFO: Collection of services has been deleted
  Sep 11 01:13:08.123: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-467" for this suite. @ 09/11/23 01:13:08.127
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/11/23 01:13:08.138
  Sep 11 01:13:08.139: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:13:08.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:08.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:08.163
  STEP: Creating configMap with name projected-configmap-test-volume-af44b5f3-268c-43e4-9204-06eb543e1c69 @ 09/11/23 01:13:08.167
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:13:08.172
  E0911 01:13:08.667081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:09.667305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:10.667362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:11.667644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:13:12.192
  Sep 11 01:13:12.195: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-0bc850fa-5169-4d8c-aef4-de83287e9102 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:13:12.201
  Sep 11 01:13:12.216: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5813" for this suite. @ 09/11/23 01:13:12.221
• [4.089 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/11/23 01:13:12.228
  Sep 11 01:13:12.228: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:13:12.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:12.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:12.249
  STEP: creating Agnhost RC @ 09/11/23 01:13:12.253
  Sep 11 01:13:12.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8888 create -f -'
  Sep 11 01:13:12.560: INFO: stderr: ""
  Sep 11 01:13:12.560: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/11/23 01:13:12.56
  E0911 01:13:12.668056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:13.566: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 01:13:13.566: INFO: Found 0 / 1
  E0911 01:13:13.669336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:14.564: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 01:13:14.564: INFO: Found 1 / 1
  Sep 11 01:13:14.564: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/11/23 01:13:14.564
  Sep 11 01:13:14.567: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 01:13:14.567: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 01:13:14.567: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8888 patch pod agnhost-primary-2prjw -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep 11 01:13:14.662: INFO: stderr: ""
  Sep 11 01:13:14.662: INFO: stdout: "pod/agnhost-primary-2prjw patched\n"
  STEP: checking annotations @ 09/11/23 01:13:14.662
  Sep 11 01:13:14.666: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 11 01:13:14.666: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 11 01:13:14.666: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 01:13:14.669162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-8888" for this suite. @ 09/11/23 01:13:14.67
• [2.447 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/11/23 01:13:14.676
  Sep 11 01:13:14.676: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:13:14.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:14.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:14.695
  STEP: Creating a pod to test downward api env vars @ 09/11/23 01:13:14.699
  E0911 01:13:15.669546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:16.669530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:17.669821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:18.669872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:13:18.722
  Sep 11 01:13:18.725: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downward-api-bf5a601f-61cf-4fda-82c6-687c4ec86214 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:13:18.733
  Sep 11 01:13:18.747: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8345" for this suite. @ 09/11/23 01:13:18.752
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/11/23 01:13:18.759
  Sep 11 01:13:18.760: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:13:18.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:18.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:18.783
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8502 @ 09/11/23 01:13:18.785
  STEP: changing the ExternalName service to type=ClusterIP @ 09/11/23 01:13:18.79
  STEP: creating replication controller externalname-service in namespace services-8502 @ 09/11/23 01:13:18.805
  I0911 01:13:18.817632      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-8502, replica count: 2
  E0911 01:13:19.670701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:20.670967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:21.672095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:13:21.869568      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:13:21.869: INFO: Creating new exec pod
  E0911 01:13:22.673190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:23.673194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:24.673237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:24.889: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-8502 exec execpodqz5k2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 11 01:13:25.112: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 11 01:13:25.112: INFO: stdout: "externalname-service-w4xb2"
  Sep 11 01:13:25.112: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-8502 exec execpodqz5k2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.115.20 80'
  Sep 11 01:13:25.318: INFO: stderr: "+ + nc -v -t -w 2 10.43.115.20 80\necho hostName\nConnection to 10.43.115.20 80 port [tcp/http] succeeded!\n"
  Sep 11 01:13:25.318: INFO: stdout: ""
  E0911 01:13:25.673949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:26.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-8502 exec execpodqz5k2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.115.20 80'
  Sep 11 01:13:26.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.115.20 80\nConnection to 10.43.115.20 80 port [tcp/http] succeeded!\n"
  Sep 11 01:13:26.515: INFO: stdout: "externalname-service-w4xb2"
  Sep 11 01:13:26.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:13:26.519: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-8502" for this suite. @ 09/11/23 01:13:26.545
• [7.797 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/11/23 01:13:26.557
  Sep 11 01:13:26.557: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:13:26.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:26.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:26.58
  STEP: Setting up server cert @ 09/11/23 01:13:26.604
  E0911 01:13:26.674016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:13:27.433
  STEP: Deploying the webhook pod @ 09/11/23 01:13:27.44
  STEP: Wait for the deployment to be ready @ 09/11/23 01:13:27.456
  Sep 11 01:13:27.482: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 01:13:27.674869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:28.675198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 01:13:29.493
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:13:29.513
  E0911 01:13:29.675576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:30.513: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/11/23 01:13:30.532
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/11/23 01:13:30.569
  STEP: Creating a dummy validating-webhook-configuration object @ 09/11/23 01:13:30.593
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/11/23 01:13:30.601
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/11/23 01:13:30.607
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/11/23 01:13:30.617
  Sep 11 01:13:30.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0911 01:13:30.676027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-9390" for this suite. @ 09/11/23 01:13:30.696
  STEP: Destroying namespace "webhook-markers-7814" for this suite. @ 09/11/23 01:13:30.705
• [4.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/11/23 01:13:30.717
  Sep 11 01:13:30.717: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/11/23 01:13:30.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:30.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:30.738
  STEP: getting /apis @ 09/11/23 01:13:30.741
  STEP: getting /apis/storage.k8s.io @ 09/11/23 01:13:30.746
  STEP: getting /apis/storage.k8s.io/v1 @ 09/11/23 01:13:30.747
  STEP: creating @ 09/11/23 01:13:30.749
  STEP: watching @ 09/11/23 01:13:30.765
  Sep 11 01:13:30.765: INFO: starting watch
  STEP: getting @ 09/11/23 01:13:30.781
  STEP: listing in namespace @ 09/11/23 01:13:30.784
  STEP: listing across namespaces @ 09/11/23 01:13:30.788
  STEP: patching @ 09/11/23 01:13:30.79
  STEP: updating @ 09/11/23 01:13:30.797
  Sep 11 01:13:30.802: INFO: waiting for watch events with expected annotations in namespace
  Sep 11 01:13:30.802: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/11/23 01:13:30.802
  STEP: deleting a collection @ 09/11/23 01:13:30.823
  Sep 11 01:13:30.838: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2582" for this suite. @ 09/11/23 01:13:30.843
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/11/23 01:13:30.853
  Sep 11 01:13:30.853: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:13:30.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:30.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:30.985
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:13:30.995
  E0911 01:13:31.676093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:32.679162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:33.679931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:34.680274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:13:35.077
  Sep 11 01:13:35.086: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-b9a2168a-7f0c-47f6-8403-967e310d85bd container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:13:35.123
  Sep 11 01:13:35.166: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6856" for this suite. @ 09/11/23 01:13:35.177
• [4.344 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/11/23 01:13:35.199
  Sep 11 01:13:35.199: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 01:13:35.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:35.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:35.23
  Sep 11 01:13:35.234: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 01:13:35.247: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 01:13:35.253: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-18.us-east-2.compute.internal before test
  Sep 11 01:13:35.275: INFO: cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:52 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.275: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.275: INFO: etcd-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:26 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.275: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:13:35.275: INFO: helm-install-rke2-canal-wfr9f from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.275: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.275: INFO: helm-install-rke2-coredns-rbzhs from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.276: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.276: INFO: helm-install-rke2-ingress-nginx-f6vgj from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.276: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.276: INFO: helm-install-rke2-metrics-server-tlnph from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.276: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.276: INFO: helm-install-rke2-snapshot-controller-4gnfg from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.276: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.276: INFO: helm-install-rke2-snapshot-controller-crd-m4bzm from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.276: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.276: INFO: helm-install-rke2-snapshot-validation-webhook-g98tk from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.277: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:13:35.277: INFO: kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:45 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.277: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:13:35.277: INFO: kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.278: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.278: INFO: kube-proxy-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:10:11 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.278: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:13:35.278: INFO: kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.278: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:13:35.278: INFO: rke2-canal-d7lfd from kube-system started at 2023-09-10 18:10:24 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.278: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:13:35.278: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:13:35.278: INFO: rke2-coredns-rke2-coredns-67f86d96c-ncf6n from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.278: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 01:13:35.279: INFO: rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629 from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.279: INFO: 	Container autoscaler ready: true, restart count 0
  Sep 11 01:13:35.279: INFO: rke2-ingress-nginx-controller-479nb from kube-system started at 2023-09-10 18:11:44 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.279: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:13:35.279: INFO: rke2-metrics-server-c6fb46b64-jjcx6 from kube-system started at 2023-09-10 18:11:25 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.279: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 01:13:35.279: INFO: rke2-snapshot-controller-59cc9cd8f4-qxkng from kube-system started at 2023-09-10 18:11:26 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.279: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Sep 11 01:13:35.279: INFO: rke2-snapshot-validation-webhook-54c5989b65-lbplz from kube-system started at 2023-09-10 18:11:30 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.279: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Sep 11 01:13:35.280: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.280: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:13:35.280: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:13:35.280: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-171.us-east-2.compute.internal before test
  Sep 11 01:13:35.292: INFO: cloud-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.292: INFO: etcd-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:13:35.292: INFO: kube-apiserver-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:13:31 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:13:35.292: INFO: kube-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.292: INFO: kube-proxy-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:59 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:13:35.292: INFO: kube-scheduler-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.292: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: rke2-canal-zz74w from kube-system started at 2023-09-10 18:13:51 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.293: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: rke2-ingress-nginx-controller-9ws57 from kube-system started at 2023-09-10 18:15:34 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.293: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-rbrkn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.293: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:13:35.293: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-132.us-east-2.compute.internal before test
  Sep 11 01:13:35.304: INFO: cloud-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.304: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: etcd-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:40 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: kube-apiserver-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: kube-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: kube-proxy-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:04 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: kube-scheduler-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: rke2-canal-vgq26 from kube-system started at 2023-09-10 18:13:00 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container calico-node ready: true, restart count 2
  Sep 11 01:13:35.305: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: rke2-coredns-rke2-coredns-67f86d96c-2qjdp from kube-system started at 2023-09-11 00:54:27 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: rke2-ingress-nginx-controller-jtphg from kube-system started at 2023-09-10 18:14:53 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-llrqn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.305: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:13:35.305: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:13:35.306: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-29.us-east-2.compute.internal before test
  Sep 11 01:13:35.317: INFO: kube-proxy-ip-172-31-8-29.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:03 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.317: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:13:35.317: INFO: rke2-canal-sf5n2 from kube-system started at 2023-09-10 18:14:02 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.317: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:13:35.317: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:13:35.317: INFO: rke2-ingress-nginx-controller-fblgc from kube-system started at 2023-09-11 01:11:45 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.317: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:13:35.317: INFO: sonobuoy from sonobuoy started at 2023-09-10 23:38:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:13:35.317: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 01:13:35.317: INFO: sonobuoy-e2e-job-e21707e8889b4c9c from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.318: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 01:13:35.318: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:13:35.318: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-955v9 from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:13:35.318: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:13:35.319: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/11/23 01:13:35.319
  E0911 01:13:35.682807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:36.683105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/11/23 01:13:37.346
  STEP: Trying to apply a random label on the found node. @ 09/11/23 01:13:37.364
  STEP: verifying the node has the label kubernetes.io/e2e-2d146971-fd71-4a92-a04f-63413792a77d 42 @ 09/11/23 01:13:37.38
  STEP: Trying to relaunch the pod, now with labels. @ 09/11/23 01:13:37.401
  E0911 01:13:37.683500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:38.684104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-2d146971-fd71-4a92-a04f-63413792a77d off the node ip-172-31-8-29.us-east-2.compute.internal @ 09/11/23 01:13:39.428
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2d146971-fd71-4a92-a04f-63413792a77d @ 09/11/23 01:13:39.441
  Sep 11 01:13:39.453: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3439" for this suite. @ 09/11/23 01:13:39.461
• [4.279 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/11/23 01:13:39.486
  Sep 11 01:13:39.486: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:13:39.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:39.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:39.512
  STEP: creating secret secrets-1180/secret-test-c888b748-9300-4a5a-90ee-cc1ac9a063d7 @ 09/11/23 01:13:39.515
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:13:39.519
  E0911 01:13:39.684878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:40.685708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:41.686310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:42.687167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:13:43.541
  Sep 11 01:13:43.544: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-8c3f4e89-251b-4956-8dde-79927b223698 container env-test: <nil>
  STEP: delete the pod @ 09/11/23 01:13:43.553
  Sep 11 01:13:43.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1180" for this suite. @ 09/11/23 01:13:43.575
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/11/23 01:13:43.586
  Sep 11 01:13:43.586: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 01:13:43.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:43.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:43.655
  STEP: Creating a job @ 09/11/23 01:13:43.658
  STEP: Ensuring job reaches completions @ 09/11/23 01:13:43.663
  E0911 01:13:43.687820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:44.688515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:45.694833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:46.695901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:47.696541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:48.697323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:49.697694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:50.699182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:51.699702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:52.700159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:53.700857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:54.701059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:13:55.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-20" for this suite. @ 09/11/23 01:13:55.672
• [12.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/11/23 01:13:55.682
  Sep 11 01:13:55.683: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:13:55.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:13:55.7
  E0911 01:13:55.701013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:13:55.704
  STEP: creating service in namespace services-1602 @ 09/11/23 01:13:55.707
  STEP: creating service affinity-nodeport in namespace services-1602 @ 09/11/23 01:13:55.707
  STEP: creating replication controller affinity-nodeport in namespace services-1602 @ 09/11/23 01:13:55.722
  I0911 01:13:55.742393      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-1602, replica count: 3
  E0911 01:13:56.701806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:57.702260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:13:58.702349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:13:58.793776      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:13:58.803: INFO: Creating new exec pod
  E0911 01:13:59.705308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:00.705751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:01.705736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:14:01.836: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1602 exec execpod-affinitygngmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 11 01:14:02.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 11 01:14:02.017: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:14:02.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1602 exec execpod-affinitygngmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.15.73 80'
  Sep 11 01:14:02.234: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.43.15.73 80\nConnection to 10.43.15.73 80 port [tcp/http] succeeded!\n"
  Sep 11 01:14:02.234: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:14:02.235: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1602 exec execpod-affinitygngmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 31596'
  Sep 11 01:14:02.428: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.132 31596\nConnection to 172.31.15.132 31596 port [tcp/*] succeeded!\n"
  Sep 11 01:14:02.429: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:14:02.429: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1602 exec execpod-affinitygngmj -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.8.29 31596'
  Sep 11 01:14:02.600: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.8.29 31596\nConnection to 172.31.8.29 31596 port [tcp/*] succeeded!\n"
  Sep 11 01:14:02.600: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 11 01:14:02.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-1602 exec execpod-affinitygngmj -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.10.18:31596/ ; done'
  E0911 01:14:02.710809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:14:02.903: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.10.18:31596/\n"
  Sep 11 01:14:02.903: INFO: stdout: "\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn\naffinity-nodeport-69xzn"
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.903: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Received response from host: affinity-nodeport-69xzn
  Sep 11 01:14:02.904: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:14:02.909: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-1602, will wait for the garbage collector to delete the pods @ 09/11/23 01:14:02.929
  Sep 11 01:14:02.993: INFO: Deleting ReplicationController affinity-nodeport took: 5.781621ms
  Sep 11 01:14:03.095: INFO: Terminating ReplicationController affinity-nodeport pods took: 101.016999ms
  E0911 01:14:03.711778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:04.712377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:05.712977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-1602" for this suite. @ 09/11/23 01:14:06.696
• [11.028 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/11/23 01:14:06.711
  Sep 11 01:14:06.711: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:14:06.712
  E0911 01:14:06.713262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:06.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:06.737
  STEP: Creating configMap with name configmap-test-volume-b57a1b16-9a5a-46bf-9a0f-f08378864617 @ 09/11/23 01:14:06.739
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:14:06.745
  E0911 01:14:07.713588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:08.713632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:09.714145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:10.714049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:10.772
  Sep 11 01:14:10.775: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-26a0c310-6a76-43d5-9888-73c528b415e3 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:14:10.782
  Sep 11 01:14:10.797: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-314" for this suite. @ 09/11/23 01:14:10.802
• [4.099 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/11/23 01:14:10.812
  Sep 11 01:14:10.812: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subpath @ 09/11/23 01:14:10.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:10.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:10.843
  STEP: Setting up data @ 09/11/23 01:14:10.846
  STEP: Creating pod pod-subpath-test-secret-lwtb @ 09/11/23 01:14:10.863
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 01:14:10.863
  E0911 01:14:11.714547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:12.714564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:13.715284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:14.715384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:15.715507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:16.715654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:17.715725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:18.715876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:19.716027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:20.716161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:21.716310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:22.716439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:23.716548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:24.716661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:25.716781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:26.716930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:27.717070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:28.717213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:29.717272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:30.717323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:31.717507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:32.717952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:33.718917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:34.718992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:34.931
  Sep 11 01:14:34.935: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-subpath-test-secret-lwtb container test-container-subpath-secret-lwtb: <nil>
  STEP: delete the pod @ 09/11/23 01:14:34.942
  STEP: Deleting pod pod-subpath-test-secret-lwtb @ 09/11/23 01:14:34.958
  Sep 11 01:14:34.958: INFO: Deleting pod "pod-subpath-test-secret-lwtb" in namespace "subpath-3731"
  Sep 11 01:14:34.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3731" for this suite. @ 09/11/23 01:14:34.97
• [24.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/11/23 01:14:34.986
  Sep 11 01:14:34.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:14:34.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:35.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:35.061
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/11/23 01:14:35.076
  E0911 01:14:35.719509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:36.719793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:37.720607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:38.721125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:39.721195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:40.721342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:41.129
  Sep 11 01:14:41.134: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-3a7afe21-b40a-4fc1-b959-6e0e229d9e19 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:14:41.152
  Sep 11 01:14:41.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4005" for this suite. @ 09/11/23 01:14:41.18
• [6.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/11/23 01:14:41.194
  Sep 11 01:14:41.194: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename containers @ 09/11/23 01:14:41.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:41.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:41.225
  STEP: Creating a pod to test override arguments @ 09/11/23 01:14:41.229
  E0911 01:14:41.721937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:42.722240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:43.723413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:44.723465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:45.254
  Sep 11 01:14:45.257: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod client-containers-4dcb387a-9f29-4d1e-9515-43b603404a27 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:14:45.265
  Sep 11 01:14:45.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3503" for this suite. @ 09/11/23 01:14:45.286
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/11/23 01:14:45.296
  Sep 11 01:14:45.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:14:45.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:45.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:45.317
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:14:45.32
  E0911 01:14:45.724977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:46.725379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:47.726268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:48.726481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:49.348
  Sep 11 01:14:49.351: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-e7771049-9653-4068-a3a1-659858650d21 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:14:49.358
  Sep 11 01:14:49.372: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2893" for this suite. @ 09/11/23 01:14:49.382
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/11/23 01:14:49.39
  Sep 11 01:14:49.390: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:14:49.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:49.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:49.41
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:14:49.413
  E0911 01:14:49.726531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:50.726951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:51.727867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:52.728216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:14:53.434
  Sep 11 01:14:53.437: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-e6c54786-7c49-4e4c-951a-6b3675d65e20 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:14:53.445
  Sep 11 01:14:53.459: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2015" for this suite. @ 09/11/23 01:14:53.463
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/11/23 01:14:53.474
  Sep 11 01:14:53.475: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:14:53.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:14:53.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:14:53.499
  STEP: creating a replication controller @ 09/11/23 01:14:53.502
  Sep 11 01:14:53.502: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 create -f -'
  E0911 01:14:53.728298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:14:53.784: INFO: stderr: ""
  Sep 11 01:14:53.784: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 01:14:53.784
  Sep 11 01:14:53.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:14:53.887: INFO: stderr: ""
  Sep 11 01:14:53.887: INFO: stdout: "update-demo-nautilus-7nscj update-demo-nautilus-wcg22 "
  Sep 11 01:14:53.887: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:14:53.969: INFO: stderr: ""
  Sep 11 01:14:53.969: INFO: stdout: ""
  Sep 11 01:14:53.969: INFO: update-demo-nautilus-7nscj is created but not running
  E0911 01:14:54.728635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:55.728512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:56.728770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:57.729070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:14:58.729172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:14:58.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:14:59.085: INFO: stderr: ""
  Sep 11 01:14:59.085: INFO: stdout: "update-demo-nautilus-7nscj update-demo-nautilus-wcg22 "
  Sep 11 01:14:59.085: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:14:59.181: INFO: stderr: ""
  Sep 11 01:14:59.181: INFO: stdout: "true"
  Sep 11 01:14:59.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:14:59.317: INFO: stderr: ""
  Sep 11 01:14:59.317: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:14:59.317: INFO: validating pod update-demo-nautilus-7nscj
  Sep 11 01:14:59.325: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:14:59.325: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:14:59.325: INFO: update-demo-nautilus-7nscj is verified up and running
  Sep 11 01:14:59.325: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-wcg22 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:14:59.425: INFO: stderr: ""
  Sep 11 01:14:59.425: INFO: stdout: "true"
  Sep 11 01:14:59.425: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-wcg22 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:14:59.517: INFO: stderr: ""
  Sep 11 01:14:59.517: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:14:59.517: INFO: validating pod update-demo-nautilus-wcg22
  Sep 11 01:14:59.526: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:14:59.526: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:14:59.526: INFO: update-demo-nautilus-wcg22 is verified up and running
  STEP: scaling down the replication controller @ 09/11/23 01:14:59.526
  Sep 11 01:14:59.527: INFO: scanned /root for discovery docs: <nil>
  Sep 11 01:14:59.527: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0911 01:14:59.730570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:00.631: INFO: stderr: ""
  Sep 11 01:15:00.631: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 01:15:00.631
  Sep 11 01:15:00.631: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:15:00.709: INFO: stderr: ""
  Sep 11 01:15:00.710: INFO: stdout: "update-demo-nautilus-7nscj "
  Sep 11 01:15:00.710: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0911 01:15:00.731671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:00.784: INFO: stderr: ""
  Sep 11 01:15:00.784: INFO: stdout: "true"
  Sep 11 01:15:00.784: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:15:00.897: INFO: stderr: ""
  Sep 11 01:15:00.897: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:15:00.897: INFO: validating pod update-demo-nautilus-7nscj
  Sep 11 01:15:00.902: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:15:00.902: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:15:00.902: INFO: update-demo-nautilus-7nscj is verified up and running
  STEP: scaling up the replication controller @ 09/11/23 01:15:00.902
  Sep 11 01:15:00.903: INFO: scanned /root for discovery docs: <nil>
  Sep 11 01:15:00.903: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0911 01:15:01.731793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:02.007: INFO: stderr: ""
  Sep 11 01:15:02.007: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/11/23 01:15:02.007
  Sep 11 01:15:02.008: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:15:02.113: INFO: stderr: ""
  Sep 11 01:15:02.113: INFO: stdout: "update-demo-nautilus-2bmdl update-demo-nautilus-7nscj "
  Sep 11 01:15:02.113: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-2bmdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:15:02.203: INFO: stderr: ""
  Sep 11 01:15:02.203: INFO: stdout: ""
  Sep 11 01:15:02.203: INFO: update-demo-nautilus-2bmdl is created but not running
  E0911 01:15:02.731995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:03.732228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:04.732274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:05.732738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:06.733724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:07.205: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 11 01:15:07.405: INFO: stderr: ""
  Sep 11 01:15:07.405: INFO: stdout: "update-demo-nautilus-2bmdl update-demo-nautilus-7nscj "
  Sep 11 01:15:07.405: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-2bmdl -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:15:07.518: INFO: stderr: ""
  Sep 11 01:15:07.518: INFO: stdout: "true"
  Sep 11 01:15:07.518: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-2bmdl -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 11 01:15:07.641: INFO: stderr: ""
  Sep 11 01:15:07.641: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:15:07.641: INFO: validating pod update-demo-nautilus-2bmdl
  Sep 11 01:15:07.648: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:15:07.648: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:15:07.648: INFO: update-demo-nautilus-2bmdl is verified up and running
  Sep 11 01:15:07.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 11 01:15:07.730: INFO: stderr: ""
  Sep 11 01:15:07.730: INFO: stdout: "true"
  Sep 11 01:15:07.730: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods update-demo-nautilus-7nscj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0911 01:15:07.734855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:07.807: INFO: stderr: ""
  Sep 11 01:15:07.807: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 11 01:15:07.807: INFO: validating pod update-demo-nautilus-7nscj
  Sep 11 01:15:07.811: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 11 01:15:07.811: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 11 01:15:07.811: INFO: update-demo-nautilus-7nscj is verified up and running
  STEP: using delete to clean up resources @ 09/11/23 01:15:07.811
  Sep 11 01:15:07.811: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 delete --grace-period=0 --force -f -'
  Sep 11 01:15:07.942: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 11 01:15:07.942: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 11 01:15:07.942: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get rc,svc -l name=update-demo --no-headers'
  Sep 11 01:15:08.119: INFO: stderr: "No resources found in kubectl-6119 namespace.\n"
  Sep 11 01:15:08.119: INFO: stdout: ""
  Sep 11 01:15:08.119: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-6119 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 11 01:15:08.280: INFO: stderr: ""
  Sep 11 01:15:08.280: INFO: stdout: ""
  Sep 11 01:15:08.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6119" for this suite. @ 09/11/23 01:15:08.286
• [14.817 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/11/23 01:15:08.292
  Sep 11 01:15:08.292: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename statefulset @ 09/11/23 01:15:08.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:08.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:08.312
  STEP: Creating service test in namespace statefulset-3450 @ 09/11/23 01:15:08.316
  Sep 11 01:15:08.342: INFO: Found 0 stateful pods, waiting for 1
  E0911 01:15:08.735232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:09.735186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:10.735667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:11.735858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:12.736274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:13.736603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:14.736634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:15.736728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:16.737126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:17.737307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:18.347: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/11/23 01:15:18.352
  W0911 01:15:18.359733      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 11 01:15:18.374: INFO: Found 1 stateful pods, waiting for 2
  E0911 01:15:18.738188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:19.738327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:20.739047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:21.739048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:22.739347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:23.739405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:24.739488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:25.739584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:26.740034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:27.742837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:28.380: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 11 01:15:28.380: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/11/23 01:15:28.386
  STEP: Delete all of the StatefulSets @ 09/11/23 01:15:28.388
  STEP: Verify that StatefulSets have been deleted @ 09/11/23 01:15:28.395
  Sep 11 01:15:28.400: INFO: Deleting all statefulset in ns statefulset-3450
  Sep 11 01:15:28.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3450" for this suite. @ 09/11/23 01:15:28.459
• [20.192 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/11/23 01:15:28.485
  Sep 11 01:15:28.485: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:15:28.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:28.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:28.552
  STEP: Creating secret with name s-test-opt-del-3cce67bc-19ce-4c40-8d2d-e47f4b415ced @ 09/11/23 01:15:28.563
  STEP: Creating secret with name s-test-opt-upd-bb72cda4-76d6-4934-bdb4-17246a1547f8 @ 09/11/23 01:15:28.583
  STEP: Creating the pod @ 09/11/23 01:15:28.589
  E0911 01:15:28.743613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:29.751062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-3cce67bc-19ce-4c40-8d2d-e47f4b415ced @ 09/11/23 01:15:30.655
  STEP: Updating secret s-test-opt-upd-bb72cda4-76d6-4934-bdb4-17246a1547f8 @ 09/11/23 01:15:30.663
  STEP: Creating secret with name s-test-opt-create-0ddfef6a-8b47-4d6c-9617-ec0a08894683 @ 09/11/23 01:15:30.672
  STEP: waiting to observe update in volume @ 09/11/23 01:15:30.68
  E0911 01:15:30.752117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:31.752231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:15:32.708: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4714" for this suite. @ 09/11/23 01:15:32.713
• [4.234 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/11/23 01:15:32.721
  Sep 11 01:15:32.721: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:15:32.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:32.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:32.743
  STEP: starting the proxy server @ 09/11/23 01:15:32.746
  Sep 11 01:15:32.747: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-8458 proxy -p 0 --disable-filter'
  E0911 01:15:32.752454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: curling proxy /api/ output @ 09/11/23 01:15:32.813
  Sep 11 01:15:32.825: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8458" for this suite. @ 09/11/23 01:15:33.03
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/11/23 01:15:33.043
  Sep 11 01:15:33.043: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:15:33.044
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:33.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:33.068
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:15:33.07
  E0911 01:15:33.753337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:34.753461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:35.754679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:36.754858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:15:37.093
  Sep 11 01:15:37.097: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-d1395ccd-1f47-4243-b79e-f6fd6a6d6cd0 container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:15:37.107
  Sep 11 01:15:37.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-143" for this suite. @ 09/11/23 01:15:37.137
• [4.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/11/23 01:15:37.148
  Sep 11 01:15:37.149: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 01:15:37.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:37.171
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:37.176
  STEP: create the container @ 09/11/23 01:15:37.178
  W0911 01:15:37.188888      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/11/23 01:15:37.189
  E0911 01:15:37.755857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:38.755775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:39.756442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:40.756544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:41.756889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 01:15:42.222
  STEP: the container should be terminated @ 09/11/23 01:15:42.227
  STEP: the termination message should be set @ 09/11/23 01:15:42.227
  Sep 11 01:15:42.227: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/11/23 01:15:42.227
  Sep 11 01:15:42.241: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4979" for this suite. @ 09/11/23 01:15:42.252
• [5.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/11/23 01:15:42.265
  Sep 11 01:15:42.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 01:15:42.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:15:42.289
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:15:42.292
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/11/23 01:15:42.305
  E0911 01:15:42.757334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:43.757675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:44.758706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:45.758846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:46.759442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:47.759549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:48.759861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:49.760419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:50.760548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:51.760732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:52.760897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:53.761039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:54.761145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:55.761809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:56.762838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:57.763661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/11/23 01:15:58.382
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/11/23 01:15:58.385
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/11/23 01:15:58.39
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/11/23 01:15:58.391
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/11/23 01:15:58.413
  E0911 01:15:58.764106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:15:59.764581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:00.767573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:01.767679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/11/23 01:16:02.435
  E0911 01:16:02.768201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/11/23 01:16:03.441
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/11/23 01:16:03.447
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/11/23 01:16:03.447
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/11/23 01:16:03.47
  E0911 01:16:03.769103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/11/23 01:16:04.487
  E0911 01:16:04.769869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:05.769789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:06.770885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/11/23 01:16:07.505
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/11/23 01:16:07.51
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/11/23 01:16:07.511
  Sep 11 01:16:07.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6258" for this suite. @ 09/11/23 01:16:07.54
• [25.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/11/23 01:16:07.554
  Sep 11 01:16:07.554: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:16:07.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:16:07.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:16:07.578
  STEP: Creating configMap with name projected-configmap-test-volume-map-d61020c2-beec-4ae9-a4e4-965873995e0d @ 09/11/23 01:16:07.581
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:16:07.585
  E0911 01:16:07.771650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:08.772177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:09.772276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:10.772478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:16:11.606
  Sep 11 01:16:11.609: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-9762eb9d-6c64-40dd-a57b-efc4da3c79ff container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:16:11.616
  Sep 11 01:16:11.631: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1164" for this suite. @ 09/11/23 01:16:11.636
• [4.092 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/11/23 01:16:11.647
  Sep 11 01:16:11.647: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 01:16:11.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:16:11.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:16:11.682
  STEP: Creating pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092 @ 09/11/23 01:16:11.689
  E0911 01:16:11.773263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:12.773832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/11/23 01:16:13.709
  Sep 11 01:16:13.712: INFO: Initial restart count of pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b is 0
  Sep 11 01:16:13.714: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:13.774008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:14.774210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:15.720: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:15.774890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:16.775272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:17.724: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:17.775521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:18.775962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:19.728: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:19.776585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:20.776685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:21.731: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:21.777473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:22.777841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:23.735: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:23.778826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:24.778826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:25.738: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:25.779126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:26.779273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:27.742: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:27.780020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:28.780157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:29.746: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:29.781171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:30.781291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:31.753: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:31.782207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:32.782338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:33.756: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:33.783258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:34.784069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:35.760: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:35.785051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:36.785284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:37.764: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:37.785388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:38.785450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:39.768: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:39.786094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:40.787113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:41.774: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:41.787297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:42.787532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:43.781: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:43.788243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:44.789107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:45.786: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:45.789318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:46.789469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:47.789811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:47.790: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:48.789971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:49.790793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:49.794: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:50.790892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:51.791018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:51.918: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:52.791174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:53.791522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:53.922: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:54.792316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:55.799005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:55.929: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:56.799850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:57.799962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:57.936: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:16:58.800030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:16:59.800483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:16:59.941: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:17:00.800933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:01.801933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:17:01.945: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  E0911 01:17:02.802863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:03.803907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:17:03.950: INFO: Get pod busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b in namespace container-probe-7092
  Sep 11 01:17:03.950: INFO: Restart count of pod container-probe-7092/busybox-6d3a380b-963a-4d85-b4b6-9baf2948a41b is now 1 (50.238251395s elapsed)
  Sep 11 01:17:03.950: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/11/23 01:17:03.955
  STEP: Destroying namespace "container-probe-7092" for this suite. @ 09/11/23 01:17:03.97
• [52.330 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/11/23 01:17:03.977
  Sep 11 01:17:03.977: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename init-container @ 09/11/23 01:17:03.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:04.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:04.01
  STEP: creating the pod @ 09/11/23 01:17:04.014
  Sep 11 01:17:04.014: INFO: PodSpec: initContainers in spec.initContainers
  E0911 01:17:04.805151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:05.805549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:06.805614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:07.805715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:17:07.924: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-725" for this suite. @ 09/11/23 01:17:07.929
• [4.115 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/11/23 01:17:08.093
  Sep 11 01:17:08.093: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:17:08.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:08.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:08.128
  STEP: Setting up server cert @ 09/11/23 01:17:08.158
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:17:08.598
  STEP: Deploying the webhook pod @ 09/11/23 01:17:08.606
  STEP: Wait for the deployment to be ready @ 09/11/23 01:17:08.623
  Sep 11 01:17:08.640: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 01:17:08.806416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:09.807251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 01:17:10.65
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:17:10.663
  E0911 01:17:10.807703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:17:11.664: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/11/23 01:17:11.67
  STEP: create a pod @ 09/11/23 01:17:11.697
  E0911 01:17:11.815148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:12.815509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:13.823098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:14.823437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:15.823536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/11/23 01:17:16.239
  Sep 11 01:17:16.239: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=webhook-9437 attach --namespace=webhook-9437 to-be-attached-pod -i -c=container1'
  Sep 11 01:17:16.427: INFO: rc: 1
  Sep 11 01:17:16.428: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9437" for this suite. @ 09/11/23 01:17:16.53
  STEP: Destroying namespace "webhook-markers-7076" for this suite. @ 09/11/23 01:17:16.545
• [8.462 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/11/23 01:17:16.555
  Sep 11 01:17:16.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:17:16.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:16.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:16.583
  STEP: Creating projection with secret that has name projected-secret-test-map-03580598-21ac-4843-9727-d0d47233dde1 @ 09/11/23 01:17:16.595
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:17:16.606
  E0911 01:17:16.823926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:17.824087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:18.824917      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:19.825621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:17:20.635
  Sep 11 01:17:20.637: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-96b7566b-04aa-4fa6-a563-0901a11ff041 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:17:20.643
  Sep 11 01:17:20.659: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1998" for this suite. @ 09/11/23 01:17:20.663
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/11/23 01:17:20.673
  Sep 11 01:17:20.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:17:20.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:20.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:20.7
  STEP: Creating configMap with name projected-configmap-test-volume-3cb796d7-319e-4e77-9b50-7f98e877b606 @ 09/11/23 01:17:20.702
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:17:20.707
  E0911 01:17:20.825610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:21.826868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:22.827685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:23.828522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:17:24.727
  Sep 11 01:17:24.731: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-configmaps-810a178e-737b-49ae-ba97-ac8dd6ad0551 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:17:24.737
  Sep 11 01:17:24.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8738" for this suite. @ 09/11/23 01:17:24.755
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/11/23 01:17:24.765
  Sep 11 01:17:24.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sysctl @ 09/11/23 01:17:24.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:24.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:24.793
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/11/23 01:17:24.796
  Sep 11 01:17:24.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-2290" for this suite. @ 09/11/23 01:17:24.806
• [0.047 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/11/23 01:17:24.813
  Sep 11 01:17:24.813: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subpath @ 09/11/23 01:17:24.815
  E0911 01:17:24.828986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:24.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:24.835
  STEP: Setting up data @ 09/11/23 01:17:24.844
  STEP: Creating pod pod-subpath-test-downwardapi-cmsg @ 09/11/23 01:17:24.861
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 01:17:24.861
  E0911 01:17:25.829139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:26.829251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:27.829342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:28.829590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:29.830426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:30.831046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:31.831094      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:32.831198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:33.831831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:34.832381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:35.832855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:36.833062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:37.833190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:38.833434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:39.833787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:40.834026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:41.840219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:42.840351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:43.841145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:44.842179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:45.843087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:46.843351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:47.843311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:48.845537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:17:48.936
  Sep 11 01:17:48.939: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-subpath-test-downwardapi-cmsg container test-container-subpath-downwardapi-cmsg: <nil>
  STEP: delete the pod @ 09/11/23 01:17:48.946
  STEP: Deleting pod pod-subpath-test-downwardapi-cmsg @ 09/11/23 01:17:48.964
  Sep 11 01:17:48.964: INFO: Deleting pod "pod-subpath-test-downwardapi-cmsg" in namespace "subpath-2784"
  Sep 11 01:17:48.966: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2784" for this suite. @ 09/11/23 01:17:48.97
• [24.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/11/23 01:17:48.98
  Sep 11 01:17:48.980: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-probe @ 09/11/23 01:17:48.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:17:49.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:17:49.008
  E0911 01:17:49.846020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:50.845974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:51.846862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:52.846932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:53.847738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:54.848219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:55.850633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:56.850837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:57.850997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:58.851253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:17:59.851660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:00.851810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:01.851924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:02.852097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:03.852750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:04.853246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:05.853813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:06.854065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:07.854805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:08.854922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:09.855828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:10.856443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:11.086: INFO: Container started at 2023-09-11 01:17:49 +0000 UTC, pod became ready at 2023-09-11 01:18:09 +0000 UTC
  Sep 11 01:18:11.086: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4670" for this suite. @ 09/11/23 01:18:11.09
• [22.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/11/23 01:18:11.107
  Sep 11 01:18:11.107: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 01:18:11.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:11.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:11.131
  Sep 11 01:18:11.134: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: creating the pod @ 09/11/23 01:18:11.135
  STEP: submitting the pod to kubernetes @ 09/11/23 01:18:11.136
  E0911 01:18:11.856985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:12.857249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:13.371: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2043" for this suite. @ 09/11/23 01:18:13.376
• [2.276 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/11/23 01:18:13.383
  Sep 11 01:18:13.383: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:18:13.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:13.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:13.418
  STEP: Creating secret with name secret-test-4ce656ad-2d06-461f-bc5f-879d7568a5f6 @ 09/11/23 01:18:13.42
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:18:13.425
  E0911 01:18:13.858080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:14.858849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:15.859471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:16.859865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:18:17.488
  Sep 11 01:18:17.498: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-50698151-f22f-4cc4-a078-5c453a710324 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:18:17.505
  Sep 11 01:18:17.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9450" for this suite. @ 09/11/23 01:18:17.533
• [4.157 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/11/23 01:18:17.543
  Sep 11 01:18:17.543: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:18:17.544
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:17.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:17.565
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/11/23 01:18:17.568
  E0911 01:18:17.859986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:18.860432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:19.860903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:20.861057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:18:21.589
  Sep 11 01:18:21.592: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-c883b0ba-bb32-40df-a986-280019ae13a9 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:18:21.599
  Sep 11 01:18:21.613: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5412" for this suite. @ 09/11/23 01:18:21.618
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/11/23 01:18:21.626
  Sep 11 01:18:21.626: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl-logs @ 09/11/23 01:18:21.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:21.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:21.645
  STEP: creating an pod @ 09/11/23 01:18:21.648
  Sep 11 01:18:21.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 11 01:18:21.736: INFO: stderr: ""
  Sep 11 01:18:21.736: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/11/23 01:18:21.736
  Sep 11 01:18:21.736: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E0911 01:18:21.861982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:22.862284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:23.748: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/11/23 01:18:23.748
  Sep 11 01:18:23.749: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator'
  Sep 11 01:18:23.845: INFO: stderr: ""
  Sep 11 01:18:23.845: INFO: stdout: "I0911 01:18:22.669961       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/qb6 286\nI0911 01:18:22.870055       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/bgw 273\nI0911 01:18:23.070671       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/d6v 583\nI0911 01:18:23.271041       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/6m4r 328\nI0911 01:18:23.470344       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/z6t 459\nI0911 01:18:23.670773       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/xzc 518\n"
  STEP: limiting log lines @ 09/11/23 01:18:23.845
  Sep 11 01:18:23.845: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --tail=1'
  E0911 01:18:23.863252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:23.968: INFO: stderr: ""
  Sep 11 01:18:23.968: INFO: stdout: "I0911 01:18:23.870192       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/4jx 330\n"
  Sep 11 01:18:23.968: INFO: got output "I0911 01:18:23.870192       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/4jx 330\n"
  STEP: limiting log bytes @ 09/11/23 01:18:23.968
  Sep 11 01:18:23.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --limit-bytes=1'
  Sep 11 01:18:24.477: INFO: stderr: ""
  Sep 11 01:18:24.477: INFO: stdout: "I"
  Sep 11 01:18:24.477: INFO: got output "I"
  STEP: exposing timestamps @ 09/11/23 01:18:24.477
  Sep 11 01:18:24.477: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 11 01:18:24.563: INFO: stderr: ""
  Sep 11 01:18:24.563: INFO: stdout: "2023-09-11T01:18:24.470863765Z I0911 01:18:24.470759       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/dr7f 355\n"
  Sep 11 01:18:24.563: INFO: got output "2023-09-11T01:18:24.470863765Z I0911 01:18:24.470759       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/dr7f 355\n"
  STEP: restricting to a time range @ 09/11/23 01:18:24.563
  E0911 01:18:24.863185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:25.863311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:26.863455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:27.063: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --since=1s'
  Sep 11 01:18:27.190: INFO: stderr: ""
  Sep 11 01:18:27.190: INFO: stdout: "I0911 01:18:26.270078       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/j44 320\nI0911 01:18:26.470431       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/ssn 596\nI0911 01:18:26.670837       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/cfm 443\nI0911 01:18:26.870078       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/46rz 374\nI0911 01:18:27.074814       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/p2t 385\n"
  Sep 11 01:18:27.190: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 logs logs-generator logs-generator --since=24h'
  Sep 11 01:18:27.284: INFO: stderr: ""
  Sep 11 01:18:27.284: INFO: stdout: "I0911 01:18:22.669961       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/qb6 286\nI0911 01:18:22.870055       1 logs_generator.go:76] 1 GET /api/v1/namespaces/ns/pods/bgw 273\nI0911 01:18:23.070671       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/d6v 583\nI0911 01:18:23.271041       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/6m4r 328\nI0911 01:18:23.470344       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/z6t 459\nI0911 01:18:23.670773       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/xzc 518\nI0911 01:18:23.870192       1 logs_generator.go:76] 6 POST /api/v1/namespaces/default/pods/4jx 330\nI0911 01:18:24.070471       1 logs_generator.go:76] 7 POST /api/v1/namespaces/ns/pods/jtzl 537\nI0911 01:18:24.270891       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/ffs 385\nI0911 01:18:24.470759       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/dr7f 355\nI0911 01:18:24.669996       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/kube-system/pods/x7n 504\nI0911 01:18:24.870366       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/default/pods/6wx4 283\nI0911 01:18:25.070898       1 logs_generator.go:76] 12 POST /api/v1/namespaces/default/pods/7hmm 409\nI0911 01:18:25.270044       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/kbz 308\nI0911 01:18:25.470464       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/mqz 460\nI0911 01:18:25.670806       1 logs_generator.go:76] 15 GET /api/v1/namespaces/default/pods/7lvg 257\nI0911 01:18:25.870057       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/pcp 594\nI0911 01:18:26.070467       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/kph9 291\nI0911 01:18:26.270078       1 logs_generator.go:76] 18 GET /api/v1/namespaces/kube-system/pods/j44 320\nI0911 01:18:26.470431       1 logs_generator.go:76] 19 POST /api/v1/namespaces/ns/pods/ssn 596\nI0911 01:18:26.670837       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/kube-system/pods/cfm 443\nI0911 01:18:26.870078       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/46rz 374\nI0911 01:18:27.074814       1 logs_generator.go:76] 22 POST /api/v1/namespaces/kube-system/pods/p2t 385\nI0911 01:18:27.270864       1 logs_generator.go:76] 23 POST /api/v1/namespaces/default/pods/2sd 220\n"
  Sep 11 01:18:27.284: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-logs-7687 delete pod logs-generator'
  E0911 01:18:27.865470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:28.182: INFO: stderr: ""
  Sep 11 01:18:28.183: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 11 01:18:28.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-7687" for this suite. @ 09/11/23 01:18:28.191
• [6.573 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/11/23 01:18:28.2
  Sep 11 01:18:28.200: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 01:18:28.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:28.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:28.233
  E0911 01:18:28.865676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:29.866878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:30.866920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:31.867878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:32.868725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:33.868790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:18:34.281: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8179" for this suite. @ 09/11/23 01:18:34.285
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/11/23 01:18:34.296
  Sep 11 01:18:34.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/11/23 01:18:34.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:34.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:34.322
  STEP: creating @ 09/11/23 01:18:34.324
  STEP: getting @ 09/11/23 01:18:34.347
  STEP: listing in namespace @ 09/11/23 01:18:34.36
  STEP: patching @ 09/11/23 01:18:34.366
  STEP: deleting @ 09/11/23 01:18:34.383
  Sep 11 01:18:34.394: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5352" for this suite. @ 09/11/23 01:18:34.399
• [0.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/11/23 01:18:34.409
  Sep 11 01:18:34.409: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:18:34.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:34.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:34.43
  STEP: Creating configMap with name configmap-test-volume-8139f99d-f1e9-4f18-b5ea-b20e886c6f44 @ 09/11/23 01:18:34.433
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:18:34.437
  E0911 01:18:34.868825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:35.869079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:36.869792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:37.870144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:18:38.473
  Sep 11 01:18:38.478: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-79e56080-f3f4-428e-918e-6ad8a6eb6083 container agnhost-container: <nil>
  STEP: delete the pod @ 09/11/23 01:18:38.486
  Sep 11 01:18:38.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2041" for this suite. @ 09/11/23 01:18:38.504
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/11/23 01:18:38.515
  Sep 11 01:18:38.516: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 01:18:38.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:18:38.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:18:38.545
  STEP: Creating a job @ 09/11/23 01:18:38.548
  STEP: Ensuring active pods == parallelism @ 09/11/23 01:18:38.552
  E0911 01:18:38.870453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:39.871493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 09/11/23 01:18:40.556
  STEP: deleting Job.batch foo in namespace job-7621, will wait for the garbage collector to delete the pods @ 09/11/23 01:18:40.557
  Sep 11 01:18:40.615: INFO: Deleting Job.batch foo took: 5.382235ms
  Sep 11 01:18:40.716: INFO: Terminating Job.batch foo pods took: 100.841663ms
  E0911 01:18:40.872274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:41.873313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:42.874316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:43.874889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:44.875630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:45.875887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:46.876287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:47.876740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:48.880921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:49.881878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:50.882766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:51.884073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:52.885749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:53.886174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:54.887169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:55.888301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:56.889061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:57.889850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:58.890113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:18:59.890898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:00.890947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:01.891892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:02.892300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:03.893288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:04.893602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:05.894494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:06.895280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:07.896082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:08.898299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:09.898760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:10.899741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:11.900561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:12.901629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 09/11/23 01:19:13.317
  Sep 11 01:19:13.320: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7621" for this suite. @ 09/11/23 01:19:13.324
• [34.814 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/11/23 01:19:13.332
  Sep 11 01:19:13.332: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename resourcequota @ 09/11/23 01:19:13.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:13.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:13.351
  STEP: Discovering how many secrets are in namespace by default @ 09/11/23 01:19:13.354
  E0911 01:19:13.902516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:14.903181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:15.903877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:16.904021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:17.904595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 09/11/23 01:19:18.358
  E0911 01:19:18.905461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:19.905574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:20.905657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:21.905826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:22.906747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/11/23 01:19:23.363
  STEP: Ensuring resource quota status is calculated @ 09/11/23 01:19:23.37
  E0911 01:19:23.907662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:24.908220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 09/11/23 01:19:25.375
  STEP: Ensuring resource quota status captures secret creation @ 09/11/23 01:19:25.388
  E0911 01:19:25.908737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:26.909051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 09/11/23 01:19:27.394
  STEP: Ensuring resource quota status released usage @ 09/11/23 01:19:27.404
  E0911 01:19:27.909721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:28.910052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:19:29.409: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3029" for this suite. @ 09/11/23 01:19:29.413
• [16.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/11/23 01:19:29.426
  Sep 11 01:19:29.426: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:19:29.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:29.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:29.448
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:19:29.451
  E0911 01:19:29.910675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:30.911168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:31.911885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:32.912384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:19:33.473
  Sep 11 01:19:33.476: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-80737fe3-44c6-43b4-80f6-ef3f2cee86da container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:19:33.482
  Sep 11 01:19:33.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9652" for this suite. @ 09/11/23 01:19:33.499
• [4.080 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/11/23 01:19:33.506
  Sep 11 01:19:33.506: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:19:33.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:33.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:33.535
  STEP: Creating configMap that has name configmap-test-emptyKey-e50d5cf8-b61a-47ad-ba30-4ff4922837b6 @ 09/11/23 01:19:33.537
  Sep 11 01:19:33.539: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6077" for this suite. @ 09/11/23 01:19:33.544
• [0.044 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/11/23 01:19:33.552
  Sep 11 01:19:33.553: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename subpath @ 09/11/23 01:19:33.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:33.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:33.588
  STEP: Setting up data @ 09/11/23 01:19:33.591
  STEP: Creating pod pod-subpath-test-projected-4t7n @ 09/11/23 01:19:33.603
  STEP: Creating a pod to test atomic-volume-subpath @ 09/11/23 01:19:33.603
  E0911 01:19:33.913190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:34.913730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:35.914629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:36.914959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:37.915148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:38.917583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:39.917694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:40.918207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:41.918890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:42.919882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:43.920260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:44.920147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:45.920959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:46.921364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:47.921920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:48.922057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:49.922196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:50.922328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:51.923370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:52.923495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:53.923987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:54.924224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:55.924378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:56.924700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:19:57.664
  Sep 11 01:19:57.667: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-subpath-test-projected-4t7n container test-container-subpath-projected-4t7n: <nil>
  STEP: delete the pod @ 09/11/23 01:19:57.674
  STEP: Deleting pod pod-subpath-test-projected-4t7n @ 09/11/23 01:19:57.689
  Sep 11 01:19:57.690: INFO: Deleting pod "pod-subpath-test-projected-4t7n" in namespace "subpath-6495"
  Sep 11 01:19:57.692: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6495" for this suite. @ 09/11/23 01:19:57.697
• [24.153 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/11/23 01:19:57.705
  Sep 11 01:19:57.705: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pods @ 09/11/23 01:19:57.706
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:57.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:57.729
  STEP: creating pod @ 09/11/23 01:19:57.732
  E0911 01:19:57.925286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:19:58.925835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:19:59.756: INFO: Pod pod-hostip-d8de56f1-5ae6-4122-a299-8cab32d2c6c8 has hostIP: 172.31.8.29
  Sep 11 01:19:59.757: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3641" for this suite. @ 09/11/23 01:19:59.762
• [2.063 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/11/23 01:19:59.771
  Sep 11 01:19:59.771: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svcaccounts @ 09/11/23 01:19:59.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:59.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:59.797
  STEP: Creating ServiceAccount "e2e-sa-zbzhj"  @ 09/11/23 01:19:59.8
  Sep 11 01:19:59.805: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-zbzhj"  @ 09/11/23 01:19:59.805
  Sep 11 01:19:59.815: INFO: AutomountServiceAccountToken: true
  Sep 11 01:19:59.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7805" for this suite. @ 09/11/23 01:19:59.821
• [0.056 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/11/23 01:19:59.829
  Sep 11 01:19:59.829: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:19:59.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:19:59.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:19:59.853
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6703 @ 09/11/23 01:19:59.856
  STEP: changing the ExternalName service to type=NodePort @ 09/11/23 01:19:59.863
  STEP: creating replication controller externalname-service in namespace services-6703 @ 09/11/23 01:19:59.879
  I0911 01:19:59.888069      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-6703, replica count: 2
  E0911 01:19:59.926337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:00.926511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:01.926820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:02.927861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:20:02.939361      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:20:02.939: INFO: Creating new exec pod
  E0911 01:20:03.928217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:04.929002      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:05.929939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:05.965: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-6703 exec execpodtq9wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 11 01:20:06.150: INFO: stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 11 01:20:06.150: INFO: stdout: "externalname-service-62fqg"
  Sep 11 01:20:06.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-6703 exec execpodtq9wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.50.212 80'
  Sep 11 01:20:06.353: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.50.212 80\nConnection to 10.43.50.212 80 port [tcp/http] succeeded!\n"
  Sep 11 01:20:06.353: INFO: stdout: "externalname-service-62fqg"
  Sep 11 01:20:06.353: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-6703 exec execpodtq9wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.171 32351'
  Sep 11 01:20:06.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.171 32351\nConnection to 172.31.14.171 32351 port [tcp/*] succeeded!\n"
  Sep 11 01:20:06.515: INFO: stdout: "externalname-service-9w68g"
  Sep 11 01:20:06.516: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-6703 exec execpodtq9wv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.15.132 32351'
  Sep 11 01:20:06.685: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.15.132 32351\nConnection to 172.31.15.132 32351 port [tcp/*] succeeded!\n"
  Sep 11 01:20:06.685: INFO: stdout: "externalname-service-9w68g"
  Sep 11 01:20:06.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:20:06.695: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-6703" for this suite. @ 09/11/23 01:20:06.734
• [6.914 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/11/23 01:20:06.744
  Sep 11 01:20:06.744: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:20:06.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:06.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:06.772
  STEP: Creating projection with secret that has name secret-emptykey-test-94c93d45-0c00-43ab-9827-6453654c9d6d @ 09/11/23 01:20:06.777
  Sep 11 01:20:06.779: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5215" for this suite. @ 09/11/23 01:20:06.784
• [0.053 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/11/23 01:20:06.797
  Sep 11 01:20:06.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:20:06.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:06.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:06.824
  STEP: Creating the pod @ 09/11/23 01:20:06.826
  E0911 01:20:06.930693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:07.931027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:08.931865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:09.385: INFO: Successfully updated pod "labelsupdate8e1c5b05-6584-4e57-a38e-040a6e427af7"
  E0911 01:20:09.932358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:10.932462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:11.520: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3728" for this suite. @ 09/11/23 01:20:11.525
• [4.733 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/11/23 01:20:11.532
  Sep 11 01:20:11.532: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename podtemplate @ 09/11/23 01:20:11.533
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:11.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:11.555
  STEP: Create set of pod templates @ 09/11/23 01:20:11.558
  Sep 11 01:20:11.564: INFO: created test-podtemplate-1
  Sep 11 01:20:11.570: INFO: created test-podtemplate-2
  Sep 11 01:20:11.575: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/11/23 01:20:11.575
  STEP: delete collection of pod templates @ 09/11/23 01:20:11.579
  Sep 11 01:20:11.579: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/11/23 01:20:11.595
  Sep 11 01:20:11.595: INFO: requesting list of pod templates to confirm quantity
  Sep 11 01:20:11.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4992" for this suite. @ 09/11/23 01:20:11.606
• [0.083 seconds]
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/11/23 01:20:11.616
  Sep 11 01:20:11.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sysctl @ 09/11/23 01:20:11.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:11.638
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:11.642
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/11/23 01:20:11.644
  STEP: Watching for error events or started pod @ 09/11/23 01:20:11.651
  E0911 01:20:11.933271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:12.936553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/11/23 01:20:13.656
  E0911 01:20:13.936493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:14.939240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/11/23 01:20:15.666
  STEP: Getting logs from the pod @ 09/11/23 01:20:15.667
  STEP: Checking that the sysctl is actually updated @ 09/11/23 01:20:15.679
  Sep 11 01:20:15.680: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5501" for this suite. @ 09/11/23 01:20:15.684
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/11/23 01:20:15.697
  Sep 11 01:20:15.697: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:20:15.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:15.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:15.719
  STEP: Creating configMap with name cm-test-opt-del-8d7a29e3-1d13-4aea-ad10-c8a59ef432bf @ 09/11/23 01:20:15.726
  STEP: Creating configMap with name cm-test-opt-upd-d772fa5e-7b56-4cc8-9821-0172ba7a6359 @ 09/11/23 01:20:15.733
  STEP: Creating the pod @ 09/11/23 01:20:15.737
  E0911 01:20:15.939840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:16.940344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-8d7a29e3-1d13-4aea-ad10-c8a59ef432bf @ 09/11/23 01:20:17.78
  STEP: Updating configmap cm-test-opt-upd-d772fa5e-7b56-4cc8-9821-0172ba7a6359 @ 09/11/23 01:20:17.788
  STEP: Creating configMap with name cm-test-opt-create-64f4e3ad-626b-417a-8fc8-6751e250bf50 @ 09/11/23 01:20:17.793
  STEP: waiting to observe update in volume @ 09/11/23 01:20:17.802
  E0911 01:20:17.941426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:18.941738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:19.841: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2836" for this suite. @ 09/11/23 01:20:19.847
• [4.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/11/23 01:20:19.856
  Sep 11 01:20:19.856: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/11/23 01:20:19.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:19.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:19.895
  E0911 01:20:19.942543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:20.943384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:21.937: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/11/23 01:20:21.941
  E0911 01:20:21.944224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configmap @ 09/11/23 01:20:21.947
  STEP: Cleaning up the pod @ 09/11/23 01:20:21.953
  STEP: Destroying namespace "emptydir-wrapper-8957" for this suite. @ 09/11/23 01:20:21.966
• [2.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/11/23 01:20:21.983
  Sep 11 01:20:21.983: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:20:21.984
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:22.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:22.014
  STEP: Creating a pod to test downward api env vars @ 09/11/23 01:20:22.016
  E0911 01:20:22.944617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:23.945359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:24.946025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:25.946220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:20:26.045
  Sep 11 01:20:26.053: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downward-api-3d58846f-b234-4e20-8b6e-e5723d5ef66c container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:20:26.065
  Sep 11 01:20:26.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5867" for this suite. @ 09/11/23 01:20:26.105
• [4.139 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/11/23 01:20:26.123
  Sep 11 01:20:26.123: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:20:26.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:26.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:26.155
  STEP: Creating secret with name secret-test-8d75b7fa-cfc3-4c34-b496-9ed3a46923dc @ 09/11/23 01:20:26.158
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:20:26.163
  E0911 01:20:26.947045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:27.947018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:28.947541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:29.947767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:20:30.229
  Sep 11 01:20:30.231: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-89d921d2-febe-49cb-98b1-dd8b235c51bd container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:20:30.238
  Sep 11 01:20:30.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-917" for this suite. @ 09/11/23 01:20:30.259
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/11/23 01:20:30.272
  Sep 11 01:20:30.272: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename events @ 09/11/23 01:20:30.273
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:30.309
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:30.316
  STEP: creating a test event @ 09/11/23 01:20:30.329
  STEP: listing all events in all namespaces @ 09/11/23 01:20:30.341
  STEP: patching the test event @ 09/11/23 01:20:30.35
  STEP: fetching the test event @ 09/11/23 01:20:30.36
  STEP: updating the test event @ 09/11/23 01:20:30.364
  STEP: getting the test event @ 09/11/23 01:20:30.383
  STEP: deleting the test event @ 09/11/23 01:20:30.391
  STEP: listing all events in all namespaces @ 09/11/23 01:20:30.403
  Sep 11 01:20:30.406: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5126" for this suite. @ 09/11/23 01:20:30.411
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/11/23 01:20:30.43
  Sep 11 01:20:30.430: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 01:20:30.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:30.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:30.464
  STEP: Creating a pod to test env composition @ 09/11/23 01:20:30.467
  E0911 01:20:30.948010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:31.948227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:32.949120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:33.950780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:20:34.493
  Sep 11 01:20:34.496: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod var-expansion-b413fdca-7653-4019-8d7b-28e217a4ce3e container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:20:34.503
  Sep 11 01:20:34.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2818" for this suite. @ 09/11/23 01:20:34.529
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/11/23 01:20:34.538
  Sep 11 01:20:34.538: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename secrets @ 09/11/23 01:20:34.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:34.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:34.561
  STEP: Creating secret with name secret-test-map-f9b8b220-b8af-4e06-aec0-2ab4ff9a14a0 @ 09/11/23 01:20:34.563
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:20:34.569
  E0911 01:20:34.953139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:35.953120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:36.953762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:37.954090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:20:38.596
  Sep 11 01:20:38.600: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-secrets-65c2b21a-cbd1-44a0-826c-6c672b449829 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:20:38.606
  Sep 11 01:20:38.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5157" for this suite. @ 09/11/23 01:20:38.628
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/11/23 01:20:38.635
  Sep 11 01:20:38.636: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 01:20:38.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:38.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:38.66
  Sep 11 01:20:38.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:20:38.954083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:39.954112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/11/23 01:20:40.758
  Sep 11 01:20:40.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-3772 --namespace=crd-publish-openapi-3772 create -f -'
  E0911 01:20:40.954503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:41.615: INFO: stderr: ""
  Sep 11 01:20:41.615: INFO: stdout: "e2e-test-crd-publish-openapi-6834-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 11 01:20:41.615: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-3772 --namespace=crd-publish-openapi-3772 delete e2e-test-crd-publish-openapi-6834-crds test-cr'
  Sep 11 01:20:41.703: INFO: stderr: ""
  Sep 11 01:20:41.703: INFO: stdout: "e2e-test-crd-publish-openapi-6834-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 11 01:20:41.703: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-3772 --namespace=crd-publish-openapi-3772 apply -f -'
  E0911 01:20:41.955225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:42.386: INFO: stderr: ""
  Sep 11 01:20:42.386: INFO: stdout: "e2e-test-crd-publish-openapi-6834-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 11 01:20:42.386: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-3772 --namespace=crd-publish-openapi-3772 delete e2e-test-crd-publish-openapi-6834-crds test-cr'
  Sep 11 01:20:42.500: INFO: stderr: ""
  Sep 11 01:20:42.500: INFO: stdout: "e2e-test-crd-publish-openapi-6834-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/11/23 01:20:42.5
  Sep 11 01:20:42.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=crd-publish-openapi-3772 explain e2e-test-crd-publish-openapi-6834-crds'
  Sep 11 01:20:42.690: INFO: stderr: ""
  Sep 11 01:20:42.690: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-6834-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0911 01:20:42.955852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:43.956429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:44.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3772" for this suite. @ 09/11/23 01:20:44.748
• [6.124 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/11/23 01:20:44.761
  Sep 11 01:20:44.761: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename job @ 09/11/23 01:20:44.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:44.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:44.786
  STEP: Creating a job @ 09/11/23 01:20:44.79
  STEP: Ensuring active pods == parallelism @ 09/11/23 01:20:44.797
  E0911 01:20:44.957362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:45.958202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 09/11/23 01:20:46.801
  E0911 01:20:46.958794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:47.326: INFO: Successfully updated pod "adopt-release-9x4qz"
  STEP: Checking that the Job readopts the Pod @ 09/11/23 01:20:47.327
  E0911 01:20:47.959774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:48.960086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 09/11/23 01:20:49.339
  Sep 11 01:20:49.852: INFO: Successfully updated pod "adopt-release-9x4qz"
  STEP: Checking that the Job releases the Pod @ 09/11/23 01:20:49.852
  E0911 01:20:49.960490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:50.961046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:20:51.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7675" for this suite. @ 09/11/23 01:20:51.878
• [7.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/11/23 01:20:51.89
  Sep 11 01:20:51.890: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename configmap @ 09/11/23 01:20:51.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:51.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:51.919
  STEP: Creating configMap configmap-8864/configmap-test-e0f90df4-30d9-4e15-900e-9958b4055e9c @ 09/11/23 01:20:51.921
  STEP: Creating a pod to test consume configMaps @ 09/11/23 01:20:51.927
  E0911 01:20:51.962044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:52.962338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:53.962905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:54.963312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:20:55.955
  Sep 11 01:20:55.960: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-configmaps-32482276-f47d-4461-941b-c140b3be0555 container env-test: <nil>
  E0911 01:20:55.963748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 09/11/23 01:20:55.986
  Sep 11 01:20:56.015: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8864" for this suite. @ 09/11/23 01:20:56.024
• [4.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/11/23 01:20:56.044
  Sep 11 01:20:56.044: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:20:56.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:20:56.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:20:56.076
  STEP: Creating projection with secret that has name projected-secret-test-156dd398-3a17-4706-8d6a-6980ad0271ea @ 09/11/23 01:20:56.079
  STEP: Creating a pod to test consume secrets @ 09/11/23 01:20:56.085
  E0911 01:20:56.964106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:57.964134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:58.964849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:20:59.965695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:21:00.118
  Sep 11 01:21:00.122: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-projected-secrets-f737ee9b-e4ee-46f9-bad3-2e17bc3f38dd container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/11/23 01:21:00.139
  Sep 11 01:21:00.199: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7279" for this suite. @ 09/11/23 01:21:00.22
• [4.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/11/23 01:21:00.288
  Sep 11 01:21:00.288: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename kubectl @ 09/11/23 01:21:00.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:00.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:00.373
  STEP: Starting the proxy @ 09/11/23 01:21:00.377
  Sep 11 01:21:00.378: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=kubectl-9680 proxy --unix-socket=/tmp/kubectl-proxy-unix1184370417/test'
  STEP: retrieving proxy /api/ output @ 09/11/23 01:21:00.441
  Sep 11 01:21:00.442: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9680" for this suite. @ 09/11/23 01:21:00.447
• [0.167 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/11/23 01:21:00.456
  Sep 11 01:21:00.456: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 01:21:00.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:00.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:00.479
  STEP: Creating a pod to test substitution in container's args @ 09/11/23 01:21:00.485
  E0911 01:21:00.966503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:01.967134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:02.967817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:03.974940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:21:04.517
  Sep 11 01:21:04.520: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod var-expansion-918621e8-3191-4a43-89ba-799280862f92 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:21:04.528
  Sep 11 01:21:04.543: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1076" for this suite. @ 09/11/23 01:21:04.547
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/11/23 01:21:04.557
  Sep 11 01:21:04.557: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:21:04.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:04.576
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:04.587
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/11/23 01:21:04.59
  E0911 01:21:04.975238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:05.975623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:06.983266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:07.983652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:21:08.613
  Sep 11 01:21:08.618: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-44ac92b0-386c-447e-b82f-2abde7d61d12 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:21:08.627
  Sep 11 01:21:08.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4889" for this suite. @ 09/11/23 01:21:08.65
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/11/23 01:21:08.662
  Sep 11 01:21:08.662: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename namespaces @ 09/11/23 01:21:08.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:08.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:08.686
  STEP: Creating namespace "e2e-ns-6qqph" @ 09/11/23 01:21:08.689
  Sep 11 01:21:08.708: INFO: Namespace "e2e-ns-6qqph-4578" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-6qqph-4578" @ 09/11/23 01:21:08.709
  Sep 11 01:21:08.720: INFO: Namespace "e2e-ns-6qqph-4578" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-6qqph-4578" @ 09/11/23 01:21:08.72
  Sep 11 01:21:08.731: INFO: Namespace "e2e-ns-6qqph-4578" has []v1.FinalizerName{"kubernetes"}
  Sep 11 01:21:08.731: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1821" for this suite. @ 09/11/23 01:21:08.735
  STEP: Destroying namespace "e2e-ns-6qqph-4578" for this suite. @ 09/11/23 01:21:08.743
• [0.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/11/23 01:21:08.755
  Sep 11 01:21:08.755: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename security-context-test @ 09/11/23 01:21:08.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:08.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:08.782
  E0911 01:21:08.984560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:09.985485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:10.985795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:11.986278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:12.815: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-839" for this suite. @ 09/11/23 01:21:12.82
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/11/23 01:21:12.829
  Sep 11 01:21:12.829: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:21:12.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:12.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:12.853
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2588 @ 09/11/23 01:21:12.856
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/11/23 01:21:12.872
  STEP: creating service externalsvc in namespace services-2588 @ 09/11/23 01:21:12.872
  STEP: creating replication controller externalsvc in namespace services-2588 @ 09/11/23 01:21:12.895
  I0911 01:21:12.913107      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2588, replica count: 2
  E0911 01:21:12.986455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:13.987099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:14.987633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:21:15.964429      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/11/23 01:21:15.973
  E0911 01:21:15.987660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:16.006: INFO: Creating new exec pod
  E0911 01:21:16.989303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:17.989843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:18.031: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-2588 exec execpodrdqnc -- /bin/sh -x -c nslookup nodeport-service.services-2588.svc.cluster.local'
  Sep 11 01:21:18.377: INFO: stderr: "+ nslookup nodeport-service.services-2588.svc.cluster.local\n"
  Sep 11 01:21:18.377: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-2588.svc.cluster.local\tcanonical name = externalsvc.services-2588.svc.cluster.local.\nName:\texternalsvc.services-2588.svc.cluster.local\nAddress: 10.43.76.20\n\n"
  Sep 11 01:21:18.377: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2588, will wait for the garbage collector to delete the pods @ 09/11/23 01:21:18.382
  Sep 11 01:21:18.444: INFO: Deleting ReplicationController externalsvc took: 6.667813ms
  Sep 11 01:21:18.545: INFO: Terminating ReplicationController externalsvc pods took: 100.62008ms
  E0911 01:21:18.989864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:19.990143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:20.991037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:21.991682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:22.278: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-2588" for this suite. @ 09/11/23 01:21:22.306
• [9.495 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/11/23 01:21:22.324
  Sep 11 01:21:22.324: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename field-validation @ 09/11/23 01:21:22.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:22.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:22.351
  Sep 11 01:21:22.353: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:21:22.992515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:23.993574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:24.994250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:25.451: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8625" for this suite. @ 09/11/23 01:21:25.469
• [3.159 seconds]
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/11/23 01:21:25.483
  Sep 11 01:21:25.483: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename gc @ 09/11/23 01:21:25.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:25.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:25.511
  Sep 11 01:21:25.553: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"77ef9007-1883-4979-a5e8-f3e8de768b1e", Controller:(*bool)(0xc006aad04a), BlockOwnerDeletion:(*bool)(0xc006aad04b)}}
  Sep 11 01:21:25.563: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"496b7b00-fd6b-4cb1-8861-703ba55f0fee", Controller:(*bool)(0xc006aad24a), BlockOwnerDeletion:(*bool)(0xc006aad24b)}}
  Sep 11 01:21:25.572: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"1191834d-6174-4ea8-af0e-83edcad536f4", Controller:(*bool)(0xc003baa832), BlockOwnerDeletion:(*bool)(0xc003baa833)}}
  E0911 01:21:25.995102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:26.995383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:27.996052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:28.996201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:29.996825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:30.591: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5362" for this suite. @ 09/11/23 01:21:30.597
• [5.124 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/11/23 01:21:30.611
  Sep 11 01:21:30.611: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename var-expansion @ 09/11/23 01:21:30.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:30.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:30.648
  E0911 01:21:30.997359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:31.997448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:32.689: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 11 01:21:32.695: INFO: Deleting pod "var-expansion-0db859f5-56f2-40e9-9798-4e09cca13cef" in namespace "var-expansion-8542"
  Sep 11 01:21:32.704: INFO: Wait up to 5m0s for pod "var-expansion-0db859f5-56f2-40e9-9798-4e09cca13cef" to be fully deleted
  E0911 01:21:32.998349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:34.001204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:35.001162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:36.001302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "var-expansion-8542" for this suite. @ 09/11/23 01:21:36.715
• [6.114 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/11/23 01:21:36.727
  Sep 11 01:21:36.727: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename ingress @ 09/11/23 01:21:36.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:36.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:36.749
  STEP: getting /apis @ 09/11/23 01:21:36.752
  STEP: getting /apis/networking.k8s.io @ 09/11/23 01:21:36.758
  STEP: getting /apis/networking.k8s.iov1 @ 09/11/23 01:21:36.759
  STEP: creating @ 09/11/23 01:21:36.761
  E0911 01:21:37.002409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting @ 09/11/23 01:21:37.326
  STEP: listing @ 09/11/23 01:21:37.39
  STEP: watching @ 09/11/23 01:21:37.395
  Sep 11 01:21:37.395: INFO: starting watch
  STEP: cluster-wide listing @ 09/11/23 01:21:37.397
  STEP: cluster-wide watching @ 09/11/23 01:21:37.403
  Sep 11 01:21:37.403: INFO: starting watch
  STEP: patching @ 09/11/23 01:21:37.406
  STEP: updating @ 09/11/23 01:21:37.736
  E0911 01:21:38.003240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:38.065: INFO: waiting for watch events with expected annotations
  Sep 11 01:21:38.065: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/11/23 01:21:38.065
  STEP: updating /status @ 09/11/23 01:21:38.073
  STEP: get /status @ 09/11/23 01:21:38.089
  STEP: deleting @ 09/11/23 01:21:38.098
  STEP: deleting a collection @ 09/11/23 01:21:38.112
  Sep 11 01:21:38.129: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-402" for this suite. @ 09/11/23 01:21:38.134
• [1.414 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/11/23 01:21:38.141
  Sep 11 01:21:38.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename init-container @ 09/11/23 01:21:38.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:38.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:38.161
  STEP: creating the pod @ 09/11/23 01:21:38.164
  Sep 11 01:21:38.164: INFO: PodSpec: initContainers in spec.initContainers
  E0911 01:21:39.003686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:40.005340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:41.006485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:42.007029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:42.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5910" for this suite. @ 09/11/23 01:21:42.235
• [4.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/11/23 01:21:42.244
  Sep 11 01:21:42.244: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename projected @ 09/11/23 01:21:42.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:42.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:42.277
  STEP: Creating a pod to test downward API volume plugin @ 09/11/23 01:21:42.281
  E0911 01:21:43.007222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:44.007215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:45.007451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:46.007744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:21:46.306
  Sep 11 01:21:46.309: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downwardapi-volume-39f373ae-1166-4ad5-9926-0f9a12bf55cd container client-container: <nil>
  STEP: delete the pod @ 09/11/23 01:21:46.315
  Sep 11 01:21:46.332: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5237" for this suite. @ 09/11/23 01:21:46.338
• [4.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/11/23 01:21:46.353
  Sep 11 01:21:46.353: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:21:46.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:46.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:46.375
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/11/23 01:21:46.377
  E0911 01:21:47.010930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:48.011098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:49.013487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:50.014317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:21:50.403
  Sep 11 01:21:50.406: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-a9e12ae8-7bcf-4e3e-afa3-751f5fef9f8b container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:21:50.415
  Sep 11 01:21:50.434: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-234" for this suite. @ 09/11/23 01:21:50.439
• [4.092 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/11/23 01:21:50.447
  Sep 11 01:21:50.447: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:21:50.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:50.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:50.468
  STEP: Setting up server cert @ 09/11/23 01:21:50.514
  E0911 01:21:51.015401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:21:51.053
  STEP: Deploying the webhook pod @ 09/11/23 01:21:51.069
  STEP: Wait for the deployment to be ready @ 09/11/23 01:21:51.085
  Sep 11 01:21:51.095: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0911 01:21:52.016239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:53.016288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 01:21:53.105
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:21:53.12
  E0911 01:21:54.016494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:21:54.121: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/11/23 01:21:54.127
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/11/23 01:21:54.129
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/11/23 01:21:54.129
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/11/23 01:21:54.129
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/11/23 01:21:54.13
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/11/23 01:21:54.13
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/11/23 01:21:54.131
  Sep 11 01:21:54.131: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4697" for this suite. @ 09/11/23 01:21:54.19
  STEP: Destroying namespace "webhook-markers-2539" for this suite. @ 09/11/23 01:21:54.199
• [3.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/11/23 01:21:54.212
  Sep 11 01:21:54.212: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:21:54.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:54.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:54.295
  STEP: creating an Endpoint @ 09/11/23 01:21:54.301
  STEP: waiting for available Endpoint @ 09/11/23 01:21:54.306
  STEP: listing all Endpoints @ 09/11/23 01:21:54.307
  STEP: updating the Endpoint @ 09/11/23 01:21:54.31
  STEP: fetching the Endpoint @ 09/11/23 01:21:54.316
  STEP: patching the Endpoint @ 09/11/23 01:21:54.319
  STEP: fetching the Endpoint @ 09/11/23 01:21:54.329
  STEP: deleting the Endpoint by Collection @ 09/11/23 01:21:54.334
  STEP: waiting for Endpoint deletion @ 09/11/23 01:21:54.343
  STEP: fetching the Endpoint @ 09/11/23 01:21:54.345
  Sep 11 01:21:54.348: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6971" for this suite. @ 09/11/23 01:21:54.356
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/11/23 01:21:54.368
  Sep 11 01:21:54.368: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename watch @ 09/11/23 01:21:54.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:21:54.389
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:21:54.394
  STEP: creating a watch on configmaps with a certain label @ 09/11/23 01:21:54.398
  STEP: creating a new configmap @ 09/11/23 01:21:54.4
  STEP: modifying the configmap once @ 09/11/23 01:21:54.405
  STEP: changing the label value of the configmap @ 09/11/23 01:21:54.414
  STEP: Expecting to observe a delete notification for the watched object @ 09/11/23 01:21:54.423
  Sep 11 01:21:54.423: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123363 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:21:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:21:54.424: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123364 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:21:54.424: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123365 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:21:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/11/23 01:21:54.424
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/11/23 01:21:54.435
  E0911 01:21:55.017208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:56.017344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:57.019138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:58.019413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:21:59.019569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:00.019998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:01.020098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:02.020209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:03.020331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:04.020710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 09/11/23 01:22:04.436
  STEP: modifying the configmap a third time @ 09/11/23 01:22:04.452
  STEP: deleting the configmap @ 09/11/23 01:22:04.485
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/11/23 01:22:04.499
  Sep 11 01:22:04.500: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123431 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:22:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:22:04.500: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123432 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:22:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:22:04.500: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-5926  97c6b2b8-73ef-4213-88ed-95f29f773199 123433 0 2023-09-11 01:21:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-11 01:22:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:22:04.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5926" for this suite. @ 09/11/23 01:22:04.512
• [10.166 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/11/23 01:22:04.535
  Sep 11 01:22:04.535: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-runtime @ 09/11/23 01:22:04.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:04.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:04.574
  STEP: create the container @ 09/11/23 01:22:04.577
  W0911 01:22:04.603634      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/11/23 01:22:04.604
  E0911 01:22:05.021589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:06.022492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:07.022627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:08.024093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 09/11/23 01:22:08.632
  STEP: the container should be terminated @ 09/11/23 01:22:08.635
  STEP: the termination message should be set @ 09/11/23 01:22:08.635
  Sep 11 01:22:08.635: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/11/23 01:22:08.635
  Sep 11 01:22:08.650: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2594" for this suite. @ 09/11/23 01:22:08.662
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/11/23 01:22:08.672
  Sep 11 01:22:08.672: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename svc-latency @ 09/11/23 01:22:08.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:08.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:08.701
  Sep 11 01:22:08.703: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9587 @ 09/11/23 01:22:08.704
  I0911 01:22:08.711452      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9587, replica count: 1
  E0911 01:22:09.024638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:22:09.762562      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0911 01:22:10.024861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:22:10.762747      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 11 01:22:10.889: INFO: Created: latency-svc-2f9ww
  Sep 11 01:22:10.907: INFO: Got endpoints: latency-svc-2f9ww [44.31096ms]
  Sep 11 01:22:10.953: INFO: Created: latency-svc-jqfnc
  Sep 11 01:22:10.981: INFO: Got endpoints: latency-svc-jqfnc [73.742433ms]
  Sep 11 01:22:10.989: INFO: Created: latency-svc-xkzrj
  Sep 11 01:22:11.005: INFO: Got endpoints: latency-svc-xkzrj [95.945913ms]
  Sep 11 01:22:11.013: INFO: Created: latency-svc-wzfxn
  E0911 01:22:11.025955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:11.027: INFO: Got endpoints: latency-svc-wzfxn [118.031922ms]
  Sep 11 01:22:11.047: INFO: Created: latency-svc-76mld
  Sep 11 01:22:11.055: INFO: Got endpoints: latency-svc-76mld [144.066788ms]
  Sep 11 01:22:11.081: INFO: Created: latency-svc-d2jtg
  Sep 11 01:22:11.096: INFO: Got endpoints: latency-svc-d2jtg [186.42567ms]
  Sep 11 01:22:11.246: INFO: Created: latency-svc-bq6kd
  Sep 11 01:22:11.256: INFO: Created: latency-svc-jbj8t
  Sep 11 01:22:11.256: INFO: Created: latency-svc-2sl6j
  Sep 11 01:22:11.257: INFO: Created: latency-svc-5585r
  Sep 11 01:22:11.257: INFO: Created: latency-svc-4bd2v
  Sep 11 01:22:11.261: INFO: Created: latency-svc-xcw2d
  Sep 11 01:22:11.261: INFO: Created: latency-svc-qzvp6
  Sep 11 01:22:11.262: INFO: Created: latency-svc-stb79
  Sep 11 01:22:11.264: INFO: Created: latency-svc-4qpxb
  Sep 11 01:22:11.264: INFO: Created: latency-svc-7xjjx
  Sep 11 01:22:11.264: INFO: Created: latency-svc-bsfm8
  Sep 11 01:22:11.264: INFO: Created: latency-svc-bjtgj
  Sep 11 01:22:11.265: INFO: Created: latency-svc-glksd
  Sep 11 01:22:11.266: INFO: Created: latency-svc-jns2v
  Sep 11 01:22:11.267: INFO: Created: latency-svc-rlwrk
  Sep 11 01:22:11.267: INFO: Got endpoints: latency-svc-bq6kd [356.264838ms]
  Sep 11 01:22:11.290: INFO: Created: latency-svc-mp6bv
  Sep 11 01:22:11.303: INFO: Got endpoints: latency-svc-stb79 [392.969821ms]
  Sep 11 01:22:11.303: INFO: Got endpoints: latency-svc-xcw2d [392.670987ms]
  Sep 11 01:22:11.303: INFO: Got endpoints: latency-svc-glksd [393.764083ms]
  Sep 11 01:22:11.303: INFO: Got endpoints: latency-svc-qzvp6 [207.216721ms]
  Sep 11 01:22:11.317: INFO: Got endpoints: latency-svc-4qpxb [407.023078ms]
  Sep 11 01:22:11.332: INFO: Created: latency-svc-cpwd4
  Sep 11 01:22:11.335: INFO: Got endpoints: latency-svc-bjtgj [425.642629ms]
  Sep 11 01:22:11.337: INFO: Got endpoints: latency-svc-2sl6j [426.710964ms]
  Sep 11 01:22:11.337: INFO: Got endpoints: latency-svc-4bd2v [426.876496ms]
  Sep 11 01:22:11.338: INFO: Got endpoints: latency-svc-jbj8t [427.499745ms]
  Sep 11 01:22:11.348: INFO: Got endpoints: latency-svc-5585r [437.599126ms]
  Sep 11 01:22:11.353: INFO: Created: latency-svc-lwvbd
  Sep 11 01:22:11.358: INFO: Got endpoints: latency-svc-7xjjx [353.183124ms]
  Sep 11 01:22:11.383: INFO: Created: latency-svc-l7qwf
  Sep 11 01:22:11.386: INFO: Got endpoints: latency-svc-bsfm8 [404.832578ms]
  Sep 11 01:22:11.392: INFO: Got endpoints: latency-svc-rlwrk [364.477902ms]
  Sep 11 01:22:11.413: INFO: Got endpoints: latency-svc-jns2v [358.422038ms]
  Sep 11 01:22:11.414: INFO: Got endpoints: latency-svc-lwvbd [109.454262ms]
  Sep 11 01:22:11.414: INFO: Got endpoints: latency-svc-mp6bv [146.827526ms]
  Sep 11 01:22:11.414: INFO: Got endpoints: latency-svc-cpwd4 [109.433092ms]
  Sep 11 01:22:11.416: INFO: Got endpoints: latency-svc-l7qwf [111.267588ms]
  Sep 11 01:22:11.433: INFO: Created: latency-svc-ksbr4
  Sep 11 01:22:11.441: INFO: Got endpoints: latency-svc-ksbr4 [135.366935ms]
  Sep 11 01:22:11.680: INFO: Created: latency-svc-9qk79
  Sep 11 01:22:11.681: INFO: Created: latency-svc-c4bcr
  Sep 11 01:22:11.681: INFO: Created: latency-svc-74vnc
  Sep 11 01:22:11.681: INFO: Created: latency-svc-6s82s
  Sep 11 01:22:11.681: INFO: Created: latency-svc-nbfhn
  Sep 11 01:22:11.681: INFO: Created: latency-svc-cb7h4
  Sep 11 01:22:11.681: INFO: Created: latency-svc-hdfgn
  Sep 11 01:22:11.681: INFO: Created: latency-svc-xbx5z
  Sep 11 01:22:11.681: INFO: Created: latency-svc-rprcg
  Sep 11 01:22:11.681: INFO: Created: latency-svc-278dt
  Sep 11 01:22:11.684: INFO: Got endpoints: latency-svc-nbfhn [242.985422ms]
  Sep 11 01:22:11.726: INFO: Got endpoints: latency-svc-6s82s [409.160868ms]
  Sep 11 01:22:11.727: INFO: Got endpoints: latency-svc-cb7h4 [334.608075ms]
  Sep 11 01:22:11.744: INFO: Created: latency-svc-plzv6
  Sep 11 01:22:11.745: INFO: Created: latency-svc-79xfc
  Sep 11 01:22:11.746: INFO: Got endpoints: latency-svc-79xfc [386.494981ms]
  Sep 11 01:22:11.754: INFO: Created: latency-svc-lh6kr
  Sep 11 01:22:11.757: INFO: Created: latency-svc-g8kvm
  Sep 11 01:22:11.757: INFO: Created: latency-svc-7nrss
  Sep 11 01:22:11.769: INFO: Got endpoints: latency-svc-c4bcr [354.121308ms]
  Sep 11 01:22:11.769: INFO: Got endpoints: latency-svc-rprcg [383.090394ms]
  Sep 11 01:22:11.769: INFO: Got endpoints: latency-svc-hdfgn [355.579338ms]
  Sep 11 01:22:11.778: INFO: Got endpoints: latency-svc-lh6kr [363.146904ms]
  Sep 11 01:22:11.778: INFO: Got endpoints: latency-svc-278dt [441.950057ms]
  Sep 11 01:22:11.778: INFO: Got endpoints: latency-svc-xbx5z [364.128047ms]
  Sep 11 01:22:11.778: INFO: Got endpoints: latency-svc-plzv6 [430.210643ms]
  Sep 11 01:22:11.779: INFO: Got endpoints: latency-svc-9qk79 [441.754745ms]
  Sep 11 01:22:11.779: INFO: Got endpoints: latency-svc-7nrss [441.308908ms]
  Sep 11 01:22:11.779: INFO: Got endpoints: latency-svc-g8kvm [362.705438ms]
  Sep 11 01:22:11.779: INFO: Got endpoints: latency-svc-74vnc [441.590982ms]
  Sep 11 01:22:11.819: INFO: Created: latency-svc-959zd
  Sep 11 01:22:11.827: INFO: Got endpoints: latency-svc-959zd [101.063385ms]
  Sep 11 01:22:12.024: INFO: Created: latency-svc-f4s58
  E0911 01:22:12.026229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:12.027: INFO: Created: latency-svc-krtxq
  Sep 11 01:22:12.028: INFO: Created: latency-svc-sm64t
  Sep 11 01:22:12.028: INFO: Created: latency-svc-zf8gl
  Sep 11 01:22:12.028: INFO: Created: latency-svc-r6j27
  Sep 11 01:22:12.028: INFO: Created: latency-svc-jftv4
  Sep 11 01:22:12.029: INFO: Created: latency-svc-zwstl
  Sep 11 01:22:12.029: INFO: Created: latency-svc-xvtfs
  Sep 11 01:22:12.029: INFO: Created: latency-svc-dj9v2
  Sep 11 01:22:12.030: INFO: Created: latency-svc-jfxlk
  Sep 11 01:22:12.034: INFO: Created: latency-svc-cfd26
  Sep 11 01:22:12.035: INFO: Created: latency-svc-x4vt7
  Sep 11 01:22:12.036: INFO: Got endpoints: latency-svc-jfxlk [309.27958ms]
  Sep 11 01:22:12.037: INFO: Got endpoints: latency-svc-xvtfs [266.984567ms]
  Sep 11 01:22:12.037: INFO: Got endpoints: latency-svc-zwstl [209.34615ms]
  Sep 11 01:22:12.037: INFO: Created: latency-svc-qgfdc
  Sep 11 01:22:12.037: INFO: Created: latency-svc-fkl8t
  Sep 11 01:22:12.037: INFO: Created: latency-svc-4zwbw
  Sep 11 01:22:12.057: INFO: Got endpoints: latency-svc-jftv4 [311.742575ms]
  Sep 11 01:22:12.058: INFO: Got endpoints: latency-svc-fkl8t [374.147197ms]
  Sep 11 01:22:12.069: INFO: Got endpoints: latency-svc-dj9v2 [298.621821ms]
  Sep 11 01:22:12.079: INFO: Got endpoints: latency-svc-4zwbw [309.36756ms]
  Sep 11 01:22:12.079: INFO: Got endpoints: latency-svc-x4vt7 [297.244541ms]
  Sep 11 01:22:12.085: INFO: Got endpoints: latency-svc-cfd26 [307.263051ms]
  Sep 11 01:22:12.085: INFO: Got endpoints: latency-svc-sm64t [307.042258ms]
  Sep 11 01:22:12.098: INFO: Created: latency-svc-fx9bh
  Sep 11 01:22:12.113: INFO: Got endpoints: latency-svc-qgfdc [333.715731ms]
  Sep 11 01:22:12.147: INFO: Created: latency-svc-vwjdj
  Sep 11 01:22:12.159: INFO: Got endpoints: latency-svc-zf8gl [379.645145ms]
  Sep 11 01:22:12.175: INFO: Created: latency-svc-brc8v
  Sep 11 01:22:12.203: INFO: Created: latency-svc-4zzdn
  Sep 11 01:22:12.210: INFO: Got endpoints: latency-svc-r6j27 [428.223844ms]
  Sep 11 01:22:12.223: INFO: Created: latency-svc-6qxv6
  Sep 11 01:22:12.238: INFO: Created: latency-svc-gshxj
  Sep 11 01:22:12.275: INFO: Created: latency-svc-xd44v
  Sep 11 01:22:12.276: INFO: Got endpoints: latency-svc-f4s58 [494.871538ms]
  Sep 11 01:22:12.295: INFO: Created: latency-svc-2djbg
  Sep 11 01:22:12.302: INFO: Got endpoints: latency-svc-krtxq [521.384309ms]
  Sep 11 01:22:12.308: INFO: Created: latency-svc-vmgvq
  Sep 11 01:22:12.317: INFO: Created: latency-svc-pxqw7
  Sep 11 01:22:12.324: INFO: Created: latency-svc-ns9h4
  Sep 11 01:22:12.334: INFO: Created: latency-svc-vv7h6
  Sep 11 01:22:12.344: INFO: Created: latency-svc-wz2sn
  Sep 11 01:22:12.351: INFO: Got endpoints: latency-svc-fx9bh [313.59638ms]
  Sep 11 01:22:12.358: INFO: Created: latency-svc-bd2jr
  Sep 11 01:22:12.367: INFO: Created: latency-svc-wrcnw
  Sep 11 01:22:12.376: INFO: Created: latency-svc-thkjv
  Sep 11 01:22:12.401: INFO: Got endpoints: latency-svc-vwjdj [362.85981ms]
  Sep 11 01:22:12.420: INFO: Created: latency-svc-7d69p
  Sep 11 01:22:12.452: INFO: Got endpoints: latency-svc-brc8v [414.170268ms]
  Sep 11 01:22:12.463: INFO: Created: latency-svc-29mfk
  Sep 11 01:22:12.499: INFO: Got endpoints: latency-svc-4zzdn [441.114395ms]
  Sep 11 01:22:12.514: INFO: Created: latency-svc-ls4zh
  Sep 11 01:22:12.554: INFO: Got endpoints: latency-svc-6qxv6 [496.235417ms]
  Sep 11 01:22:12.565: INFO: Created: latency-svc-wm28g
  Sep 11 01:22:12.599: INFO: Got endpoints: latency-svc-gshxj [530.550517ms]
  Sep 11 01:22:12.613: INFO: Created: latency-svc-7cp5d
  Sep 11 01:22:12.651: INFO: Got endpoints: latency-svc-xd44v [572.060239ms]
  Sep 11 01:22:12.666: INFO: Created: latency-svc-hpckf
  Sep 11 01:22:12.703: INFO: Got endpoints: latency-svc-2djbg [617.689067ms]
  Sep 11 01:22:12.717: INFO: Created: latency-svc-9j5lv
  Sep 11 01:22:12.751: INFO: Got endpoints: latency-svc-vmgvq [665.286064ms]
  Sep 11 01:22:12.763: INFO: Created: latency-svc-55jjj
  Sep 11 01:22:12.801: INFO: Got endpoints: latency-svc-pxqw7 [721.981017ms]
  Sep 11 01:22:12.818: INFO: Created: latency-svc-rhj4r
  Sep 11 01:22:12.851: INFO: Got endpoints: latency-svc-ns9h4 [737.954112ms]
  Sep 11 01:22:12.863: INFO: Created: latency-svc-mqcvw
  Sep 11 01:22:12.900: INFO: Got endpoints: latency-svc-vv7h6 [740.146362ms]
  Sep 11 01:22:12.920: INFO: Created: latency-svc-vgvlf
  Sep 11 01:22:12.953: INFO: Got endpoints: latency-svc-wz2sn [742.844559ms]
  Sep 11 01:22:12.965: INFO: Created: latency-svc-7wb72
  Sep 11 01:22:13.002: INFO: Got endpoints: latency-svc-bd2jr [725.699239ms]
  Sep 11 01:22:13.012: INFO: Created: latency-svc-zmcfk
  E0911 01:22:13.027012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:13.052: INFO: Got endpoints: latency-svc-wrcnw [750.06034ms]
  Sep 11 01:22:13.065: INFO: Created: latency-svc-tms8k
  Sep 11 01:22:13.100: INFO: Got endpoints: latency-svc-thkjv [748.516269ms]
  Sep 11 01:22:13.114: INFO: Created: latency-svc-kjldt
  Sep 11 01:22:13.150: INFO: Got endpoints: latency-svc-7d69p [749.501632ms]
  Sep 11 01:22:13.165: INFO: Created: latency-svc-dg82j
  Sep 11 01:22:13.199: INFO: Got endpoints: latency-svc-29mfk [747.357732ms]
  Sep 11 01:22:13.213: INFO: Created: latency-svc-99rc4
  Sep 11 01:22:13.250: INFO: Got endpoints: latency-svc-ls4zh [750.643189ms]
  Sep 11 01:22:13.262: INFO: Created: latency-svc-ktkcs
  Sep 11 01:22:13.302: INFO: Got endpoints: latency-svc-wm28g [747.379533ms]
  Sep 11 01:22:13.315: INFO: Created: latency-svc-zg527
  Sep 11 01:22:13.361: INFO: Got endpoints: latency-svc-7cp5d [762.094909ms]
  Sep 11 01:22:13.376: INFO: Created: latency-svc-zvxbg
  Sep 11 01:22:13.404: INFO: Got endpoints: latency-svc-hpckf [751.975987ms]
  Sep 11 01:22:13.416: INFO: Created: latency-svc-wqmr5
  Sep 11 01:22:13.453: INFO: Got endpoints: latency-svc-9j5lv [750.235603ms]
  Sep 11 01:22:13.466: INFO: Created: latency-svc-hszdx
  Sep 11 01:22:13.499: INFO: Got endpoints: latency-svc-55jjj [747.822139ms]
  Sep 11 01:22:13.511: INFO: Created: latency-svc-7hcgr
  Sep 11 01:22:13.551: INFO: Got endpoints: latency-svc-rhj4r [749.736866ms]
  Sep 11 01:22:13.565: INFO: Created: latency-svc-jnn6z
  Sep 11 01:22:13.600: INFO: Got endpoints: latency-svc-mqcvw [748.679791ms]
  Sep 11 01:22:13.613: INFO: Created: latency-svc-pm4bv
  Sep 11 01:22:13.655: INFO: Got endpoints: latency-svc-vgvlf [755.516407ms]
  Sep 11 01:22:13.671: INFO: Created: latency-svc-gttjc
  Sep 11 01:22:13.701: INFO: Got endpoints: latency-svc-7wb72 [747.669548ms]
  Sep 11 01:22:13.721: INFO: Created: latency-svc-m7d2d
  Sep 11 01:22:13.750: INFO: Got endpoints: latency-svc-zmcfk [748.032582ms]
  Sep 11 01:22:13.765: INFO: Created: latency-svc-5xnvm
  Sep 11 01:22:13.800: INFO: Got endpoints: latency-svc-tms8k [747.969481ms]
  Sep 11 01:22:13.814: INFO: Created: latency-svc-25hnl
  Sep 11 01:22:13.853: INFO: Got endpoints: latency-svc-kjldt [753.163514ms]
  Sep 11 01:22:13.877: INFO: Created: latency-svc-5dt29
  Sep 11 01:22:13.908: INFO: Got endpoints: latency-svc-dg82j [757.471684ms]
  Sep 11 01:22:13.941: INFO: Created: latency-svc-sctpp
  Sep 11 01:22:13.955: INFO: Got endpoints: latency-svc-99rc4 [755.479117ms]
  Sep 11 01:22:13.969: INFO: Created: latency-svc-4cm9k
  Sep 11 01:22:14.001: INFO: Got endpoints: latency-svc-ktkcs [751.357199ms]
  Sep 11 01:22:14.016: INFO: Created: latency-svc-g8ngj
  E0911 01:22:14.027569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:14.051: INFO: Got endpoints: latency-svc-zg527 [749.31755ms]
  Sep 11 01:22:14.065: INFO: Created: latency-svc-2vvnz
  Sep 11 01:22:14.101: INFO: Got endpoints: latency-svc-zvxbg [739.223869ms]
  Sep 11 01:22:14.113: INFO: Created: latency-svc-ns65b
  Sep 11 01:22:14.150: INFO: Got endpoints: latency-svc-wqmr5 [745.72567ms]
  Sep 11 01:22:14.161: INFO: Created: latency-svc-czbnk
  Sep 11 01:22:14.200: INFO: Got endpoints: latency-svc-hszdx [746.302098ms]
  Sep 11 01:22:14.217: INFO: Created: latency-svc-dzx6k
  Sep 11 01:22:14.251: INFO: Got endpoints: latency-svc-7hcgr [751.588961ms]
  Sep 11 01:22:14.264: INFO: Created: latency-svc-gzflk
  Sep 11 01:22:14.303: INFO: Got endpoints: latency-svc-jnn6z [751.364199ms]
  Sep 11 01:22:14.314: INFO: Created: latency-svc-rmbm6
  Sep 11 01:22:14.352: INFO: Got endpoints: latency-svc-pm4bv [751.762644ms]
  Sep 11 01:22:14.364: INFO: Created: latency-svc-l4v49
  Sep 11 01:22:14.400: INFO: Got endpoints: latency-svc-gttjc [744.364271ms]
  Sep 11 01:22:14.418: INFO: Created: latency-svc-4w8cl
  Sep 11 01:22:14.449: INFO: Got endpoints: latency-svc-m7d2d [748.120313ms]
  Sep 11 01:22:14.463: INFO: Created: latency-svc-9srxz
  Sep 11 01:22:14.500: INFO: Got endpoints: latency-svc-5xnvm [750.268823ms]
  Sep 11 01:22:14.513: INFO: Created: latency-svc-gcxhh
  Sep 11 01:22:14.549: INFO: Got endpoints: latency-svc-25hnl [748.945105ms]
  Sep 11 01:22:14.564: INFO: Created: latency-svc-lsbzk
  Sep 11 01:22:14.600: INFO: Got endpoints: latency-svc-5dt29 [746.510601ms]
  Sep 11 01:22:14.613: INFO: Created: latency-svc-xjsc8
  Sep 11 01:22:14.650: INFO: Got endpoints: latency-svc-sctpp [742.086629ms]
  Sep 11 01:22:14.663: INFO: Created: latency-svc-csv5j
  Sep 11 01:22:14.700: INFO: Got endpoints: latency-svc-4cm9k [744.934838ms]
  Sep 11 01:22:14.713: INFO: Created: latency-svc-vw7jx
  Sep 11 01:22:14.751: INFO: Got endpoints: latency-svc-g8ngj [749.544483ms]
  Sep 11 01:22:14.763: INFO: Created: latency-svc-96l2v
  Sep 11 01:22:14.801: INFO: Got endpoints: latency-svc-2vvnz [749.714865ms]
  Sep 11 01:22:14.814: INFO: Created: latency-svc-v8cpz
  Sep 11 01:22:14.852: INFO: Got endpoints: latency-svc-ns65b [751.069914ms]
  Sep 11 01:22:14.865: INFO: Created: latency-svc-p8zfp
  Sep 11 01:22:14.901: INFO: Got endpoints: latency-svc-czbnk [751.006234ms]
  Sep 11 01:22:14.919: INFO: Created: latency-svc-ptf2b
  Sep 11 01:22:14.952: INFO: Got endpoints: latency-svc-dzx6k [752.270291ms]
  E0911 01:22:15.028389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:15.055: INFO: Created: latency-svc-s7zvg
  Sep 11 01:22:15.059: INFO: Got endpoints: latency-svc-rmbm6 [756.428109ms]
  Sep 11 01:22:15.060: INFO: Got endpoints: latency-svc-gzflk [808.846464ms]
  Sep 11 01:22:15.075: INFO: Created: latency-svc-qlqxl
  Sep 11 01:22:15.084: INFO: Created: latency-svc-cnvvs
  Sep 11 01:22:15.100: INFO: Got endpoints: latency-svc-l4v49 [748.287505ms]
  Sep 11 01:22:15.115: INFO: Created: latency-svc-4zx59
  Sep 11 01:22:15.152: INFO: Got endpoints: latency-svc-4w8cl [751.503711ms]
  Sep 11 01:22:15.166: INFO: Created: latency-svc-j6g6j
  Sep 11 01:22:15.202: INFO: Got endpoints: latency-svc-9srxz [752.656776ms]
  Sep 11 01:22:15.216: INFO: Created: latency-svc-hs2nv
  Sep 11 01:22:15.249: INFO: Got endpoints: latency-svc-gcxhh [748.62056ms]
  Sep 11 01:22:15.263: INFO: Created: latency-svc-ctgtf
  Sep 11 01:22:15.300: INFO: Got endpoints: latency-svc-lsbzk [749.643245ms]
  Sep 11 01:22:15.314: INFO: Created: latency-svc-scwn6
  Sep 11 01:22:15.350: INFO: Got endpoints: latency-svc-xjsc8 [749.863398ms]
  Sep 11 01:22:15.369: INFO: Created: latency-svc-sz68j
  Sep 11 01:22:15.400: INFO: Got endpoints: latency-svc-csv5j [749.009965ms]
  Sep 11 01:22:15.413: INFO: Created: latency-svc-lj988
  Sep 11 01:22:15.455: INFO: Got endpoints: latency-svc-vw7jx [754.35051ms]
  Sep 11 01:22:15.480: INFO: Created: latency-svc-fcccs
  Sep 11 01:22:15.500: INFO: Got endpoints: latency-svc-96l2v [748.326147ms]
  Sep 11 01:22:15.515: INFO: Created: latency-svc-8mlhs
  Sep 11 01:22:15.548: INFO: Got endpoints: latency-svc-v8cpz [746.426299ms]
  Sep 11 01:22:15.561: INFO: Created: latency-svc-6rqrb
  Sep 11 01:22:15.599: INFO: Got endpoints: latency-svc-p8zfp [746.734534ms]
  Sep 11 01:22:15.615: INFO: Created: latency-svc-jr87g
  Sep 11 01:22:15.650: INFO: Got endpoints: latency-svc-ptf2b [749.159908ms]
  Sep 11 01:22:15.661: INFO: Created: latency-svc-fmgzs
  Sep 11 01:22:15.699: INFO: Got endpoints: latency-svc-s7zvg [746.773405ms]
  Sep 11 01:22:15.713: INFO: Created: latency-svc-qtgbp
  Sep 11 01:22:15.759: INFO: Got endpoints: latency-svc-qlqxl [699.016356ms]
  Sep 11 01:22:15.778: INFO: Created: latency-svc-fh5qb
  Sep 11 01:22:15.801: INFO: Got endpoints: latency-svc-cnvvs [741.292677ms]
  Sep 11 01:22:15.812: INFO: Created: latency-svc-b5dvt
  Sep 11 01:22:15.862: INFO: Got endpoints: latency-svc-4zx59 [761.591392ms]
  Sep 11 01:22:15.891: INFO: Created: latency-svc-lddtm
  Sep 11 01:22:15.911: INFO: Got endpoints: latency-svc-j6g6j [759.567664ms]
  Sep 11 01:22:15.936: INFO: Created: latency-svc-8ctwr
  Sep 11 01:22:15.959: INFO: Got endpoints: latency-svc-hs2nv [756.295328ms]
  Sep 11 01:22:15.991: INFO: Created: latency-svc-dgjjv
  Sep 11 01:22:16.005: INFO: Got endpoints: latency-svc-ctgtf [755.71962ms]
  Sep 11 01:22:16.027: INFO: Created: latency-svc-mnwll
  E0911 01:22:16.029026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:16.064: INFO: Got endpoints: latency-svc-scwn6 [764.667374ms]
  Sep 11 01:22:16.084: INFO: Created: latency-svc-jkkhp
  Sep 11 01:22:16.110: INFO: Got endpoints: latency-svc-sz68j [759.884998ms]
  Sep 11 01:22:16.128: INFO: Created: latency-svc-xctlr
  Sep 11 01:22:16.152: INFO: Got endpoints: latency-svc-lj988 [751.310487ms]
  Sep 11 01:22:16.166: INFO: Created: latency-svc-qfd5z
  Sep 11 01:22:16.200: INFO: Got endpoints: latency-svc-fcccs [745.125721ms]
  Sep 11 01:22:16.213: INFO: Created: latency-svc-v62hv
  Sep 11 01:22:16.251: INFO: Got endpoints: latency-svc-8mlhs [751.191486ms]
  Sep 11 01:22:16.264: INFO: Created: latency-svc-rhc4m
  Sep 11 01:22:16.298: INFO: Got endpoints: latency-svc-6rqrb [750.214762ms]
  Sep 11 01:22:16.312: INFO: Created: latency-svc-gmk75
  Sep 11 01:22:16.353: INFO: Got endpoints: latency-svc-jr87g [752.943661ms]
  Sep 11 01:22:16.365: INFO: Created: latency-svc-2zncc
  Sep 11 01:22:16.402: INFO: Got endpoints: latency-svc-fmgzs [751.560371ms]
  Sep 11 01:22:16.417: INFO: Created: latency-svc-59kgf
  Sep 11 01:22:16.452: INFO: Got endpoints: latency-svc-qtgbp [752.086978ms]
  Sep 11 01:22:16.466: INFO: Created: latency-svc-r8fv7
  Sep 11 01:22:16.501: INFO: Got endpoints: latency-svc-fh5qb [742.19458ms]
  Sep 11 01:22:16.517: INFO: Created: latency-svc-vhj8m
  Sep 11 01:22:16.549: INFO: Got endpoints: latency-svc-b5dvt [747.466893ms]
  Sep 11 01:22:16.564: INFO: Created: latency-svc-frfjp
  Sep 11 01:22:16.602: INFO: Got endpoints: latency-svc-lddtm [740.292004ms]
  Sep 11 01:22:16.614: INFO: Created: latency-svc-fnpbr
  Sep 11 01:22:16.654: INFO: Got endpoints: latency-svc-8ctwr [742.340462ms]
  Sep 11 01:22:16.671: INFO: Created: latency-svc-48465
  Sep 11 01:22:16.704: INFO: Got endpoints: latency-svc-dgjjv [745.095792ms]
  Sep 11 01:22:16.725: INFO: Created: latency-svc-mf7pr
  Sep 11 01:22:16.750: INFO: Got endpoints: latency-svc-mnwll [745.217073ms]
  Sep 11 01:22:16.765: INFO: Created: latency-svc-qn2qf
  Sep 11 01:22:16.800: INFO: Got endpoints: latency-svc-jkkhp [735.240673ms]
  Sep 11 01:22:16.839: INFO: Created: latency-svc-6zntj
  Sep 11 01:22:16.852: INFO: Got endpoints: latency-svc-xctlr [741.562911ms]
  Sep 11 01:22:16.875: INFO: Created: latency-svc-d7jw6
  Sep 11 01:22:16.909: INFO: Got endpoints: latency-svc-qfd5z [756.733103ms]
  Sep 11 01:22:16.953: INFO: Got endpoints: latency-svc-v62hv [751.768104ms]
  Sep 11 01:22:16.957: INFO: Created: latency-svc-g8z6g
  Sep 11 01:22:16.987: INFO: Created: latency-svc-m6vr2
  Sep 11 01:22:17.003: INFO: Got endpoints: latency-svc-rhc4m [751.801524ms]
  Sep 11 01:22:17.019: INFO: Created: latency-svc-ndq7r
  E0911 01:22:17.029924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:17.051: INFO: Got endpoints: latency-svc-gmk75 [752.297921ms]
  Sep 11 01:22:17.063: INFO: Created: latency-svc-9hvxx
  Sep 11 01:22:17.103: INFO: Got endpoints: latency-svc-2zncc [750.100151ms]
  Sep 11 01:22:17.118: INFO: Created: latency-svc-j6nsw
  Sep 11 01:22:17.149: INFO: Got endpoints: latency-svc-59kgf [747.150469ms]
  Sep 11 01:22:17.163: INFO: Created: latency-svc-g252z
  Sep 11 01:22:17.201: INFO: Got endpoints: latency-svc-r8fv7 [749.090077ms]
  Sep 11 01:22:17.215: INFO: Created: latency-svc-kgrxf
  Sep 11 01:22:17.261: INFO: Got endpoints: latency-svc-vhj8m [759.187928ms]
  Sep 11 01:22:17.272: INFO: Created: latency-svc-5mtmv
  Sep 11 01:22:17.300: INFO: Got endpoints: latency-svc-frfjp [751.137756ms]
  Sep 11 01:22:17.318: INFO: Created: latency-svc-g44qz
  Sep 11 01:22:17.352: INFO: Got endpoints: latency-svc-fnpbr [750.02614ms]
  Sep 11 01:22:17.367: INFO: Created: latency-svc-pz9gc
  Sep 11 01:22:17.401: INFO: Got endpoints: latency-svc-48465 [747.310661ms]
  Sep 11 01:22:17.413: INFO: Created: latency-svc-km7qm
  Sep 11 01:22:17.450: INFO: Got endpoints: latency-svc-mf7pr [745.544807ms]
  Sep 11 01:22:17.463: INFO: Created: latency-svc-czhj7
  Sep 11 01:22:17.503: INFO: Got endpoints: latency-svc-qn2qf [752.358212ms]
  Sep 11 01:22:17.515: INFO: Created: latency-svc-pn8fn
  Sep 11 01:22:17.553: INFO: Got endpoints: latency-svc-6zntj [753.530409ms]
  Sep 11 01:22:17.566: INFO: Created: latency-svc-ncjwj
  Sep 11 01:22:17.602: INFO: Got endpoints: latency-svc-d7jw6 [749.180939ms]
  Sep 11 01:22:17.615: INFO: Created: latency-svc-7jtvg
  Sep 11 01:22:17.651: INFO: Got endpoints: latency-svc-g8z6g [741.204367ms]
  Sep 11 01:22:17.667: INFO: Created: latency-svc-47s5h
  Sep 11 01:22:17.700: INFO: Got endpoints: latency-svc-m6vr2 [746.498081ms]
  Sep 11 01:22:17.715: INFO: Created: latency-svc-jrsl5
  Sep 11 01:22:17.750: INFO: Got endpoints: latency-svc-ndq7r [747.602616ms]
  Sep 11 01:22:17.762: INFO: Created: latency-svc-gnfbd
  Sep 11 01:22:17.803: INFO: Got endpoints: latency-svc-9hvxx [751.879287ms]
  Sep 11 01:22:17.817: INFO: Created: latency-svc-n9bxw
  Sep 11 01:22:17.851: INFO: Got endpoints: latency-svc-j6nsw [747.942581ms]
  Sep 11 01:22:17.863: INFO: Created: latency-svc-nwc7c
  Sep 11 01:22:17.900: INFO: Got endpoints: latency-svc-g252z [750.771741ms]
  Sep 11 01:22:17.929: INFO: Created: latency-svc-vlps6
  Sep 11 01:22:17.952: INFO: Got endpoints: latency-svc-kgrxf [750.718919ms]
  Sep 11 01:22:17.965: INFO: Created: latency-svc-rxj4z
  Sep 11 01:22:18.002: INFO: Got endpoints: latency-svc-5mtmv [741.000883ms]
  Sep 11 01:22:18.019: INFO: Created: latency-svc-df5gs
  E0911 01:22:18.030220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:18.057: INFO: Got endpoints: latency-svc-g44qz [756.689393ms]
  Sep 11 01:22:18.070: INFO: Created: latency-svc-mzmj5
  Sep 11 01:22:18.100: INFO: Got endpoints: latency-svc-pz9gc [748.061943ms]
  Sep 11 01:22:18.115: INFO: Created: latency-svc-zk455
  Sep 11 01:22:18.153: INFO: Got endpoints: latency-svc-km7qm [751.097146ms]
  Sep 11 01:22:18.171: INFO: Created: latency-svc-4k8qm
  Sep 11 01:22:18.201: INFO: Got endpoints: latency-svc-czhj7 [751.156637ms]
  Sep 11 01:22:18.214: INFO: Created: latency-svc-nfxsm
  Sep 11 01:22:18.255: INFO: Got endpoints: latency-svc-pn8fn [751.322599ms]
  Sep 11 01:22:18.273: INFO: Created: latency-svc-mb7d6
  Sep 11 01:22:18.301: INFO: Got endpoints: latency-svc-ncjwj [748.008672ms]
  Sep 11 01:22:18.319: INFO: Created: latency-svc-xrbfp
  Sep 11 01:22:18.352: INFO: Got endpoints: latency-svc-7jtvg [750.462956ms]
  Sep 11 01:22:18.369: INFO: Created: latency-svc-v4jwc
  Sep 11 01:22:18.400: INFO: Got endpoints: latency-svc-47s5h [749.389761ms]
  Sep 11 01:22:18.416: INFO: Created: latency-svc-k59s2
  Sep 11 01:22:18.450: INFO: Got endpoints: latency-svc-jrsl5 [749.919518ms]
  Sep 11 01:22:18.470: INFO: Created: latency-svc-wk8w8
  Sep 11 01:22:18.503: INFO: Got endpoints: latency-svc-gnfbd [752.15823ms]
  Sep 11 01:22:18.522: INFO: Created: latency-svc-jwcsf
  Sep 11 01:22:18.557: INFO: Got endpoints: latency-svc-n9bxw [753.276425ms]
  Sep 11 01:22:18.578: INFO: Created: latency-svc-ppnjk
  Sep 11 01:22:18.601: INFO: Got endpoints: latency-svc-nwc7c [750.463695ms]
  Sep 11 01:22:18.614: INFO: Created: latency-svc-bxmsj
  Sep 11 01:22:18.652: INFO: Got endpoints: latency-svc-vlps6 [750.929892ms]
  Sep 11 01:22:18.669: INFO: Created: latency-svc-9j5s2
  Sep 11 01:22:18.699: INFO: Got endpoints: latency-svc-rxj4z [747.645096ms]
  Sep 11 01:22:18.717: INFO: Created: latency-svc-6n579
  Sep 11 01:22:18.751: INFO: Got endpoints: latency-svc-df5gs [748.920054ms]
  Sep 11 01:22:18.769: INFO: Created: latency-svc-g8t78
  Sep 11 01:22:18.802: INFO: Got endpoints: latency-svc-mzmj5 [743.63214ms]
  Sep 11 01:22:18.851: INFO: Got endpoints: latency-svc-zk455 [750.851651ms]
  Sep 11 01:22:18.907: INFO: Got endpoints: latency-svc-4k8qm [753.770501ms]
  Sep 11 01:22:18.954: INFO: Got endpoints: latency-svc-nfxsm [752.671856ms]
  Sep 11 01:22:19.003: INFO: Got endpoints: latency-svc-mb7d6 [748.416807ms]
  E0911 01:22:19.030320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:19.052: INFO: Got endpoints: latency-svc-xrbfp [750.909321ms]
  Sep 11 01:22:19.103: INFO: Got endpoints: latency-svc-v4jwc [751.080845ms]
  Sep 11 01:22:19.152: INFO: Got endpoints: latency-svc-k59s2 [751.583772ms]
  Sep 11 01:22:19.655: INFO: Got endpoints: latency-svc-wk8w8 [1.204361921s]
  Sep 11 01:22:19.662: INFO: Got endpoints: latency-svc-bxmsj [1.060676689s]
  Sep 11 01:22:19.663: INFO: Got endpoints: latency-svc-9j5s2 [1.010615788s]
  Sep 11 01:22:19.663: INFO: Got endpoints: latency-svc-jwcsf [1.159044527s]
  Sep 11 01:22:19.663: INFO: Got endpoints: latency-svc-ppnjk [1.105881953s]
  Sep 11 01:22:19.684: INFO: Got endpoints: latency-svc-6n579 [984.700196ms]
  Sep 11 01:22:19.698: INFO: Got endpoints: latency-svc-g8t78 [947.699147ms]
  Sep 11 01:22:19.699: INFO: Latencies: [73.742433ms 95.945913ms 101.063385ms 109.433092ms 109.454262ms 111.267588ms 118.031922ms 135.366935ms 144.066788ms 146.827526ms 186.42567ms 207.216721ms 209.34615ms 242.985422ms 266.984567ms 297.244541ms 298.621821ms 307.042258ms 307.263051ms 309.27958ms 309.36756ms 311.742575ms 313.59638ms 333.715731ms 334.608075ms 353.183124ms 354.121308ms 355.579338ms 356.264838ms 358.422038ms 362.705438ms 362.85981ms 363.146904ms 364.128047ms 364.477902ms 374.147197ms 379.645145ms 383.090394ms 386.494981ms 392.670987ms 392.969821ms 393.764083ms 404.832578ms 407.023078ms 409.160868ms 414.170268ms 425.642629ms 426.710964ms 426.876496ms 427.499745ms 428.223844ms 430.210643ms 437.599126ms 441.114395ms 441.308908ms 441.590982ms 441.754745ms 441.950057ms 494.871538ms 496.235417ms 521.384309ms 530.550517ms 572.060239ms 617.689067ms 665.286064ms 699.016356ms 721.981017ms 725.699239ms 735.240673ms 737.954112ms 739.223869ms 740.146362ms 740.292004ms 741.000883ms 741.204367ms 741.292677ms 741.562911ms 742.086629ms 742.19458ms 742.340462ms 742.844559ms 743.63214ms 744.364271ms 744.934838ms 745.095792ms 745.125721ms 745.217073ms 745.544807ms 745.72567ms 746.302098ms 746.426299ms 746.498081ms 746.510601ms 746.734534ms 746.773405ms 747.150469ms 747.310661ms 747.357732ms 747.379533ms 747.466893ms 747.602616ms 747.645096ms 747.669548ms 747.822139ms 747.942581ms 747.969481ms 748.008672ms 748.032582ms 748.061943ms 748.120313ms 748.287505ms 748.326147ms 748.416807ms 748.516269ms 748.62056ms 748.679791ms 748.920054ms 748.945105ms 749.009965ms 749.090077ms 749.159908ms 749.180939ms 749.31755ms 749.389761ms 749.501632ms 749.544483ms 749.643245ms 749.714865ms 749.736866ms 749.863398ms 749.919518ms 750.02614ms 750.06034ms 750.100151ms 750.214762ms 750.235603ms 750.268823ms 750.462956ms 750.463695ms 750.643189ms 750.718919ms 750.771741ms 750.851651ms 750.909321ms 750.929892ms 751.006234ms 751.069914ms 751.080845ms 751.097146ms 751.137756ms 751.156637ms 751.191486ms 751.310487ms 751.322599ms 751.357199ms 751.364199ms 751.503711ms 751.560371ms 751.583772ms 751.588961ms 751.762644ms 751.768104ms 751.801524ms 751.879287ms 751.975987ms 752.086978ms 752.15823ms 752.270291ms 752.297921ms 752.358212ms 752.656776ms 752.671856ms 752.943661ms 753.163514ms 753.276425ms 753.530409ms 753.770501ms 754.35051ms 755.479117ms 755.516407ms 755.71962ms 756.295328ms 756.428109ms 756.689393ms 756.733103ms 757.471684ms 759.187928ms 759.567664ms 759.884998ms 761.591392ms 762.094909ms 764.667374ms 808.846464ms 947.699147ms 984.700196ms 1.010615788s 1.060676689s 1.105881953s 1.159044527s 1.204361921s]
  Sep 11 01:22:19.700: INFO: 50 %ile: 747.602616ms
  Sep 11 01:22:19.700: INFO: 90 %ile: 755.71962ms
  Sep 11 01:22:19.700: INFO: 99 %ile: 1.159044527s
  Sep 11 01:22:19.700: INFO: Total sample count: 200
  Sep 11 01:22:19.700: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9587" for this suite. @ 09/11/23 01:22:19.708
• [11.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/11/23 01:22:19.717
  Sep 11 01:22:19.717: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename downward-api @ 09/11/23 01:22:19.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:19.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:19.784
  STEP: Creating a pod to test downward api env vars @ 09/11/23 01:22:19.789
  E0911 01:22:20.030885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:21.031118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:22.031517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:23.031959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:22:23.839
  Sep 11 01:22:23.845: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod downward-api-dd77cf42-472b-4049-909a-b446755f66b0 container dapi-container: <nil>
  STEP: delete the pod @ 09/11/23 01:22:23.86
  Sep 11 01:22:23.910: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1964" for this suite. @ 09/11/23 01:22:23.916
• [4.209 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/11/23 01:22:23.928
  Sep 11 01:22:23.928: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:22:23.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:23.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:23.97
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/11/23 01:22:23.973
  E0911 01:22:24.032713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:25.034953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:26.035784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:27.036758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:22:28.004
  Sep 11 01:22:28.014: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-31432c04-9b58-44c5-93e8-10d348eac722 container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:22:28.031
  E0911 01:22:28.037221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:28.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1652" for this suite. @ 09/11/23 01:22:28.064
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/11/23 01:22:28.079
  Sep 11 01:22:28.080: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 01:22:28.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:28.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:28.123
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 01:22:28.134
  E0911 01:22:29.038871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:30.039864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/11/23 01:22:30.163
  E0911 01:22:31.040414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:32.040945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/11/23 01:22:32.19
  STEP: delete the pod with lifecycle hook @ 09/11/23 01:22:32.196
  E0911 01:22:33.041050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:34.041198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:35.041430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:36.041815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:36.224: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6434" for this suite. @ 09/11/23 01:22:36.229
• [8.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/11/23 01:22:36.24
  Sep 11 01:22:36.240: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/11/23 01:22:36.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:36.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:36.265
  STEP: create the container to handle the HTTPGet hook request. @ 09/11/23 01:22:36.273
  E0911 01:22:37.041947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:38.042227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 09/11/23 01:22:38.301
  E0911 01:22:39.042529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:40.043506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 09/11/23 01:22:40.322
  STEP: delete the pod with lifecycle hook @ 09/11/23 01:22:40.331
  E0911 01:22:41.043598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:42.043983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:43.044855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:44.044948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:44.357: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7072" for this suite. @ 09/11/23 01:22:44.362
• [8.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/11/23 01:22:44.489
  Sep 11 01:22:44.489: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename sched-pred @ 09/11/23 01:22:44.491
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:44.51
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:44.514
  Sep 11 01:22:44.517: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 11 01:22:44.528: INFO: Waiting for terminating namespaces to be deleted...
  Sep 11 01:22:44.531: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-10-18.us-east-2.compute.internal before test
  Sep 11 01:22:44.545: INFO: cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:52 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.545: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.545: INFO: etcd-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:26 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.545: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:22:44.545: INFO: helm-install-rke2-canal-wfr9f from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.545: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.545: INFO: helm-install-rke2-coredns-rbzhs from kube-system started at 2023-09-10 18:10:13 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: helm-install-rke2-ingress-nginx-f6vgj from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: helm-install-rke2-metrics-server-tlnph from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: helm-install-rke2-snapshot-controller-4gnfg from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: helm-install-rke2-snapshot-controller-crd-m4bzm from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: helm-install-rke2-snapshot-validation-webhook-g98tk from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container helm ready: false, restart count 0
  Sep 11 01:22:44.546: INFO: kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:45 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: kube-proxy-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:10:11 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal from kube-system started at 2023-09-10 18:09:50 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-canal-d7lfd from kube-system started at 2023-09-10 18:10:24 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-coredns-rke2-coredns-67f86d96c-ncf6n from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629 from kube-system started at 2023-09-10 18:11:02 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container autoscaler ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-ingress-nginx-controller-479nb from kube-system started at 2023-09-10 18:11:44 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-metrics-server-c6fb46b64-jjcx6 from kube-system started at 2023-09-10 18:11:25 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.546: INFO: 	Container metrics-server ready: true, restart count 0
  Sep 11 01:22:44.546: INFO: rke2-snapshot-controller-59cc9cd8f4-qxkng from kube-system started at 2023-09-10 18:11:26 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.547: INFO: 	Container rke2-snapshot-controller ready: true, restart count 0
  Sep 11 01:22:44.547: INFO: rke2-snapshot-validation-webhook-54c5989b65-lbplz from kube-system started at 2023-09-10 18:11:30 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.547: INFO: 	Container rke2-snapshot-validation-webhook ready: true, restart count 0
  Sep 11 01:22:44.547: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.547: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:22:44.547: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:22:44.547: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-14-171.us-east-2.compute.internal before test
  Sep 11 01:22:44.558: INFO: cloud-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.558: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.558: INFO: etcd-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.558: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: kube-apiserver-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:13:31 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: kube-controller-manager-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: kube-proxy-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:59 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: kube-scheduler-ip-172-31-14-171.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:41 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: rke2-canal-zz74w from kube-system started at 2023-09-10 18:13:51 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: rke2-ingress-nginx-controller-9ws57 from kube-system started at 2023-09-10 18:15:34 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-rbrkn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.559: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:22:44.559: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-15-132.us-east-2.compute.internal before test
  Sep 11 01:22:44.569: INFO: cloud-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.570: INFO: 	Container cloud-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.570: INFO: etcd-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:40 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.570: INFO: 	Container etcd ready: true, restart count 0
  Sep 11 01:22:44.570: INFO: kube-apiserver-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:12:56 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.570: INFO: 	Container kube-apiserver ready: true, restart count 0
  Sep 11 01:22:44.570: INFO: kube-controller-manager-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.570: INFO: 	Container kube-controller-manager ready: true, restart count 0
  Sep 11 01:22:44.570: INFO: kube-proxy-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:04 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.570: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:22:44.571: INFO: kube-scheduler-ip-172-31-15-132.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:00 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.571: INFO: 	Container kube-scheduler ready: true, restart count 0
  Sep 11 01:22:44.571: INFO: rke2-canal-vgq26 from kube-system started at 2023-09-10 18:13:00 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.572: INFO: 	Container calico-node ready: true, restart count 2
  Sep 11 01:22:44.572: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:22:44.572: INFO: rke2-coredns-rke2-coredns-67f86d96c-2qjdp from kube-system started at 2023-09-11 00:54:27 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.572: INFO: 	Container coredns ready: true, restart count 0
  Sep 11 01:22:44.572: INFO: rke2-ingress-nginx-controller-jtphg from kube-system started at 2023-09-10 18:14:53 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.572: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:22:44.572: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-llrqn from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.572: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:22:44.572: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 11 01:22:44.572: INFO: 
  Logging pods the apiserver thinks is on node ip-172-31-8-29.us-east-2.compute.internal before test
  Sep 11 01:22:44.585: INFO: pod-handle-http-request from container-lifecycle-hook-7072 started at 2023-09-11 01:22:36 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.585: INFO: 	Container container-handle-http-request ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: 	Container container-handle-https-request ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: kube-proxy-ip-172-31-8-29.us-east-2.compute.internal from kube-system started at 2023-09-10 18:14:03 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container kube-proxy ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: rke2-canal-sf5n2 from kube-system started at 2023-09-10 18:14:02 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container calico-node ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: 	Container kube-flannel ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: rke2-ingress-nginx-controller-fblgc from kube-system started at 2023-09-11 01:11:45 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container rke2-ingress-nginx-controller ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: sonobuoy from sonobuoy started at 2023-09-10 23:38:16 +0000 UTC (1 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: sonobuoy-e2e-job-e21707e8889b4c9c from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container e2e ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-955v9 from sonobuoy started at 2023-09-10 23:38:19 +0000 UTC (2 container statuses recorded)
  Sep 11 01:22:44.586: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 11 01:22:44.586: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-10-18.us-east-2.compute.internal @ 09/11/23 01:22:44.615
  STEP: verifying the node has the label node ip-172-31-14-171.us-east-2.compute.internal @ 09/11/23 01:22:44.642
  STEP: verifying the node has the label node ip-172-31-15-132.us-east-2.compute.internal @ 09/11/23 01:22:44.669
  STEP: verifying the node has the label node ip-172-31-8-29.us-east-2.compute.internal @ 09/11/23 01:22:44.711
  Sep 11 01:22:44.776: INFO: Pod pod-handle-http-request requesting resource cpu=0m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.777: INFO: Pod cloud-controller-manager-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.777: INFO: Pod cloud-controller-manager-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.777: INFO: Pod cloud-controller-manager-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod etcd-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod etcd-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod etcd-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod kube-apiserver-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod kube-apiserver-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod kube-apiserver-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod kube-controller-manager-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.778: INFO: Pod kube-controller-manager-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.779: INFO: Pod kube-controller-manager-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=200m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.779: INFO: Pod kube-proxy-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-proxy-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-proxy-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-proxy-ip-172-31-8-29.us-east-2.compute.internal requesting resource cpu=250m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-scheduler-ip-172-31-10-18.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-scheduler-ip-172-31-14-171.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod kube-scheduler-ip-172-31-15-132.us-east-2.compute.internal requesting resource cpu=100m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-canal-d7lfd requesting resource cpu=250m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-canal-sf5n2 requesting resource cpu=250m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-canal-vgq26 requesting resource cpu=250m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-canal-zz74w requesting resource cpu=250m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-coredns-rke2-coredns-67f86d96c-2qjdp requesting resource cpu=100m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-coredns-rke2-coredns-67f86d96c-ncf6n requesting resource cpu=100m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-coredns-rke2-coredns-autoscaler-d97d9cd9f-2c629 requesting resource cpu=25m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-ingress-nginx-controller-479nb requesting resource cpu=100m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-ingress-nginx-controller-9ws57 requesting resource cpu=100m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-ingress-nginx-controller-fblgc requesting resource cpu=100m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-ingress-nginx-controller-jtphg requesting resource cpu=100m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-metrics-server-c6fb46b64-jjcx6 requesting resource cpu=0m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-snapshot-controller-59cc9cd8f4-qxkng requesting resource cpu=0m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod rke2-snapshot-validation-webhook-54c5989b65-lbplz requesting resource cpu=0m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy-e2e-job-e21707e8889b4c9c requesting resource cpu=0m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-5fr2n requesting resource cpu=0m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-955v9 requesting resource cpu=0m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-llrqn requesting resource cpu=0m on Node ip-172-31-15-132.us-east-2.compute.internal
  Sep 11 01:22:44.780: INFO: Pod sonobuoy-systemd-logs-daemon-set-0f93d4eae52245a4-rbrkn requesting resource cpu=0m on Node ip-172-31-14-171.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/11/23 01:22:44.78
  Sep 11 01:22:44.780: INFO: Creating a pod which consumes cpu=980m on Node ip-172-31-8-29.us-east-2.compute.internal
  Sep 11 01:22:44.801: INFO: Creating a pod which consumes cpu=297m on Node ip-172-31-10-18.us-east-2.compute.internal
  Sep 11 01:22:44.823: INFO: Creating a pod which consumes cpu=385m on Node ip-172-31-14-171.us-east-2.compute.internal
  Sep 11 01:22:44.843: INFO: Creating a pod which consumes cpu=315m on Node ip-172-31-15-132.us-east-2.compute.internal
  E0911 01:22:45.045285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:46.045785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:47.046279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:48.046357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/11/23 01:22:48.89
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25.1783b39b67ff3f2b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7465/filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25 to ip-172-31-15-132.us-east-2.compute.internal] @ 09/11/23 01:22:48.894
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25.1783b39b9b4abd65], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 01:22:48.894
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25.1783b39b9c8bdece], Reason = [Created], Message = [Created container filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25.1783b39ba86f6923], Reason = [Started], Message = [Started container filler-pod-79167ece-603b-4a92-90b0-5e53eac8dd25] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d.1783b39b65aa2b76], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7465/filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d to ip-172-31-10-18.us-east-2.compute.internal] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Warning], Name = [filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d.1783b39bb2b1e4a6], Reason = [FailedMount], Message = [MountVolume.SetUp failed for volume "kube-api-access-94rnx" : failed to sync configmap cache: timed out waiting for the condition] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d.1783b39bedafb833], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d.1783b39beec4571d], Reason = [Created], Message = [Created container filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d.1783b39bfcd89aa3], Reason = [Started], Message = [Started container filler-pod-830272d3-f7f6-4a8e-8aa7-d338901f519d] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc.1783b39b66eb5763], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7465/filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc to ip-172-31-14-171.us-east-2.compute.internal] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc.1783b39b9d235059], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 01:22:48.895
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc.1783b39b9e71ceca], Reason = [Created], Message = [Created container filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc.1783b39bad7e01b7], Reason = [Started], Message = [Started container filler-pod-df4db2ae-1af3-4ca0-8e3e-b0cb35f5e3fc] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6.1783b39b64387660], Reason = [Scheduled], Message = [Successfully assigned sched-pred-7465/filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6 to ip-172-31-8-29.us-east-2.compute.internal] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6.1783b39b91a6e76d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6.1783b39b92d3f6ef], Reason = [Created], Message = [Created container filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6.1783b39ba050cb75], Reason = [Started], Message = [Started container filler-pod-e321c51a-9e4e-40cf-8737-9ba0d149e1b6] @ 09/11/23 01:22:48.896
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1783b39c58793e16], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod..] @ 09/11/23 01:22:48.914
  E0911 01:22:49.046936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-15-132.us-east-2.compute.internal @ 09/11/23 01:22:49.935
  STEP: verifying the node doesn't have the label node @ 09/11/23 01:22:49.975
  STEP: removing the label node off the node ip-172-31-8-29.us-east-2.compute.internal @ 09/11/23 01:22:49.985
  STEP: verifying the node doesn't have the label node @ 09/11/23 01:22:50.009
  STEP: removing the label node off the node ip-172-31-10-18.us-east-2.compute.internal @ 09/11/23 01:22:50.018
  STEP: verifying the node doesn't have the label node @ 09/11/23 01:22:50.055
  E0911 01:22:50.055864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-14-171.us-east-2.compute.internal @ 09/11/23 01:22:50.059
  STEP: verifying the node doesn't have the label node @ 09/11/23 01:22:50.091
  Sep 11 01:22:50.096: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7465" for this suite. @ 09/11/23 01:22:50.103
• [5.641 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/11/23 01:22:50.133
  Sep 11 01:22:50.133: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename webhook @ 09/11/23 01:22:50.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:50.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:50.208
  STEP: Setting up server cert @ 09/11/23 01:22:50.235
  E0911 01:22:51.056268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/11/23 01:22:51.115
  STEP: Deploying the webhook pod @ 09/11/23 01:22:51.123
  STEP: Wait for the deployment to be ready @ 09/11/23 01:22:51.135
  Sep 11 01:22:51.151: INFO: deployment "sample-webhook-deployment" doesn't have the required revision set
  E0911 01:22:52.056755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:53.056881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:53.162: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 11, 1, 22, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 1, 22, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 11, 1, 22, 51, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 11, 1, 22, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0911 01:22:54.057147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:55.057689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/11/23 01:22:55.179
  STEP: Verifying the service has paired with the endpoint @ 09/11/23 01:22:55.229
  E0911 01:22:56.058672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:22:56.229: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/11/23 01:22:56.247
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/11/23 01:22:56.27
  Sep 11 01:22:56.270: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 01:22:56.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4511" for this suite. @ 09/11/23 01:22:56.432
  STEP: Destroying namespace "webhook-markers-2337" for this suite. @ 09/11/23 01:22:56.452
• [6.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/11/23 01:22:56.472
  Sep 11 01:22:56.472: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename emptydir @ 09/11/23 01:22:56.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:22:56.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:22:56.565
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/11/23 01:22:56.568
  E0911 01:22:57.059382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:58.059960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:22:59.060056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:00.062962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/11/23 01:23:00.594
  Sep 11 01:23:00.598: INFO: Trying to get logs from node ip-172-31-8-29.us-east-2.compute.internal pod pod-d6d95a5e-02a5-4a02-aeaa-996b2874cc5b container test-container: <nil>
  STEP: delete the pod @ 09/11/23 01:23:00.607
  Sep 11 01:23:00.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1743" for this suite. @ 09/11/23 01:23:00.632
• [4.169 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/11/23 01:23:00.665
  Sep 11 01:23:00.665: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename services @ 09/11/23 01:23:00.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:23:00.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:23:00.693
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-2502 @ 09/11/23 01:23:00.697
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/11/23 01:23:00.712
  STEP: creating service externalsvc in namespace services-2502 @ 09/11/23 01:23:00.712
  STEP: creating replication controller externalsvc in namespace services-2502 @ 09/11/23 01:23:00.732
  I0911 01:23:00.741962      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2502, replica count: 2
  E0911 01:23:01.063715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:02.064869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:03.064861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0911 01:23:03.793644      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/11/23 01:23:03.809
  Sep 11 01:23:03.826: INFO: Creating new exec pod
  E0911 01:23:04.065083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:05.065816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:05.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4236398187 --namespace=services-2502 exec execpod7hj6h -- /bin/sh -x -c nslookup clusterip-service.services-2502.svc.cluster.local'
  E0911 01:23:06.065741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:06.114: INFO: stderr: "+ nslookup clusterip-service.services-2502.svc.cluster.local\n"
  Sep 11 01:23:06.114: INFO: stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-2502.svc.cluster.local\tcanonical name = externalsvc.services-2502.svc.cluster.local.\nName:\texternalsvc.services-2502.svc.cluster.local\nAddress: 10.43.248.36\n\n"
  Sep 11 01:23:06.114: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2502, will wait for the garbage collector to delete the pods @ 09/11/23 01:23:06.33
  Sep 11 01:23:06.391: INFO: Deleting ReplicationController externalsvc took: 7.497845ms
  Sep 11 01:23:06.492: INFO: Terminating ReplicationController externalsvc pods took: 101.119066ms
  E0911 01:23:07.066769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:08.067803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:09.068260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:09.625: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-2502" for this suite. @ 09/11/23 01:23:09.646
• [8.998 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/11/23 01:23:09.669
  Sep 11 01:23:09.669: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename deployment @ 09/11/23 01:23:09.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:23:09.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:23:09.692
  Sep 11 01:23:09.703: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  E0911 01:23:10.068568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:11.068983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:12.069220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:13.069314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:14.069929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:14.709: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/11/23 01:23:14.709
  Sep 11 01:23:14.709: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/11/23 01:23:14.721
  Sep 11 01:23:14.739: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23f575b1-b08b-4d42-b2db-196eaa45a293",
      ResourceVersion: (string) (len=6) "125904",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 11 01:23:14.744: INFO: New ReplicaSet "test-cleanup-deployment-58dcc84f74" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "557c7e9e-4dd7-4a5e-bcb5-cace12aff0e7",
      ResourceVersion: (string) (len=6) "125907",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "23f575b1-b08b-4d42-b2db-196eaa45a293",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 33 66 35 37 35  62 31 2d 62 30 38 62 2d  |\"23f575b1-b08b-|
              00000120  34 64 34 32 2d 62 32 64  62 2d 31 39 36 65 61 61  |4d42-b2db-196eaa|
              00000130  34 35 61 32 39 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |45a293\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74",
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 01:23:14.747: INFO: All old ReplicaSets of Deployment "test-cleanup-deployment":
  Sep 11 01:23:14.747: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ab26090-8947-43d5-b4b8-852264aa8222",
      ResourceVersion: (string) (len=6) "125906",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992189,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "23f575b1-b08b-4d42-b2db-196eaa45a293",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 32 33 66 35 37 35 62  |"uid\":\"23f575b|
              00000040  31 2d 62 30 38 62 2d 34  64 34 32 2d 62 32 64 62  |1-b08b-4d42-b2db|
              00000050  2d 31 39 36 65 61 61 34  35 61 32 39 33 5c 22 7d  |-196eaa45a293\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 11 01:23:14.761: INFO: Pod "test-cleanup-controller-tc5j7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-tc5j7",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-9485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58f45e5e-15ba-4907-b5e3-06b534bb8d25",
      ResourceVersion: (string) (len=6) "125883",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992189,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4090d03a3d3370780b4422decee199e615a25475a6fbf68d2b633a1cac72e44b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.3.176/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.3.176/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "0ab26090-8947-43d5-b4b8-852264aa8222",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  30 61 62 32 36 30 39 30  |uid\":\"0ab26090|
              00000080  2d 38 39 34 37 2d 34 33  64 35 2d 62 34 62 38 2d  |-8947-43d5-b4b8-|
              00000090  38 35 32 32 36 34 61 61  38 32 32 32 5c 22 7d 22  |852264aa8222\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992190,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 34 32 2e 33 2e  31 37 36 5c 22 7d 22 3a  |10.42.3.176\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-prbp5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-prbp5",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-8-29.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992191,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.8.29",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.42.3.176",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.176"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992189,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63829992190,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8e63d5d8a4d39317daba8f308edaaa57d7bb15c63782da69e85e83a246a8e362",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:23:14.766: INFO: Pod "test-cleanup-deployment-58dcc84f74-sbnqn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-58dcc84f74-sbnqn",
      GenerateName: (string) (len=35) "test-cleanup-deployment-58dcc84f74-",
      Namespace: (string) (len=15) "deployment-9485",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0ca362d-b2b4-4694-8d0c-7c53cf722986",
      ResourceVersion: (string) (len=6) "125910",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63829992194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "58dcc84f74"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-58dcc84f74",
          UID: (types.UID) (len=36) "557c7e9e-4dd7-4a5e-bcb5-cace12aff0e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63829992194,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 35  37 63 37 65 39 65 2d 34  |d\":\"557c7e9e-4|
              00000090  64 64 37 2d 34 61 35 65  2d 62 63 62 35 2d 63 61  |dd7-4a5e-bcb5-ca|
              000000a0  63 65 31 32 61 66 66 30  65 37 5c 22 7d 22 3a 7b  |ce12aff0e7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5bg4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5bg4",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 11 01:23:14.768: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9485" for this suite. @ 09/11/23 01:23:14.778
• [5.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/11/23 01:23:14.794
  Sep 11 01:23:14.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename pod-network-test @ 09/11/23 01:23:14.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:23:14.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:23:14.829
  STEP: Performing setup for networking test in namespace pod-network-test-5329 @ 09/11/23 01:23:14.832
  STEP: creating a selector @ 09/11/23 01:23:14.832
  STEP: Creating the service pods in kubernetes @ 09/11/23 01:23:14.832
  Sep 11 01:23:14.832: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0911 01:23:15.070533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:16.071138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:17.071404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:18.071724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:19.072671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:20.072869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:21.073152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:22.073958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:23.074406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:24.074527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:25.074703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:26.075501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:27.076091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:28.077147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:29.077248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:30.077683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:31.077811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:32.077855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:33.077981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:34.078096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:35.078177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:36.079229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:37.079338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 09/11/23 01:23:37.119
  E0911 01:23:38.079673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:39.079722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:39.137: INFO: Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  Sep 11 01:23:39.137: INFO: Breadth first check of 10.42.0.120 on host 172.31.10.18...
  Sep 11 01:23:39.140: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.178:9080/dial?request=hostname&protocol=udp&host=10.42.0.120&port=8081&tries=1'] Namespace:pod-network-test-5329 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 01:23:39.140: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 01:23:39.141: INFO: ExecWithOptions: Clientset creation
  Sep 11 01:23:39.141: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5329/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.178%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.120%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 01:23:39.246: INFO: Waiting for responses: map[]
  Sep 11 01:23:39.246: INFO: reached 10.42.0.120 after 0/1 tries
  Sep 11 01:23:39.246: INFO: Breadth first check of 10.42.2.152 on host 172.31.14.171...
  Sep 11 01:23:39.250: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.178:9080/dial?request=hostname&protocol=udp&host=10.42.2.152&port=8081&tries=1'] Namespace:pod-network-test-5329 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 01:23:39.250: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 01:23:39.250: INFO: ExecWithOptions: Clientset creation
  Sep 11 01:23:39.250: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5329/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.178%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.152%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 01:23:39.339: INFO: Waiting for responses: map[]
  Sep 11 01:23:39.339: INFO: reached 10.42.2.152 after 0/1 tries
  Sep 11 01:23:39.339: INFO: Breadth first check of 10.42.1.132 on host 172.31.15.132...
  Sep 11 01:23:39.343: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.178:9080/dial?request=hostname&protocol=udp&host=10.42.1.132&port=8081&tries=1'] Namespace:pod-network-test-5329 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 01:23:39.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 01:23:39.344: INFO: ExecWithOptions: Clientset creation
  Sep 11 01:23:39.344: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5329/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.178%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.132%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 01:23:39.432: INFO: Waiting for responses: map[]
  Sep 11 01:23:39.432: INFO: reached 10.42.1.132 after 0/1 tries
  Sep 11 01:23:39.432: INFO: Breadth first check of 10.42.3.177 on host 172.31.8.29...
  Sep 11 01:23:39.436: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.3.178:9080/dial?request=hostname&protocol=udp&host=10.42.3.177&port=8081&tries=1'] Namespace:pod-network-test-5329 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 11 01:23:39.436: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  Sep 11 01:23:39.437: INFO: ExecWithOptions: Clientset creation
  Sep 11 01:23:39.437: INFO: ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5329/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.3.178%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.177%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 11 01:23:39.529: INFO: Waiting for responses: map[]
  Sep 11 01:23:39.530: INFO: reached 10.42.3.177 after 0/1 tries
  Sep 11 01:23:39.530: INFO: Going to retry 0 out of 4 pods....
  Sep 11 01:23:39.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5329" for this suite. @ 09/11/23 01:23:39.536
• [24.751 seconds]
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/11/23 01:23:39.545
  Sep 11 01:23:39.545: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/11/23 01:23:39.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:23:39.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:23:39.571
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/11/23 01:23:39.573
  Sep 11 01:23:39.574: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:23:40.079791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:41.082218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:41.735: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  E0911 01:23:42.083158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:43.083416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:44.083931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:45.086856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:46.087891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:47.088012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0911 01:23:48.089096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 11 01:23:49.069: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1950" for this suite. @ 09/11/23 01:23:49.075
• [9.536 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/11/23 01:23:49.083
  Sep 11 01:23:49.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4236398187
  STEP: Building a namespace api object, basename watch @ 09/11/23 01:23:49.084
  E0911 01:23:49.098410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/11/23 01:23:49.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/11/23 01:23:49.113
  STEP: creating a new configmap @ 09/11/23 01:23:49.119
  STEP: modifying the configmap once @ 09/11/23 01:23:49.124
  STEP: modifying the configmap a second time @ 09/11/23 01:23:49.132
  STEP: deleting the configmap @ 09/11/23 01:23:49.139
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/11/23 01:23:49.149
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/11/23 01:23:49.15
  Sep 11 01:23:49.150: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2196  b6230bcf-c89e-4e20-a513-c54b4f0e9b38 126221 0 2023-09-11 01:23:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-11 01:23:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:23:49.151: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2196  b6230bcf-c89e-4e20-a513-c54b4f0e9b38 126222 0 2023-09-11 01:23:49 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-11 01:23:49 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 11 01:23:49.151: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2196" for this suite. @ 09/11/23 01:23:49.158
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep 11 01:23:49.168: INFO: Running AfterSuite actions on node 1
  Sep 11 01:23:49.168: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.069 seconds]
------------------------------

Ran 380 of 7387 Specs in 6318.917 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h45m19.606074597s
Test Suite Passed
