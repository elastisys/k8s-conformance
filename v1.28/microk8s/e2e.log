  I0927 14:45:05.293172      21 e2e.go:117] Starting e2e run "72d930fb-d4e2-44f2-8844-9586efe08fd1" on Ginkgo node 1
  Sep 27 14:45:05.330: INFO: Enabling in-tree volume drivers
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1695825905 - will randomize all specs

Will run 380 of 7387 specs
------------------------------
[ReportBeforeSuite] 
test/e2e/e2e_test.go:153
[ReportBeforeSuite] PASSED [0.001 seconds]
------------------------------
[SynchronizedBeforeSuite] 
test/e2e/e2e.go:77
  Sep 27 14:45:05.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 14:45:05.618: INFO: Waiting up to 30m0s for all (but 0) nodes to be schedulable
  Sep 27 14:45:05.672: INFO: Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  Sep 27 14:45:05.678: INFO: 2 / 2 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  Sep 27 14:45:05.678: INFO: e2e test version: v1.28.1
  Sep 27 14:45:05.679: INFO: kube-apiserver version: v1.28.1
  Sep 27 14:45:05.680: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 14:45:05.684: INFO: Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.068 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance]
test/e2e/apps/statefulset.go:329
  STEP: Creating a kubernetes client @ 09/27/23 14:45:06.008
  Sep 27 14:45:06.008: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:45:06.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:45:06.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:45:06.446
  STEP: Creating service test in namespace statefulset-8885 @ 09/27/23 14:45:06.448
  STEP: Creating a new StatefulSet @ 09/27/23 14:45:06.484
  Sep 27 14:45:06.516: INFO: Found 0 stateful pods, waiting for 3
  Sep 27 14:45:16.523: INFO: Found 2 stateful pods, waiting for 3
  Sep 27 14:45:26.522: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:45:26.522: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:45:26.522: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/27/23 14:45:26.53
  Sep 27 14:45:26.566: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/27/23 14:45:26.567
  STEP: Not applying an update when the partition is greater than the number of replicas @ 09/27/23 14:45:36.582
  STEP: Performing a canary update @ 09/27/23 14:45:36.582
  Sep 27 14:45:36.623: INFO: Updating stateful set ss2
  Sep 27 14:45:36.629: INFO: Waiting for Pod statefulset-8885/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 09/27/23 14:45:46.642
  Sep 27 14:45:46.876: INFO: Found 1 stateful pods, waiting for 3
  Sep 27 14:45:56.883: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:45:56.883: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:45:56.883: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 09/27/23 14:45:56.916
  Sep 27 14:45:56.948: INFO: Updating stateful set ss2
  Sep 27 14:45:56.957: INFO: Waiting for Pod statefulset-8885/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 27 14:46:07.009: INFO: Updating stateful set ss2
  Sep 27 14:46:07.017: INFO: Waiting for StatefulSet statefulset-8885/ss2 to complete update
  Sep 27 14:46:07.018: INFO: Waiting for Pod statefulset-8885/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  Sep 27 14:46:17.027: INFO: Deleting all statefulset in ns statefulset-8885
  Sep 27 14:46:17.029: INFO: Scaling statefulset ss2 to 0
  Sep 27 14:46:27.067: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:46:27.070: INFO: Deleting statefulset ss2
  Sep 27 14:46:27.092: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8885" for this suite. @ 09/27/23 14:46:27.095
• [81.101 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:398
  STEP: Creating a kubernetes client @ 09/27/23 14:46:27.11
  Sep 27 14:46:27.110: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 14:46:27.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:46:27.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:46:27.445
  STEP: Creating namespace "e2e-ns-s4lx2" @ 09/27/23 14:46:27.446
  Sep 27 14:46:27.559: INFO: Namespace "e2e-ns-s4lx2-6237" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-s4lx2-6237" @ 09/27/23 14:46:27.559
  Sep 27 14:46:27.601: INFO: Namespace "e2e-ns-s4lx2-6237" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-s4lx2-6237" @ 09/27/23 14:46:27.601
  Sep 27 14:46:27.617: INFO: Namespace "e2e-ns-s4lx2-6237" has []v1.FinalizerName{"kubernetes"}
  Sep 27 14:46:27.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2656" for this suite. @ 09/27/23 14:46:27.62
  STEP: Destroying namespace "e2e-ns-s4lx2-6237" for this suite. @ 09/27/23 14:46:27.633
• [0.540 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance]
test/e2e/common/node/expansion.go:155
  STEP: Creating a kubernetes client @ 09/27/23 14:46:27.65
  Sep 27 14:46:27.650: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:46:27.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:46:28.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:46:28.195
  Sep 27 14:46:32.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:46:32.234: INFO: Deleting pod "var-expansion-8f3bcd6c-d659-457c-9a98-44b15c9d67ac" in namespace "var-expansion-4078"
  Sep 27 14:46:32.253: INFO: Wait up to 5m0s for pod "var-expansion-8f3bcd6c-d659-457c-9a98-44b15c9d67ac" to be fully deleted
  STEP: Destroying namespace "var-expansion-4078" for this suite. @ 09/27/23 14:46:34.263
• [6.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity  should support CSIStorageCapacities API operations [Conformance]
test/e2e/storage/csistoragecapacity.go:49
  STEP: Creating a kubernetes client @ 09/27/23 14:46:34.292
  Sep 27 14:46:34.292: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename csistoragecapacity @ 09/27/23 14:46:34.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:46:34.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:46:34.446
  STEP: getting /apis @ 09/27/23 14:46:34.448
  STEP: getting /apis/storage.k8s.io @ 09/27/23 14:46:34.451
  STEP: getting /apis/storage.k8s.io/v1 @ 09/27/23 14:46:34.452
  STEP: creating @ 09/27/23 14:46:34.452
  STEP: watching @ 09/27/23 14:46:34.49
  Sep 27 14:46:34.490: INFO: starting watch
  STEP: getting @ 09/27/23 14:46:34.506
  STEP: listing in namespace @ 09/27/23 14:46:34.509
  STEP: listing across namespaces @ 09/27/23 14:46:34.517
  STEP: patching @ 09/27/23 14:46:34.52
  STEP: updating @ 09/27/23 14:46:34.536
  Sep 27 14:46:34.551: INFO: waiting for watch events with expected annotations in namespace
  Sep 27 14:46:34.551: INFO: waiting for watch events with expected annotations across namespace
  STEP: deleting @ 09/27/23 14:46:34.551
  STEP: deleting a collection @ 09/27/23 14:46:34.579
  Sep 27 14:46:34.623: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-2391" for this suite. @ 09/27/23 14:46:34.627
• [0.349 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:147
  STEP: Creating a kubernetes client @ 09/27/23 14:46:34.642
  Sep 27 14:46:34.642: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:46:34.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:46:35.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:46:35.342
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/27/23 14:46:35.343
  STEP: Saw pod success @ 09/27/23 14:46:47.405
  Sep 27 14:46:47.409: INFO: Trying to get logs from node conformance-1 pod pod-01ea20b5-0d8e-46e6-b77b-bdbe3251b4fb container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:46:47.422
  Sep 27 14:46:47.457: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3993" for this suite. @ 09/27/23 14:46:47.46
• [12.841 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high  [Conformance]
test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 09/27/23 14:46:47.483
  Sep 27 14:46:47.483: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svc-latency @ 09/27/23 14:46:47.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:46:48.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:46:48.403
  Sep 27 14:46:48.405: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-1881 @ 09/27/23 14:46:48.405
  I0927 14:46:48.422675      21 runners.go:197] Created replication controller with name: svc-latency-rc, namespace: svc-latency-1881, replica count: 1
  I0927 14:46:49.474295      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 14:46:50.475427      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 14:46:51.475604      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 14:46:52.476656      21 runners.go:197] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:46:52.621: INFO: Created: latency-svc-jrwcj
  Sep 27 14:46:52.744: INFO: Got endpoints: latency-svc-jrwcj [167.302109ms]
  Sep 27 14:46:52.838: INFO: Created: latency-svc-xtcw5
  Sep 27 14:46:52.852: INFO: Created: latency-svc-8xk6m
  Sep 27 14:46:52.865: INFO: Created: latency-svc-bsp27
  Sep 27 14:46:52.888: INFO: Created: latency-svc-7wq6r
  Sep 27 14:46:52.915: INFO: Created: latency-svc-qr6k5
  Sep 27 14:46:52.945: INFO: Created: latency-svc-9wj45
  Sep 27 14:46:52.970: INFO: Created: latency-svc-k4v7p
  Sep 27 14:46:52.996: INFO: Created: latency-svc-6mnx2
  Sep 27 14:46:53.023: INFO: Created: latency-svc-x4zp6
  Sep 27 14:46:53.047: INFO: Created: latency-svc-rgbzr
  Sep 27 14:46:53.074: INFO: Created: latency-svc-rcblm
  Sep 27 14:46:53.097: INFO: Created: latency-svc-4rg7f
  Sep 27 14:46:53.137: INFO: Created: latency-svc-97xkh
  Sep 27 14:46:53.210: INFO: Created: latency-svc-fmvr2
  Sep 27 14:46:53.211: INFO: Got endpoints: latency-svc-xtcw5 [466.572635ms]
  Sep 27 14:46:53.267: INFO: Got endpoints: latency-svc-8xk6m [523.074535ms]
  Sep 27 14:46:53.267: INFO: Got endpoints: latency-svc-7wq6r [523.006642ms]
  Sep 27 14:46:53.267: INFO: Got endpoints: latency-svc-bsp27 [523.252322ms]
  Sep 27 14:46:53.310: INFO: Created: latency-svc-vwbxg
  Sep 27 14:46:53.312: INFO: Got endpoints: latency-svc-qr6k5 [567.326013ms]
  Sep 27 14:46:53.372: INFO: Got endpoints: latency-svc-9wj45 [627.87075ms]
  Sep 27 14:46:53.406: INFO: Created: latency-svc-pp72v
  Sep 27 14:46:53.407: INFO: Got endpoints: latency-svc-6mnx2 [662.732001ms]
  Sep 27 14:46:53.407: INFO: Got endpoints: latency-svc-k4v7p [662.853665ms]
  Sep 27 14:46:53.441: INFO: Created: latency-svc-pj4lq
  Sep 27 14:46:53.464: INFO: Got endpoints: latency-svc-x4zp6 [719.7375ms]
  Sep 27 14:46:53.514: INFO: Created: latency-svc-2nprq
  Sep 27 14:46:53.517: INFO: Got endpoints: latency-svc-rgbzr [772.13615ms]
  Sep 27 14:46:53.548: INFO: Created: latency-svc-dcwl5
  Sep 27 14:46:53.711: INFO: Got endpoints: latency-svc-fmvr2 [965.965722ms]
  Sep 27 14:46:53.711: INFO: Got endpoints: latency-svc-rcblm [966.465966ms]
  Sep 27 14:46:53.711: INFO: Got endpoints: latency-svc-4rg7f [966.606405ms]
  Sep 27 14:46:53.711: INFO: Got endpoints: latency-svc-97xkh [966.768289ms]
  Sep 27 14:46:53.712: INFO: Got endpoints: latency-svc-vwbxg [967.564886ms]
  Sep 27 14:46:53.735: INFO: Created: latency-svc-prs7d
  Sep 27 14:46:53.735: INFO: Got endpoints: latency-svc-pp72v [523.566731ms]
  Sep 27 14:46:53.815: INFO: Created: latency-svc-mpdrf
  Sep 27 14:46:53.816: INFO: Got endpoints: latency-svc-2nprq [548.267006ms]
  Sep 27 14:46:53.816: INFO: Got endpoints: latency-svc-pj4lq [548.822162ms]
  Sep 27 14:46:53.856: INFO: Created: latency-svc-k4jbn
  Sep 27 14:46:53.858: INFO: Got endpoints: latency-svc-dcwl5 [590.166629ms]
  Sep 27 14:46:53.896: INFO: Created: latency-svc-ln44l
  Sep 27 14:46:53.995: INFO: Created: latency-svc-ktwj6
  Sep 27 14:46:53.995: INFO: Got endpoints: latency-svc-prs7d [683.517356ms]
  Sep 27 14:46:53.995: INFO: Got endpoints: latency-svc-mpdrf [623.081433ms]
  Sep 27 14:46:54.031: INFO: Got endpoints: latency-svc-k4jbn [623.320269ms]
  Sep 27 14:46:54.055: INFO: Created: latency-svc-sr7bf
  Sep 27 14:46:54.057: INFO: Got endpoints: latency-svc-ln44l [648.023808ms]
  Sep 27 14:46:54.104: INFO: Created: latency-svc-xfcst
  Sep 27 14:46:54.108: INFO: Got endpoints: latency-svc-ktwj6 [643.972348ms]
  Sep 27 14:46:54.191: INFO: Got endpoints: latency-svc-sr7bf [674.082028ms]
  Sep 27 14:46:54.191: INFO: Got endpoints: latency-svc-xfcst [480.213281ms]
  Sep 27 14:46:54.208: INFO: Created: latency-svc-gznmr
  Sep 27 14:46:54.260: INFO: Created: latency-svc-tm94r
  Sep 27 14:46:54.262: INFO: Got endpoints: latency-svc-gznmr [549.612953ms]
  Sep 27 14:46:54.322: INFO: Created: latency-svc-4df52
  Sep 27 14:46:54.323: INFO: Got endpoints: latency-svc-tm94r [611.597165ms]
  Sep 27 14:46:54.381: INFO: Created: latency-svc-7v6cz
  Sep 27 14:46:54.383: INFO: Got endpoints: latency-svc-4df52 [671.711285ms]
  Sep 27 14:46:54.445: INFO: Got endpoints: latency-svc-7v6cz [733.650156ms]
  Sep 27 14:46:54.456: INFO: Created: latency-svc-llmgc
  Sep 27 14:46:54.514: INFO: Created: latency-svc-fcpv8
  Sep 27 14:46:54.516: INFO: Got endpoints: latency-svc-llmgc [780.619381ms]
  Sep 27 14:46:54.561: INFO: Created: latency-svc-558fx
  Sep 27 14:46:54.634: INFO: Created: latency-svc-v7rpl
  Sep 27 14:46:54.636: INFO: Got endpoints: latency-svc-fcpv8 [819.785882ms]
  Sep 27 14:46:54.636: INFO: Got endpoints: latency-svc-558fx [819.467554ms]
  Sep 27 14:46:54.661: INFO: Created: latency-svc-wlmdq
  Sep 27 14:46:54.756: INFO: Created: latency-svc-scq5d
  Sep 27 14:46:54.803: INFO: Created: latency-svc-8969s
  Sep 27 14:46:54.840: INFO: Got endpoints: latency-svc-v7rpl [982.350331ms]
  Sep 27 14:46:54.935: INFO: Got endpoints: latency-svc-8969s [904.026641ms]
  Sep 27 14:46:54.935: INFO: Got endpoints: latency-svc-wlmdq [940.027332ms]
  Sep 27 14:46:54.935: INFO: Got endpoints: latency-svc-scq5d [939.637071ms]
  Sep 27 14:46:54.941: INFO: Created: latency-svc-qrh4m
  Sep 27 14:46:54.970: INFO: Created: latency-svc-sctd7
  Sep 27 14:46:54.998: INFO: Created: latency-svc-jzfmg
  Sep 27 14:46:55.028: INFO: Created: latency-svc-wp5w7
  Sep 27 14:46:55.054: INFO: Created: latency-svc-cv9dt
  Sep 27 14:46:55.088: INFO: Created: latency-svc-ftvk7
  Sep 27 14:46:55.121: INFO: Created: latency-svc-wnqrs
  Sep 27 14:46:55.160: INFO: Created: latency-svc-4r9vz
  Sep 27 14:46:55.197: INFO: Created: latency-svc-h5tjl
  Sep 27 14:46:55.249: INFO: Got endpoints: latency-svc-cv9dt [986.608928ms]
  Sep 27 14:46:55.249: INFO: Got endpoints: latency-svc-jzfmg [1.058178359s]
  Sep 27 14:46:55.286: INFO: Created: latency-svc-b7q5c
  Sep 27 14:46:55.288: INFO: Got endpoints: latency-svc-sctd7 [1.178743917s]
  Sep 27 14:46:55.288: INFO: Got endpoints: latency-svc-qrh4m [1.23114266s]
  Sep 27 14:46:55.323: INFO: Created: latency-svc-mcn2r
  Sep 27 14:46:55.379: INFO: Got endpoints: latency-svc-wp5w7 [1.187160552s]
  Sep 27 14:46:55.388: INFO: Created: latency-svc-npq8r
  Sep 27 14:46:55.443: INFO: Got endpoints: latency-svc-ftvk7 [1.120290213s]
  Sep 27 14:46:55.448: INFO: Created: latency-svc-4zqqh
  Sep 27 14:46:55.522: INFO: Created: latency-svc-2l2g8
  Sep 27 14:46:55.523: INFO: Got endpoints: latency-svc-wnqrs [1.140264859s]
  Sep 27 14:46:55.524: INFO: Got endpoints: latency-svc-h5tjl [1.008062622s]
  Sep 27 14:46:55.524: INFO: Got endpoints: latency-svc-4r9vz [1.078960713s]
  Sep 27 14:46:55.592: INFO: Created: latency-svc-cmjrf
  Sep 27 14:46:55.594: INFO: Got endpoints: latency-svc-b7q5c [957.594807ms]
  Sep 27 14:46:55.703: INFO: Created: latency-svc-jvkgx
  Sep 27 14:46:55.705: INFO: Got endpoints: latency-svc-npq8r [864.884276ms]
  Sep 27 14:46:55.705: INFO: Got endpoints: latency-svc-2l2g8 [769.998283ms]
  Sep 27 14:46:55.706: INFO: Got endpoints: latency-svc-4zqqh [770.645428ms]
  Sep 27 14:46:55.706: INFO: Got endpoints: latency-svc-mcn2r [1.06936704s]
  Sep 27 14:46:55.752: INFO: Created: latency-svc-rqtmr
  Sep 27 14:46:55.784: INFO: Got endpoints: latency-svc-cmjrf [848.350875ms]
  Sep 27 14:46:55.926: INFO: Got endpoints: latency-svc-jvkgx [677.380111ms]
  Sep 27 14:46:55.927: INFO: Got endpoints: latency-svc-rqtmr [677.428573ms]
  Sep 27 14:46:55.939: INFO: Created: latency-svc-7nqlm
  Sep 27 14:46:55.969: INFO: Created: latency-svc-52d95
  Sep 27 14:46:55.998: INFO: Created: latency-svc-4c6wk
  Sep 27 14:46:56.024: INFO: Created: latency-svc-xnmrt
  Sep 27 14:46:56.055: INFO: Created: latency-svc-2l279
  Sep 27 14:46:56.085: INFO: Created: latency-svc-fghpd
  Sep 27 14:46:56.112: INFO: Created: latency-svc-4zhtl
  Sep 27 14:46:56.144: INFO: Got endpoints: latency-svc-2l279 [620.186767ms]
  Sep 27 14:46:56.214: INFO: Created: latency-svc-nl8hc
  Sep 27 14:46:56.216: INFO: Got endpoints: latency-svc-7nqlm [928.176264ms]
  Sep 27 14:46:56.216: INFO: Got endpoints: latency-svc-4c6wk [837.595885ms]
  Sep 27 14:46:56.260: INFO: Created: latency-svc-sjlj4
  Sep 27 14:46:56.261: INFO: Got endpoints: latency-svc-52d95 [972.836856ms]
  Sep 27 14:46:56.371: INFO: Created: latency-svc-h65tw
  Sep 27 14:46:56.373: INFO: Got endpoints: latency-svc-4zhtl [849.176147ms]
  Sep 27 14:46:56.373: INFO: Got endpoints: latency-svc-xnmrt [930.198316ms]
  Sep 27 14:46:56.373: INFO: Got endpoints: latency-svc-fghpd [848.945846ms]
  Sep 27 14:46:56.406: INFO: Got endpoints: latency-svc-sjlj4 [701.130237ms]
  Sep 27 14:46:56.407: INFO: Got endpoints: latency-svc-nl8hc [812.929626ms]
  Sep 27 14:46:56.444: INFO: Created: latency-svc-rxqh9
  Sep 27 14:46:56.445: INFO: Got endpoints: latency-svc-h65tw [739.786286ms]
  Sep 27 14:46:56.505: INFO: Created: latency-svc-rsfdn
  Sep 27 14:46:56.507: INFO: Got endpoints: latency-svc-rxqh9 [800.815653ms]
  Sep 27 14:46:56.537: INFO: Created: latency-svc-vjdt5
  Sep 27 14:46:56.567: INFO: Created: latency-svc-vt8n6
  Sep 27 14:46:56.598: INFO: Created: latency-svc-qmwqg
  Sep 27 14:46:56.628: INFO: Created: latency-svc-g8ssl
  Sep 27 14:46:56.659: INFO: Created: latency-svc-2dxzm
  Sep 27 14:46:56.694: INFO: Created: latency-svc-ph9th
  Sep 27 14:46:56.721: INFO: Created: latency-svc-vfzjc
  Sep 27 14:46:56.747: INFO: Created: latency-svc-mrtlj
  Sep 27 14:46:56.790: INFO: Created: latency-svc-txh4s
  Sep 27 14:46:56.873: INFO: Created: latency-svc-z8vcs
  Sep 27 14:46:57.000: INFO: Created: latency-svc-hcvq7
  Sep 27 14:46:57.002: INFO: Got endpoints: latency-svc-vt8n6 [1.075667507s]
  Sep 27 14:46:57.002: INFO: Got endpoints: latency-svc-qmwqg [1.075680245s]
  Sep 27 14:46:57.002: INFO: Got endpoints: latency-svc-g8ssl [858.706524ms]
  Sep 27 14:46:57.002: INFO: Got endpoints: latency-svc-vjdt5 [1.21853539s]
  Sep 27 14:46:57.002: INFO: Got endpoints: latency-svc-rsfdn [1.296556067s]
  Sep 27 14:46:57.072: INFO: Created: latency-svc-bbg8c
  Sep 27 14:46:57.110: INFO: Created: latency-svc-55gbj
  Sep 27 14:46:57.112: INFO: Got endpoints: latency-svc-2dxzm [896.080592ms]
  Sep 27 14:46:57.149: INFO: Got endpoints: latency-svc-ph9th [933.121521ms]
  Sep 27 14:46:57.241: INFO: Created: latency-svc-84ncr
  Sep 27 14:46:57.243: INFO: Got endpoints: latency-svc-vfzjc [982.475713ms]
  Sep 27 14:46:57.244: INFO: Got endpoints: latency-svc-txh4s [869.77771ms]
  Sep 27 14:46:57.244: INFO: Got endpoints: latency-svc-mrtlj [870.312977ms]
  Sep 27 14:46:57.262: INFO: Got endpoints: latency-svc-z8vcs [888.333031ms]
  Sep 27 14:46:57.288: INFO: Created: latency-svc-xrs8f
  Sep 27 14:46:57.412: INFO: Got endpoints: latency-svc-84ncr [905.197326ms]
  Sep 27 14:46:57.412: INFO: Got endpoints: latency-svc-bbg8c [1.005299605s]
  Sep 27 14:46:57.412: INFO: Got endpoints: latency-svc-hcvq7 [1.006062808s]
  Sep 27 14:46:57.413: INFO: Got endpoints: latency-svc-55gbj [967.397501ms]
  Sep 27 14:46:57.414: INFO: Got endpoints: latency-svc-xrs8f [411.365986ms]
  Sep 27 14:46:57.430: INFO: Created: latency-svc-llk4f
  Sep 27 14:46:57.456: INFO: Created: latency-svc-9jzd4
  Sep 27 14:46:57.500: INFO: Created: latency-svc-2q6zl
  Sep 27 14:46:57.501: INFO: Got endpoints: latency-svc-llk4f [498.072514ms]
  Sep 27 14:46:57.579: INFO: Created: latency-svc-cwczt
  Sep 27 14:46:57.581: INFO: Got endpoints: latency-svc-9jzd4 [577.963232ms]
  Sep 27 14:46:57.623: INFO: Created: latency-svc-hstsw
  Sep 27 14:46:57.699: INFO: Got endpoints: latency-svc-cwczt [696.150706ms]
  Sep 27 14:46:57.699: INFO: Got endpoints: latency-svc-hstsw [587.181248ms]
  Sep 27 14:46:57.700: INFO: Got endpoints: latency-svc-2q6zl [696.701423ms]
  Sep 27 14:46:57.713: INFO: Created: latency-svc-vqbbj
  Sep 27 14:46:57.741: INFO: Created: latency-svc-tcmrs
  Sep 27 14:46:57.769: INFO: Created: latency-svc-p5hgk
  Sep 27 14:46:57.801: INFO: Created: latency-svc-4jrv2
  Sep 27 14:46:57.832: INFO: Created: latency-svc-7v5qf
  Sep 27 14:46:57.863: INFO: Created: latency-svc-kpbqx
  Sep 27 14:46:57.895: INFO: Created: latency-svc-jt88k
  Sep 27 14:46:57.925: INFO: Created: latency-svc-f8hkb
  Sep 27 14:46:57.956: INFO: Created: latency-svc-nbn69
  Sep 27 14:46:57.990: INFO: Created: latency-svc-7dldn
  Sep 27 14:46:58.017: INFO: Created: latency-svc-rlkj9
  Sep 27 14:46:58.046: INFO: Created: latency-svc-d6xdc
  Sep 27 14:46:58.073: INFO: Created: latency-svc-bw9ll
  Sep 27 14:46:58.118: INFO: Created: latency-svc-b5nvc
  Sep 27 14:46:58.186: INFO: Created: latency-svc-lfkfd
  Sep 27 14:46:58.188: INFO: Got endpoints: latency-svc-tcmrs [944.297766ms]
  Sep 27 14:46:58.188: INFO: Got endpoints: latency-svc-vqbbj [1.038269595s]
  Sep 27 14:46:58.249: INFO: Got endpoints: latency-svc-p5hgk [1.005266112s]
  Sep 27 14:46:58.249: INFO: Got endpoints: latency-svc-4jrv2 [1.00514552s]
  Sep 27 14:46:58.310: INFO: Created: latency-svc-h9c79
  Sep 27 14:46:58.311: INFO: Got endpoints: latency-svc-kpbqx [898.608641ms]
  Sep 27 14:46:58.311: INFO: Got endpoints: latency-svc-7v5qf [1.048342456s]
  Sep 27 14:46:58.404: INFO: Got endpoints: latency-svc-jt88k [992.367368ms]
  Sep 27 14:46:58.407: INFO: Got endpoints: latency-svc-nbn69 [994.365475ms]
  Sep 27 14:46:58.407: INFO: Got endpoints: latency-svc-f8hkb [993.493895ms]
  Sep 27 14:46:58.423: INFO: Created: latency-svc-c5df9
  Sep 27 14:46:58.544: INFO: Got endpoints: latency-svc-rlkj9 [1.043575919s]
  Sep 27 14:46:58.544: INFO: Got endpoints: latency-svc-bw9ll [844.961045ms]
  Sep 27 14:46:58.544: INFO: Got endpoints: latency-svc-d6xdc [963.335506ms]
  Sep 27 14:46:58.544: INFO: Got endpoints: latency-svc-7dldn [1.131503566s]
  Sep 27 14:46:58.545: INFO: Got endpoints: latency-svc-b5nvc [845.767693ms]
  Sep 27 14:46:58.566: INFO: Created: latency-svc-76r65
  Sep 27 14:46:58.638: INFO: Created: latency-svc-w2wk2
  Sep 27 14:46:58.640: INFO: Got endpoints: latency-svc-h9c79 [452.09864ms]
  Sep 27 14:46:58.640: INFO: Got endpoints: latency-svc-lfkfd [940.694771ms]
  Sep 27 14:46:58.701: INFO: Got endpoints: latency-svc-76r65 [451.815041ms]
  Sep 27 14:46:58.701: INFO: Got endpoints: latency-svc-c5df9 [513.361911ms]
  Sep 27 14:46:58.750: INFO: Created: latency-svc-jctbc
  Sep 27 14:46:58.751: INFO: Got endpoints: latency-svc-w2wk2 [502.015128ms]
  Sep 27 14:46:58.779: INFO: Created: latency-svc-b2t55
  Sep 27 14:46:58.808: INFO: Created: latency-svc-fvvxg
  Sep 27 14:46:58.837: INFO: Created: latency-svc-prkdk
  Sep 27 14:46:58.908: INFO: Created: latency-svc-vkmxk
  Sep 27 14:46:59.016: INFO: Created: latency-svc-hz6df
  Sep 27 14:46:59.018: INFO: Got endpoints: latency-svc-prkdk [610.582063ms]
  Sep 27 14:46:59.018: INFO: Got endpoints: latency-svc-b2t55 [706.873818ms]
  Sep 27 14:46:59.018: INFO: Got endpoints: latency-svc-jctbc [706.774319ms]
  Sep 27 14:46:59.135: INFO: Got endpoints: latency-svc-hz6df [590.1037ms]
  Sep 27 14:46:59.135: INFO: Got endpoints: latency-svc-fvvxg [729.625999ms]
  Sep 27 14:46:59.135: INFO: Got endpoints: latency-svc-vkmxk [728.147664ms]
  Sep 27 14:46:59.155: INFO: Created: latency-svc-zdhf6
  Sep 27 14:46:59.183: INFO: Created: latency-svc-hmz2s
  Sep 27 14:46:59.219: INFO: Created: latency-svc-dmvsn
  Sep 27 14:46:59.249: INFO: Created: latency-svc-2vsg4
  Sep 27 14:46:59.276: INFO: Created: latency-svc-4wg25
  Sep 27 14:46:59.307: INFO: Created: latency-svc-d9d9z
  Sep 27 14:46:59.333: INFO: Created: latency-svc-wnf8k
  Sep 27 14:46:59.362: INFO: Created: latency-svc-hkgkg
  Sep 27 14:46:59.390: INFO: Created: latency-svc-d6ss7
  Sep 27 14:46:59.417: INFO: Created: latency-svc-pfft8
  Sep 27 14:46:59.447: INFO: Created: latency-svc-8h2kc
  Sep 27 14:46:59.475: INFO: Created: latency-svc-j7s2m
  Sep 27 14:46:59.503: INFO: Created: latency-svc-dxh4h
  Sep 27 14:46:59.531: INFO: Created: latency-svc-vgz9g
  Sep 27 14:46:59.556: INFO: Created: latency-svc-fmgnj
  Sep 27 14:47:00.342: INFO: Got endpoints: latency-svc-hmz2s [1.796855494s]
  Sep 27 14:47:00.342: INFO: Got endpoints: latency-svc-4wg25 [1.701761985s]
  Sep 27 14:47:00.342: INFO: Got endpoints: latency-svc-2vsg4 [1.797611301s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-d6ss7 [1.591909162s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-dmvsn [1.798016066s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-d9d9z [1.702545927s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-wnf8k [1.642105033s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-hkgkg [1.641765303s]
  Sep 27 14:47:00.343: INFO: Got endpoints: latency-svc-zdhf6 [1.797765379s]
  Sep 27 14:47:00.352: INFO: Got endpoints: latency-svc-pfft8 [1.333865842s]
  Sep 27 14:47:00.431: INFO: Got endpoints: latency-svc-j7s2m [1.413560604s]
  Sep 27 14:47:00.432: INFO: Got endpoints: latency-svc-8h2kc [1.413813864s]
  Sep 27 14:47:00.464: INFO: Created: latency-svc-gmt8q
  Sep 27 14:47:00.466: INFO: Got endpoints: latency-svc-dxh4h [1.330445568s]
  Sep 27 14:47:00.515: INFO: Created: latency-svc-ctsvb
  Sep 27 14:47:00.516: INFO: Got endpoints: latency-svc-vgz9g [1.380636852s]
  Sep 27 14:47:00.516: INFO: Got endpoints: latency-svc-fmgnj [1.381595605s]
  Sep 27 14:47:00.548: INFO: Created: latency-svc-mzs9v
  Sep 27 14:47:00.639: INFO: Got endpoints: latency-svc-gmt8q [296.96715ms]
  Sep 27 14:47:00.639: INFO: Got endpoints: latency-svc-mzs9v [295.998076ms]
  Sep 27 14:47:00.639: INFO: Got endpoints: latency-svc-ctsvb [296.252292ms]
  Sep 27 14:47:00.660: INFO: Created: latency-svc-lrh98
  Sep 27 14:47:00.719: INFO: Created: latency-svc-54ps9
  Sep 27 14:47:00.720: INFO: Got endpoints: latency-svc-lrh98 [376.692148ms]
  Sep 27 14:47:00.751: INFO: Created: latency-svc-jrql2
  Sep 27 14:47:00.777: INFO: Created: latency-svc-qrjp7
  Sep 27 14:47:00.805: INFO: Created: latency-svc-8pwqz
  Sep 27 14:47:00.935: INFO: Created: latency-svc-pbftv
  Sep 27 14:47:00.937: INFO: Got endpoints: latency-svc-54ps9 [593.67168ms]
  Sep 27 14:47:00.937: INFO: Got endpoints: latency-svc-jrql2 [593.913597ms]
  Sep 27 14:47:00.938: INFO: Got endpoints: latency-svc-qrjp7 [593.891173ms]
  Sep 27 14:47:00.938: INFO: Got endpoints: latency-svc-8pwqz [593.860308ms]
  Sep 27 14:47:00.991: INFO: Created: latency-svc-t7vhl
  Sep 27 14:47:01.060: INFO: Got endpoints: latency-svc-pbftv [716.304691ms]
  Sep 27 14:47:01.060: INFO: Got endpoints: latency-svc-t7vhl [708.107283ms]
  Sep 27 14:47:01.077: INFO: Created: latency-svc-cbcm2
  Sep 27 14:47:01.108: INFO: Created: latency-svc-mn8cw
  Sep 27 14:47:01.172: INFO: Created: latency-svc-h4r29
  Sep 27 14:47:01.176: INFO: Got endpoints: latency-svc-cbcm2 [744.703399ms]
  Sep 27 14:47:01.210: INFO: Created: latency-svc-9tvpj
  Sep 27 14:47:01.244: INFO: Created: latency-svc-t9d59
  Sep 27 14:47:01.245: INFO: Got endpoints: latency-svc-mn8cw [813.051922ms]
  Sep 27 14:47:01.318: INFO: Created: latency-svc-s9n64
  Sep 27 14:47:01.318: INFO: Got endpoints: latency-svc-h4r29 [852.490186ms]
  Sep 27 14:47:01.365: INFO: Created: latency-svc-jsdt5
  Sep 27 14:47:01.367: INFO: Got endpoints: latency-svc-9tvpj [850.66153ms]
  Sep 27 14:47:01.443: INFO: Got endpoints: latency-svc-jsdt5 [803.763294ms]
  Sep 27 14:47:01.444: INFO: Got endpoints: latency-svc-t9d59 [927.241354ms]
  Sep 27 14:47:01.444: INFO: Got endpoints: latency-svc-s9n64 [804.799485ms]
  Sep 27 14:47:01.472: INFO: Created: latency-svc-r7x2g
  Sep 27 14:47:01.499: INFO: Created: latency-svc-fjwlb
  Sep 27 14:47:01.529: INFO: Created: latency-svc-jrpqn
  Sep 27 14:47:01.563: INFO: Created: latency-svc-8fhww
  Sep 27 14:47:01.648: INFO: Created: latency-svc-gh628
  Sep 27 14:47:01.651: INFO: Got endpoints: latency-svc-r7x2g [1.01184196s]
  Sep 27 14:47:01.651: INFO: Got endpoints: latency-svc-fjwlb [931.093009ms]
  Sep 27 14:47:01.700: INFO: Created: latency-svc-fdjhl
  Sep 27 14:47:01.702: INFO: Got endpoints: latency-svc-jrpqn [765.248821ms]
  Sep 27 14:47:01.738: INFO: Got endpoints: latency-svc-8fhww [800.198006ms]
  Sep 27 14:47:01.758: INFO: Created: latency-svc-sn6p4
  Sep 27 14:47:01.759: INFO: Got endpoints: latency-svc-gh628 [821.540012ms]
  Sep 27 14:47:01.799: INFO: Created: latency-svc-qsr7t
  Sep 27 14:47:01.847: INFO: Created: latency-svc-hlgvc
  Sep 27 14:47:01.938: INFO: Got endpoints: latency-svc-fdjhl [1.000216823s]
  Sep 27 14:47:01.938: INFO: Got endpoints: latency-svc-sn6p4 [877.561377ms]
  Sep 27 14:47:01.987: INFO: Created: latency-svc-9t8fj
  Sep 27 14:47:01.989: INFO: Got endpoints: latency-svc-qsr7t [928.296817ms]
  Sep 27 14:47:01.989: INFO: Got endpoints: latency-svc-hlgvc [812.282262ms]
  Sep 27 14:47:02.050: INFO: Created: latency-svc-7bqhr
  Sep 27 14:47:02.083: INFO: Got endpoints: latency-svc-9t8fj [837.861286ms]
  Sep 27 14:47:02.111: INFO: Created: latency-svc-8z54x
  Sep 27 14:47:02.152: INFO: Created: latency-svc-ss526
  Sep 27 14:47:02.154: INFO: Got endpoints: latency-svc-7bqhr [835.601834ms]
  Sep 27 14:47:02.212: INFO: Got endpoints: latency-svc-8z54x [844.939785ms]
  Sep 27 14:47:02.252: INFO: Created: latency-svc-hblrt
  Sep 27 14:47:02.253: INFO: Got endpoints: latency-svc-ss526 [809.617938ms]
  Sep 27 14:47:02.295: INFO: Created: latency-svc-2gzrw
  Sep 27 14:47:02.337: INFO: Created: latency-svc-mwpm2
  Sep 27 14:47:02.366: INFO: Created: latency-svc-s6wlj
  Sep 27 14:47:02.397: INFO: Created: latency-svc-b4tjz
  Sep 27 14:47:02.424: INFO: Created: latency-svc-rg6x5
  Sep 27 14:47:02.459: INFO: Created: latency-svc-4rllm
  Sep 27 14:47:02.489: INFO: Got endpoints: latency-svc-s6wlj [838.007743ms]
  Sep 27 14:47:02.495: INFO: Created: latency-svc-ttzqd
  Sep 27 14:47:02.703: INFO: Created: latency-svc-6c547
  Sep 27 14:47:02.705: INFO: Got endpoints: latency-svc-b4tjz [1.00210767s]
  Sep 27 14:47:02.705: INFO: Got endpoints: latency-svc-ttzqd [767.295194ms]
  Sep 27 14:47:02.706: INFO: Got endpoints: latency-svc-mwpm2 [1.054167881s]
  Sep 27 14:47:02.706: INFO: Got endpoints: latency-svc-hblrt [1.261551555s]
  Sep 27 14:47:02.706: INFO: Got endpoints: latency-svc-rg6x5 [967.943029ms]
  Sep 27 14:47:02.706: INFO: Got endpoints: latency-svc-2gzrw [1.261884396s]
  Sep 27 14:47:02.706: INFO: Got endpoints: latency-svc-4rllm [946.282288ms]
  Sep 27 14:47:02.731: INFO: Created: latency-svc-d296c
  Sep 27 14:47:02.759: INFO: Created: latency-svc-tmnl2
  Sep 27 14:47:02.789: INFO: Created: latency-svc-rl4zs
  Sep 27 14:47:02.818: INFO: Created: latency-svc-84cp7
  Sep 27 14:47:02.846: INFO: Created: latency-svc-5mjgl
  Sep 27 14:47:02.891: INFO: Created: latency-svc-v4x8m
  Sep 27 14:47:02.918: INFO: Created: latency-svc-kp6hf
  Sep 27 14:47:02.954: INFO: Created: latency-svc-nnrx2
  Sep 27 14:47:02.981: INFO: Created: latency-svc-sjb77
  Sep 27 14:47:03.151: INFO: Created: latency-svc-tpzhs
  Sep 27 14:47:03.153: INFO: Got endpoints: latency-svc-6c547 [1.215164404s]
  Sep 27 14:47:03.154: INFO: Got endpoints: latency-svc-d296c [1.164667556s]
  Sep 27 14:47:03.154: INFO: Got endpoints: latency-svc-rl4zs [1.07084446s]
  Sep 27 14:47:03.154: INFO: Got endpoints: latency-svc-84cp7 [999.559702ms]
  Sep 27 14:47:03.154: INFO: Got endpoints: latency-svc-tmnl2 [1.164858251s]
  Sep 27 14:47:03.258: INFO: Created: latency-svc-s75kb
  Sep 27 14:47:03.259: INFO: Got endpoints: latency-svc-sjb77 [554.558342ms]
  Sep 27 14:47:03.260: INFO: Got endpoints: latency-svc-5mjgl [1.047720694s]
  Sep 27 14:47:03.260: INFO: Got endpoints: latency-svc-v4x8m [1.006974253s]
  Sep 27 14:47:03.260: INFO: Got endpoints: latency-svc-kp6hf [771.100079ms]
  Sep 27 14:47:03.261: INFO: Got endpoints: latency-svc-nnrx2 [555.197767ms]
  Sep 27 14:47:03.373: INFO: Created: latency-svc-rzf79
  Sep 27 14:47:03.405: INFO: Created: latency-svc-2pkfd
  Sep 27 14:47:03.443: INFO: Got endpoints: latency-svc-s75kb [736.925513ms]
  Sep 27 14:47:03.443: INFO: Got endpoints: latency-svc-tpzhs [737.043669ms]
  Sep 27 14:47:03.522: INFO: Got endpoints: latency-svc-2pkfd [816.324605ms]
  Sep 27 14:47:03.522: INFO: Got endpoints: latency-svc-rzf79 [816.60416ms]
  Sep 27 14:47:03.537: INFO: Created: latency-svc-fk7mq
  Sep 27 14:47:03.567: INFO: Created: latency-svc-5cczq
  Sep 27 14:47:03.601: INFO: Created: latency-svc-cfflv
  Sep 27 14:47:03.697: INFO: Created: latency-svc-xv5nv
  Sep 27 14:47:03.703: INFO: Got endpoints: latency-svc-cfflv [548.122504ms]
  Sep 27 14:47:03.703: INFO: Got endpoints: latency-svc-5cczq [549.306987ms]
  Sep 27 14:47:03.730: INFO: Got endpoints: latency-svc-fk7mq [1.02410085s]
  Sep 27 14:47:03.747: INFO: Created: latency-svc-w8z42
  Sep 27 14:47:03.804: INFO: Created: latency-svc-99qqh
  Sep 27 14:47:03.859: INFO: Got endpoints: latency-svc-xv5nv [703.916902ms]
  Sep 27 14:47:03.872: INFO: Got endpoints: latency-svc-w8z42 [717.775959ms]
  Sep 27 14:47:03.887: INFO: Created: latency-svc-2gmgb
  Sep 27 14:47:03.952: INFO: Created: latency-svc-zkwz5
  Sep 27 14:47:03.954: INFO: Got endpoints: latency-svc-99qqh [799.822982ms]
  Sep 27 14:47:03.994: INFO: Created: latency-svc-97qtj
  Sep 27 14:47:03.995: INFO: Got endpoints: latency-svc-2gmgb [735.775746ms]
  Sep 27 14:47:04.030: INFO: Created: latency-svc-58scq
  Sep 27 14:47:04.062: INFO: Got endpoints: latency-svc-zkwz5 [802.187026ms]
  Sep 27 14:47:04.093: INFO: Created: latency-svc-dslpp
  Sep 27 14:47:04.094: INFO: Got endpoints: latency-svc-97qtj [833.366954ms]
  Sep 27 14:47:04.167: INFO: Created: latency-svc-6c4s2
  Sep 27 14:47:04.168: INFO: Got endpoints: latency-svc-58scq [907.917967ms]
  Sep 27 14:47:04.168: INFO: Got endpoints: latency-svc-dslpp [907.439531ms]
  Sep 27 14:47:04.197: INFO: Created: latency-svc-ftfv2
  Sep 27 14:47:04.227: INFO: Created: latency-svc-qddkn
  Sep 27 14:47:04.259: INFO: Created: latency-svc-fswwg
  Sep 27 14:47:04.292: INFO: Created: latency-svc-d242z
  Sep 27 14:47:04.324: INFO: Created: latency-svc-jr86h
  Sep 27 14:47:04.352: INFO: Created: latency-svc-sqnhd
  Sep 27 14:47:04.387: INFO: Created: latency-svc-t7b54
  Sep 27 14:47:04.421: INFO: Created: latency-svc-4dmjj
  Sep 27 14:47:04.459: INFO: Created: latency-svc-bkgz5
  Sep 27 14:47:04.487: INFO: Created: latency-svc-tnnfv
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-sqnhd [1.612372463s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-d242z [1.639885582s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-qddkn [1.820251365s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-fswwg [1.820171482s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-6c4s2 [1.899859607s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-ftfv2 [1.899444319s]
  Sep 27 14:47:05.343: INFO: Got endpoints: latency-svc-jr86h [1.639440063s]
  Sep 27 14:47:05.443: INFO: Got endpoints: latency-svc-t7b54 [1.584453868s]
  Sep 27 14:47:05.443: INFO: Got endpoints: latency-svc-bkgz5 [1.489302725s]
  Sep 27 14:47:05.443: INFO: Got endpoints: latency-svc-4dmjj [1.571450493s]
  Sep 27 14:47:05.443: INFO: Got endpoints: latency-svc-tnnfv [1.44802192s]
  Sep 27 14:47:05.443: INFO: Latencies: [295.998076ms 296.252292ms 296.96715ms 376.692148ms 411.365986ms 451.815041ms 452.09864ms 466.572635ms 480.213281ms 498.072514ms 502.015128ms 513.361911ms 523.006642ms 523.074535ms 523.252322ms 523.566731ms 548.122504ms 548.267006ms 548.822162ms 549.306987ms 549.612953ms 554.558342ms 555.197767ms 567.326013ms 577.963232ms 587.181248ms 590.1037ms 590.166629ms 593.67168ms 593.860308ms 593.891173ms 593.913597ms 610.582063ms 611.597165ms 620.186767ms 623.081433ms 623.320269ms 627.87075ms 643.972348ms 648.023808ms 662.732001ms 662.853665ms 671.711285ms 674.082028ms 677.380111ms 677.428573ms 683.517356ms 696.150706ms 696.701423ms 701.130237ms 703.916902ms 706.774319ms 706.873818ms 708.107283ms 716.304691ms 717.775959ms 719.7375ms 728.147664ms 729.625999ms 733.650156ms 735.775746ms 736.925513ms 737.043669ms 739.786286ms 744.703399ms 765.248821ms 767.295194ms 769.998283ms 770.645428ms 771.100079ms 772.13615ms 780.619381ms 799.822982ms 800.198006ms 800.815653ms 802.187026ms 803.763294ms 804.799485ms 809.617938ms 812.282262ms 812.929626ms 813.051922ms 816.324605ms 816.60416ms 819.467554ms 819.785882ms 821.540012ms 833.366954ms 835.601834ms 837.595885ms 837.861286ms 838.007743ms 844.939785ms 844.961045ms 845.767693ms 848.350875ms 848.945846ms 849.176147ms 850.66153ms 852.490186ms 858.706524ms 864.884276ms 869.77771ms 870.312977ms 877.561377ms 888.333031ms 896.080592ms 898.608641ms 904.026641ms 905.197326ms 907.439531ms 907.917967ms 927.241354ms 928.176264ms 928.296817ms 930.198316ms 931.093009ms 933.121521ms 939.637071ms 940.027332ms 940.694771ms 944.297766ms 946.282288ms 957.594807ms 963.335506ms 965.965722ms 966.465966ms 966.606405ms 966.768289ms 967.397501ms 967.564886ms 967.943029ms 972.836856ms 982.350331ms 982.475713ms 986.608928ms 992.367368ms 993.493895ms 994.365475ms 999.559702ms 1.000216823s 1.00210767s 1.00514552s 1.005266112s 1.005299605s 1.006062808s 1.006974253s 1.008062622s 1.01184196s 1.02410085s 1.038269595s 1.043575919s 1.047720694s 1.048342456s 1.054167881s 1.058178359s 1.06936704s 1.07084446s 1.075667507s 1.075680245s 1.078960713s 1.120290213s 1.131503566s 1.140264859s 1.164667556s 1.164858251s 1.178743917s 1.187160552s 1.215164404s 1.21853539s 1.23114266s 1.261551555s 1.261884396s 1.296556067s 1.330445568s 1.333865842s 1.380636852s 1.381595605s 1.413560604s 1.413813864s 1.44802192s 1.489302725s 1.571450493s 1.584453868s 1.591909162s 1.612372463s 1.639440063s 1.639885582s 1.641765303s 1.642105033s 1.701761985s 1.702545927s 1.796855494s 1.797611301s 1.797765379s 1.798016066s 1.820171482s 1.820251365s 1.899444319s 1.899859607s]
  Sep 27 14:47:05.444: INFO: 50 %ile: 858.706524ms
  Sep 27 14:47:05.444: INFO: 90 %ile: 1.44802192s
  Sep 27 14:47:05.444: INFO: 99 %ile: 1.899444319s
  Sep 27 14:47:05.444: INFO: Total sample count: 200
  Sep 27 14:47:05.444: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-1881" for this suite. @ 09/27/23 14:47:05.449
• [17.997 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance]
test/e2e/apps/job.go:485
  STEP: Creating a kubernetes client @ 09/27/23 14:47:05.481
  Sep 27 14:47:05.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 14:47:05.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:47:06.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:47:06.446
  STEP: Creating a job @ 09/27/23 14:47:06.447
  STEP: Ensuring active pods == parallelism @ 09/27/23 14:47:06.463
  STEP: delete a job @ 09/27/23 14:47:12.47
  STEP: deleting Job.batch foo in namespace job-5539, will wait for the garbage collector to delete the pods @ 09/27/23 14:47:12.47
  Sep 27 14:47:12.553: INFO: Deleting Job.batch foo took: 28.567938ms
  Sep 27 14:47:13.454: INFO: Terminating Job.batch foo pods took: 901.083753ms
  STEP: Ensuring job was deleted @ 09/27/23 14:47:45.254
  Sep 27 14:47:45.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5539" for this suite. @ 09/27/23 14:47:45.269
• [39.814 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance]
test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 09/27/23 14:47:45.296
  Sep 27 14:47:45.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:47:45.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:47:45.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:47:45.897
  STEP: Create set of pods @ 09/27/23 14:47:45.9
  Sep 27 14:47:45.940: INFO: created test-pod-1
  Sep 27 14:47:45.962: INFO: created test-pod-2
  Sep 27 14:47:45.994: INFO: created test-pod-3
  STEP: waiting for all 3 pods to be running @ 09/27/23 14:47:45.994
  STEP: waiting for all pods to be deleted @ 09/27/23 14:47:56.174
  Sep 27 14:47:56.177: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 27 14:47:57.181: INFO: Pod quantity 3 is different from expected quantity 0
  Sep 27 14:47:58.185: INFO: Pod quantity 2 is different from expected quantity 0
  Sep 27 14:47:59.182: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4002" for this suite. @ 09/27/23 14:47:59.185
• [13.904 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance]
test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 09/27/23 14:47:59.202
  Sep 27 14:47:59.202: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename watch @ 09/27/23 14:47:59.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:47:59.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:47:59.639
  STEP: creating a new configmap @ 09/27/23 14:47:59.64
  STEP: modifying the configmap once @ 09/27/23 14:47:59.659
  STEP: modifying the configmap a second time @ 09/27/23 14:47:59.678
  STEP: deleting the configmap @ 09/27/23 14:47:59.695
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 09/27/23 14:47:59.722
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 09/27/23 14:47:59.723
  Sep 27 14:47:59.723: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9301  ef3f3ea4-4728-4b5b-8b0f-7345415749ce 6824 0 2023-09-27 14:47:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-27 14:47:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:47:59.723: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9301  ef3f3ea4-4728-4b5b-8b0f-7345415749ce 6826 0 2023-09-27 14:47:59 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2023-09-27 14:47:59 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:47:59.723: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9301" for this suite. @ 09/27/23 14:47:59.726
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance]
test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 09/27/23 14:47:59.741
  Sep 27 14:47:59.741: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 14:47:59.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:00.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:00.343
  STEP: Creating a test headless service @ 09/27/23 14:48:00.345
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9585 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9585;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9585 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9585;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9585.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9585.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9585.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9585.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9585.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9585.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9585.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9585.svc;check="$$(dig +notcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_udp@PTR;check="$$(dig +tcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_tcp@PTR;sleep 1; done
   @ 09/27/23 14:48:00.426
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9585 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9585;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9585 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9585;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9585.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9585.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9585.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9585.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9585.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9585.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9585.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9585.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9585.svc;check="$$(dig +notcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_udp@PTR;check="$$(dig +tcp +noall +answer +search 99.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.99_tcp@PTR;sleep 1; done
   @ 09/27/23 14:48:00.427
  STEP: creating a pod to probe DNS @ 09/27/23 14:48:00.427
  STEP: submitting the pod to kubernetes @ 09/27/23 14:48:00.427
  STEP: retrieving the pod @ 09/27/23 14:48:20.643
  STEP: looking for the results for each expected name from probers @ 09/27/23 14:48:20.649
  Sep 27 14:48:20.655: INFO: Unable to read wheezy_udp@dns-test-service from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.661: INFO: Unable to read wheezy_tcp@dns-test-service from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.667: INFO: Unable to read wheezy_udp@dns-test-service.dns-9585 from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.675: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9585 from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.680: INFO: Unable to read wheezy_udp@dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.685: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.691: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.699: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.726: INFO: Unable to read jessie_udp@dns-test-service from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.732: INFO: Unable to read jessie_tcp@dns-test-service from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.737: INFO: Unable to read jessie_udp@dns-test-service.dns-9585 from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.744: INFO: Unable to read jessie_tcp@dns-test-service.dns-9585 from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.749: INFO: Unable to read jessie_udp@dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.758: INFO: Unable to read jessie_tcp@dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.764: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.770: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9585.svc from pod dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9: the server could not find the requested resource (get pods dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9)
  Sep 27 14:48:20.795: INFO: Lookups using dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-9585 wheezy_tcp@dns-test-service.dns-9585 wheezy_udp@dns-test-service.dns-9585.svc wheezy_tcp@dns-test-service.dns-9585.svc wheezy_udp@_http._tcp.dns-test-service.dns-9585.svc wheezy_tcp@_http._tcp.dns-test-service.dns-9585.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-9585 jessie_tcp@dns-test-service.dns-9585 jessie_udp@dns-test-service.dns-9585.svc jessie_tcp@dns-test-service.dns-9585.svc jessie_udp@_http._tcp.dns-test-service.dns-9585.svc jessie_tcp@_http._tcp.dns-test-service.dns-9585.svc]

  Sep 27 14:48:20.835: INFO: Pod client logs for webserver: 
  Sep 27 14:48:20.845: INFO: Pod client logs for querier: 
  Sep 27 14:48:20.856: INFO: Pod client logs for jessie-querier: 
  Sep 27 14:48:25.946: INFO: DNS probes using dns-9585/dns-test-e1056e25-5d90-4277-82f4-630b3e5598c9 succeeded

  Sep 27 14:48:25.946: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:48:25.949
  STEP: deleting the test service @ 09/27/23 14:48:26.002
  STEP: deleting the test headless service @ 09/27/23 14:48:26.087
  STEP: Destroying namespace "dns-9585" for this suite. @ 09/27/23 14:48:26.146
• [26.898 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:647
  STEP: Creating a kubernetes client @ 09/27/23 14:48:26.64
  Sep 27 14:48:26.640: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:48:26.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:27.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:27.455
  STEP: creating a ServiceAccount @ 09/27/23 14:48:27.462
  STEP: watching for the ServiceAccount to be added @ 09/27/23 14:48:27.633
  STEP: patching the ServiceAccount @ 09/27/23 14:48:27.645
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 09/27/23 14:48:27.681
  STEP: deleting the ServiceAccount @ 09/27/23 14:48:27.69
  Sep 27 14:48:27.796: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2446" for this suite. @ 09/27/23 14:48:27.809
• [1.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance]
test/e2e/apps/statefulset.go:593
  STEP: Creating a kubernetes client @ 09/27/23 14:48:27.865
  Sep 27 14:48:27.866: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:48:27.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:48:28.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:48:28.427
  STEP: Creating service test in namespace statefulset-8036 @ 09/27/23 14:48:28.443
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 09/27/23 14:48:28.49
  STEP: Creating stateful set ss in namespace statefulset-8036 @ 09/27/23 14:48:28.519
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-8036 @ 09/27/23 14:48:28.57
  Sep 27 14:48:28.589: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 14:48:38.596: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 09/27/23 14:48:38.596
  Sep 27 14:48:38.599: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:48:38.766: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:48:38.766: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:48:38.766: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:48:38.770: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep 27 14:48:48.775: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:48:48.775: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 14:48:48.799: INFO: Verifying statefulset ss doesn't scale past 1 for another 9.999999476s
  Sep 27 14:48:49.803: INFO: Verifying statefulset ss doesn't scale past 1 for another 8.997270763s
  Sep 27 14:48:50.809: INFO: Verifying statefulset ss doesn't scale past 1 for another 7.992332736s
  Sep 27 14:48:51.813: INFO: Verifying statefulset ss doesn't scale past 1 for another 6.987484634s
  Sep 27 14:48:52.816: INFO: Verifying statefulset ss doesn't scale past 1 for another 5.983659847s
  Sep 27 14:48:53.820: INFO: Verifying statefulset ss doesn't scale past 1 for another 4.980315491s
  Sep 27 14:48:54.848: INFO: Verifying statefulset ss doesn't scale past 1 for another 3.976199522s
  Sep 27 14:48:55.853: INFO: Verifying statefulset ss doesn't scale past 1 for another 2.947852779s
  Sep 27 14:48:56.857: INFO: Verifying statefulset ss doesn't scale past 1 for another 1.943145198s
  Sep 27 14:48:57.862: INFO: Verifying statefulset ss doesn't scale past 1 for another 939.215984ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-8036 @ 09/27/23 14:48:58.862
  Sep 27 14:48:58.866: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:48:58.992: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:48:58.993: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:48:58.993: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:48:59.018: INFO: Found 1 stateful pods, waiting for 3
  Sep 27 14:49:09.024: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:49:09.024: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:49:09.024: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 09/27/23 14:49:09.024
  STEP: Scale down will halt with unhealthy stateful pod @ 09/27/23 14:49:09.024
  Sep 27 14:49:09.030: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:49:09.131: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:49:09.131: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:49:09.131: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:49:09.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:49:09.249: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:49:09.249: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:49:09.249: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:49:09.249: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:49:09.420: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:49:09.420: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:49:09.420: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:49:09.420: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 14:49:09.423: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 2
  Sep 27 14:49:19.430: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:49:19.430: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:49:19.430: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:49:19.464: INFO: Verifying statefulset ss doesn't scale past 3 for another 9.999999637s
  Sep 27 14:49:20.468: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.996517275s
  Sep 27 14:49:21.473: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.993407819s
  Sep 27 14:49:22.477: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.988473824s
  Sep 27 14:49:23.481: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.984806892s
  Sep 27 14:49:24.485: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.979778458s
  Sep 27 14:49:25.490: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.976086259s
  Sep 27 14:49:26.494: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.971732162s
  Sep 27 14:49:27.497: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.967815784s
  Sep 27 14:49:28.501: INFO: Verifying statefulset ss doesn't scale past 3 for another 964.121627ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-8036 @ 09/27/23 14:49:29.501
  Sep 27 14:49:29.505: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:49:29.623: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:49:29.623: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:49:29.623: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:49:29.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:49:29.762: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:49:29.762: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:49:29.762: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:49:29.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8036 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:49:29.874: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:49:29.874: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:49:29.874: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:49:29.874: INFO: Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 09/27/23 14:49:39.892
  Sep 27 14:49:39.892: INFO: Deleting all statefulset in ns statefulset-8036
  Sep 27 14:49:39.894: INFO: Scaling statefulset ss to 0
  Sep 27 14:49:39.905: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:49:39.908: INFO: Deleting statefulset ss
  Sep 27 14:49:39.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8036" for this suite. @ 09/27/23 14:49:39.944
• [72.096 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 09/27/23 14:49:39.962
  Sep 27 14:49:39.962: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:49:39.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:49:40.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:49:40.346
  STEP: creating the pod @ 09/27/23 14:49:40.348
  STEP: submitting the pod to kubernetes @ 09/27/23 14:49:40.348
  STEP: verifying the pod is in kubernetes @ 09/27/23 14:49:42.49
  STEP: updating the pod @ 09/27/23 14:49:42.499
  Sep 27 14:49:43.071: INFO: Successfully updated pod "pod-update-c462285a-e8a8-4397-aedc-8aab65f6e37b"
  STEP: verifying the updated pod is in kubernetes @ 09/27/23 14:49:43.075
  Sep 27 14:49:43.078: INFO: Pod update OK
  Sep 27 14:49:43.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-584" for this suite. @ 09/27/23 14:49:43.083
• [3.211 seconds]
------------------------------
SSSS
------------------------------
[sig-network] DNS should provide DNS for services  [Conformance]
test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 09/27/23 14:49:43.173
  Sep 27 14:49:43.173: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 14:49:43.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:49:44.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:49:44.261
  STEP: Creating a test headless service @ 09/27/23 14:49:44.264
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9627.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9627.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_udp@PTR;check="$$(dig +tcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_tcp@PTR;sleep 1; done
   @ 09/27/23 14:49:44.452
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9627.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9627.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9627.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9627.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9627.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_udp@PTR;check="$$(dig +tcp +noall +answer +search 33.183.152.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.152.183.33_tcp@PTR;sleep 1; done
   @ 09/27/23 14:49:44.452
  STEP: creating a pod to probe DNS @ 09/27/23 14:49:44.452
  STEP: submitting the pod to kubernetes @ 09/27/23 14:49:44.452
  STEP: retrieving the pod @ 09/27/23 14:50:02.605
  STEP: looking for the results for each expected name from probers @ 09/27/23 14:50:02.61
  Sep 27 14:50:02.613: INFO: Unable to read wheezy_udp@dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.616: INFO: Unable to read wheezy_tcp@dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.620: INFO: Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.623: INFO: Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.638: INFO: Unable to read jessie_udp@dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.641: INFO: Unable to read jessie_tcp@dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.644: INFO: Unable to read jessie_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.647: INFO: Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local from pod dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1: the server could not find the requested resource (get pods dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1)
  Sep 27 14:50:02.663: INFO: Lookups using dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1 failed for: [wheezy_udp@dns-test-service.dns-9627.svc.cluster.local wheezy_tcp@dns-test-service.dns-9627.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local jessie_udp@dns-test-service.dns-9627.svc.cluster.local jessie_tcp@dns-test-service.dns-9627.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-9627.svc.cluster.local]

  Sep 27 14:50:02.676: INFO: Pod client logs for webserver: 
  Sep 27 14:50:02.682: INFO: Pod client logs for querier: 
  Sep 27 14:50:02.688: INFO: Pod client logs for jessie-querier: 
  Sep 27 14:50:07.794: INFO: DNS probes using dns-9627/dns-test-fd8b465e-d9b0-47e3-b36d-17219c5ba6d1 succeeded

  Sep 27 14:50:07.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:50:07.797
  STEP: deleting the test service @ 09/27/23 14:50:07.853
  STEP: deleting the test headless service @ 09/27/23 14:50:08.026
  STEP: Destroying namespace "dns-9627" for this suite. @ 09/27/23 14:50:08.066
• [24.914 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:127
  STEP: Creating a kubernetes client @ 09/27/23 14:50:08.087
  Sep 27 14:50:08.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 14:50:08.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:50:08.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:50:08.448
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/27/23 14:50:08.466
  STEP: Saw pod success @ 09/27/23 14:50:14.537
  Sep 27 14:50:14.545: INFO: Trying to get logs from node conformance-1 pod pod-27638a7e-51c2-4b26-a72c-e9636f962c9e container test-container: <nil>
  STEP: delete the pod @ 09/27/23 14:50:14.596
  Sep 27 14:50:14.704: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2291" for this suite. @ 09/27/23 14:50:14.717
• [6.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:109
  STEP: Creating a kubernetes client @ 09/27/23 14:50:14.756
  Sep 27 14:50:14.756: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:50:14.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:50:15.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:50:15.351
  STEP: Creating configMap with name configmap-test-volume-map-b6de0b66-8fbd-4609-8708-e005c9428d86 @ 09/27/23 14:50:15.356
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:50:15.38
  STEP: Saw pod success @ 09/27/23 14:50:21.515
  Sep 27 14:50:21.525: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-832c506c-3504-4f38-9546-95ee5c7533c6 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:50:21.551
  Sep 27 14:50:21.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7492" for this suite. @ 09/27/23 14:50:21.648
• [6.918 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance]
test/e2e/apimachinery/aggregator.go:96
  STEP: Creating a kubernetes client @ 09/27/23 14:50:21.675
  Sep 27 14:50:21.675: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename aggregator @ 09/27/23 14:50:21.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:50:22.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:50:22.451
  Sep 27 14:50:22.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Registering the sample API server. @ 09/27/23 14:50:22.456
  Sep 27 14:50:23.221: INFO: Found ClusterRoles; assuming RBAC is enabled.
  Sep 27 14:50:23.358: INFO: new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  Sep 27 14:50:25.531: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:27.542: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:29.541: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:31.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:33.539: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:35.551: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:37.540: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:39.541: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:41.539: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:43.540: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:45.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:47.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:49.547: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:51.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:53.539: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:55.538: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:57.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:50:59.536: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:01.535: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:03.535: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:05.536: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:07.541: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:09.537: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:11.536: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 50, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-76f465f4f8\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 14:51:13.663: INFO: Waited 112.04293ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 09/27/23 14:51:13.7
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 09/27/23 14:51:13.703
  STEP: List APIServices @ 09/27/23 14:51:13.721
  Sep 27 14:51:13.732: INFO: Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 09/27/23 14:51:13.732
  Sep 27 14:51:13.752: INFO: APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 09/27/23 14:51:13.753
  Sep 27 14:51:13.779: INFO: updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2023, time.September, 27, 14, 51, 13, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 09/27/23 14:51:13.779
  Sep 27 14:51:13.788: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2023-09-27 14:51:13 +0000 UTC Passed all checks passed}
  Sep 27 14:51:13.788: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 14:51:13.788: INFO: Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 09/27/23 14:51:13.788
  Sep 27 14:51:13.811: INFO: Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete APIService "dynamic-flunder-1815451520" @ 09/27/23 14:51:13.811
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 09/27/23 14:51:13.856
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 09/27/23 14:51:13.888
  STEP: Patch APIService Status @ 09/27/23 14:51:13.893
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 09/27/23 14:51:13.91
  Sep 27 14:51:13.915: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2023-09-27 14:51:13 +0000 UTC Passed all checks passed}
  Sep 27 14:51:13.915: INFO: Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 14:51:13.915: INFO: Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  Sep 27 14:51:13.915: INFO: Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "e2e-apiservice=patched" @ 09/27/23 14:51:13.915
  STEP: Confirm that the generated APIService has been deleted @ 09/27/23 14:51:13.922
  Sep 27 14:51:13.922: INFO: Requesting list of APIServices to confirm quantity
  Sep 27 14:51:13.927: INFO: Found 0 APIService with label "e2e-apiservice=patched"
  Sep 27 14:51:13.927: INFO: APIService v1alpha1.wardle.example.com has been deleted.
  Sep 27 14:51:14.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-1549" for this suite. @ 09/27/23 14:51:14.323
• [52.682 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:198
  STEP: Creating a kubernetes client @ 09/27/23 14:51:14.363
  Sep 27 14:51:14.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 14:51:14.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:14.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:14.55
  STEP: fetching the /apis discovery document @ 09/27/23 14:51:14.554
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 09/27/23 14:51:14.555
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 09/27/23 14:51:14.555
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 09/27/23 14:51:14.555
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 09/27/23 14:51:14.556
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 09/27/23 14:51:14.556
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 09/27/23 14:51:14.557
  Sep 27 14:51:14.557: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1667" for this suite. @ 09/27/23 14:51:14.569
• [0.227 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2202
  STEP: Creating a kubernetes client @ 09/27/23 14:51:14.591
  Sep 27 14:51:14.591: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 14:51:14.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:15.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:15.347
  STEP: creating service in namespace services-3976 @ 09/27/23 14:51:15.349
  STEP: creating service affinity-nodeport in namespace services-3976 @ 09/27/23 14:51:15.349
  STEP: creating replication controller affinity-nodeport in namespace services-3976 @ 09/27/23 14:51:15.433
  I0927 14:51:15.451446      21 runners.go:197] Created replication controller with name: affinity-nodeport, namespace: services-3976, replica count: 3
  I0927 14:51:18.503465      21 runners.go:197] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 14:51:18.517: INFO: Creating new exec pod
  Sep 27 14:51:23.560: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3976 exec execpod-affinitylb9wx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  Sep 27 14:51:23.876: INFO: stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  Sep 27 14:51:23.876: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:51:23.876: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3976 exec execpod-affinitylb9wx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.153 80'
  Sep 27 14:51:24.100: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.153 80\nConnection to 10.152.183.153 80 port [tcp/http] succeeded!\n"
  Sep 27 14:51:24.100: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:51:24.100: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3976 exec execpod-affinitylb9wx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.103 30856'
  Sep 27 14:51:24.300: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.103 30856\nConnection to 10.84.220.103 30856 port [tcp/*] succeeded!\n"
  Sep 27 14:51:24.301: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:51:24.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3976 exec execpod-affinitylb9wx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.167 30856'
  Sep 27 14:51:24.594: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.167 30856\nConnection to 10.84.220.167 30856 port [tcp/*] succeeded!\n"
  Sep 27 14:51:24.594: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 14:51:24.594: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3976 exec execpod-affinitylb9wx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.84.220.103:30856/ ; done'
  Sep 27 14:51:24.867: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:30856/\n"
  Sep 27 14:51:24.867: INFO: stdout: "\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47\naffinity-nodeport-znr47"
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Received response from host: affinity-nodeport-znr47
  Sep 27 14:51:24.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:51:24.872: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-3976, will wait for the garbage collector to delete the pods @ 09/27/23 14:51:24.915
  Sep 27 14:51:25.087: INFO: Deleting ReplicationController affinity-nodeport took: 104.818554ms
  Sep 27 14:51:25.388: INFO: Terminating ReplicationController affinity-nodeport pods took: 300.846577ms
  STEP: Destroying namespace "services-3976" for this suite. @ 09/27/23 14:51:29.505
• [14.937 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance]
test/e2e/network/service.go:3552
  STEP: Creating a kubernetes client @ 09/27/23 14:51:29.528
  Sep 27 14:51:29.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 14:51:29.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:29.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:29.885
  STEP: creating a collection of services @ 09/27/23 14:51:29.89
  Sep 27 14:51:29.890: INFO: Creating e2e-svc-a-fq9l8
  Sep 27 14:51:29.965: INFO: Creating e2e-svc-b-pm9hb
  Sep 27 14:51:30.043: INFO: Creating e2e-svc-c-l2x4x
  STEP: deleting service collection @ 09/27/23 14:51:30.137
  Sep 27 14:51:30.346: INFO: Collection of services has been deleted
  Sep 27 14:51:30.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8055" for this suite. @ 09/27/23 14:51:30.353
• [0.848 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:347
  STEP: Creating a kubernetes client @ 09/27/23 14:51:30.38
  Sep 27 14:51:30.380: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 14:51:30.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:31.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:31.45
  Sep 27 14:51:35.511: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-522" for this suite. @ 09/27/23 14:51:35.519
• [5.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance]
test/e2e/common/node/expansion.go:189
  STEP: Creating a kubernetes client @ 09/27/23 14:51:35.553
  Sep 27 14:51:35.553: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:51:35.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:36.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:36.14
  Sep 27 14:51:40.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 14:51:40.228: INFO: Deleting pod "var-expansion-20184642-a55c-4d08-8946-3a1d873dbe95" in namespace "var-expansion-907"
  Sep 27 14:51:40.274: INFO: Wait up to 5m0s for pod "var-expansion-20184642-a55c-4d08-8946-3a1d873dbe95" to be fully deleted
  STEP: Destroying namespace "var-expansion-907" for this suite. @ 09/27/23 14:51:42.307
• [6.863 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance]
test/e2e/scheduling/limit_range.go:239
  STEP: Creating a kubernetes client @ 09/27/23 14:51:42.417
  Sep 27 14:51:42.417: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename limitrange @ 09/27/23 14:51:42.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:42.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:42.688
  STEP: Creating LimitRange "e2e-limitrange-drgkb" in namespace "limitrange-2812" @ 09/27/23 14:51:42.692
  STEP: Creating another limitRange in another namespace @ 09/27/23 14:51:42.724
  Sep 27 14:51:43.208: INFO: Namespace "e2e-limitrange-drgkb-273" created
  Sep 27 14:51:43.208: INFO: Creating LimitRange "e2e-limitrange-drgkb" in namespace "e2e-limitrange-drgkb-273"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-drgkb" @ 09/27/23 14:51:43.229
  Sep 27 14:51:43.235: INFO: Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-drgkb" in "limitrange-2812" namespace @ 09/27/23 14:51:43.235
  Sep 27 14:51:43.261: INFO: LimitRange "e2e-limitrange-drgkb" has been patched
  STEP: Delete LimitRange "e2e-limitrange-drgkb" by Collection with labelSelector: "e2e-limitrange-drgkb=patched" @ 09/27/23 14:51:43.261
  STEP: Confirm that the limitRange "e2e-limitrange-drgkb" has been deleted @ 09/27/23 14:51:43.292
  Sep 27 14:51:43.292: INFO: Requesting list of LimitRange to confirm quantity
  Sep 27 14:51:43.301: INFO: Found 0 LimitRange with label "e2e-limitrange-drgkb=patched"
  Sep 27 14:51:43.301: INFO: LimitRange "e2e-limitrange-drgkb" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-drgkb" @ 09/27/23 14:51:43.302
  Sep 27 14:51:43.308: INFO: Found 1 limitRange
  Sep 27 14:51:43.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2812" for this suite. @ 09/27/23 14:51:43.315
  STEP: Destroying namespace "e2e-limitrange-drgkb-273" for this suite. @ 09/27/23 14:51:43.339
• [0.946 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance]
test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 09/27/23 14:51:43.366
  Sep 27 14:51:43.366: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 14:51:43.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:44.455
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:44.461
  STEP: Setting up server cert @ 09/27/23 14:51:45.229
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 14:51:45.56
  STEP: Deploying the webhook pod @ 09/27/23 14:51:45.585
  STEP: Wait for the deployment to be ready @ 09/27/23 14:51:45.622
  Sep 27 14:51:45.641: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 14:51:47.664: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 14, 51, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 51, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 14, 51, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 14, 51, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 14:51:49.677
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 14:51:49.878
  Sep 27 14:51:50.879: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 09/27/23 14:51:50.89
  Sep 27 14:51:50.955: INFO: Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource definition that should be denied by the webhook @ 09/27/23 14:51:51.083
  Sep 27 14:51:51.083: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 14:51:51.103: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8387" for this suite. @ 09/27/23 14:51:51.313
  STEP: Destroying namespace "webhook-markers-816" for this suite. @ 09/27/23 14:51:51.344
• [8.002 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance]
test/e2e/common/node/secrets.go:140
  STEP: Creating a kubernetes client @ 09/27/23 14:51:51.371
  Sep 27 14:51:51.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:51:51.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:51.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:51.846
  STEP: Creating projection with secret that has name secret-emptykey-test-d1ed9bb0-2d7f-4a00-9e45-9ec78fbf2ed8 @ 09/27/23 14:51:52.29
  Sep 27 14:51:52.297: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8448" for this suite. @ 09/27/23 14:51:52.308
• [0.982 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 09/27/23 14:51:52.354
  Sep 27 14:51:52.355: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:51:52.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:52.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:52.542
  STEP: Creating secret with name secret-test-ed0d5cc6-491e-44fd-bd03-d72acd9ef3c3 @ 09/27/23 14:51:52.556
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:51:52.579
  STEP: Saw pod success @ 09/27/23 14:51:56.634
  Sep 27 14:51:56.639: INFO: Trying to get logs from node conformance-1 pod pod-secrets-431c597b-8174-49d8-b5f8-d6303e0c4a18 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:51:56.68
  Sep 27 14:51:56.736: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-751" for this suite. @ 09/27/23 14:51:56.743
• [4.413 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:213
  STEP: Creating a kubernetes client @ 09/27/23 14:51:56.768
  Sep 27 14:51:56.768: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 14:51:56.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:51:57.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:51:57.449
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 14:51:57.459
  STEP: create the pod with lifecycle hook @ 09/27/23 14:52:01.506
  STEP: delete the pod with lifecycle hook @ 09/27/23 14:52:03.542
  STEP: check prestop hook @ 09/27/23 14:52:07.636
  Sep 27 14:52:07.646: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-1344" for this suite. @ 09/27/23 14:52:07.652
• [10.914 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:47
  STEP: Creating a kubernetes client @ 09/27/23 14:52:07.682
  Sep 27 14:52:07.682: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:52:07.683
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:08.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:08.318
  STEP: Creating configMap with name projected-configmap-test-volume-b230d594-c628-4718-8e75-73983675362d @ 09/27/23 14:52:08.322
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:52:08.338
  STEP: Saw pod success @ 09/27/23 14:52:12.373
  Sep 27 14:52:12.380: INFO: Trying to get logs from node conformance-2 pod pod-projected-configmaps-fc7f2158-5e51-414f-abe7-ed78e28bf308 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:52:12.402
  Sep 27 14:52:12.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2473" for this suite. @ 09/27/23 14:52:12.471
• [4.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance]
test/e2e/apps/job.go:370
  STEP: Creating a kubernetes client @ 09/27/23 14:52:12.494
  Sep 27 14:52:12.494: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 14:52:12.495
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:13.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:13.398
  STEP: Creating Indexed job @ 09/27/23 14:52:13.401
  STEP: Ensuring job reaches completions @ 09/27/23 14:52:13.438
  STEP: Ensuring pods with index for job exist @ 09/27/23 14:52:23.443
  Sep 27 14:52:23.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5742" for this suite. @ 09/27/23 14:52:23.45
• [10.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:47
  STEP: Creating a kubernetes client @ 09/27/23 14:52:23.467
  Sep 27 14:52:23.467: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:52:23.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:24.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:24.447
  STEP: Creating configMap with name configmap-test-volume-8e4286b6-bd39-47d6-92ba-6fc8eb524960 @ 09/27/23 14:52:24.45
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:52:24.487
  STEP: Saw pod success @ 09/27/23 14:52:28.663
  Sep 27 14:52:28.668: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-755a5ac6-cc42-4925-b1e6-c82af1ebc4e4 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:52:28.678
  Sep 27 14:52:28.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9978" for this suite. @ 09/27/23 14:52:28.846
• [5.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance]
test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 09/27/23 14:52:28.892
  Sep 27 14:52:28.892: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:52:28.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:29.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:29.221
  Sep 27 14:52:29.252: INFO: Pod name cleanup-pod: Found 0 pods out of 1
  Sep 27 14:52:34.260: INFO: Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 14:52:34.26
  Sep 27 14:52:34.260: INFO: Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 09/27/23 14:52:34.283
  Sep 27 14:52:34.297: INFO: Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9730",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "da0548d7-5baa-4171-8d00-50131e4cd5ed",
      ResourceVersion: (string) (len=4) "8546",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423154,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423154,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:52:34.304: INFO: New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  Sep 27 14:52:34.308: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9730" for this suite. @ 09/27/23 14:52:34.313
• [5.467 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance]
test/e2e/auth/service_accounts.go:808
  STEP: Creating a kubernetes client @ 09/27/23 14:52:34.363
  Sep 27 14:52:34.363: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 14:52:34.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:34.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:34.633
  STEP: Creating ServiceAccount "e2e-sa-fkcbd"  @ 09/27/23 14:52:34.635
  Sep 27 14:52:34.653: INFO: AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-fkcbd"  @ 09/27/23 14:52:34.653
  Sep 27 14:52:34.671: INFO: AutomountServiceAccountToken: true
  Sep 27 14:52:34.671: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7521" for this suite. @ 09/27/23 14:52:34.675
• [0.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance]
test/e2e/apimachinery/resource_quota.go:76
  STEP: Creating a kubernetes client @ 09/27/23 14:52:34.691
  Sep 27 14:52:34.691: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:52:34.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:35.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:35.343
  STEP: Counting existing ResourceQuota @ 09/27/23 14:52:35.344
  STEP: Creating a ResourceQuota @ 09/27/23 14:52:40.35
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:52:40.365
  Sep 27 14:52:42.369: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5862" for this suite. @ 09/27/23 14:52:42.372
• [7.709 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods  [Conformance]
test/e2e/kubectl/kubectl.go:1342
  STEP: Creating a kubernetes client @ 09/27/23 14:52:42.4
  Sep 27 14:52:42.400: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:52:42.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:42.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:42.551
  Sep 27 14:52:42.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 create -f -'
  Sep 27 14:52:42.910: INFO: stderr: ""
  Sep 27 14:52:42.910: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  Sep 27 14:52:42.911: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 create -f -'
  Sep 27 14:52:43.189: INFO: stderr: ""
  Sep 27 14:52:43.189: INFO: stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 14:52:43.189
  Sep 27 14:52:44.196: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:52:44.196: INFO: Found 1 / 1
  Sep 27 14:52:44.197: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 27 14:52:44.201: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:52:44.201: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 14:52:44.201: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 describe pod agnhost-primary-l5q7m'
  Sep 27 14:52:44.300: INFO: stderr: ""
  Sep 27 14:52:44.300: INFO: stdout: "Name:             agnhost-primary-l5q7m\nNamespace:        kubectl-7166\nPriority:         0\nService Account:  default\nNode:             conformance-1/10.84.220.167\nStart Time:       Wed, 27 Sep 2023 14:52:42 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: cccdbe9fdac0799699af7bac210d143832640285fe93552061fc041090e78553\n                  cni.projectcalico.org/podIP: 10.1.20.98/32\n                  cni.projectcalico.org/podIPs: 10.1.20.98/32\nStatus:           Running\nIP:               10.1.20.98\nIPs:\n  IP:           10.1.20.98\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://b83b655138706fc9ab739a713ef70e7171fa040447424e3df183be8534c3494c\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.45\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 27 Sep 2023 14:52:43 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5v9bc (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  kube-api-access-5v9bc:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-7166/agnhost-primary-l5q7m to conformance-1\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.45\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  Sep 27 14:52:44.301: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 describe rc agnhost-primary'
  Sep 27 14:52:44.384: INFO: stderr: ""
  Sep 27 14:52:44.384: INFO: stdout: "Name:         agnhost-primary\nNamespace:    kubectl-7166\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:        registry.k8s.io/e2e-test-images/agnhost:2.45\n    Port:         6379/TCP\n    Host Port:    0/TCP\n    Environment:  <none>\n    Mounts:       <none>\n  Volumes:        <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-l5q7m\n"
  Sep 27 14:52:44.384: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 describe service agnhost-primary'
  Sep 27 14:52:44.487: INFO: stderr: ""
  Sep 27 14:52:44.487: INFO: stdout: "Name:              agnhost-primary\nNamespace:         kubectl-7166\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.152.183.103\nIPs:               10.152.183.103\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.1.20.98:6379\nSession Affinity:  None\nEvents:            <none>\n"
  Sep 27 14:52:44.491: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 describe node conformance-2'
  Sep 27 14:52:44.599: INFO: stderr: ""
  Sep 27 14:52:44.600: INFO: stdout: "Name:               conformance-2\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=conformance-2\n                    kubernetes.io/os=linux\n                    microk8s.io/cluster=true\n                    node.kubernetes.io/microk8s-controlplane=microk8s-controlplane\nAnnotations:        node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.84.220.103/24\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.1.212.0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 27 Sep 2023 14:10:39 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  conformance-2\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 27 Sep 2023 14:52:39 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 27 Sep 2023 14:11:20 +0000   Wed, 27 Sep 2023 14:11:20 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Wed, 27 Sep 2023 14:50:23 +0000   Wed, 27 Sep 2023 14:10:39 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 27 Sep 2023 14:50:23 +0000   Wed, 27 Sep 2023 14:10:39 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 27 Sep 2023 14:50:23 +0000   Wed, 27 Sep 2023 14:10:39 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 27 Sep 2023 14:50:23 +0000   Wed, 27 Sep 2023 14:11:04 +0000   KubeletReady                 kubelet is posting ready status. AppArmor enabled\nAddresses:\n  InternalIP:  10.84.220.103\n  Hostname:    conformance-2\nCapacity:\n  cpu:                2\n  ephemeral-storage:  20134592Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8122760Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  19086016Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8020360Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 6002a61c11704fe9b55e45782dafdfe0\n  System UUID:                6002a61c11704fe9b55e45782dafdfe0\n  Boot ID:                    7d7f0da8-8a3b-4f8f-9fb3-eaaa8188ab1b\n  Kernel Version:             5.15.0-84-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.15\n  Kubelet Version:            v1.28.1\n  Kube-Proxy Version:         v1.28.1\nNon-terminated Pods:          (4 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-m6278                                          250m (12%)    0 (0%)      0 (0%)           0 (0%)         42m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv    0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m55s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m57s\n  sonobuoy                    sonobuoy-e2e-job-699828072b064365                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         7m56s\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                250m (12%)  0 (0%)\n  memory             0 (0%)      0 (0%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  Sep 27 14:52:44.600: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7166 describe namespace kubectl-7166'
  Sep 27 14:52:44.686: INFO: stderr: ""
  Sep 27 14:52:44.686: INFO: stdout: "Name:         kubectl-7166\nLabels:       e2e-framework=kubectl\n              e2e-run=72d930fb-d4e2-44f2-8844-9586efe08fd1\n              kubernetes.io/metadata.name=kubectl-7166\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  Sep 27 14:52:44.686: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7166" for this suite. @ 09/27/23 14:52:44.69
• [2.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:269
  STEP: Creating a kubernetes client @ 09/27/23 14:52:44.708
  Sep 27 14:52:44.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 14:52:44.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:45.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:45.358
  Sep 27 14:52:45.360: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 14:52:48.672: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4310" for this suite. @ 09/27/23 14:52:48.677
• [3.988 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance]
test/e2e/apps/job.go:513
  STEP: Creating a kubernetes client @ 09/27/23 14:52:48.697
  Sep 27 14:52:48.697: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 14:52:48.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:49.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:49.319
  STEP: Creating a job @ 09/27/23 14:52:49.322
  STEP: Ensuring active pods == parallelism @ 09/27/23 14:52:49.347
  STEP: Orphaning one of the Job's Pods @ 09/27/23 14:52:53.353
  Sep 27 14:52:53.885: INFO: Successfully updated pod "adopt-release-srpjm"
  STEP: Checking that the Job readopts the Pod @ 09/27/23 14:52:53.885
  STEP: Removing the labels from the Job's Pod @ 09/27/23 14:52:55.898
  Sep 27 14:52:56.431: INFO: Successfully updated pod "adopt-release-srpjm"
  STEP: Checking that the Job releases the Pod @ 09/27/23 14:52:56.431
  Sep 27 14:52:58.439: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2161" for this suite. @ 09/27/23 14:52:58.443
• [9.769 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:76
  STEP: Creating a kubernetes client @ 09/27/23 14:52:58.468
  Sep 27 14:52:58.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 14:52:58.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:52:59.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:52:59.14
  STEP: Creating a pod to test substitution in container's command @ 09/27/23 14:52:59.143
  STEP: Saw pod success @ 09/27/23 14:53:05.207
  Sep 27 14:53:05.209: INFO: Trying to get logs from node conformance-2 pod var-expansion-8866c91e-0566-4099-ad63-052336617c5c container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 14:53:05.216
  Sep 27 14:53:05.263: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-584" for this suite. @ 09/27/23 14:53:05.266
• [6.812 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance]
test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 09/27/23 14:53:05.281
  Sep 27 14:53:05.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subjectreview @ 09/27/23 14:53:05.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:06.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:06.446
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-4407" @ 09/27/23 14:53:06.448
  Sep 27 14:53:06.470: INFO: saUsername: "system:serviceaccount:subjectreview-4407:e2e"
  Sep 27 14:53:06.471: INFO: saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-4407"}
  Sep 27 14:53:06.471: INFO: saUID: "954b4fcb-aec0-4a65-af86-aec69feca755"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-4407:e2e" @ 09/27/23 14:53:06.471
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-4407:e2e" @ 09/27/23 14:53:06.471
  Sep 27 14:53:06.473: INFO: sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-4407:e2e" api 'list' configmaps in "subjectreview-4407" namespace @ 09/27/23 14:53:06.473
  Sep 27 14:53:06.476: INFO: SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-4407:e2e" @ 09/27/23 14:53:06.476
  Sep 27 14:53:06.477: INFO: lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:true, Denied:false, Reason:"", EvaluationError:""}
  Sep 27 14:53:06.477: INFO: LocalSubjectAccessReview has been verified
  Sep 27 14:53:06.477: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-4407" for this suite. @ 09/27/23 14:53:06.481
• [1.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance]
test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 09/27/23 14:53:06.502
  Sep 27 14:53:06.502: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subpath @ 09/27/23 14:53:06.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:07.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:07.445
  STEP: Setting up data @ 09/27/23 14:53:07.447
  STEP: Creating pod pod-subpath-test-configmap-wqht @ 09/27/23 14:53:07.504
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 14:53:07.504
  STEP: Saw pod success @ 09/27/23 14:53:31.61
  Sep 27 14:53:31.626: INFO: Trying to get logs from node conformance-2 pod pod-subpath-test-configmap-wqht container test-container-subpath-configmap-wqht: <nil>
  STEP: delete the pod @ 09/27/23 14:53:31.656
  STEP: Deleting pod pod-subpath-test-configmap-wqht @ 09/27/23 14:53:31.724
  Sep 27 14:53:31.724: INFO: Deleting pod "pod-subpath-test-configmap-wqht" in namespace "subpath-2644"
  Sep 27 14:53:31.730: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2644" for this suite. @ 09/27/23 14:53:31.739
• [25.277 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:236
  STEP: Creating a kubernetes client @ 09/27/23 14:53:31.781
  Sep 27 14:53:31.781: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:53:31.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:31.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:31.969
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:53:31.974
  STEP: Saw pod success @ 09/27/23 14:53:36.046
  Sep 27 14:53:36.054: INFO: Trying to get logs from node conformance-2 pod downwardapi-volume-c196362a-47be-4653-a27b-dd552eff7381 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:53:36.07
  Sep 27 14:53:36.164: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1113" for this suite. @ 09/27/23 14:53:36.175
• [4.430 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:423
  STEP: Creating a kubernetes client @ 09/27/23 14:53:36.211
  Sep 27 14:53:36.211: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:53:36.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:37.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:37.451
  STEP: Creating configMap with name configmap-test-volume-3cbc672e-ff62-4ca3-80cf-9e773acf097b @ 09/27/23 14:53:37.455
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:53:37.487
  STEP: Saw pod success @ 09/27/23 14:53:41.544
  Sep 27 14:53:41.550: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-0e6638f7-d2b8-4a3b-9625-9b6183bf60ad container configmap-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:53:41.56
  Sep 27 14:53:41.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9056" for this suite. @ 09/27/23 14:53:41.608
• [5.423 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance]
test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 09/27/23 14:53:41.634
  Sep 27 14:53:41.634: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:53:41.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:42.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:42.448
  Sep 27 14:53:42.451: INFO: Creating deployment "webserver-deployment"
  Sep 27 14:53:42.469: INFO: Waiting for observed generation 1
  Sep 27 14:53:44.480: INFO: Waiting for all required pods to come up
  Sep 27 14:53:44.494: INFO: Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 09/27/23 14:53:44.494
  Sep 27 14:53:48.582: INFO: Waiting for deployment "webserver-deployment" to complete
  Sep 27 14:53:48.588: INFO: Updating deployment "webserver-deployment" with a non-existent image
  Sep 27 14:53:48.606: INFO: Updating deployment webserver-deployment
  Sep 27 14:53:48.606: INFO: Waiting for observed generation 2
  Sep 27 14:53:50.638: INFO: Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  Sep 27 14:53:50.653: INFO: Waiting for the first rollout's replicaset to have .spec.replicas = 8
  Sep 27 14:53:50.684: INFO: Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:53:50.760: INFO: Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  Sep 27 14:53:50.761: INFO: Waiting for the second rollout's replicaset to have .spec.replicas = 5
  Sep 27 14:53:50.778: INFO: Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:53:50.810: INFO: Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  Sep 27 14:53:50.810: INFO: Scaling up the deployment "webserver-deployment" from 10 to 30
  Sep 27 14:53:50.856: INFO: Updating deployment webserver-deployment
  Sep 27 14:53:50.857: INFO: Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  Sep 27 14:53:50.875: INFO: Verifying that first rollout's replicaset has .spec.replicas = 20
  Sep 27 14:53:52.942: INFO: Verifying that second rollout's replicaset has .spec.replicas = 13
  Sep 27 14:53:52.999: INFO: Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "77c6b985-40ad-452e-86f9-88c88aaa0452",
      ResourceVersion: (string) (len=4) "9367",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=59) "ReplicaSet \"webserver-deployment-9b4f5bf69\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:53:53.040: INFO: New ReplicaSet "webserver-deployment-9b4f5bf69" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
      ResourceVersion: (string) (len=4) "9363",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "77c6b985-40ad-452e-86f9-88c88aaa0452",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 37 63 36 62 39  38 35 2d 34 30 61 64 2d  |\"77c6b985-40ad-|
              00000120  34 35 32 65 2d 38 36 66  39 2d 38 38 63 38 38 61  |452e-86f9-88c88a|
              00000130  61 61 30 34 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aa0452\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:53:53.041: INFO: All old ReplicaSets of Deployment "webserver-deployment":
  Sep 27 14:53:53.042: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
      ResourceVersion: (string) (len=4) "9346",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "77c6b985-40ad-452e-86f9-88c88aaa0452",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 37 63 36 62 39  38 35 2d 34 30 61 64 2d  |\"77c6b985-40ad-|
              00000120  34 35 32 65 2d 38 36 66  39 2d 38 38 63 38 38 61  |452e-86f9-88c88a|
              00000130  61 61 30 34 35 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |aa0452\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:53:53.111: INFO: Pod "webserver-deployment-557759b7c7-vj9j6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vj9j6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b189deae-a636-400a-9e25-6c4daadfd646",
      ResourceVersion: (string) (len=4) "9122",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.102/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.102/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9d5a1558756d267b078d5724c9a12d39f07b384f8ff0105ed48fcf38ec41476e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  31 30 32 5c 22 7d 22 3a  |10.1.20.102\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qbmkd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qbmkd",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.20.102",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.20.102"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423224,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1c0983f0a2567cbcc6135512d3083d1463f380ed6be213bac46908927efa5417",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.135: INFO: Pod "webserver-deployment-557759b7c7-tpl74" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-tpl74",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "739ff3d3-fef2-4e1a-be46-3c98e3451e60",
      ResourceVersion: (string) (len=4) "9126",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.103/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.103/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3e20d08cc94de6f2474bab431ee8c99dd5adae0afb6748ad53a505bd527e6614"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  31 30 33 5c 22 7d 22 3a  |10.1.20.103\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7fwb8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7fwb8",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.20.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.20.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423224,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://614e1d93f9ffcb1d38cf97bb8d05b603e460ae56a778f780af61023ec70ac6fb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.170: INFO: Pod "webserver-deployment-557759b7c7-c9km7" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-c9km7",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18823eb7-2e98-441d-84b0-da68ee425ee3",
      ResourceVersion: (string) (len=4) "9145",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.23/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "caffd5b2191ae91e0cce53d436c6ce5e7d1ce63196b480a1bfcd055fd96a7056",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.23/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 32 33 5c 22 7d 22 3a  |10.1.212.23\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cqdk2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cqdk2",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://4b498b892c6502d90ce1b4ece78d48dcaaa445518888e8caed21b4d08bf6060c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.186: INFO: Pod "webserver-deployment-557759b7c7-sn42s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-sn42s",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e05ca7ab-a431-4030-bffa-37ee890ac402",
      ResourceVersion: (string) (len=4) "9147",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "13625dd7f8ca08fff8e4dc51891d1c97f5e2fd79d4c86681191841cd12908370",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.24/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.24/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 32 34 5c 22 7d 22 3a  |10.1.212.24\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qw47r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qw47r",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.24",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.24"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e4cd7234c61e387283f6af8b3f21c2c10aad7d22c792da95dce906324a2ed844",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.216: INFO: Pod "webserver-deployment-557759b7c7-2mqx4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2mqx4",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a13cd600-ce1c-4de0-b2e5-4a3eb3c04d97",
      ResourceVersion: (string) (len=4) "9148",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d624af674cac0d3d6802edd72b17a6097be71f0ab4c11a340fbfa12ed57511aa",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.22/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.22/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 32 32 5c 22 7d 22 3a  |10.1.212.22\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bx2rh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bx2rh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.22",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.22"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5913bd918a1dd3979ce9faf42d5ea1080ed9d98a1a5edbdac85db81e4ccd0fc8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.247: INFO: Pod "webserver-deployment-557759b7c7-bdrxr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-bdrxr",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e6812e59-2126-4349-ad07-03fa725aaf6c",
      ResourceVersion: (string) (len=4) "9165",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7e5b14f8921b5650eb085c39629fc7ac56d4d243b337c1bb414b413088958319",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.105/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.105/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423224,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  31 30 35 5c 22 7d 22 3a  |10.1.20.105\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-555w9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-555w9",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423226,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.20.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.20.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423225,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9912937e0bd090c47bc998b690de848b90035142bab890ec0ad0658b12ba8d39",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.262: INFO: Pod "webserver-deployment-557759b7c7-t57bj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-t57bj",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3d2fd32-f22e-4f20-8429-77307750299f",
      ResourceVersion: (string) (len=4) "9178",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f8c468ffa3c8226ed58bfc8382d4801eed5caa76b9014722c0179657ea0a0ed4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.26/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.26/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 32 36 5c 22 7d 22 3a  |10.1.212.26\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7n58",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7n58",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.26",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.26"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423226,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6b3ecc8fd77fae0bffee5783bd7e7e8e9b9f7556ebb4f8fa6e3e604a930f0d9d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.268: INFO: Pod "webserver-deployment-557759b7c7-84h97" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-84h97",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7cbd0675-a48f-4565-97be-4162e976d6cf",
      ResourceVersion: (string) (len=4) "9180",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423222,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.25/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8b9a7e2c0ae16edcace5867bf835518ec78d8b1bf6752105ad386c2bda933715",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.25/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423225,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 32 35 5c 22 7d 22 3a  |10.1.212.25\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pvjpc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pvjpc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423223,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423227,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423222,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.25",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.25"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423223,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423226,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://87c3ec6caae68c45dd2a984461f6c777d0c02299fb03266444b14de42f9cde37",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.273: INFO: Pod "webserver-deployment-9b4f5bf69-n54q6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-n54q6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f2e9d785-e0ec-4b54-adfb-202e4a84e0ec",
      ResourceVersion: (string) (len=4) "9243",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "929269aa1b1e03a53ab5bf5f7efcbe51fb4f0027cdb8540ee190e5aa5a83c38c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.107/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.107/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5zw9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5zw9g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.279: INFO: Pod "webserver-deployment-9b4f5bf69-lqcv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-lqcv6",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c12cc913-9ead-439c-8b89-b7670690d82d",
      ResourceVersion: (string) (len=4) "9249",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "3fe2624e9a3788643f2135cd22ff94ad65a3894acffa9a727b705488567e5df9",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rq8fh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rq8fh",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.284: INFO: Pod "webserver-deployment-9b4f5bf69-nh4ld" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-nh4ld",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c462085c-fd5a-40ae-8989-403d7cb3f86f",
      ResourceVersion: (string) (len=4) "9257",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.28/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "28d19b7608776c30a2a534c2136bc1b3ed20ee4dc767d8370e0bdded9741b824",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.28/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dh7cm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dh7cm",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.326: INFO: Pod "webserver-deployment-9b4f5bf69-z9jrh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-z9jrh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a5e1fb52-a905-4786-b17a-94266a7951e2",
      ResourceVersion: (string) (len=4) "9262",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.108/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "54c0e4df3dca2788bca64ed00819d43498ec32c6794be84a167ad496437fcb64",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.108/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-brcnc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-brcnc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423228,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423228,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.442: INFO: Pod "webserver-deployment-9b4f5bf69-mwvlc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-mwvlc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c3b50a9-8518-44f6-8559-0feff5946eaf",
      ResourceVersion: (string) (len=4) "9276",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "99e24ed871d442cbd647297dc2212002fb6436cce75152eca7b9cd222e991993",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.109/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.109/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fnwbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fnwbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423229,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423229,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.482: INFO: Pod "webserver-deployment-9b4f5bf69-ms482" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-ms482",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7a5f33b8-c9c1-4ea7-b279-faeae65fa933",
      ResourceVersion: (string) (len=4) "9302",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6f47q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6f47q",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.505: INFO: Pod "webserver-deployment-557759b7c7-j6hs5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-j6hs5",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa34448d-c825-4a17-bcd8-8d65dada59b0",
      ResourceVersion: (string) (len=4) "9306",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7r4gc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7r4gc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.555: INFO: Pod "webserver-deployment-557759b7c7-2f76f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-2f76f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b2368e7-b703-4765-965c-945a2b2dcce2",
      ResourceVersion: (string) (len=4) "9308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d2hgn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d2hgn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.559: INFO: Pod "webserver-deployment-557759b7c7-6hgnh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-6hgnh",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a4502cb7-c5ba-484b-98b1-50ad9645fd6a",
      ResourceVersion: (string) (len=4) "9315",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g6xsr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g6xsr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.568: INFO: Pod "webserver-deployment-557759b7c7-xccqp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-xccqp",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7432b3e4-9a2e-4406-8dbe-885d043f2340",
      ResourceVersion: (string) (len=4) "9325",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7w4kl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7w4kl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.584: INFO: Pod "webserver-deployment-9b4f5bf69-vtkr7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-vtkr7",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "020049b9-a46a-4ac3-9a0d-7700fc85222c",
      ResourceVersion: (string) (len=4) "9328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zkj4g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zkj4g",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.588: INFO: Pod "webserver-deployment-557759b7c7-cwb7f" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-cwb7f",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40e2a25d-9a66-4212-831c-7c4852a1a5c8",
      ResourceVersion: (string) (len=4) "9329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vrngc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vrngc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.595: INFO: Pod "webserver-deployment-557759b7c7-9qwwz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-9qwwz",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "63cdb2a1-2cd1-4819-9a9a-a8f456445369",
      ResourceVersion: (string) (len=4) "9330",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9nxxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9nxxc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.602: INFO: Pod "webserver-deployment-557759b7c7-b7fp6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-b7fp6",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6051e710-abfd-4dd5-b62d-75f7d23f6fa4",
      ResourceVersion: (string) (len=4) "9333",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pjxxl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pjxxl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.605: INFO: Pod "webserver-deployment-9b4f5bf69-tqjh8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-tqjh8",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97fd5f84-1d1d-43b1-a157-aa6de66b3cf1",
      ResourceVersion: (string) (len=4) "9335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-85h8s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-85h8s",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.615: INFO: Pod "webserver-deployment-9b4f5bf69-v4kd2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-v4kd2",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "590bbb86-6239-4acb-9789-b7bbaf4ce13b",
      ResourceVersion: (string) (len=4) "9337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rq576",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rq576",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.617: INFO: Pod "webserver-deployment-557759b7c7-pl92v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-pl92v",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef425dcf-f499-4bea-912b-01685dd93ea6",
      ResourceVersion: (string) (len=4) "9339",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8g842",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8g842",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.657: INFO: Pod "webserver-deployment-557759b7c7-hvd89" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-hvd89",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c1c1192e-4cde-4633-90d4-4fbab5fda041",
      ResourceVersion: (string) (len=4) "9342",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrnvb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrnvb",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.665: INFO: Pod "webserver-deployment-9b4f5bf69-zrwfc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-zrwfc",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "58fa5400-5116-45ff-9ba1-ab6c9ed76e4b",
      ResourceVersion: (string) (len=4) "9347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npxqx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npxqx",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.730: INFO: Pod "webserver-deployment-9b4f5bf69-8jksf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-8jksf",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7868c62c-6a7f-4c97-90ae-c9b060b395ed",
      ResourceVersion: (string) (len=4) "9349",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z95bc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z95bc",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.734: INFO: Pod "webserver-deployment-557759b7c7-dmj4w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-dmj4w",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f971cda-a595-4a1e-860d-6af6fd62733c",
      ResourceVersion: (string) (len=4) "9352",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f9tmr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f9tmr",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.740: INFO: Pod "webserver-deployment-557759b7c7-r87kn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-r87kn",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f18c77e5-5e30-4477-9a75-758bbf0135bb",
      ResourceVersion: (string) (len=4) "9362",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tvt9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tvt9v",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.742: INFO: Pod "webserver-deployment-9b4f5bf69-bqhp5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-bqhp5",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0352bf66-690d-4d89-a254-dc0a03c350f4",
      ResourceVersion: (string) (len=4) "9366",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lvvc6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lvvc6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.773: INFO: Pod "webserver-deployment-9b4f5bf69-hm4dh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "webserver-deployment-9b4f5bf69-hm4dh",
      GenerateName: (string) (len=31) "webserver-deployment-9b4f5bf69-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "877ab6e1-77cc-478f-b55e-281f412d1788",
      ResourceVersion: (string) (len=4) "9368",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "9b4f5bf69"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "webserver-deployment-9b4f5bf69",
          UID: (types.UID) (len=36) "b9028561-4ac9-4d53-afc0-b9f9827ef8be",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 39  30 32 38 35 36 31 2d 34  |d\":\"b9028561-4|
              00000090  61 63 39 2d 34 64 35 33  2d 61 66 63 30 2d 62 39  |ac9-4d53-afc0-b9|
              000000a0  66 39 38 32 37 65 66 38  62 65 5c 22 7d 22 3a 7b  |f9827ef8be\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjql6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjql6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.855: INFO: Pod "webserver-deployment-557759b7c7-vgmsk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-557759b7c7-vgmsk",
      GenerateName: (string) (len=32) "webserver-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-9205",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e1e35bbc-94ca-4989-9ac7-afef3ff6b175",
      ResourceVersion: (string) (len=4) "9369",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423230,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b5fd8769f6aaabcd86ea6063fdfa5a31feba7d686a37c9c79eb193b1de515b5c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.110/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.110/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-557759b7c7",
          UID: (types.UID) (len=36) "c0aad600-00b8-4c74-8f59-84892a41aaae",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423230,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 30  61 61 64 36 30 30 2d 30  |d\":\"c0aad600-0|
              00000090  30 62 38 2d 34 63 37 34  2d 38 66 35 39 2d 38 34  |0b8-4c74-8f59-84|
              000000a0  38 39 32 61 34 31 61 61  61 65 5c 22 7d 22 3a 7b  |892a41aaae\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k8p7b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k8p7b",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423231,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423231,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:53:53.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9205" for this suite. @ 09/27/23 14:53:53.972
• [12.447 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc  [Conformance]
test/e2e/kubectl/kubectl.go:1481
  STEP: Creating a kubernetes client @ 09/27/23 14:53:54.102
  Sep 27 14:53:54.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:53:54.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:53:54.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:53:54.454
  STEP: creating Agnhost RC @ 09/27/23 14:53:54.465
  Sep 27 14:53:54.465: INFO: namespace kubectl-366
  Sep 27 14:53:54.465: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-366 create -f -'
  Sep 27 14:53:55.681: INFO: stderr: ""
  Sep 27 14:53:55.681: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 14:53:55.682
  Sep 27 14:53:56.706: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:56.706: INFO: Found 0 / 1
  Sep 27 14:53:57.788: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:57.789: INFO: Found 0 / 1
  Sep 27 14:53:58.688: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:58.688: INFO: Found 1 / 1
  Sep 27 14:53:58.688: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  Sep 27 14:53:58.696: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 14:53:58.696: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 14:53:58.696: INFO: wait on agnhost-primary startup in kubectl-366 
  Sep 27 14:53:58.696: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-366 logs agnhost-primary-9d5hp agnhost-primary'
  Sep 27 14:53:58.816: INFO: stderr: ""
  Sep 27 14:53:58.816: INFO: stdout: "Paused\n"
  STEP: exposing RC @ 09/27/23 14:53:58.816
  Sep 27 14:53:58.816: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-366 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  Sep 27 14:53:58.993: INFO: stderr: ""
  Sep 27 14:53:58.993: INFO: stdout: "service/rm2 exposed\n"
  Sep 27 14:53:58.998: INFO: Service rm2 in namespace kubectl-366 found.
  STEP: exposing service @ 09/27/23 14:54:01.091
  Sep 27 14:54:01.091: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-366 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  Sep 27 14:54:02.102: INFO: stderr: ""
  Sep 27 14:54:02.102: INFO: stdout: "service/rm3 exposed\n"
  Sep 27 14:54:02.119: INFO: Service rm3 in namespace kubectl-366 found.
  Sep 27 14:54:04.133: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-366" for this suite. @ 09/27/23 14:54:04.144
• [10.094 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:131
  STEP: Creating a kubernetes client @ 09/27/23 14:54:04.196
  Sep 27 14:54:04.196: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:54:04.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:04.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:04.391
  STEP: Creating the pod @ 09/27/23 14:54:04.397
  Sep 27 14:54:09.025: INFO: Successfully updated pod "labelsupdate6ca8c646-bedc-4681-bfa2-fdf6c0db0e6d"
  Sep 27 14:54:13.062: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5681" for this suite. @ 09/27/23 14:54:13.065
• [8.892 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 09/27/23 14:54:13.089
  Sep 27 14:54:13.089: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:54:13.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:13.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:13.408
  STEP: Creating secret with name secret-test-25666536-481b-48d0-a54b-ad4d2f07a3ed @ 09/27/23 14:54:13.41
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:54:13.428
  STEP: Saw pod success @ 09/27/23 14:54:17.459
  Sep 27 14:54:17.462: INFO: Trying to get logs from node conformance-1 pod pod-secrets-30e67161-cf33-43ed-825b-172a3359521c container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:54:17.467
  Sep 27 14:54:17.522: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3003" for this suite. @ 09/27/23 14:54:17.525
• [4.450 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/configmap_volume.go:504
  STEP: Creating a kubernetes client @ 09/27/23 14:54:17.539
  Sep 27 14:54:17.539: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 14:54:17.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:18.42
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:18.426
  Sep 27 14:54:18.560: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5949" for this suite. @ 09/27/23 14:54:18.565
• [1.050 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 09/27/23 14:54:18.591
  Sep 27 14:54:18.591: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:54:18.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:19.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:19.445
  STEP: Creating projection with secret that has name projected-secret-test-be5a0283-39c2-4e6c-a561-58d824203f43 @ 09/27/23 14:54:19.447
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:54:19.475
  STEP: Saw pod success @ 09/27/23 14:54:23.505
  Sep 27 14:54:23.508: INFO: Trying to get logs from node conformance-1 pod pod-projected-secrets-7f78b245-e52c-4320-bcfa-949acc78cf99 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:54:23.513
  Sep 27 14:54:23.550: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8904" for this suite. @ 09/27/23 14:54:23.554
• [4.983 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:208
  STEP: Creating a kubernetes client @ 09/27/23 14:54:23.574
  Sep 27 14:54:23.574: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:54:23.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:24.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:24.266
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:54:24.269
  STEP: Saw pod success @ 09/27/23 14:54:28.351
  Sep 27 14:54:28.355: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-f00107fa-46d7-4973-88af-83eda9e582e9 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:54:28.362
  Sep 27 14:54:28.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5496" for this suite. @ 09/27/23 14:54:28.47
• [4.913 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 09/27/23 14:54:28.487
  Sep 27 14:54:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 14:54:28.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:28.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:28.646
  STEP: Creating secret with name secret-test-map-8bd1abac-703f-4bbb-926c-eae46f2017e4 @ 09/27/23 14:54:28.648
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:54:28.665
  STEP: Saw pod success @ 09/27/23 14:54:32.694
  Sep 27 14:54:32.698: INFO: Trying to get logs from node conformance-1 pod pod-secrets-5a37cab6-855d-4957-a9f0-5e9923bc445a container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:54:32.706
  Sep 27 14:54:32.749: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3183" for this suite. @ 09/27/23 14:54:32.755
• [4.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance]
test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 09/27/23 14:54:32.776
  Sep 27 14:54:32.776: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 14:54:32.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:32.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:32.887
  STEP: Create a pod @ 09/27/23 14:54:32.891
  STEP: patching /status @ 09/27/23 14:54:34.926
  Sep 27 14:54:34.947: INFO: Status Message: "Patched by e2e test" and Reason: "E2E"
  Sep 27 14:54:34.948: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2413" for this suite. @ 09/27/23 14:54:34.961
• [2.207 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance]
test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 09/27/23 14:54:34.985
  Sep 27 14:54:34.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 14:54:34.986
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:35.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:35.143
  Sep 27 14:54:35.145: INFO: Creating simple deployment test-new-deployment
  Sep 27 14:54:35.178: INFO: new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 09/27/23 14:54:37.193
  STEP: updating a scale subresource @ 09/27/23 14:54:37.197
  STEP: verifying the deployment Spec.Replicas was modified @ 09/27/23 14:54:37.214
  STEP: Patch a scale subresource @ 09/27/23 14:54:37.218
  Sep 27 14:54:37.252: INFO: Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "92c7f85e-ae6b-48ba-8c2e-05ff166d85c9",
      ResourceVersion: (string) (len=5) "10097",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-557759b7c7\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 14:54:37.260: INFO: New ReplicaSet "test-new-deployment-557759b7c7" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-557759b7c7",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14b60a4e-ec18-4fcf-b784-8cb688f7d51b",
      ResourceVersion: (string) (len=5) "10092",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "92c7f85e-ae6b-48ba-8c2e-05ff166d85c9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 32 63 37 66 38  35 65 2d 61 65 36 62 2d  |\"92c7f85e-ae6b-|
              00000120  34 38 62 61 2d 38 63 32  65 2d 30 35 66 66 31 36  |48ba-8c2e-05ff16|
              00000130  36 64 38 35 63 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6d85c9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 14:54:37.272: INFO: Pod "test-new-deployment-557759b7c7-vzf4x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-557759b7c7-vzf4x",
      GenerateName: (string) (len=31) "test-new-deployment-557759b7c7-",
      Namespace: (string) (len=15) "deployment-4130",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "409febe3-487d-44c6-a07a-f8c175e528ad",
      ResourceVersion: (string) (len=5) "10091",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "557759b7c7"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "92bb712bfaf91d3d6fd70461d224730d3ea83dc8eb3ba8287523df43038f2b49",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.40/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.40/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-557759b7c7",
          UID: (types.UID) (len=36) "14b60a4e-ec18-4fcf-b784-8cb688f7d51b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 34  62 36 30 61 34 65 2d 65  |d\":\"14b60a4e-e|
              00000090  63 31 38 2d 34 66 63 66  2d 62 37 38 34 2d 38 63  |c18-4fcf-b784-8c|
              000000a0  62 36 38 38 66 37 64 35  31 62 5c 22 7d 22 3a 7b  |b688f7d51b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 34 30 5c 22 7d 22 3a  |10.1.212.40\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dmqbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dmqbv",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423276,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831423275,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.40",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.40"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831423275,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831423276,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1ab1f9671fb3d6ad3a463e876d6c9ec9ccd575baccefe7928ae4f9f72910fcc6",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 14:54:37.276: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4130" for this suite. @ 09/27/23 14:54:37.281
• [2.464 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application  [Conformance]
test/e2e/kubectl/kubectl.go:396
  STEP: Creating a kubernetes client @ 09/27/23 14:54:37.45
  Sep 27 14:54:37.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 14:54:37.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:37.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:37.629
  STEP: creating all guestbook components @ 09/27/23 14:54:37.64
  Sep 27 14:54:37.640: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  Sep 27 14:54:37.640: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:38.807: INFO: stderr: ""
  Sep 27 14:54:38.807: INFO: stdout: "service/agnhost-replica created\n"
  Sep 27 14:54:38.808: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  Sep 27 14:54:38.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:39.147: INFO: stderr: ""
  Sep 27 14:54:39.147: INFO: stdout: "service/agnhost-primary created\n"
  Sep 27 14:54:39.147: INFO: apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  Sep 27 14:54:39.148: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:39.501: INFO: stderr: ""
  Sep 27 14:54:39.501: INFO: stdout: "service/frontend created\n"
  Sep 27 14:54:39.501: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  Sep 27 14:54:39.501: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:39.766: INFO: stderr: ""
  Sep 27 14:54:39.766: INFO: stdout: "deployment.apps/frontend created\n"
  Sep 27 14:54:39.766: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 27 14:54:39.766: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:39.988: INFO: stderr: ""
  Sep 27 14:54:39.988: INFO: stdout: "deployment.apps/agnhost-primary created\n"
  Sep 27 14:54:39.988: INFO: apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.45
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  Sep 27 14:54:39.989: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 create -f -'
  Sep 27 14:54:40.360: INFO: stderr: ""
  Sep 27 14:54:40.360: INFO: stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 09/27/23 14:54:40.36
  Sep 27 14:54:40.360: INFO: Waiting for all frontend pods to be Running.
  Sep 27 14:54:45.412: INFO: Waiting for frontend to serve content.
  Sep 27 14:54:45.424: INFO: Trying to add a new entry to the guestbook.
  Sep 27 14:54:45.435: INFO: Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 09/27/23 14:54:45.446
  Sep 27 14:54:45.446: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:45.663: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:45.663: INFO: stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:54:45.663
  Sep 27 14:54:45.663: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:45.967: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:45.967: INFO: stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:54:45.967
  Sep 27 14:54:45.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:46.180: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:46.180: INFO: stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:54:46.18
  Sep 27 14:54:46.180: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:46.329: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:46.329: INFO: stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:54:46.33
  Sep 27 14:54:46.330: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:46.453: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:46.453: INFO: stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 09/27/23 14:54:46.454
  Sep 27 14:54:46.454: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8018 delete --grace-period=0 --force -f -'
  Sep 27 14:54:46.608: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 14:54:46.608: INFO: stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  Sep 27 14:54:46.608: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8018" for this suite. @ 09/27/23 14:54:46.636
• [9.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:442
  STEP: Creating a kubernetes client @ 09/27/23 14:54:46.763
  Sep 27 14:54:46.763: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 14:54:46.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:47.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:47.457
  STEP: set up a multi version CRD @ 09/27/23 14:54:47.477
  Sep 27 14:54:47.483: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: mark a version not serverd @ 09/27/23 14:54:51.56
  STEP: check the unserved version gets removed @ 09/27/23 14:54:51.589
  STEP: check the other version is not changed @ 09/27/23 14:54:52.88
  Sep 27 14:54:56.196: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3801" for this suite. @ 09/27/23 14:54:56.215
• [9.495 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:85
  STEP: Creating a kubernetes client @ 09/27/23 14:54:56.257
  Sep 27 14:54:56.257: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 14:54:56.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:54:56.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:54:56.361
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 14:54:56.366
  STEP: Saw pod success @ 09/27/23 14:55:00.418
  Sep 27 14:55:00.421: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-501f6807-b0e1-45c9-bf9f-80b5dbfa495b container client-container: <nil>
  STEP: delete the pod @ 09/27/23 14:55:00.44
  Sep 27 14:55:00.501: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6104" for this suite. @ 09/27/23 14:55:00.504
• [4.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:55
  STEP: Creating a kubernetes client @ 09/27/23 14:55:00.545
  Sep 27 14:55:00.545: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 14:55:00.545
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:00.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:00.635
  Sep 27 14:55:00.645: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3157" for this suite. @ 09/27/23 14:55:00.649
• [0.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance]
test/e2e/apps/statefulset.go:745
  STEP: Creating a kubernetes client @ 09/27/23 14:55:00.688
  Sep 27 14:55:00.688: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:55:00.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:00.765
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:00.769
  STEP: Creating service test in namespace statefulset-226 @ 09/27/23 14:55:00.772
  STEP: Looking for a node to schedule stateful set and pod @ 09/27/23 14:55:00.871
  STEP: Creating pod with conflicting port in namespace statefulset-226 @ 09/27/23 14:55:00.874
  STEP: Waiting until pod test-pod will start running in namespace statefulset-226 @ 09/27/23 14:55:00.936
  STEP: Creating statefulset with conflicting port in namespace statefulset-226 @ 09/27/23 14:55:02.944
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-226 @ 09/27/23 14:55:02.985
  Sep 27 14:55:03.097: INFO: Observed stateful pod in namespace: statefulset-226, name: ss-0, uid: a45ef348-a09e-4fa0-a3ad-00fabe789a6c, status phase: Pending. Waiting for statefulset controller to delete.
  Sep 27 14:55:03.168: INFO: Observed stateful pod in namespace: statefulset-226, name: ss-0, uid: a45ef348-a09e-4fa0-a3ad-00fabe789a6c, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 27 14:55:03.260: INFO: Observed stateful pod in namespace: statefulset-226, name: ss-0, uid: a45ef348-a09e-4fa0-a3ad-00fabe789a6c, status phase: Failed. Waiting for statefulset controller to delete.
  Sep 27 14:55:03.285: INFO: Observed delete event for stateful pod ss-0 in namespace statefulset-226
  STEP: Removing pod with conflicting port in namespace statefulset-226 @ 09/27/23 14:55:03.286
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-226 and will be in running state @ 09/27/23 14:55:03.497
  Sep 27 14:55:07.516: INFO: Deleting all statefulset in ns statefulset-226
  Sep 27 14:55:07.518: INFO: Scaling statefulset ss to 0
  Sep 27 14:55:17.559: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:55:17.561: INFO: Deleting statefulset ss
  Sep 27 14:55:17.598: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-226" for this suite. @ 09/27/23 14:55:17.6
• [16.955 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:104
  STEP: Creating a kubernetes client @ 09/27/23 14:55:17.644
  Sep 27 14:55:17.644: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 14:55:17.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:17.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:17.749
  Sep 27 14:55:19.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8627" for this suite. @ 09/27/23 14:55:19.849
• [2.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance]
test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 09/27/23 14:55:19.871
  Sep 27 14:55:19.871: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/27/23 14:55:19.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:19.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:19.938
  Sep 27 14:55:24.024: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Cleaning up the secret @ 09/27/23 14:55:24.026
  STEP: Cleaning up the configmap @ 09/27/23 14:55:24.046
  STEP: Cleaning up the pod @ 09/27/23 14:55:24.075
  STEP: Destroying namespace "emptydir-wrapper-9367" for this suite. @ 09/27/23 14:55:24.137
• [4.294 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance]
test/e2e/apps/statefulset.go:703
  STEP: Creating a kubernetes client @ 09/27/23 14:55:24.166
  Sep 27 14:55:24.166: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 14:55:24.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:55:24.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:55:24.25
  STEP: Creating service test in namespace statefulset-6776 @ 09/27/23 14:55:24.251
  STEP: Creating stateful set ss in namespace statefulset-6776 @ 09/27/23 14:55:24.267
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6776 @ 09/27/23 14:55:24.324
  Sep 27 14:55:24.330: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 14:55:34.337: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 09/27/23 14:55:34.337
  Sep 27 14:55:34.340: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:55:34.500: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:55:34.500: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:55:34.500: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:55:34.504: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  Sep 27 14:55:44.513: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:55:44.513: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 14:55:44.560: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Sep 27 14:55:44.560: INFO: ss-0  conformance-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:34 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  }]
  Sep 27 14:55:44.560: INFO: 
  Sep 27 14:55:44.560: INFO: StatefulSet ss has not reached scale 3, at 1
  Sep 27 14:55:45.566: INFO: Verifying statefulset ss doesn't scale past 3 for another 8.990930118s
  Sep 27 14:55:46.571: INFO: Verifying statefulset ss doesn't scale past 3 for another 7.985575703s
  Sep 27 14:55:47.575: INFO: Verifying statefulset ss doesn't scale past 3 for another 6.981127658s
  Sep 27 14:55:48.580: INFO: Verifying statefulset ss doesn't scale past 3 for another 5.977095977s
  Sep 27 14:55:49.584: INFO: Verifying statefulset ss doesn't scale past 3 for another 4.972314043s
  Sep 27 14:55:50.588: INFO: Verifying statefulset ss doesn't scale past 3 for another 3.967674677s
  Sep 27 14:55:51.592: INFO: Verifying statefulset ss doesn't scale past 3 for another 2.963472424s
  Sep 27 14:55:52.596: INFO: Verifying statefulset ss doesn't scale past 3 for another 1.959864046s
  Sep 27 14:55:53.601: INFO: Verifying statefulset ss doesn't scale past 3 for another 955.248318ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6776 @ 09/27/23 14:55:54.601
  Sep 27 14:55:54.606: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:55:54.734: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 14:55:54.734: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:55:54.734: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:55:54.734: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:55:54.879: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 27 14:55:54.879: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:55:54.879: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:55:54.880: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 14:55:55.031: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  Sep 27 14:55:55.031: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 14:55:55.031: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 14:55:55.035: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:55:55.035: INFO: Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 14:55:55.035: INFO: Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 09/27/23 14:55:55.035
  Sep 27 14:55:55.046: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:55:55.209: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:55:55.209: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:55:55.209: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:55:55.209: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:55:55.395: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:55:55.395: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:55:55.395: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:55:55.395: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-6776 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 14:55:55.548: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 14:55:55.548: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 14:55:55.548: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 14:55:55.548: INFO: Waiting for statefulset status.readyReplicas updated to 0
  Sep 27 14:55:55.552: INFO: Waiting for statefulset status.readyReplicas to become 0, currently 3
  Sep 27 14:56:05.560: INFO: Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:56:05.560: INFO: Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:56:05.560: INFO: Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  Sep 27 14:56:05.587: INFO: POD   NODE           PHASE    GRACE  CONDITIONS
  Sep 27 14:56:05.587: INFO: ss-0  conformance-2  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  }]
  Sep 27 14:56:05.587: INFO: ss-1  conformance-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  }]
  Sep 27 14:56:05.587: INFO: ss-2  conformance-1  Running         [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:56 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  }]
  Sep 27 14:56:05.587: INFO: 
  Sep 27 14:56:05.587: INFO: StatefulSet ss has not reached scale 0, at 3
  Sep 27 14:56:06.597: INFO: POD   NODE           PHASE      GRACE  CONDITIONS
  Sep 27 14:56:06.597: INFO: ss-0  conformance-2  Running    30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:24 +0000 UTC  }]
  Sep 27 14:56:06.597: INFO: ss-2  conformance-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:56 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:56 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  }]
  Sep 27 14:56:06.597: INFO: ss-1  conformance-1  Succeeded  30s    [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:55 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 14:55:44 +0000 UTC  }]
  Sep 27 14:56:06.597: INFO: 
  Sep 27 14:56:06.597: INFO: StatefulSet ss has not reached scale 0, at 3
  Sep 27 14:56:07.601: INFO: Verifying statefulset ss doesn't scale past 0 for another 7.986637258s
  Sep 27 14:56:08.606: INFO: Verifying statefulset ss doesn't scale past 0 for another 6.982450981s
  Sep 27 14:56:09.610: INFO: Verifying statefulset ss doesn't scale past 0 for another 5.977616733s
  Sep 27 14:56:10.614: INFO: Verifying statefulset ss doesn't scale past 0 for another 4.97385001s
  Sep 27 14:56:11.618: INFO: Verifying statefulset ss doesn't scale past 0 for another 3.969902033s
  Sep 27 14:56:12.622: INFO: Verifying statefulset ss doesn't scale past 0 for another 2.965740269s
  Sep 27 14:56:13.626: INFO: Verifying statefulset ss doesn't scale past 0 for another 1.961758667s
  Sep 27 14:56:14.630: INFO: Verifying statefulset ss doesn't scale past 0 for another 958.085952ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6776 @ 09/27/23 14:56:15.631
  Sep 27 14:56:15.636: INFO: Scaling statefulset ss to 0
  Sep 27 14:56:15.644: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:56:15.647: INFO: Deleting all statefulset in ns statefulset-6776
  Sep 27 14:56:15.648: INFO: Scaling statefulset ss to 0
  Sep 27 14:56:15.655: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 14:56:15.656: INFO: Deleting statefulset ss
  Sep 27 14:56:15.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6776" for this suite. @ 09/27/23 14:56:15.691
• [51.548 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:52
  STEP: Creating a kubernetes client @ 09/27/23 14:56:15.715
  Sep 27 14:56:15.715: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 14:56:15.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:15.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:15.76
  Sep 27 14:56:17.790: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3046" for this suite. @ 09/27/23 14:56:17.793
• [2.100 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:198
  STEP: Creating a kubernetes client @ 09/27/23 14:56:17.816
  Sep 27 14:56:17.816: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 14:56:17.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:56:17.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:56:17.861
  STEP: Creating pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683 @ 09/27/23 14:56:17.863
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 14:56:21.888
  Sep 27 14:56:21.891: INFO: Initial restart count of pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is 0
  Sep 27 14:56:21.893: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:23.898: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:25.903: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:27.907: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:29.912: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:31.916: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:33.920: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:35.926: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:37.930: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:39.934: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:39.934: INFO: Restart count of pod container-probe-5683/liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is now 1 (18.043416746s elapsed)
  Sep 27 14:56:41.938: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:43.941: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:45.945: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:47.963: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:49.967: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:51.970: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:53.974: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:55.979: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:57.983: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:59.988: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:56:59.988: INFO: Restart count of pod container-probe-5683/liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is now 2 (38.096752606s elapsed)
  Sep 27 14:57:01.996: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:04.000: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:06.004: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:08.008: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:10.012: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:12.015: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:14.019: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:16.025: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:18.028: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:20.032: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:20.032: INFO: Restart count of pod container-probe-5683/liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is now 3 (58.140829441s elapsed)
  Sep 27 14:57:22.035: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:24.038: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:26.041: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:28.045: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:30.047: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:32.051: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:34.053: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:36.058: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:38.062: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:40.065: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:40.065: INFO: Restart count of pod container-probe-5683/liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is now 4 (1m18.1741994s elapsed)
  Sep 27 14:57:42.069: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:44.071: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:46.074: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:48.077: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:50.081: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:52.085: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:54.088: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:56.091: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:57:58.096: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:00.099: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:02.102: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:04.106: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:06.110: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:08.114: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:10.118: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:12.123: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:14.127: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:16.132: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:18.136: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:20.140: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:22.143: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:24.147: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:26.151: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:28.155: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:30.160: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:32.164: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:34.168: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:36.172: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:38.175: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:40.179: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:42.183: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:44.187: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:46.192: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:48.196: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:50.200: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:52.204: INFO: Get pod liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 in namespace container-probe-5683
  Sep 27 14:58:52.204: INFO: Restart count of pod container-probe-5683/liveness-4c3c07d1-321e-47cf-ad6e-a86b336c03a3 is now 5 (2m30.312590416s elapsed)
  Sep 27 14:58:52.204: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 14:58:52.207
  STEP: Destroying namespace "container-probe-5683" for this suite. @ 09/27/23 14:58:52.254
• [154.458 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod  [Conformance]
test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 09/27/23 14:58:52.276
  Sep 27 14:58:52.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename prestop @ 09/27/23 14:58:52.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:58:52.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:58:52.345
  STEP: Creating server pod server in namespace prestop-9649 @ 09/27/23 14:58:52.347
  STEP: Waiting for pods to come up. @ 09/27/23 14:58:52.364
  STEP: Creating tester pod tester in namespace prestop-9649 @ 09/27/23 14:58:54.373
  STEP: Deleting pre-stop pod @ 09/27/23 14:58:56.401
  Sep 27 14:59:01.431: INFO: Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  Sep 27 14:59:01.431: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Deleting the server pod @ 09/27/23 14:59:01.434
  STEP: Destroying namespace "prestop-9649" for this suite. @ 09/27/23 14:59:01.531
• [9.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance]
test/e2e/apimachinery/resource_quota.go:161
  STEP: Creating a kubernetes client @ 09/27/23 14:59:01.565
  Sep 27 14:59:01.565: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:59:01.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:01.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:01.617
  STEP: Discovering how many secrets are in namespace by default @ 09/27/23 14:59:01.62
  STEP: Counting existing ResourceQuota @ 09/27/23 14:59:06.625
  STEP: Creating a ResourceQuota @ 09/27/23 14:59:11.629
  STEP: Ensuring resource quota status is calculated @ 09/27/23 14:59:11.643
  STEP: Creating a Secret @ 09/27/23 14:59:13.646
  STEP: Ensuring resource quota status captures secret creation @ 09/27/23 14:59:13.675
  STEP: Deleting a secret @ 09/27/23 14:59:15.679
  STEP: Ensuring resource quota status released usage @ 09/27/23 14:59:15.695
  Sep 27 14:59:17.698: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-890" for this suite. @ 09/27/23 14:59:17.701
• [16.153 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance]
test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 09/27/23 14:59:17.719
  Sep 27 14:59:17.719: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename watch @ 09/27/23 14:59:17.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:17.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:17.765
  STEP: creating a watch on configmaps @ 09/27/23 14:59:17.768
  STEP: creating a new configmap @ 09/27/23 14:59:17.769
  STEP: modifying the configmap once @ 09/27/23 14:59:17.782
  STEP: closing the watch once it receives two notifications @ 09/27/23 14:59:17.799
  Sep 27 14:59:17.799: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3540  90fdeadc-8ad1-400f-82e0-9cb3e27c77d2 11455 0 2023-09-27 14:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:59:17 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:59:17.800: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3540  90fdeadc-8ad1-400f-82e0-9cb3e27c77d2 11456 0 2023-09-27 14:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 09/27/23 14:59:17.8
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 09/27/23 14:59:17.814
  STEP: deleting the configmap @ 09/27/23 14:59:17.816
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 09/27/23 14:59:17.829
  Sep 27 14:59:17.829: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3540  90fdeadc-8ad1-400f-82e0-9cb3e27c77d2 11457 0 2023-09-27 14:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:59:17.830: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3540  90fdeadc-8ad1-400f-82e0-9cb3e27c77d2 11458 0 2023-09-27 14:59:17 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2023-09-27 14:59:17 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 14:59:17.830: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3540" for this suite. @ 09/27/23 14:59:17.833
• [0.130 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance]
test/e2e/apimachinery/resource_quota.go:806
  STEP: Creating a kubernetes client @ 09/27/23 14:59:17.849
  Sep 27 14:59:17.849: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 14:59:17.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:17.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:17.89
  STEP: Creating a ResourceQuota with best effort scope @ 09/27/23 14:59:17.898
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 14:59:17.913
  STEP: Creating a ResourceQuota with not best effort scope @ 09/27/23 14:59:19.917
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 14:59:19.941
  STEP: Creating a best-effort pod @ 09/27/23 14:59:21.944
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 09/27/23 14:59:21.984
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 09/27/23 14:59:23.988
  STEP: Deleting the pod @ 09/27/23 14:59:25.991
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 14:59:26.038
  STEP: Creating a not best-effort pod @ 09/27/23 14:59:28.042
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 09/27/23 14:59:28.085
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 09/27/23 14:59:30.088
  STEP: Deleting the pod @ 09/27/23 14:59:32.091
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 14:59:32.129
  Sep 27 14:59:34.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2093" for this suite. @ 09/27/23 14:59:34.134
• [16.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance]
test/e2e/apps/rc.go:85
  STEP: Creating a kubernetes client @ 09/27/23 14:59:34.161
  Sep 27 14:59:34.161: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 14:59:34.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:34.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:34.203
  Sep 27 14:59:34.205: INFO: Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 09/27/23 14:59:35.224
  STEP: Checking rc "condition-test" has the desired failure condition set @ 09/27/23 14:59:35.237
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 09/27/23 14:59:36.243
  Sep 27 14:59:36.260: INFO: Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 09/27/23 14:59:36.26
  Sep 27 14:59:37.267: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2202" for this suite. @ 09/27/23 14:59:37.269
• [3.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance]
test/e2e/common/node/podtemplates.go:176
  STEP: Creating a kubernetes client @ 09/27/23 14:59:37.296
  Sep 27 14:59:37.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 14:59:37.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:37.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:37.336
  STEP: Create a pod template @ 09/27/23 14:59:37.338
  STEP: Replace a pod template @ 09/27/23 14:59:37.35
  Sep 27 14:59:37.365: INFO: Found updated podtemplate annotation: "true"

  Sep 27 14:59:37.365: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6887" for this suite. @ 09/27/23 14:59:37.368
• [0.084 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:109
  STEP: Creating a kubernetes client @ 09/27/23 14:59:37.38
  Sep 27 14:59:37.380: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:59:37.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:37.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:37.413
  STEP: Creating configMap with name projected-configmap-test-volume-map-a97beac7-3040-42b9-a49a-646aa1ad6204 @ 09/27/23 14:59:37.42
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:59:37.431
  STEP: Saw pod success @ 09/27/23 14:59:41.455
  Sep 27 14:59:41.456: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-84087527-01b8-4a61-bf49-7a2dc90b0f40 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:59:41.463
  Sep 27 14:59:41.529: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8389" for this suite. @ 09/27/23 14:59:41.534
• [4.178 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 09/27/23 14:59:41.558
  Sep 27 14:59:41.558: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:59:41.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:41.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:41.649
  STEP: Creating projection with secret that has name projected-secret-test-8806143e-b9a5-4af9-8c16-295324766c40 @ 09/27/23 14:59:41.651
  STEP: Creating a pod to test consume secrets @ 09/27/23 14:59:41.678
  STEP: Saw pod success @ 09/27/23 14:59:45.717
  Sep 27 14:59:45.719: INFO: Trying to get logs from node conformance-1 pod pod-projected-secrets-000fcee1-b47a-45fd-8d9b-80c5c7701eeb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 14:59:45.722
  Sep 27 14:59:45.794: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5927" for this suite. @ 09/27/23 14:59:45.797
• [4.263 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:89
  STEP: Creating a kubernetes client @ 09/27/23 14:59:45.822
  Sep 27 14:59:45.822: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 14:59:45.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:45.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:45.911
  STEP: Creating configMap with name projected-configmap-test-volume-map-544db821-e03f-4473-a5e1-31f196136d4d @ 09/27/23 14:59:45.913
  STEP: Creating a pod to test consume configMaps @ 09/27/23 14:59:45.929
  STEP: Saw pod success @ 09/27/23 14:59:49.971
  Sep 27 14:59:49.974: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-c1f70c9c-4a85-4e9d-b215-3dfc449e447b container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 14:59:49.978
  Sep 27 14:59:50.055: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1977" for this suite. @ 09/27/23 14:59:50.058
• [4.264 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance]
test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 09/27/23 14:59:50.087
  Sep 27 14:59:50.087: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subpath @ 09/27/23 14:59:50.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 14:59:50.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 14:59:50.185
  STEP: Setting up data @ 09/27/23 14:59:50.188
  STEP: Creating pod pod-subpath-test-configmap-b5h5 @ 09/27/23 14:59:50.273
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 14:59:50.273
  STEP: Saw pod success @ 09/27/23 15:00:14.364
  Sep 27 15:00:14.367: INFO: Trying to get logs from node conformance-1 pod pod-subpath-test-configmap-b5h5 container test-container-subpath-configmap-b5h5: <nil>
  STEP: delete the pod @ 09/27/23 15:00:14.374
  STEP: Deleting pod pod-subpath-test-configmap-b5h5 @ 09/27/23 15:00:14.436
  Sep 27 15:00:14.436: INFO: Deleting pod "pod-subpath-test-configmap-b5h5" in namespace "subpath-7133"
  Sep 27 15:00:14.438: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7133" for this suite. @ 09/27/23 15:00:14.442
• [24.376 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance]
test/e2e/apimachinery/resource_quota.go:101
  STEP: Creating a kubernetes client @ 09/27/23 15:00:14.464
  Sep 27 15:00:14.464: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:00:14.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:00:14.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:00:14.564
  STEP: Counting existing ResourceQuota @ 09/27/23 15:00:14.567
  STEP: Creating a ResourceQuota @ 09/27/23 15:00:19.571
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:00:19.621
  STEP: Creating a Service @ 09/27/23 15:00:21.626
  STEP: Creating a NodePort Service @ 09/27/23 15:00:21.799
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 09/27/23 15:00:21.978
  STEP: Ensuring resource quota status captures service creation @ 09/27/23 15:00:22.112
  STEP: Deleting Services @ 09/27/23 15:00:24.115
  STEP: Ensuring resource quota status released usage @ 09/27/23 15:00:24.302
  Sep 27 15:00:26.306: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8507" for this suite. @ 09/27/23 15:00:26.309
• [11.857 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 09/27/23 15:00:26.322
  Sep 27 15:00:26.322: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:00:26.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:00:26.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:00:26.413
  STEP: creating the pod @ 09/27/23 15:00:26.415
  Sep 27 15:00:26.415: INFO: PodSpec: initContainers in spec.initContainers
  Sep 27 15:01:11.211: INFO: init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-ed770f31-db04-4d4d-a814-677415755a40", GenerateName:"", Namespace:"init-container-5600", SelfLink:"", UID:"82e55500-71a4-4e81-8ccd-cd1cc758d544", ResourceVersion:"11986", Generation:0, CreationTimestamp:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"415953749"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"c5b6d7e5d376e4464432ce07f326ec5c2979d7f9f5faffee28a07f4f73f4b44e", "cni.projectcalico.org/podIP":"10.1.20.81/32", "cni.projectcalico.org/podIPs":"10.1.20.81/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d82258), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 27, 15, 0, 27, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d82288), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelite", Operation:"Update", APIVersion:"v1", Time:time.Date(2023, time.September, 27, 15, 1, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d822b8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-bhd5f", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00441ee20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bhd5f", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bhd5f", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bhd5f", ReadOnly:true, MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003eab718), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"conformance-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc000aad5e0), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003eab7a0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003eab7c0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003eab7c8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003eab7cc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc001293de0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.84.220.167", HostIPs:[]v1.HostIP(nil), PodIP:"10.1.20.81", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.1.20.81"}}, StartTime:time.Date(2023, time.September, 27, 15, 0, 26, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000aad730)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc000aad810)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:2e0f836850e09b8b7cc937681d6194537a09fbd5f6b9e08f4d646a85128e8937", ContainerID:"containerd://c3ea12e6b593a6e6d7f7d1d2782b7612a76ef3986df1ee259e655a2c12fe2e6c", Started:(*bool)(0xc003eab86a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00441eea0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.29-4", ImageID:"", ContainerID:"", Started:(*bool)(0xc003eab87f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00441ee80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003eab84f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  Sep 27 15:01:11.212: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5600" for this suite. @ 09/27/23 15:01:11.216
• [44.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance]
test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 09/27/23 15:01:11.238
  Sep 27 15:01:11.238: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:01:11.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:11.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:11.271
  STEP: Setting up server cert @ 09/27/23 15:01:11.332
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:01:11.486
  STEP: Deploying the webhook pod @ 09/27/23 15:01:11.513
  STEP: Wait for the deployment to be ready @ 09/27/23 15:01:11.543
  Sep 27 15:01:11.556: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 15:01:13.566: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 1, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 1, 11, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 1, 11, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 1, 11, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 15:01:15.57
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:01:15.612
  Sep 27 15:01:16.612: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/27/23 15:01:16.618
  STEP: create a pod that should be denied by the webhook @ 09/27/23 15:01:16.68
  STEP: create a pod that causes the webhook to hang @ 09/27/23 15:01:16.693
  STEP: create a configmap that should be denied by the webhook @ 09/27/23 15:01:26.7
  STEP: create a configmap that should be admitted by the webhook @ 09/27/23 15:01:26.719
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/27/23 15:01:26.741
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 09/27/23 15:01:26.746
  STEP: create a namespace that bypass the webhook @ 09/27/23 15:01:26.75
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 09/27/23 15:01:26.779
  Sep 27 15:01:26.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2600" for this suite. @ 09/27/23 15:01:26.94
  STEP: Destroying namespace "webhook-markers-8904" for this suite. @ 09/27/23 15:01:26.963
  STEP: Destroying namespace "exempted-namespace-5006" for this suite. @ 09/27/23 15:01:26.978
• [15.756 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:168
  STEP: Creating a kubernetes client @ 09/27/23 15:01:26.994
  Sep 27 15:01:26.994: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:01:26.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:27.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:27.032
  STEP: Creating pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599 @ 09/27/23 15:01:27.039
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:01:29.061
  Sep 27 15:01:29.065: INFO: Initial restart count of pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 is 0
  Sep 27 15:01:29.067: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:31.071: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:33.076: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:35.080: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:37.085: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:39.089: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:41.092: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:43.095: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:45.099: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:47.102: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:49.107: INFO: Get pod liveness-b9c4019f-397e-437c-bf4b-cde10c018232 in namespace container-probe-9599
  Sep 27 15:01:49.107: INFO: Restart count of pod container-probe-9599/liveness-b9c4019f-397e-437c-bf4b-cde10c018232 is now 1 (20.042161358s elapsed)
  Sep 27 15:01:49.107: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:01:49.109
  STEP: Destroying namespace "container-probe-9599" for this suite. @ 09/27/23 15:01:49.152
• [22.183 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 09/27/23 15:01:49.178
  Sep 27 15:01:49.178: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:01:49.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:49.223
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:49.225
  STEP: Creating projection with secret that has name projected-secret-test-map-e5c42321-6b91-4fa8-a557-1632f08fc77c @ 09/27/23 15:01:49.238
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:01:49.25
  STEP: Saw pod success @ 09/27/23 15:01:53.29
  Sep 27 15:01:53.292: INFO: Trying to get logs from node conformance-1 pod pod-projected-secrets-1e534000-9d7e-4bd3-8152-1879cc18c25c container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:01:53.302
  Sep 27 15:01:53.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1501" for this suite. @ 09/27/23 15:01:53.342
• [4.176 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:528
  STEP: Creating a kubernetes client @ 09/27/23 15:01:53.354
  Sep 27 15:01:53.354: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 15:01:53.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:53.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:53.396
  Sep 27 15:01:57.422: INFO: Got logs for pod "busybox-privileged-false-43c6287d-f0ac-471e-b86c-a8c35e2def21": "ip: RTNETLINK answers: Operation not permitted\n"
  Sep 27 15:01:57.422: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5031" for this suite. @ 09/27/23 15:01:57.424
• [4.092 seconds]
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance]
test/e2e/network/service.go:1493
  STEP: Creating a kubernetes client @ 09/27/23 15:01:57.446
  Sep 27 15:01:57.446: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:01:57.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:01:57.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:01:57.48
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-279 @ 09/27/23 15:01:57.487
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/27/23 15:01:57.513
  STEP: creating service externalsvc in namespace services-279 @ 09/27/23 15:01:57.513
  STEP: creating replication controller externalsvc in namespace services-279 @ 09/27/23 15:01:57.567
  I0927 15:01:57.601013      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-279, replica count: 2
  I0927 15:02:00.652191      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 09/27/23 15:02:00.655
  Sep 27 15:02:00.689: INFO: Creating new exec pod
  Sep 27 15:02:02.709: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-279 exec execpod7px5q -- /bin/sh -x -c nslookup clusterip-service.services-279.svc.cluster.local'
  Sep 27 15:02:02.835: INFO: stderr: "+ nslookup clusterip-service.services-279.svc.cluster.local\n"
  Sep 27 15:02:02.835: INFO: stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nclusterip-service.services-279.svc.cluster.local\tcanonical name = externalsvc.services-279.svc.cluster.local.\nName:\texternalsvc.services-279.svc.cluster.local\nAddress: 10.152.183.177\n\n"
  Sep 27 15:02:02.835: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-279, will wait for the garbage collector to delete the pods @ 09/27/23 15:02:02.838
  Sep 27 15:02:02.907: INFO: Deleting ReplicationController externalsvc took: 15.696283ms
  Sep 27 15:02:03.007: INFO: Terminating ReplicationController externalsvc pods took: 100.655769ms
  Sep 27 15:02:07.185: INFO: Cleaning up the ClusterIP to ExternalName test service
  STEP: Destroying namespace "services-279" for this suite. @ 09/27/23 15:02:07.219
• [9.794 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 09/27/23 15:02:07.24
  Sep 27 15:02:07.240: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:02:07.24
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:07.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:07.294
  STEP: Creating secret with name projected-secret-test-679846a4-de00-4c3a-9a04-d5a31a52560c @ 09/27/23 15:02:07.296
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:02:07.316
  STEP: Saw pod success @ 09/27/23 15:02:11.346
  Sep 27 15:02:11.348: INFO: Trying to get logs from node conformance-2 pod pod-projected-secrets-e7d11f4e-5367-4cd0-97d8-edc70b430f8e container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:02:11.366
  Sep 27 15:02:11.411: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8466" for this suite. @ 09/27/23 15:02:11.414
• [4.188 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:276
  STEP: Creating a kubernetes client @ 09/27/23 15:02:11.429
  Sep 27 15:02:11.429: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:02:11.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:11.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:11.479
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 09/27/23 15:02:11.481
  Sep 27 15:02:11.482: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:02:13.167: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:02:18.819: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2008" for this suite. @ 09/27/23 15:02:18.827
• [7.414 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance]
test/e2e/apimachinery/garbage_collector.go:379
  STEP: Creating a kubernetes client @ 09/27/23 15:02:18.843
  Sep 27 15:02:18.843: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:02:18.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:02:19.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:02:19.33
  STEP: create the rc @ 09/27/23 15:02:19.334
  W0927 15:02:19.362279      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/27/23 15:02:29.496
  STEP: wait for the rc to be deleted @ 09/27/23 15:02:29.607
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 09/27/23 15:02:34.638
  STEP: Gathering metrics @ 09/27/23 15:03:04.671
  W0927 15:03:04.675876      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:03:04.675: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:03:04.675: INFO: Deleting pod "simpletest.rc-8q2mk" in namespace "gc-5484"
  Sep 27 15:03:04.717: INFO: Deleting pod "simpletest.rc-9xxjq" in namespace "gc-5484"
  Sep 27 15:03:04.789: INFO: Deleting pod "simpletest.rc-mnhp4" in namespace "gc-5484"
  Sep 27 15:03:04.867: INFO: Deleting pod "simpletest.rc-hcqhb" in namespace "gc-5484"
  Sep 27 15:03:04.930: INFO: Deleting pod "simpletest.rc-vds7g" in namespace "gc-5484"
  Sep 27 15:03:05.001: INFO: Deleting pod "simpletest.rc-7k67l" in namespace "gc-5484"
  Sep 27 15:03:05.057: INFO: Deleting pod "simpletest.rc-7rpd5" in namespace "gc-5484"
  Sep 27 15:03:05.119: INFO: Deleting pod "simpletest.rc-vxbl6" in namespace "gc-5484"
  Sep 27 15:03:05.178: INFO: Deleting pod "simpletest.rc-cl79b" in namespace "gc-5484"
  Sep 27 15:03:05.246: INFO: Deleting pod "simpletest.rc-sdbv9" in namespace "gc-5484"
  Sep 27 15:03:05.303: INFO: Deleting pod "simpletest.rc-rczw4" in namespace "gc-5484"
  Sep 27 15:03:05.371: INFO: Deleting pod "simpletest.rc-ccdsf" in namespace "gc-5484"
  Sep 27 15:03:05.451: INFO: Deleting pod "simpletest.rc-v8n76" in namespace "gc-5484"
  Sep 27 15:03:05.528: INFO: Deleting pod "simpletest.rc-rm6lr" in namespace "gc-5484"
  Sep 27 15:03:05.579: INFO: Deleting pod "simpletest.rc-klrxk" in namespace "gc-5484"
  Sep 27 15:03:05.654: INFO: Deleting pod "simpletest.rc-b8mbx" in namespace "gc-5484"
  Sep 27 15:03:05.720: INFO: Deleting pod "simpletest.rc-r98f7" in namespace "gc-5484"
  Sep 27 15:03:05.839: INFO: Deleting pod "simpletest.rc-8pxfk" in namespace "gc-5484"
  Sep 27 15:03:05.955: INFO: Deleting pod "simpletest.rc-dw57k" in namespace "gc-5484"
  Sep 27 15:03:06.096: INFO: Deleting pod "simpletest.rc-d8kcd" in namespace "gc-5484"
  Sep 27 15:03:06.218: INFO: Deleting pod "simpletest.rc-mztfs" in namespace "gc-5484"
  Sep 27 15:03:06.314: INFO: Deleting pod "simpletest.rc-mlxl7" in namespace "gc-5484"
  Sep 27 15:03:06.359: INFO: Deleting pod "simpletest.rc-4dphn" in namespace "gc-5484"
  Sep 27 15:03:06.423: INFO: Deleting pod "simpletest.rc-w98hw" in namespace "gc-5484"
  Sep 27 15:03:06.489: INFO: Deleting pod "simpletest.rc-fcffg" in namespace "gc-5484"
  Sep 27 15:03:06.536: INFO: Deleting pod "simpletest.rc-8w7mh" in namespace "gc-5484"
  Sep 27 15:03:06.611: INFO: Deleting pod "simpletest.rc-dnprb" in namespace "gc-5484"
  Sep 27 15:03:06.683: INFO: Deleting pod "simpletest.rc-drpk7" in namespace "gc-5484"
  Sep 27 15:03:06.849: INFO: Deleting pod "simpletest.rc-btmpq" in namespace "gc-5484"
  Sep 27 15:03:06.976: INFO: Deleting pod "simpletest.rc-khd4f" in namespace "gc-5484"
  Sep 27 15:03:07.150: INFO: Deleting pod "simpletest.rc-v7hnf" in namespace "gc-5484"
  Sep 27 15:03:07.257: INFO: Deleting pod "simpletest.rc-dzvm4" in namespace "gc-5484"
  Sep 27 15:03:07.370: INFO: Deleting pod "simpletest.rc-x58sp" in namespace "gc-5484"
  Sep 27 15:03:07.506: INFO: Deleting pod "simpletest.rc-nwl27" in namespace "gc-5484"
  Sep 27 15:03:07.593: INFO: Deleting pod "simpletest.rc-dsh7w" in namespace "gc-5484"
  Sep 27 15:03:07.712: INFO: Deleting pod "simpletest.rc-w5v4m" in namespace "gc-5484"
  Sep 27 15:03:07.868: INFO: Deleting pod "simpletest.rc-jlvwr" in namespace "gc-5484"
  Sep 27 15:03:08.034: INFO: Deleting pod "simpletest.rc-d46d8" in namespace "gc-5484"
  Sep 27 15:03:08.210: INFO: Deleting pod "simpletest.rc-skt7l" in namespace "gc-5484"
  Sep 27 15:03:08.386: INFO: Deleting pod "simpletest.rc-vcr2p" in namespace "gc-5484"
  Sep 27 15:03:08.501: INFO: Deleting pod "simpletest.rc-cq7n4" in namespace "gc-5484"
  Sep 27 15:03:08.706: INFO: Deleting pod "simpletest.rc-2grkq" in namespace "gc-5484"
  Sep 27 15:03:09.003: INFO: Deleting pod "simpletest.rc-7r4gh" in namespace "gc-5484"
  Sep 27 15:03:09.073: INFO: Deleting pod "simpletest.rc-hpswq" in namespace "gc-5484"
  Sep 27 15:03:09.170: INFO: Deleting pod "simpletest.rc-nm627" in namespace "gc-5484"
  Sep 27 15:03:09.347: INFO: Deleting pod "simpletest.rc-4xshb" in namespace "gc-5484"
  Sep 27 15:03:09.475: INFO: Deleting pod "simpletest.rc-dnq8x" in namespace "gc-5484"
  Sep 27 15:03:09.599: INFO: Deleting pod "simpletest.rc-jrktd" in namespace "gc-5484"
  Sep 27 15:03:09.736: INFO: Deleting pod "simpletest.rc-9p9x7" in namespace "gc-5484"
  Sep 27 15:03:09.989: INFO: Deleting pod "simpletest.rc-mkhlr" in namespace "gc-5484"
  Sep 27 15:03:10.124: INFO: Deleting pod "simpletest.rc-28cqf" in namespace "gc-5484"
  Sep 27 15:03:10.273: INFO: Deleting pod "simpletest.rc-2jvxk" in namespace "gc-5484"
  Sep 27 15:03:10.443: INFO: Deleting pod "simpletest.rc-djb2n" in namespace "gc-5484"
  Sep 27 15:03:10.608: INFO: Deleting pod "simpletest.rc-bfz25" in namespace "gc-5484"
  Sep 27 15:03:10.768: INFO: Deleting pod "simpletest.rc-wltxt" in namespace "gc-5484"
  Sep 27 15:03:11.258: INFO: Deleting pod "simpletest.rc-9zndr" in namespace "gc-5484"
  Sep 27 15:03:11.400: INFO: Deleting pod "simpletest.rc-2bc49" in namespace "gc-5484"
  Sep 27 15:03:11.477: INFO: Deleting pod "simpletest.rc-zk2ql" in namespace "gc-5484"
  Sep 27 15:03:11.639: INFO: Deleting pod "simpletest.rc-lffdj" in namespace "gc-5484"
  Sep 27 15:03:11.715: INFO: Deleting pod "simpletest.rc-npf4m" in namespace "gc-5484"
  Sep 27 15:03:11.853: INFO: Deleting pod "simpletest.rc-pj9xz" in namespace "gc-5484"
  Sep 27 15:03:12.032: INFO: Deleting pod "simpletest.rc-rc2cp" in namespace "gc-5484"
  Sep 27 15:03:12.232: INFO: Deleting pod "simpletest.rc-rhrwx" in namespace "gc-5484"
  Sep 27 15:03:12.384: INFO: Deleting pod "simpletest.rc-d7h5x" in namespace "gc-5484"
  Sep 27 15:03:12.673: INFO: Deleting pod "simpletest.rc-mqgfq" in namespace "gc-5484"
  Sep 27 15:03:12.855: INFO: Deleting pod "simpletest.rc-stv8w" in namespace "gc-5484"
  Sep 27 15:03:12.964: INFO: Deleting pod "simpletest.rc-2hsp8" in namespace "gc-5484"
  Sep 27 15:03:13.161: INFO: Deleting pod "simpletest.rc-gwqlp" in namespace "gc-5484"
  Sep 27 15:03:13.691: INFO: Deleting pod "simpletest.rc-9fk44" in namespace "gc-5484"
  Sep 27 15:03:13.769: INFO: Deleting pod "simpletest.rc-fwkpf" in namespace "gc-5484"
  Sep 27 15:03:13.843: INFO: Deleting pod "simpletest.rc-7jsbd" in namespace "gc-5484"
  Sep 27 15:03:13.925: INFO: Deleting pod "simpletest.rc-mbfsf" in namespace "gc-5484"
  Sep 27 15:03:14.038: INFO: Deleting pod "simpletest.rc-nbkqc" in namespace "gc-5484"
  Sep 27 15:03:14.283: INFO: Deleting pod "simpletest.rc-nh4pj" in namespace "gc-5484"
  Sep 27 15:03:14.432: INFO: Deleting pod "simpletest.rc-ttjgl" in namespace "gc-5484"
  Sep 27 15:03:14.608: INFO: Deleting pod "simpletest.rc-dq47h" in namespace "gc-5484"
  Sep 27 15:03:14.779: INFO: Deleting pod "simpletest.rc-c9vn7" in namespace "gc-5484"
  Sep 27 15:03:14.889: INFO: Deleting pod "simpletest.rc-2tm59" in namespace "gc-5484"
  Sep 27 15:03:14.999: INFO: Deleting pod "simpletest.rc-lrtfx" in namespace "gc-5484"
  Sep 27 15:03:15.256: INFO: Deleting pod "simpletest.rc-gcnxq" in namespace "gc-5484"
  Sep 27 15:03:15.350: INFO: Deleting pod "simpletest.rc-frvjq" in namespace "gc-5484"
  Sep 27 15:03:15.564: INFO: Deleting pod "simpletest.rc-rccrw" in namespace "gc-5484"
  Sep 27 15:03:15.810: INFO: Deleting pod "simpletest.rc-jptlv" in namespace "gc-5484"
  Sep 27 15:03:15.966: INFO: Deleting pod "simpletest.rc-hw8mw" in namespace "gc-5484"
  Sep 27 15:03:16.204: INFO: Deleting pod "simpletest.rc-5jsk2" in namespace "gc-5484"
  Sep 27 15:03:16.383: INFO: Deleting pod "simpletest.rc-qsrw2" in namespace "gc-5484"
  Sep 27 15:03:16.499: INFO: Deleting pod "simpletest.rc-cmnhd" in namespace "gc-5484"
  Sep 27 15:03:16.613: INFO: Deleting pod "simpletest.rc-l4kp5" in namespace "gc-5484"
  Sep 27 15:03:16.735: INFO: Deleting pod "simpletest.rc-nnz2d" in namespace "gc-5484"
  Sep 27 15:03:16.861: INFO: Deleting pod "simpletest.rc-2cgph" in namespace "gc-5484"
  Sep 27 15:03:17.027: INFO: Deleting pod "simpletest.rc-qxsvm" in namespace "gc-5484"
  Sep 27 15:03:17.162: INFO: Deleting pod "simpletest.rc-njhn7" in namespace "gc-5484"
  Sep 27 15:03:17.317: INFO: Deleting pod "simpletest.rc-bgp4p" in namespace "gc-5484"
  Sep 27 15:03:17.468: INFO: Deleting pod "simpletest.rc-r8cnx" in namespace "gc-5484"
  Sep 27 15:03:17.550: INFO: Deleting pod "simpletest.rc-qgl84" in namespace "gc-5484"
  Sep 27 15:03:17.696: INFO: Deleting pod "simpletest.rc-kblws" in namespace "gc-5484"
  Sep 27 15:03:17.887: INFO: Deleting pod "simpletest.rc-vndxb" in namespace "gc-5484"
  Sep 27 15:03:18.140: INFO: Deleting pod "simpletest.rc-kvmnt" in namespace "gc-5484"
  Sep 27 15:03:18.271: INFO: Deleting pod "simpletest.rc-kxvwm" in namespace "gc-5484"
  Sep 27 15:03:18.395: INFO: Deleting pod "simpletest.rc-rg7qw" in namespace "gc-5484"
  Sep 27 15:03:18.545: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5484" for this suite. @ 09/27/23 15:03:18.557
• [59.748 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance]
test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 09/27/23 15:03:18.592
  Sep 27 15:03:18.593: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename events @ 09/27/23 15:03:18.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:03:18.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:03:18.948
  STEP: Create set of events @ 09/27/23 15:03:18.979
  STEP: get a list of Events with a label in the current namespace @ 09/27/23 15:03:19.085
  STEP: delete a list of events @ 09/27/23 15:03:19.094
  Sep 27 15:03:19.094: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/27/23 15:03:19.25
  Sep 27 15:03:19.271: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4908" for this suite. @ 09/27/23 15:03:19.291
• [0.790 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance]
test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 09/27/23 15:03:19.383
  Sep 27 15:03:19.383: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-watch @ 09/27/23 15:03:19.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:03:19.615
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:03:19.621
  Sep 27 15:03:19.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Creating first CR  @ 09/27/23 15:03:22.345
  Sep 27 15:03:22.381: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:22Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:22Z]] name:name1 resourceVersion:14255 uid:ebcf1c1d-239c-4568-82bf-9a7a34486d04] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 09/27/23 15:03:32.382
  Sep 27 15:03:32.421: INFO: Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:32Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:32Z]] name:name2 resourceVersion:14669 uid:07142df0-ad8b-4237-ab4a-fe5768a64c80] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 09/27/23 15:03:42.422
  Sep 27 15:03:42.448: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:42Z]] name:name1 resourceVersion:15035 uid:ebcf1c1d-239c-4568-82bf-9a7a34486d04] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 09/27/23 15:03:52.448
  Sep 27 15:03:52.474: INFO: Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:52Z]] name:name2 resourceVersion:15052 uid:07142df0-ad8b-4237-ab4a-fe5768a64c80] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 09/27/23 15:04:02.475
  Sep 27 15:04:02.499: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:22Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:42Z]] name:name1 resourceVersion:15069 uid:ebcf1c1d-239c-4568-82bf-9a7a34486d04] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 09/27/23 15:04:12.499
  Sep 27 15:04:12.526: INFO: Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2023-09-27T15:03:32Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2023-09-27T15:03:52Z]] name:name2 resourceVersion:15085 uid:07142df0-ad8b-4237-ab4a-fe5768a64c80] num:map[num1:9223372036854775807 num2:1000000]]}
  Sep 27 15:04:23.058: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-5528" for this suite. @ 09/27/23 15:04:23.062
• [63.706 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 09/27/23 15:04:23.09
  Sep 27 15:04:23.090: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:04:23.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:23.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:23.771
  STEP: Setting up server cert @ 09/27/23 15:04:24.443
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:04:24.537
  STEP: Deploying the webhook pod @ 09/27/23 15:04:24.569
  STEP: Wait for the deployment to be ready @ 09/27/23 15:04:24.6
  Sep 27 15:04:24.606: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 15:04:26.619: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 4, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 4, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 4, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 4, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 15:04:28.625
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:04:28.658
  Sep 27 15:04:29.659: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/27/23 15:04:29.826
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:04:29.852
  STEP: Deleting the collection of validation webhooks @ 09/27/23 15:04:29.883
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:04:30.032
  Sep 27 15:04:30.063: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3221" for this suite. @ 09/27/23 15:04:30.242
  STEP: Destroying namespace "webhook-markers-1497" for this suite. @ 09/27/23 15:04:30.278
• [7.219 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 09/27/23 15:04:30.31
  Sep 27 15:04:30.310: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:04:30.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:30.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:30.513
  STEP: apply creating a deployment @ 09/27/23 15:04:30.515
  Sep 27 15:04:30.516: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6540" for this suite. @ 09/27/23 15:04:30.538
• [0.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance]
test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 09/27/23 15:04:30.562
  Sep 27 15:04:30.562: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption @ 09/27/23 15:04:30.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:30.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:30.661
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:04:30.68
  STEP: Updating PodDisruptionBudget status @ 09/27/23 15:04:32.688
  STEP: Waiting for all pods to be running @ 09/27/23 15:04:32.715
  Sep 27 15:04:32.717: INFO: running pods: 0 < 1
  STEP: locating a running pod @ 09/27/23 15:04:34.722
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:04:34.744
  STEP: Patching PodDisruptionBudget status @ 09/27/23 15:04:34.748
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:04:34.762
  Sep 27 15:04:34.764: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5784" for this suite. @ 09/27/23 15:04:34.767
• [4.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 09/27/23 15:04:34.781
  Sep 27 15:04:34.782: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:04:34.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:35.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:35.341
  STEP: create the container @ 09/27/23 15:04:35.343
  W0927 15:04:35.359097      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:04:35.359
  STEP: get the container status @ 09/27/23 15:04:38.372
  STEP: the container should be terminated @ 09/27/23 15:04:38.374
  STEP: the termination message should be set @ 09/27/23 15:04:38.375
  Sep 27 15:04:38.375: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/27/23 15:04:38.375
  Sep 27 15:04:38.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7450" for this suite. @ 09/27/23 15:04:38.406
• [3.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:218
  STEP: Creating a kubernetes client @ 09/27/23 15:04:38.422
  Sep 27 15:04:38.422: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:04:38.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:38.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:38.578
  STEP: Creating a pod to test downward api env vars @ 09/27/23 15:04:38.579
  STEP: Saw pod success @ 09/27/23 15:04:42.601
  Sep 27 15:04:42.603: INFO: Trying to get logs from node conformance-2 pod downward-api-5c044191-1e8f-4721-889f-a2be8d7947d6 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:04:42.618
  Sep 27 15:04:42.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1939" for this suite. @ 09/27/23 15:04:42.742
• [4.386 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:97
  STEP: Creating a kubernetes client @ 09/27/23 15:04:42.808
  Sep 27 15:04:42.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:04:42.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:43.384
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:43.385
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 09/27/23 15:04:43.386
  STEP: Saw pod success @ 09/27/23 15:04:47.414
  Sep 27 15:04:47.416: INFO: Trying to get logs from node conformance-1 pod pod-d9931c2b-cde6-46eb-9ead-414b1102eba6 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:04:47.427
  Sep 27 15:04:47.566: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3779" for this suite. @ 09/27/23 15:04:47.569
• [4.901 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 09/27/23 15:04:47.71
  Sep 27 15:04:47.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/27/23 15:04:47.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:48.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:48.42
  STEP: creating a target pod @ 09/27/23 15:04:48.422
  STEP: adding an ephemeral container @ 09/27/23 15:04:50.488
  STEP: checking pod container endpoints @ 09/27/23 15:04:54.707
  Sep 27 15:04:54.707: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2943 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:04:54.707: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:04:54.707: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:04:54.707: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-2943/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 27 15:04:54.776: INFO: Exec stderr: ""
  Sep 27 15:04:54.785: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2943" for this suite. @ 09/27/23 15:04:54.787
• [7.214 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:370
  STEP: Creating a kubernetes client @ 09/27/23 15:04:54.924
  Sep 27 15:04:54.925: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:04:54.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:55.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:55.167
  STEP: Updating Namespace "namespaces-6890" @ 09/27/23 15:04:55.168
  Sep 27 15:04:55.293: INFO: Namespace "namespaces-6890" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"72d930fb-d4e2-44f2-8844-9586efe08fd1", "kubernetes.io/metadata.name":"namespaces-6890", "namespaces-6890":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  Sep 27 15:04:55.293: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6890" for this suite. @ 09/27/23 15:04:55.296
• [0.591 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:129
  STEP: Creating a kubernetes client @ 09/27/23 15:04:55.517
  Sep 27 15:04:55.517: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context @ 09/27/23 15:04:55.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:04:56.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:04:56.313
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/27/23 15:04:56.315
  STEP: Saw pod success @ 09/27/23 15:05:00.359
  Sep 27 15:05:00.363: INFO: Trying to get logs from node conformance-2 pod security-context-9a41f2ae-350a-4442-b78e-76bbbce83065 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:05:00.371
  Sep 27 15:05:00.426: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-2385" for this suite. @ 09/27/23 15:05:00.432
• [4.936 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:194
  STEP: Creating a kubernetes client @ 09/27/23 15:05:00.455
  Sep 27 15:05:00.455: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:05:00.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:00.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:00.952
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:05:00.954
  STEP: Saw pod success @ 09/27/23 15:05:04.993
  Sep 27 15:05:04.996: INFO: Trying to get logs from node conformance-2 pod downwardapi-volume-63a65a61-64cf-48db-9214-14823fdfed96 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:05:05.002
  Sep 27 15:05:05.037: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5116" for this suite. @ 09/27/23 15:05:05.041
• [4.600 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance]
test/e2e/apimachinery/resource_quota.go:395
  STEP: Creating a kubernetes client @ 09/27/23 15:05:05.056
  Sep 27 15:05:05.056: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:05:05.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:05.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:05.168
  STEP: Counting existing ResourceQuota @ 09/27/23 15:05:05.17
  STEP: Creating a ResourceQuota @ 09/27/23 15:05:10.176
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:05:10.201
  STEP: Creating a ReplicationController @ 09/27/23 15:05:12.206
  STEP: Ensuring resource quota status captures replication controller creation @ 09/27/23 15:05:12.237
  STEP: Deleting a ReplicationController @ 09/27/23 15:05:14.242
  STEP: Ensuring resource quota status released usage @ 09/27/23 15:05:14.256
  Sep 27 15:05:16.261: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5125" for this suite. @ 09/27/23 15:05:16.268
• [11.227 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 09/27/23 15:05:16.284
  Sep 27 15:05:16.284: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:05:16.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:16.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:16.414
  STEP: Setting up server cert @ 09/27/23 15:05:16.539
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:05:17.074
  STEP: Deploying the webhook pod @ 09/27/23 15:05:17.111
  STEP: Wait for the deployment to be ready @ 09/27/23 15:05:17.146
  Sep 27 15:05:17.154: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 15:05:19.164: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 5, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 5, 17, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 5, 17, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 5, 17, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 15:05:21.168
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:05:21.207
  Sep 27 15:05:22.207: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 09/27/23 15:05:22.214
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:05:22.248
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 09/27/23 15:05:22.253
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:05:22.273
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 09/27/23 15:05:22.307
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 09/27/23 15:05:22.324
  Sep 27 15:05:22.476: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2801" for this suite. @ 09/27/23 15:05:22.571
  STEP: Destroying namespace "webhook-markers-2154" for this suite. @ 09/27/23 15:05:22.588
• [6.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance]
test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 09/27/23 15:05:22.61
  Sep 27 15:05:22.610: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:05:22.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:23.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:23.188
  STEP: Creating a test headless service @ 09/27/23 15:05:23.19
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-7365.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:05:23.218
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-7365.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-7365.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-7365.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:05:23.218
  STEP: creating a pod to probe DNS @ 09/27/23 15:05:23.218
  STEP: submitting the pod to kubernetes @ 09/27/23 15:05:23.218
  STEP: retrieving the pod @ 09/27/23 15:05:25.247
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:05:25.25
  Sep 27 15:05:25.254: INFO: Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.256: INFO: Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.259: INFO: Unable to read wheezy_udp@dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.261: INFO: Unable to read wheezy_tcp@dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.264: INFO: Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.266: INFO: Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.269: INFO: Unable to read jessie_udp@dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.271: INFO: Unable to read jessie_tcp@dns-test-service-2.dns-7365.svc.cluster.local from pod dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7: the server could not find the requested resource (get pods dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7)
  Sep 27 15:05:25.271: INFO: Lookups using dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local wheezy_udp@dns-test-service-2.dns-7365.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-7365.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-7365.svc.cluster.local jessie_udp@dns-test-service-2.dns-7365.svc.cluster.local jessie_tcp@dns-test-service-2.dns-7365.svc.cluster.local]

  Sep 27 15:05:25.275: INFO: Pod client logs for webserver: 
  Sep 27 15:05:25.280: INFO: Pod client logs for querier: 
  Sep 27 15:05:25.284: INFO: Pod client logs for jessie-querier: 
  Sep 27 15:05:30.303: INFO: DNS probes using dns-7365/dns-test-1f181ea5-00b7-4ac7-b209-2d5e00eb34e7 succeeded

  Sep 27 15:05:30.303: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:05:30.306
  STEP: deleting the test headless service @ 09/27/23 15:05:30.351
  STEP: Destroying namespace "dns-7365" for this suite. @ 09/27/23 15:05:30.402
• [7.831 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance]
test/e2e/apps/replica_set.go:131
  STEP: Creating a kubernetes client @ 09/27/23 15:05:30.441
  Sep 27 15:05:30.441: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:05:30.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:31.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:31.447
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 09/27/23 15:05:31.449
  STEP: When a replicaset with a matching selector is created @ 09/27/23 15:05:33.492
  STEP: Then the orphan pod is adopted @ 09/27/23 15:05:33.53
  STEP: When the matched label of one of its pods change @ 09/27/23 15:05:34.547
  Sep 27 15:05:34.550: INFO: Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/27/23 15:05:34.591
  Sep 27 15:05:35.599: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1102" for this suite. @ 09/27/23 15:05:35.602
• [5.268 seconds]
------------------------------
SS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance]
test/e2e/common/node/configmap.go:169
  STEP: Creating a kubernetes client @ 09/27/23 15:05:35.709
  Sep 27 15:05:35.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:05:35.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:36.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:36.113
  STEP: creating a ConfigMap @ 09/27/23 15:05:36.115
  STEP: fetching the ConfigMap @ 09/27/23 15:05:36.169
  STEP: patching the ConfigMap @ 09/27/23 15:05:36.173
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 09/27/23 15:05:36.236
  STEP: deleting the ConfigMap by collection with a label selector @ 09/27/23 15:05:36.246
  STEP: listing all ConfigMaps in test namespace @ 09/27/23 15:05:36.283
  Sep 27 15:05:36.287: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-379" for this suite. @ 09/27/23 15:05:36.292
• [0.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:391
  STEP: Creating a kubernetes client @ 09/27/23 15:05:36.331
  Sep 27 15:05:36.331: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:05:36.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:36.442
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:36.445
  STEP: set up a multi version CRD @ 09/27/23 15:05:36.447
  Sep 27 15:05:36.447: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: rename a version @ 09/27/23 15:05:40.111
  STEP: check the new version name is served @ 09/27/23 15:05:40.154
  STEP: check the old version name is removed @ 09/27/23 15:05:41.015
  STEP: check the other version is not changed @ 09/27/23 15:05:41.909
  Sep 27 15:05:44.667: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6953" for this suite. @ 09/27/23 15:05:44.676
• [8.372 seconds]
------------------------------
SSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:46
  STEP: Creating a kubernetes client @ 09/27/23 15:05:44.703
  Sep 27 15:05:44.704: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:05:44.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:44.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:44.748
  STEP: Creating secret with name secret-test-4f9e1798-ffc5-46b9-ac24-323aef25f966 @ 09/27/23 15:05:44.751
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:05:44.767
  STEP: Saw pod success @ 09/27/23 15:05:48.803
  Sep 27 15:05:48.805: INFO: Trying to get logs from node conformance-1 pod pod-secrets-6e79c3ab-8add-4f6b-b40c-19c007657fe4 container secret-env-test: <nil>
  STEP: delete the pod @ 09/27/23 15:05:48.814
  Sep 27 15:05:48.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9458" for this suite. @ 09/27/23 15:05:48.847
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance]
test/e2e/apps/cronjob.go:161
  STEP: Creating a kubernetes client @ 09/27/23 15:05:48.864
  Sep 27 15:05:48.864: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:05:48.864
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:05:48.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:05:48.914
  STEP: Creating a ReplaceConcurrent cronjob @ 09/27/23 15:05:48.916
  STEP: Ensuring a job is scheduled @ 09/27/23 15:05:48.929
  STEP: Ensuring exactly one is scheduled @ 09/27/23 15:06:00.933
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/27/23 15:06:00.935
  STEP: Ensuring the job is replaced with a new one @ 09/27/23 15:06:00.938
  STEP: Removing cronjob @ 09/27/23 15:07:00.941
  Sep 27 15:07:00.960: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7788" for this suite. @ 09/27/23 15:07:00.962
• [72.117 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource  [Conformance]
test/e2e/kubectl/kubectl.go:1575
  STEP: Creating a kubernetes client @ 09/27/23 15:07:00.981
  Sep 27 15:07:00.981: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:07:00.981
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:01.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:01.029
  STEP: creating the pod @ 09/27/23 15:07:01.05
  Sep 27 15:07:01.050: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 create -f -'
  Sep 27 15:07:01.180: INFO: stderr: ""
  Sep 27 15:07:01.180: INFO: stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 09/27/23 15:07:03.186
  Sep 27 15:07:03.186: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 label pods pause testing-label=testing-label-value'
  Sep 27 15:07:03.251: INFO: stderr: ""
  Sep 27 15:07:03.251: INFO: stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 09/27/23 15:07:03.251
  Sep 27 15:07:03.251: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 get pod pause -L testing-label'
  Sep 27 15:07:03.291: INFO: stderr: ""
  Sep 27 15:07:03.291: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 09/27/23 15:07:03.291
  Sep 27 15:07:03.291: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 label pods pause testing-label-'
  Sep 27 15:07:03.344: INFO: stderr: ""
  Sep 27 15:07:03.344: INFO: stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 09/27/23 15:07:03.344
  Sep 27 15:07:03.344: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 get pod pause -L testing-label'
  Sep 27 15:07:03.398: INFO: stderr: ""
  Sep 27 15:07:03.398: INFO: stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 09/27/23 15:07:03.398
  Sep 27 15:07:03.398: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 delete --grace-period=0 --force -f -'
  Sep 27 15:07:03.475: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 15:07:03.476: INFO: stdout: "pod \"pause\" force deleted\n"
  Sep 27 15:07:03.476: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 get rc,svc -l name=pause --no-headers'
  Sep 27 15:07:03.533: INFO: stderr: "No resources found in kubectl-3448 namespace.\n"
  Sep 27 15:07:03.533: INFO: stdout: ""
  Sep 27 15:07:03.533: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3448 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 15:07:03.573: INFO: stderr: ""
  Sep 27 15:07:03.573: INFO: stdout: ""
  Sep 27 15:07:03.573: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3448" for this suite. @ 09/27/23 15:07:03.575
• [2.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 09/27/23 15:07:03.588
  Sep 27 15:07:03.588: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:07:03.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:03.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:03.618
  Sep 27 15:07:03.628: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:07:06.732: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2653" for this suite. @ 09/27/23 15:07:06.739
• [3.165 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance]
test/e2e/apimachinery/resource_quota.go:232
  STEP: Creating a kubernetes client @ 09/27/23 15:07:06.753
  Sep 27 15:07:06.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:07:06.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:06.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:06.793
  STEP: Counting existing ResourceQuota @ 09/27/23 15:07:06.794
  STEP: Creating a ResourceQuota @ 09/27/23 15:07:11.797
  STEP: Ensuring resource quota status is calculated @ 09/27/23 15:07:11.819
  STEP: Creating a Pod that fits quota @ 09/27/23 15:07:13.822
  STEP: Ensuring ResourceQuota status captures the pod usage @ 09/27/23 15:07:13.855
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 09/27/23 15:07:15.861
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 09/27/23 15:07:15.863
  STEP: Ensuring a pod cannot update its resource requirements @ 09/27/23 15:07:15.865
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 09/27/23 15:07:15.868
  STEP: Deleting the pod @ 09/27/23 15:07:17.871
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:07:17.936
  Sep 27 15:07:19.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5698" for this suite. @ 09/27/23 15:07:19.943
• [13.216 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:145
  STEP: Creating a kubernetes client @ 09/27/23 15:07:19.969
  Sep 27 15:07:19.969: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 15:07:19.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:20.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:20.024
  Sep 27 15:07:20.027: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:07:20.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-132" for this suite. @ 09/27/23 15:07:20.617
• [0.667 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance]
test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 09/27/23 15:07:20.637
  Sep 27 15:07:20.637: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:07:20.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:20.684
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:20.687
  STEP: creating the pod @ 09/27/23 15:07:20.694
  Sep 27 15:07:20.694: INFO: PodSpec: initContainers in spec.initContainers
  Sep 27 15:07:24.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5980" for this suite. @ 09/27/23 15:07:24.343
• [3.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:54
  STEP: Creating a kubernetes client @ 09/27/23 15:07:24.381
  Sep 27 15:07:24.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:07:24.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:24.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:24.481
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:07:24.485
  STEP: Saw pod success @ 09/27/23 15:07:28.529
  Sep 27 15:07:28.531: INFO: Trying to get logs from node conformance-2 pod downwardapi-volume-514005e8-1a03-4f30-96ed-73530f0aabcc container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:07:28.544
  Sep 27 15:07:28.590: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3435" for this suite. @ 09/27/23 15:07:28.593
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:124
  STEP: Creating a kubernetes client @ 09/27/23 15:07:28.609
  Sep 27 15:07:28.609: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:07:28.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:07:28.659
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:07:28.661
  STEP: Creating configMap with name configmap-test-upd-deffc09c-d707-422c-9284-117566fc04bb @ 09/27/23 15:07:28.672
  STEP: Creating the pod @ 09/27/23 15:07:28.686
  STEP: Updating configmap configmap-test-upd-deffc09c-d707-422c-9284-117566fc04bb @ 09/27/23 15:07:32.73
  STEP: waiting to observe update in volume @ 09/27/23 15:07:32.756
  Sep 27 15:08:36.999: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-431" for this suite. @ 09/27/23 15:08:37.002
• [68.411 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance]
test/e2e/apps/statefulset.go:983
  STEP: Creating a kubernetes client @ 09/27/23 15:08:37.02
  Sep 27 15:08:37.020: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:08:37.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:37.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:37.059
  STEP: Creating service test in namespace statefulset-2362 @ 09/27/23 15:08:37.067
  STEP: Creating statefulset ss in namespace statefulset-2362 @ 09/27/23 15:08:37.086
  Sep 27 15:08:37.122: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 15:08:47.125: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 09/27/23 15:08:47.128
  STEP: Getting /status @ 09/27/23 15:08:47.153
  Sep 27 15:08:47.157: INFO: StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 09/27/23 15:08:47.157
  Sep 27 15:08:47.175: INFO: updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 09/27/23 15:08:47.175
  Sep 27 15:08:47.177: INFO: Observed &StatefulSet event: ADDED
  Sep 27 15:08:47.177: INFO: Found Statefulset ss in namespace statefulset-2362 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 15:08:47.177: INFO: Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 09/27/23 15:08:47.177
  Sep 27 15:08:47.177: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 15:08:47.191: INFO: Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 09/27/23 15:08:47.191
  Sep 27 15:08:47.192: INFO: Observed &StatefulSet event: ADDED
  Sep 27 15:08:47.192: INFO: Observed Statefulset ss in namespace statefulset-2362 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 15:08:47.192: INFO: Observed &StatefulSet event: MODIFIED
  Sep 27 15:08:47.192: INFO: Deleting all statefulset in ns statefulset-2362
  Sep 27 15:08:47.194: INFO: Scaling statefulset ss to 0
  Sep 27 15:08:57.219: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:08:57.221: INFO: Deleting statefulset ss
  Sep 27 15:08:57.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2362" for this suite. @ 09/27/23 15:08:57.248
• [20.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance]
test/e2e/kubectl/kubectl.go:996
  STEP: Creating a kubernetes client @ 09/27/23 15:08:57.273
  Sep 27 15:08:57.273: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:08:57.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:57.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:57.309
  STEP: create deployment with httpd image @ 09/27/23 15:08:57.318
  Sep 27 15:08:57.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-5417 create -f -'
  Sep 27 15:08:57.486: INFO: stderr: ""
  Sep 27 15:08:57.486: INFO: stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 09/27/23 15:08:57.486
  Sep 27 15:08:57.486: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-5417 diff -f -'
  Sep 27 15:08:57.639: INFO: rc: 1
  Sep 27 15:08:57.639: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-5417 delete -f -'
  Sep 27 15:08:57.726: INFO: stderr: ""
  Sep 27 15:08:57.726: INFO: stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  Sep 27 15:08:57.726: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5417" for this suite. @ 09/27/23 15:08:57.73
• [0.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc  [Conformance]
test/e2e/kubectl/kubectl.go:1641
  STEP: Creating a kubernetes client @ 09/27/23 15:08:57.749
  Sep 27 15:08:57.749: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:08:57.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:08:57.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:08:57.842
  STEP: creating Agnhost RC @ 09/27/23 15:08:57.845
  Sep 27 15:08:57.846: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6169 create -f -'
  Sep 27 15:08:58.124: INFO: stderr: ""
  Sep 27 15:08:58.124: INFO: stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 09/27/23 15:08:58.124
  Sep 27 15:08:59.130: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:08:59.130: INFO: Found 0 / 1
  Sep 27 15:09:00.127: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:09:00.128: INFO: Found 1 / 1
  Sep 27 15:09:00.128: INFO: WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 09/27/23 15:09:00.128
  Sep 27 15:09:00.131: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:09:00.131: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 15:09:00.131: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6169 patch pod agnhost-primary-nmj4b -p {"metadata":{"annotations":{"x":"y"}}}'
  Sep 27 15:09:00.203: INFO: stderr: ""
  Sep 27 15:09:00.203: INFO: stdout: "pod/agnhost-primary-nmj4b patched\n"
  STEP: checking annotations @ 09/27/23 15:09:00.203
  Sep 27 15:09:00.206: INFO: Selector matched 1 pods for map[app:agnhost]
  Sep 27 15:09:00.207: INFO: ForEach: Found 1 pods from the filter.  Now looping through them.
  Sep 27 15:09:00.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6169" for this suite. @ 09/27/23 15:09:00.21
• [2.478 seconds]
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:486
  STEP: Creating a kubernetes client @ 09/27/23 15:09:00.226
  Sep 27 15:09:00.226: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 15:09:00.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:09:00.271
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:09:00.275
  Sep 27 15:09:04.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1002" for this suite. @ 09/27/23 15:09:04.309
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:134
  STEP: Creating a kubernetes client @ 09/27/23 15:09:04.323
  Sep 27 15:09:04.323: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:09:04.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:09:04.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:09:04.377
  STEP: Creating pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245 @ 09/27/23 15:09:04.38
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:09:06.408
  Sep 27 15:09:06.411: INFO: Initial restart count of pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 is 0
  Sep 27 15:09:06.414: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:08.419: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:10.423: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:12.430: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:14.434: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:16.438: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:18.441: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:20.443: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:22.446: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:24.450: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:26.453: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:28.457: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:30.461: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:32.464: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:34.467: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:36.471: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:38.474: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:40.477: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:42.480: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:44.483: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:46.486: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:48.490: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:50.494: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:52.498: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:54.502: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:56.506: INFO: Get pod busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 in namespace container-probe-7245
  Sep 27 15:09:56.506: INFO: Restart count of pod container-probe-7245/busybox-0a78f88b-1306-4399-8d3a-13c7b2c42ae5 is now 1 (50.094945137s elapsed)
  Sep 27 15:09:56.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:09:56.509
  STEP: Destroying namespace "container-probe-7245" for this suite. @ 09/27/23 15:09:56.609
• [52.323 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance]
test/e2e/common/node/expansion.go:228
  STEP: Creating a kubernetes client @ 09/27/23 15:09:56.646
  Sep 27 15:09:56.647: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:09:56.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:09:56.779
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:09:56.782
  STEP: creating the pod with failed condition @ 09/27/23 15:09:56.785
  STEP: updating the pod @ 09/27/23 15:11:56.812
  Sep 27 15:11:57.340: INFO: Successfully updated pod "var-expansion-05d681a6-6704-43d7-8bc6-28e3e5fdba11"
  STEP: waiting for pod running @ 09/27/23 15:11:57.34
  STEP: deleting the pod gracefully @ 09/27/23 15:11:59.359
  Sep 27 15:11:59.359: INFO: Deleting pod "var-expansion-05d681a6-6704-43d7-8bc6-28e3e5fdba11" in namespace "var-expansion-6550"
  Sep 27 15:11:59.386: INFO: Wait up to 5m0s for pod "var-expansion-05d681a6-6704-43d7-8bc6-28e3e5fdba11" to be fully deleted
  Sep 27 15:12:31.454: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6550" for this suite. @ 09/27/23 15:12:31.456
• [154.832 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance]
test/e2e/apimachinery/garbage_collector.go:538
  STEP: Creating a kubernetes client @ 09/27/23 15:12:31.479
  Sep 27 15:12:31.479: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:12:31.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:12:31.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:12:31.511
  STEP: create the deployment @ 09/27/23 15:12:31.52
  W0927 15:12:31.533856      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/27/23 15:12:31.533
  STEP: delete the deployment @ 09/27/23 15:12:32.04
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 09/27/23 15:12:32.054
  STEP: Gathering metrics @ 09/27/23 15:12:32.569
  W0927 15:12:32.571570      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:12:32.571: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:12:32.571: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1172" for this suite. @ 09/27/23 15:12:32.573
• [1.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance]
test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 09/27/23 15:12:32.585
  Sep 27 15:12:32.585: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename taint-multiple-pods @ 09/27/23 15:12:32.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:12:32.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:12:32.625
  Sep 27 15:12:32.633: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 15:13:32.644: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:13:32.647: INFO: Starting informer...
  STEP: Starting pods... @ 09/27/23 15:13:32.647
  Sep 27 15:13:32.882: INFO: Pod1 is running on conformance-1. Tainting Node
  Sep 27 15:13:35.125: INFO: Pod2 is running on conformance-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/27/23 15:13:35.125
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:13:35.159
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 09/27/23 15:13:35.162
  Sep 27 15:13:41.137: INFO: Noticed Pod "taint-eviction-b1" gets evicted.
  Sep 27 15:14:01.079: INFO: Noticed Pod "taint-eviction-b2" gets evicted.
  Sep 27 15:14:01.079: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:14:01.1
  STEP: Destroying namespace "taint-multiple-pods-1520" for this suite. @ 09/27/23 15:14:01.103
• [88.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance]
test/e2e/scheduling/predicates.go:705
  STEP: Creating a kubernetes client @ 09/27/23 15:14:01.121
  Sep 27 15:14:01.121: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 15:14:01.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:14:01.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:14:01.17
  Sep 27 15:14:01.173: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 15:14:01.178: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:14:01.180: INFO: 
  Logging pods the apiserver thinks is on node conformance-2 before test
  Sep 27 15:14:01.187: INFO: calico-node-m6278 from kube-system started at 2023-09-27 14:10:45 +0000 UTC (1 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:44:47 +0000 UTC (1 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: sonobuoy-e2e-job-699828072b064365 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: coredns-864597b5fd-7fvch from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: calico-kube-controllers-77bd7c5b-d2rz9 from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:14:01.187: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 27 15:14:01.187: INFO: 
  Logging pods the apiserver thinks is on node conformance-1 before test
  Sep 27 15:14:01.193: INFO: calico-node-p5zf2 from kube-system started at 2023-09-27 14:09:43 +0000 UTC (1 container statuses recorded)
  Sep 27 15:14:01.193: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:14:01.193: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-78vx8 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:14:01.193: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:14:01.193: INFO: 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 15:14:01.193
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 15:14:03.219
  STEP: Trying to apply a random label on the found node. @ 09/27/23 15:14:03.266
  STEP: verifying the node has the label kubernetes.io/e2e-1d468694-463e-4e01-bf78-5d6d8716426b 95 @ 09/27/23 15:14:03.284
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 09/27/23 15:14:03.287
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.84.220.167 on the node which pod4 resides and expect not scheduled @ 09/27/23 15:14:05.311
  STEP: removing the label kubernetes.io/e2e-1d468694-463e-4e01-bf78-5d6d8716426b off the node conformance-1 @ 09/27/23 15:19:05.334
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-1d468694-463e-4e01-bf78-5d6d8716426b @ 09/27/23 15:19:05.361
  Sep 27 15:19:05.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3774" for this suite. @ 09/27/23 15:19:05.383
• [304.278 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 09/27/23 15:19:05.403
  Sep 27 15:19:05.403: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:19:05.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:05.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:05.438
  STEP: Creating a pod to test override arguments @ 09/27/23 15:19:05.444
  STEP: Saw pod success @ 09/27/23 15:19:09.468
  Sep 27 15:19:09.470: INFO: Trying to get logs from node conformance-1 pod client-containers-fb6db527-a161-4e10-9078-ded74dfa99f0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:19:09.476
  Sep 27 15:19:09.519: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4760" for this suite. @ 09/27/23 15:19:09.521
• [4.131 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:47
  STEP: Creating a kubernetes client @ 09/27/23 15:19:09.533
  Sep 27 15:19:09.533: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:19:09.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:09.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:09.623
  STEP: Creating a pod to test env composition @ 09/27/23 15:19:09.629
  STEP: Saw pod success @ 09/27/23 15:19:13.659
  Sep 27 15:19:13.660: INFO: Trying to get logs from node conformance-1 pod var-expansion-24e730aa-2eed-411c-a860-484bce56d3a8 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:19:13.664
  Sep 27 15:19:13.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6484" for this suite. @ 09/27/23 15:19:13.712
• [4.195 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:157
  STEP: Creating a kubernetes client @ 09/27/23 15:19:13.728
  Sep 27 15:19:13.728: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:19:13.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:13.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:13.788
  STEP: Creating a pod to test emptydir volume type on node default medium @ 09/27/23 15:19:13.789
  STEP: Saw pod success @ 09/27/23 15:19:17.815
  Sep 27 15:19:17.817: INFO: Trying to get logs from node conformance-1 pod pod-f2b92222-63a5-4f71-8550-9b9468177064 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:19:17.82
  Sep 27 15:19:17.858: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5823" for this suite. @ 09/27/23 15:19:17.86
• [4.143 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance]
test/e2e/apimachinery/garbage_collector.go:713
  STEP: Creating a kubernetes client @ 09/27/23 15:19:17.872
  Sep 27 15:19:17.872: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:19:17.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:19:17.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:19:17.915
  STEP: create the rc1 @ 09/27/23 15:19:17.919
  STEP: create the rc2 @ 09/27/23 15:19:17.933
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 09/27/23 15:19:26.015
  STEP: delete the rc simpletest-rc-to-be-deleted @ 09/27/23 15:19:35.831
  STEP: wait for the rc to be deleted @ 09/27/23 15:19:35.984
  Sep 27 15:19:41.089: INFO: 76 pods remaining
  Sep 27 15:19:41.089: INFO: 72 pods has nil DeletionTimestamp
  Sep 27 15:19:41.089: INFO: 
  STEP: Gathering metrics @ 09/27/23 15:19:46.058
  W0927 15:19:46.083284      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:19:46.083: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:19:46.083: INFO: Deleting pod "simpletest-rc-to-be-deleted-lqfh2" in namespace "gc-1613"
  Sep 27 15:19:46.370: INFO: Deleting pod "simpletest-rc-to-be-deleted-7dqdl" in namespace "gc-1613"
  Sep 27 15:19:46.653: INFO: Deleting pod "simpletest-rc-to-be-deleted-t78gw" in namespace "gc-1613"
  Sep 27 15:19:46.898: INFO: Deleting pod "simpletest-rc-to-be-deleted-wm5f8" in namespace "gc-1613"
  Sep 27 15:19:47.206: INFO: Deleting pod "simpletest-rc-to-be-deleted-wf6xp" in namespace "gc-1613"
  Sep 27 15:19:47.630: INFO: Deleting pod "simpletest-rc-to-be-deleted-ddz8x" in namespace "gc-1613"
  Sep 27 15:19:48.025: INFO: Deleting pod "simpletest-rc-to-be-deleted-t2ndg" in namespace "gc-1613"
  Sep 27 15:19:48.804: INFO: Deleting pod "simpletest-rc-to-be-deleted-5jl8f" in namespace "gc-1613"
  Sep 27 15:19:49.164: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkcgj" in namespace "gc-1613"
  Sep 27 15:19:49.427: INFO: Deleting pod "simpletest-rc-to-be-deleted-nkkxf" in namespace "gc-1613"
  Sep 27 15:19:49.697: INFO: Deleting pod "simpletest-rc-to-be-deleted-zm2fx" in namespace "gc-1613"
  Sep 27 15:19:49.923: INFO: Deleting pod "simpletest-rc-to-be-deleted-bspdp" in namespace "gc-1613"
  Sep 27 15:19:50.198: INFO: Deleting pod "simpletest-rc-to-be-deleted-jqs2d" in namespace "gc-1613"
  Sep 27 15:19:50.452: INFO: Deleting pod "simpletest-rc-to-be-deleted-99kbq" in namespace "gc-1613"
  Sep 27 15:19:50.872: INFO: Deleting pod "simpletest-rc-to-be-deleted-tdgn6" in namespace "gc-1613"
  Sep 27 15:19:51.310: INFO: Deleting pod "simpletest-rc-to-be-deleted-l2kqw" in namespace "gc-1613"
  Sep 27 15:19:51.593: INFO: Deleting pod "simpletest-rc-to-be-deleted-b9vvs" in namespace "gc-1613"
  Sep 27 15:19:51.788: INFO: Deleting pod "simpletest-rc-to-be-deleted-pmk85" in namespace "gc-1613"
  Sep 27 15:19:51.986: INFO: Deleting pod "simpletest-rc-to-be-deleted-bj7r9" in namespace "gc-1613"
  Sep 27 15:19:52.145: INFO: Deleting pod "simpletest-rc-to-be-deleted-fbqvk" in namespace "gc-1613"
  Sep 27 15:19:52.295: INFO: Deleting pod "simpletest-rc-to-be-deleted-pgbcr" in namespace "gc-1613"
  Sep 27 15:19:52.572: INFO: Deleting pod "simpletest-rc-to-be-deleted-fzs8m" in namespace "gc-1613"
  Sep 27 15:19:52.817: INFO: Deleting pod "simpletest-rc-to-be-deleted-mfwk9" in namespace "gc-1613"
  Sep 27 15:19:53.034: INFO: Deleting pod "simpletest-rc-to-be-deleted-w76ts" in namespace "gc-1613"
  Sep 27 15:19:53.349: INFO: Deleting pod "simpletest-rc-to-be-deleted-f49rp" in namespace "gc-1613"
  Sep 27 15:19:53.653: INFO: Deleting pod "simpletest-rc-to-be-deleted-6dqwb" in namespace "gc-1613"
  Sep 27 15:19:53.990: INFO: Deleting pod "simpletest-rc-to-be-deleted-wcr8d" in namespace "gc-1613"
  Sep 27 15:19:54.187: INFO: Deleting pod "simpletest-rc-to-be-deleted-t4trq" in namespace "gc-1613"
  Sep 27 15:19:54.726: INFO: Deleting pod "simpletest-rc-to-be-deleted-z72pp" in namespace "gc-1613"
  Sep 27 15:19:54.869: INFO: Deleting pod "simpletest-rc-to-be-deleted-dc57s" in namespace "gc-1613"
  Sep 27 15:19:55.088: INFO: Deleting pod "simpletest-rc-to-be-deleted-xfssm" in namespace "gc-1613"
  Sep 27 15:19:55.277: INFO: Deleting pod "simpletest-rc-to-be-deleted-h8kzq" in namespace "gc-1613"
  Sep 27 15:19:55.512: INFO: Deleting pod "simpletest-rc-to-be-deleted-dkgbw" in namespace "gc-1613"
  Sep 27 15:19:56.029: INFO: Deleting pod "simpletest-rc-to-be-deleted-6qjkv" in namespace "gc-1613"
  Sep 27 15:19:56.278: INFO: Deleting pod "simpletest-rc-to-be-deleted-pxss2" in namespace "gc-1613"
  Sep 27 15:19:56.430: INFO: Deleting pod "simpletest-rc-to-be-deleted-tdjmw" in namespace "gc-1613"
  Sep 27 15:19:56.663: INFO: Deleting pod "simpletest-rc-to-be-deleted-sf28b" in namespace "gc-1613"
  Sep 27 15:19:56.864: INFO: Deleting pod "simpletest-rc-to-be-deleted-5777p" in namespace "gc-1613"
  Sep 27 15:19:57.135: INFO: Deleting pod "simpletest-rc-to-be-deleted-zgzmr" in namespace "gc-1613"
  Sep 27 15:19:57.265: INFO: Deleting pod "simpletest-rc-to-be-deleted-fqwwp" in namespace "gc-1613"
  Sep 27 15:19:57.647: INFO: Deleting pod "simpletest-rc-to-be-deleted-v7mch" in namespace "gc-1613"
  Sep 27 15:19:57.771: INFO: Deleting pod "simpletest-rc-to-be-deleted-s2p6r" in namespace "gc-1613"
  Sep 27 15:19:58.211: INFO: Deleting pod "simpletest-rc-to-be-deleted-xfrfb" in namespace "gc-1613"
  Sep 27 15:19:58.363: INFO: Deleting pod "simpletest-rc-to-be-deleted-fpvpz" in namespace "gc-1613"
  Sep 27 15:19:58.569: INFO: Deleting pod "simpletest-rc-to-be-deleted-8cj6m" in namespace "gc-1613"
  Sep 27 15:19:58.755: INFO: Deleting pod "simpletest-rc-to-be-deleted-6lf2h" in namespace "gc-1613"
  Sep 27 15:19:58.926: INFO: Deleting pod "simpletest-rc-to-be-deleted-bnsdc" in namespace "gc-1613"
  Sep 27 15:19:59.127: INFO: Deleting pod "simpletest-rc-to-be-deleted-56pwp" in namespace "gc-1613"
  Sep 27 15:19:59.568: INFO: Deleting pod "simpletest-rc-to-be-deleted-rhvpj" in namespace "gc-1613"
  Sep 27 15:19:59.784: INFO: Deleting pod "simpletest-rc-to-be-deleted-7xcz5" in namespace "gc-1613"
  Sep 27 15:20:00.087: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1613" for this suite. @ 09/27/23 15:20:00.147
• [42.588 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance]
test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 09/27/23 15:20:00.463
  Sep 27 15:20:00.463: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:20:00.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:00.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:00.844
  Sep 27 15:20:00.885: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  W0927 15:20:03.762240      21 warnings.go:70] unknown field "alpha"
  W0927 15:20:03.762270      21 warnings.go:70] unknown field "beta"
  W0927 15:20:03.762277      21 warnings.go:70] unknown field "delta"
  W0927 15:20:03.762282      21 warnings.go:70] unknown field "epsilon"
  W0927 15:20:03.762287      21 warnings.go:70] unknown field "gamma"
  Sep 27 15:20:04.537: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7803" for this suite. @ 09/27/23 15:20:04.567
• [4.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance]
test/e2e/network/service.go:1455
  STEP: Creating a kubernetes client @ 09/27/23 15:20:04.631
  Sep 27 15:20:04.631: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:20:04.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:04.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:04.794
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3233 @ 09/27/23 15:20:04.799
  STEP: changing the ExternalName service to type=NodePort @ 09/27/23 15:20:04.931
  STEP: creating replication controller externalname-service in namespace services-3233 @ 09/27/23 15:20:05.186
  I0927 15:20:05.292443      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3233, replica count: 2
  I0927 15:20:08.345158      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:20:11.346063      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:20:14.346536      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:20:17.347632      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 0 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:20:20.347988      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:20:23.348891      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:20:23.349: INFO: Creating new exec pod
  Sep 27 15:20:26.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3233 exec execpodpx9ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:20:26.623: INFO: stderr: "+ echo+ nc hostName\n -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:20:26.623: INFO: stdout: ""
  Sep 27 15:20:27.624: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3233 exec execpodpx9ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:20:27.829: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:20:27.829: INFO: stdout: "externalname-service-s7s2w"
  Sep 27 15:20:27.829: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3233 exec execpodpx9ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.234 80'
  Sep 27 15:20:28.017: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.234 80\nConnection to 10.152.183.234 80 port [tcp/http] succeeded!\n"
  Sep 27 15:20:28.017: INFO: stdout: "externalname-service-s7s2w"
  Sep 27 15:20:28.017: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3233 exec execpodpx9ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.103 31777'
  Sep 27 15:20:28.255: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.103 31777\nConnection to 10.84.220.103 31777 port [tcp/*] succeeded!\n"
  Sep 27 15:20:28.255: INFO: stdout: "externalname-service-c62jm"
  Sep 27 15:20:28.255: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3233 exec execpodpx9ll -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.167 31777'
  Sep 27 15:20:28.602: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.167 31777\nConnection to 10.84.220.167 31777 port [tcp/*] succeeded!\n"
  Sep 27 15:20:28.602: INFO: stdout: "externalname-service-c62jm"
  Sep 27 15:20:28.602: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:20:28.608: INFO: Cleaning up the ExternalName to NodePort test service
  STEP: Destroying namespace "services-3233" for this suite. @ 09/27/23 15:20:28.691
• [24.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance]
test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 09/27/23 15:20:28.71
  Sep 27 15:20:28.710: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:20:28.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:20:28.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:20:28.767
  Sep 27 15:20:28.816: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 15:21:28.831: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/27/23 15:21:28.833
  Sep 27 15:21:28.869: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 27 15:21:28.893: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 27 15:21:28.945: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 27 15:21:28.967: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/27/23 15:21:28.967
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 09/27/23 15:21:33.007
  Sep 27 15:21:37.050: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2494" for this suite. @ 09/27/23 15:21:37.108
• [68.412 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:184
  STEP: Creating a kubernetes client @ 09/27/23 15:21:37.124
  Sep 27 15:21:37.124: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 15:21:37.124
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:21:37.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:21:37.171
  Sep 27 15:21:39.211: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7003" for this suite. @ 09/27/23 15:21:39.214
• [2.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance]
test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 09/27/23 15:21:39.242
  Sep 27 15:21:39.242: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:21:39.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:21:39.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:21:39.287
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 15:21:39.311
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 15:21:39.323
  Sep 27 15:21:39.328: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:21:39.328: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:21:40.337: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:21:40.337: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:21:41.336: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:21:41.336: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 09/27/23 15:21:41.339
  Sep 27 15:21:41.375: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:21:41.375: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:21:42.382: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:21:42.382: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:21:43.470: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:21:43.470: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:21:44.406: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:21:44.406: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:21:45.386: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:21:45.386: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:21:46.384: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:21:46.384: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:21:46.387
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-675, will wait for the garbage collector to delete the pods @ 09/27/23 15:21:46.387
  Sep 27 15:21:46.471: INFO: Deleting DaemonSet.extensions daemon-set took: 30.980727ms
  Sep 27 15:21:46.572: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.970465ms
  Sep 27 15:21:48.578: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:21:48.578: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:21:48.582: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20741"},"items":null}

  Sep 27 15:21:48.585: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20741"},"items":null}

  Sep 27 15:21:48.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-675" for this suite. @ 09/27/23 15:21:48.597
• [9.373 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance]
test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 09/27/23 15:21:48.617
  Sep 27 15:21:48.617: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:21:48.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:21:48.663
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:21:48.668
  STEP: Creating a ForbidConcurrent cronjob @ 09/27/23 15:21:48.671
  STEP: Ensuring a job is scheduled @ 09/27/23 15:21:48.685
  STEP: Ensuring exactly one is scheduled @ 09/27/23 15:22:00.689
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 09/27/23 15:22:00.691
  STEP: Ensuring no more jobs are scheduled @ 09/27/23 15:22:00.693
  STEP: Removing cronjob @ 09/27/23 15:27:00.7
  Sep 27 15:27:00.727: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7117" for this suite. @ 09/27/23 15:27:00.731
• [312.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance]
test/e2e/apimachinery/namespace.go:303
  STEP: Creating a kubernetes client @ 09/27/23 15:27:00.747
  Sep 27 15:27:00.747: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:27:00.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:00.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:00.842
  STEP: Read namespace status @ 09/27/23 15:27:00.844
  Sep 27 15:27:00.846: INFO: Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 09/27/23 15:27:00.847
  Sep 27 15:27:00.860: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 09/27/23 15:27:00.86
  Sep 27 15:27:00.879: INFO: Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  Sep 27 15:27:00.880: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-2286" for this suite. @ 09/27/23 15:27:00.883
• [0.149 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service  [Conformance]
test/e2e/network/service.go:775
  STEP: Creating a kubernetes client @ 09/27/23 15:27:00.898
  Sep 27 15:27:00.899: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:27:00.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:00.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:00.947
  Sep 27 15:27:00.951: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9840" for this suite. @ 09/27/23 15:27:00.954
• [0.068 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/replica_set.go:111
  STEP: Creating a kubernetes client @ 09/27/23 15:27:00.967
  Sep 27 15:27:00.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:27:00.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:01.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:01.023
  Sep 27 15:27:01.025: INFO: Creating ReplicaSet my-hostname-basic-bae0b317-0e83-41f0-bf88-cfe19523524c
  Sep 27 15:27:01.046: INFO: Pod name my-hostname-basic-bae0b317-0e83-41f0-bf88-cfe19523524c: Found 0 pods out of 1
  Sep 27 15:27:06.050: INFO: Pod name my-hostname-basic-bae0b317-0e83-41f0-bf88-cfe19523524c: Found 1 pods out of 1
  Sep 27 15:27:06.050: INFO: Ensuring a pod for ReplicaSet "my-hostname-basic-bae0b317-0e83-41f0-bf88-cfe19523524c" is running
  Sep 27 15:27:06.054: INFO: Pod "my-hostname-basic-bae0b317-0e83-41f0-bf88-cfe19523524c-nr5ld" is running (conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:01 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:02 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:02 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:27:01 +0000 UTC Reason: Message:}])
  Sep 27 15:27:06.054: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/27/23 15:27:06.054
  Sep 27 15:27:06.066: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6797" for this suite. @ 09/27/23 15:27:06.069
• [5.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance]
test/e2e/apps/job.go:713
  STEP: Creating a kubernetes client @ 09/27/23 15:27:06.095
  Sep 27 15:27:06.095: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 15:27:06.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:06.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:06.172
  STEP: Creating a suspended job @ 09/27/23 15:27:06.186
  STEP: Patching the Job @ 09/27/23 15:27:06.214
  STEP: Watching for Job to be patched @ 09/27/23 15:27:06.293
  Sep 27 15:27:06.295: INFO: Event ADDED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz] and annotations: map[]
  Sep 27 15:27:06.295: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz] and annotations: map[]
  Sep 27 15:27:06.295: INFO: Event MODIFIED found for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[]
  STEP: Updating the job @ 09/27/23 15:27:06.295
  STEP: Watching for Job to be updated @ 09/27/23 15:27:06.329
  Sep 27 15:27:06.332: INFO: Event MODIFIED found for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:06.332: INFO: Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 09/27/23 15:27:06.333
  Sep 27 15:27:06.336: INFO: Job: e2e-p4qmz as labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched]
  STEP: Waiting for job to complete @ 09/27/23 15:27:06.336
  STEP: Delete a job collection with a labelselector @ 09/27/23 15:27:14.34
  STEP: Watching for Job to be deleted @ 09/27/23 15:27:14.359
  Sep 27 15:27:14.362: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:14.362: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:14.363: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:14.363: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:14.363: INFO: Event MODIFIED observed for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  Sep 27 15:27:14.363: INFO: Event DELETED found for Job e2e-p4qmz in namespace job-5661 with labels: map[e2e-job-label:e2e-p4qmz e2e-p4qmz:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 09/27/23 15:27:14.363
  Sep 27 15:27:14.368: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5661" for this suite. @ 09/27/23 15:27:14.372
• [8.335 seconds]
------------------------------
SSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance]
test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 09/27/23 15:27:14.438
  Sep 27 15:27:14.438: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename events @ 09/27/23 15:27:14.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:14.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:14.511
  STEP: creating a test event @ 09/27/23 15:27:14.517
  STEP: listing events in all namespaces @ 09/27/23 15:27:14.53
  STEP: listing events in test namespace @ 09/27/23 15:27:14.536
  STEP: listing events with field selection filtering on source @ 09/27/23 15:27:14.538
  STEP: listing events with field selection filtering on reportingController @ 09/27/23 15:27:14.541
  STEP: getting the test event @ 09/27/23 15:27:14.543
  STEP: patching the test event @ 09/27/23 15:27:14.545
  STEP: getting the test event @ 09/27/23 15:27:14.568
  STEP: updating the test event @ 09/27/23 15:27:14.57
  STEP: getting the test event @ 09/27/23 15:27:14.585
  STEP: deleting the test event @ 09/27/23 15:27:14.588
  STEP: listing events in all namespaces @ 09/27/23 15:27:14.603
  STEP: listing events in test namespace @ 09/27/23 15:27:14.608
  Sep 27 15:27:14.612: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7871" for this suite. @ 09/27/23 15:27:14.616
• [0.196 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance]
test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 09/27/23 15:27:14.636
  Sep 27 15:27:14.636: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 15:27:14.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:14.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:14.672
  STEP: creating a Deployment @ 09/27/23 15:27:14.685
  STEP: waiting for Deployment to be created @ 09/27/23 15:27:14.698
  STEP: waiting for all Replicas to be Ready @ 09/27/23 15:27:14.702
  Sep 27 15:27:14.704: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.704: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.730: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.730: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.764: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.764: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.901: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:14.901: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  Sep 27 15:27:16.074: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 27 15:27:16.074: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  Sep 27 15:27:17.119: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 09/27/23 15:27:17.12
  Sep 27 15:27:17.139: INFO: observed event type ADDED
  STEP: waiting for Replicas to scale @ 09/27/23 15:27:17.139
  Sep 27 15:27:17.140: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 0
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.141: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.188: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.188: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.269: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.269: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:17.315: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:17.315: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:17.364: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:17.364: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:19.135: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:19.135: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:19.218: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  STEP: listing Deployments @ 09/27/23 15:27:19.218
  Sep 27 15:27:19.222: INFO: Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 09/27/23 15:27:19.222
  Sep 27 15:27:19.247: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 09/27/23 15:27:19.247
  Sep 27 15:27:19.252: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:19.303: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:19.423: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:19.467: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:19.570: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:21.087: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:21.229: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:21.316: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:21.365: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  Sep 27 15:27:23.169: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 09/27/23 15:27:23.235
  STEP: fetching the DeploymentStatus @ 09/27/23 15:27:23.254
  Sep 27 15:27:23.258: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:23.258: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:23.258: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:23.258: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 1
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 3
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 2
  Sep 27 15:27:23.259: INFO: observed Deployment test-deployment in namespace deployment-3050 with ReadyReplicas 3
  STEP: deleting the Deployment @ 09/27/23 15:27:23.259
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.283: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.284: INFO: observed event type MODIFIED
  Sep 27 15:27:23.291: INFO: Log out all the ReplicaSets if there is no deployment created
  Sep 27 15:27:23.295: INFO: ReplicaSet "test-deployment-69d58987ff":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-69d58987ff",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbc76604-99ab-4f60-a78d-15df07b4ee61",
      ResourceVersion: (string) (len=5) "21590",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425234,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d8a3a8c5-2414-4c9f-bbe1-4cd6a493e80c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 38 61 33  61 38 63 35 2d 32 34 31  |":\"d8a3a8c5-241|
              00000130  34 2d 34 63 39 66 2d 62  62 65 31 2d 34 63 64 36  |4-4c9f-bbe1-4cd6|
              00000140  61 34 39 33 65 38 30 63  5c 22 7d 22 3a 7b 7d 7d  |a493e80c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "69d58987ff",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 15:27:23.302: INFO: ReplicaSet "test-deployment-79ff746c4":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=25) "test-deployment-79ff746c4",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6dbed0f8-738f-41fb-b24a-bce9a78d7ede",
      ResourceVersion: (string) (len=5) "21712",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d8a3a8c5-2414-4c9f-bbe1-4cd6a493e80c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 38 61 33  61 38 63 35 2d 32 34 31  |":\"d8a3a8c5-241|
              00000130  34 2d 34 63 39 66 2d 62  62 65 31 2d 34 63 64 36  |4-4c9f-bbe1-4cd6|
              00000140  61 34 39 33 65 38 30 63  5c 22 7d 22 3a 7b 7d 7d  |a493e80c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 15:27:23.308: INFO: pod: "test-deployment-79ff746c4-w995r":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-w995r",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7355e412-b89e-432a-9a7d-e56f5dce32ec",
      ResourceVersion: (string) (len=5) "21671",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7807b12bce0c2dbf25d9c2720b1c175b66df233e1cbdc4e103e5872d536a0641",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.20.92/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.20.92/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "6dbed0f8-738f-41fb-b24a-bce9a78d7ede",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 64 62 65 64 30 66 38  |uid\":\"6dbed0f8|
              000000a0  2d 37 33 38 66 2d 34 31  66 62 2d 62 32 34 61 2d  |-738f-41fb-b24a-|
              000000b0  62 63 65 39 61 37 38 64  37 65 64 65 5c 22 7d 22  |bce9a78d7ede\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  39 32 5c 22 7d 22 3a 7b  |10.1.20.92\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t2cq6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t2cq6",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.1.20.92",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.20.92"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831425240,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c1a99d34838c97a79f1e47c9a56eb6a111f93cacc52e4cfa4cb54a0f12c49c82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 15:27:23.310: INFO: pod: "test-deployment-79ff746c4-zmr8t":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-79ff746c4-zmr8t",
      GenerateName: (string) (len=26) "test-deployment-79ff746c4-",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0cde04f-edf3-433b-948c-c9aa08400c9b",
      ResourceVersion: (string) (len=5) "21711",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "79ff746c4",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9a87c22b67f5a2a6b6478d0cfc18d4a27c489be62bde34f66fdaa048243b171b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.51/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.51/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=25) "test-deployment-79ff746c4",
          UID: (types.UID) (len=36) "6dbed0f8-738f-41fb-b24a-bce9a78d7ede",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 64 62 65 64 30 66 38  |uid\":\"6dbed0f8|
              000000a0  2d 37 33 38 66 2d 34 31  66 62 2d 62 32 34 61 2d  |-738f-41fb-b24a-|
              000000b0  62 63 65 39 61 37 38 64  37 65 64 65 5c 22 7d 22  |bce9a78d7ede\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 35 31 5c 22 7d 22 3a  |10.1.212.51\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8rs7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8rs7",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425242,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425241,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.51",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.51"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425241,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831425242,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://49b9117a4f070b8bac97ec07b8d7f39f2377f52c392f845aab3285513687872d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 15:27:23.311: INFO: ReplicaSet "test-deployment-64fd565c98":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-64fd565c98",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "94c4ba56-fa87-42d0-b200-4fad7f9904e7",
      ResourceVersion: (string) (len=5) "21719",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425237,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d8a3a8c5-2414-4c9f-bbe1-4cd6a493e80c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 38 61 33  61 38 63 35 2d 32 34 31  |":\"d8a3a8c5-241|
              00000130  34 2d 34 63 39 66 2d 62  62 65 31 2d 34 63 64 36  |4-4c9f-bbe1-4cd6|
              00000140  61 34 39 33 65 38 30 63  5c 22 7d 22 3a 7b 7d 7d  |a493e80c\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425243,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  Sep 27 15:27:23.315: INFO: pod: "test-deployment-64fd565c98-vmtxw":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-64fd565c98-vmtxw",
      GenerateName: (string) (len=27) "test-deployment-64fd565c98-",
      Namespace: (string) (len=15) "deployment-3050",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c902dc4b-b65e-42c1-bc49-ef33e7e76062",
      ResourceVersion: (string) (len=5) "21715",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425245,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=22) "test-deployment-static": (string) (len=4) "true",
        (string) (len=17) "pod-template-hash": (string) (len=10) "64fd565c98"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ba04d4a916c32dc9fd8e0eb49b39788d4a481ca84929ed0b47567c56a724c269",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.212.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.212.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-64fd565c98",
          UID: (types.UID) (len=36) "94c4ba56-fa87-42d0-b200-4fad7f9904e7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  39 34 63 34 62 61 35 36  |uid\":\"94c4ba56|
              000000a0  2d 66 61 38 37 2d 34 32  64 30 2d 62 32 30 30 2d  |-fa87-42d0-b200-|
              000000b0  34 66 61 64 37 66 39 39  30 34 65 37 5c 22 7d 22  |4fad7f9904e7\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 31 32  2e 35 30 5c 22 7d 22 3a  |10.1.212.50\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5nrpn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5nrpn",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425240,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425239,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.103",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.212.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.212.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425239,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831425240,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://a5e0d3879cb7aa8160e1af9258a5d4b0b446378b49ff6d51ee47c663fb5adb50",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  Sep 27 15:27:23.323: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3050" for this suite. @ 09/27/23 15:27:23.327
• [8.732 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 09/27/23 15:27:23.371
  Sep 27 15:27:23.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:27:23.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:23.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:23.435
  STEP: creating the pod @ 09/27/23 15:27:23.438
  STEP: setting up watch @ 09/27/23 15:27:23.438
  STEP: submitting the pod to kubernetes @ 09/27/23 15:27:23.542
  STEP: verifying the pod is in kubernetes @ 09/27/23 15:27:23.56
  STEP: verifying pod creation was observed @ 09/27/23 15:27:23.565
  STEP: deleting the pod gracefully @ 09/27/23 15:27:25.577
  STEP: verifying pod deletion was observed @ 09/27/23 15:27:25.606
  Sep 27 15:27:28.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8520" for this suite. @ 09/27/23 15:27:28.13
• [4.775 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance]
test/e2e/kubectl/kubectl.go:1027
  STEP: Creating a kubernetes client @ 09/27/23 15:27:28.146
  Sep 27 15:27:28.146: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:27:28.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:28.216
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:28.221
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:27:28.225
  Sep 27 15:27:28.225: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-326 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 27 15:27:28.357: INFO: stderr: ""
  Sep 27 15:27:28.358: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 09/27/23 15:27:28.358
  Sep 27 15:27:28.367: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-326 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.29-4"}]}} --dry-run=server'
  Sep 27 15:27:28.510: INFO: stderr: ""
  Sep 27 15:27:28.510: INFO: stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:27:28.51
  Sep 27 15:27:28.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-326 delete pods e2e-test-httpd-pod'
  Sep 27 15:27:30.160: INFO: stderr: ""
  Sep 27 15:27:30.160: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 15:27:30.160: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-326" for this suite. @ 09/27/23 15:27:30.166
• [2.038 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:131
  STEP: Creating a kubernetes client @ 09/27/23 15:27:30.184
  Sep 27 15:27:30.184: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:27:30.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:30.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:30.233
  STEP: Creating the pod @ 09/27/23 15:27:30.238
  Sep 27 15:27:32.800: INFO: Successfully updated pod "labelsupdate00912b9e-d4c4-4fbc-90b1-e584e03d50be"
  Sep 27 15:27:34.817: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2071" for this suite. @ 09/27/23 15:27:34.82
• [4.662 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:85
  STEP: Creating a kubernetes client @ 09/27/23 15:27:34.847
  Sep 27 15:27:34.847: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:27:34.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:34.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:34.891
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:27:34.893
  STEP: Saw pod success @ 09/27/23 15:27:38.924
  Sep 27 15:27:38.927: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-75c093e4-d685-4e9e-ad27-e8a592bd5b5e container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:27:38.931
  Sep 27 15:27:38.965: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7459" for this suite. @ 09/27/23 15:27:38.968
• [4.138 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance]
test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 09/27/23 15:27:38.986
  Sep 27 15:27:38.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:27:38.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:27:39.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:27:39.035
  STEP: Setting up data @ 09/27/23 15:27:39.038
  STEP: Creating pod pod-subpath-test-secret-ckk4 @ 09/27/23 15:27:39.063
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:27:39.063
  STEP: Saw pod success @ 09/27/23 15:28:03.128
  Sep 27 15:28:03.130: INFO: Trying to get logs from node conformance-1 pod pod-subpath-test-secret-ckk4 container test-container-subpath-secret-ckk4: <nil>
  STEP: delete the pod @ 09/27/23 15:28:03.134
  STEP: Deleting pod pod-subpath-test-secret-ckk4 @ 09/27/23 15:28:03.185
  Sep 27 15:28:03.185: INFO: Deleting pod "pod-subpath-test-secret-ckk4" in namespace "subpath-9481"
  Sep 27 15:28:03.187: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9481" for this suite. @ 09/27/23 15:28:03.189
• [24.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance]
test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 09/27/23 15:28:03.205
  Sep 27 15:28:03.205: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:28:03.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:03.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:03.259
  STEP: Setting up server cert @ 09/27/23 15:28:03.335
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:28:03.786
  STEP: Deploying the webhook pod @ 09/27/23 15:28:03.8
  STEP: Wait for the deployment to be ready @ 09/27/23 15:28:03.835
  Sep 27 15:28:03.840: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:28:05.847
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:28:05.881
  Sep 27 15:28:06.882: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 09/27/23 15:28:06.887
  STEP: create a namespace for the webhook @ 09/27/23 15:28:06.914
  STEP: create a configmap should be unconditionally rejected by the webhook @ 09/27/23 15:28:06.994
  Sep 27 15:28:07.001: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7150" for this suite. @ 09/27/23 15:28:07.137
  STEP: Destroying namespace "webhook-markers-9591" for this suite. @ 09/27/23 15:28:07.164
  STEP: Destroying namespace "fail-closed-namespace-9561" for this suite. @ 09/27/23 15:28:07.188
• [3.995 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance]
test/e2e/network/endpointslice.go:207
  STEP: Creating a kubernetes client @ 09/27/23 15:28:07.2
  Sep 27 15:28:07.200: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 15:28:07.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:07.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:07.231
  STEP: referencing a single matching pod @ 09/27/23 15:28:12.441
  STEP: referencing matching pods with named port @ 09/27/23 15:28:17.447
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 09/27/23 15:28:22.453
  STEP: recreating EndpointSlices after they've been deleted @ 09/27/23 15:28:27.461
  Sep 27 15:28:27.507: INFO: EndpointSlice for Service endpointslice-8787/example-named-port not found
  Sep 27 15:28:37.515: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8787" for this suite. @ 09/27/23 15:28:37.518
• [30.347 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:207
  STEP: Creating a kubernetes client @ 09/27/23 15:28:37.555
  Sep 27 15:28:37.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:28:37.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:37.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:37.609
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/27/23 15:28:37.612
  STEP: Saw pod success @ 09/27/23 15:28:41.652
  Sep 27 15:28:41.655: INFO: Trying to get logs from node conformance-1 pod pod-7a29985b-e84a-438b-b70b-4c4727bdd69d container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:28:41.659
  Sep 27 15:28:41.703: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7953" for this suite. @ 09/27/23 15:28:41.707
• [4.166 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance]
test/e2e/network/service.go:2224
  STEP: Creating a kubernetes client @ 09/27/23 15:28:41.722
  Sep 27 15:28:41.722: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:28:41.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:41.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:41.764
  STEP: creating service in namespace services-9946 @ 09/27/23 15:28:41.772
  STEP: creating service affinity-nodeport-transition in namespace services-9946 @ 09/27/23 15:28:41.772
  STEP: creating replication controller affinity-nodeport-transition in namespace services-9946 @ 09/27/23 15:28:41.814
  I0927 15:28:41.833823      21 runners.go:197] Created replication controller with name: affinity-nodeport-transition, namespace: services-9946, replica count: 3
  I0927 15:28:44.884440      21 runners.go:197] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:28:44.896: INFO: Creating new exec pod
  Sep 27 15:28:47.931: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  Sep 27 15:28:48.055: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  Sep 27 15:28:48.055: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:28:48.055: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.143 80'
  Sep 27 15:28:48.219: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.143 80\nConnection to 10.152.183.143 80 port [tcp/http] succeeded!\n"
  Sep 27 15:28:48.219: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:28:48.219: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.103 31383'
  Sep 27 15:28:48.374: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.103 31383\nConnection to 10.84.220.103 31383 port [tcp/*] succeeded!\n"
  Sep 27 15:28:48.374: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:28:48.374: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.167 31383'
  Sep 27 15:28:48.548: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.167 31383\nConnection to 10.84.220.167 31383 port [tcp/*] succeeded!\n"
  Sep 27 15:28:48.548: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:28:48.565: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.84.220.103:31383/ ; done'
  Sep 27 15:28:48.805: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n"
  Sep 27 15:28:48.805: INFO: stdout: "\naffinity-nodeport-transition-nccvs\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-nccvs\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-gzlpv\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-gzlpv\naffinity-nodeport-transition-nccvs\naffinity-nodeport-transition-nccvs\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-nccvs\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-nccvs"
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-gzlpv
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-gzlpv
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:48.805: INFO: Received response from host: affinity-nodeport-transition-nccvs
  Sep 27 15:28:48.827: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-9946 exec execpod-affinityfhj6j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.84.220.103:31383/ ; done'
  Sep 27 15:28:49.088: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.84.220.103:31383/\n"
  Sep 27 15:28:49.088: INFO: stdout: "\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn\naffinity-nodeport-transition-zbbfn"
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.088: INFO: Received response from host: affinity-nodeport-transition-zbbfn
  Sep 27 15:28:49.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:28:49.093: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-9946, will wait for the garbage collector to delete the pods @ 09/27/23 15:28:49.146
  Sep 27 15:28:49.226: INFO: Deleting ReplicationController affinity-nodeport-transition took: 19.134566ms
  Sep 27 15:28:49.326: INFO: Terminating ReplicationController affinity-nodeport-transition pods took: 100.575084ms
  STEP: Destroying namespace "services-9946" for this suite. @ 09/27/23 15:28:52.497
• [10.791 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:71
  STEP: Creating a kubernetes client @ 09/27/23 15:28:52.514
  Sep 27 15:28:52.514: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:28:52.515
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:28:52.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:28:52.569
  Sep 27 15:29:14.648: INFO: Container started at 2023-09-27 15:28:53 +0000 UTC, pod became ready at 2023-09-27 15:29:12 +0000 UTC
  Sep 27 15:29:14.648: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1706" for this suite. @ 09/27/23 15:29:14.651
• [22.150 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:99
  STEP: Creating a kubernetes client @ 09/27/23 15:29:14.67
  Sep 27 15:29:14.670: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:29:14.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:14.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:14.706
  STEP: Creating configMap with name configmap-test-volume-map-1b98b24f-824d-4e8a-8f88-de11d1bc7aa7 @ 09/27/23 15:29:14.713
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:29:14.726
  STEP: Saw pod success @ 09/27/23 15:29:18.755
  Sep 27 15:29:18.758: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-4af9b773-11d8-4af1-9e25-b9d2a6e1f76f container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:29:18.762
  Sep 27 15:29:18.804: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7689" for this suite. @ 09/27/23 15:29:18.807
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance]
test/e2e/common/node/secrets.go:154
  STEP: Creating a kubernetes client @ 09/27/23 15:29:18.821
  Sep 27 15:29:18.822: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:29:18.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:18.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:18.857
  STEP: creating a secret @ 09/27/23 15:29:18.868
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 09/27/23 15:29:18.879
  STEP: patching the secret @ 09/27/23 15:29:18.881
  STEP: deleting the secret using a LabelSelector @ 09/27/23 15:29:18.901
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 09/27/23 15:29:18.917
  Sep 27 15:29:18.919: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5388" for this suite. @ 09/27/23 15:29:18.923
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path  [Conformance]
test/e2e/kubectl/kubectl.go:1806
  STEP: Creating a kubernetes client @ 09/27/23 15:29:18.941
  Sep 27 15:29:18.942: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:29:18.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:18.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:18.987
  STEP: Starting the proxy @ 09/27/23 15:29:18.989
  Sep 27 15:29:18.990: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-4151 proxy --unix-socket=/tmp/kubectl-proxy-unix1664782135/test'
  STEP: retrieving proxy /api/ output @ 09/27/23 15:29:19.035
  Sep 27 15:29:19.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4151" for this suite. @ 09/27/23 15:29:19.038
• [0.114 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:58
  STEP: Creating a kubernetes client @ 09/27/23 15:29:19.056
  Sep 27 15:29:19.056: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 15:29:19.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:19.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:19.103
  Sep 27 15:29:19.105: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:29:20.155: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6190" for this suite. @ 09/27/23 15:29:20.159
• [1.120 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 09/27/23 15:29:20.177
  Sep 27 15:29:20.177: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:29:20.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:20.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:20.235
  STEP: creating the pod @ 09/27/23 15:29:20.239
  Sep 27 15:29:20.239: INFO: PodSpec: initContainers in spec.initContainers
  Sep 27 15:29:24.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9920" for this suite. @ 09/27/23 15:29:24.765
• [4.616 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance]
test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 09/27/23 15:29:24.796
  Sep 27 15:29:24.796: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:29:24.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:24.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:24.838
  Sep 27 15:29:24.845: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  W0927 15:29:27.408151      21 warnings.go:70] unknown field "alpha"
  W0927 15:29:27.408169      21 warnings.go:70] unknown field "beta"
  W0927 15:29:27.408172      21 warnings.go:70] unknown field "delta"
  W0927 15:29:27.408174      21 warnings.go:70] unknown field "epsilon"
  W0927 15:29:27.408177      21 warnings.go:70] unknown field "gamma"
  Sep 27 15:29:27.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2922" for this suite. @ 09/27/23 15:29:27.961
• [3.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 09/27/23 15:29:27.986
  Sep 27 15:29:27.986: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:29:27.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:28.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:28.039
  STEP: create the container @ 09/27/23 15:29:28.042
  W0927 15:29:28.059027      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 09/27/23 15:29:28.059
  STEP: get the container status @ 09/27/23 15:29:31.075
  STEP: the container should be terminated @ 09/27/23 15:29:31.079
  STEP: the termination message should be set @ 09/27/23 15:29:31.079
  Sep 27 15:29:31.079: INFO: Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 09/27/23 15:29:31.079
  Sep 27 15:29:31.126: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8207" for this suite. @ 09/27/23 15:29:31.134
• [3.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance]
test/e2e/common/node/lease.go:72
  STEP: Creating a kubernetes client @ 09/27/23 15:29:31.151
  Sep 27 15:29:31.151: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename lease-test @ 09/27/23 15:29:31.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:31.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:31.211
  Sep 27 15:29:31.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-3841" for this suite. @ 09/27/23 15:29:31.369
• [0.241 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:236
  STEP: Creating a kubernetes client @ 09/27/23 15:29:31.394
  Sep 27 15:29:31.394: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:29:31.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:31.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:31.451
  Sep 27 15:29:31.457: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 15:29:32.968
  Sep 27 15:29:32.968: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-8992 --namespace=crd-publish-openapi-8992 create -f -'
  Sep 27 15:29:33.643: INFO: stderr: ""
  Sep 27 15:29:33.643: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 27 15:29:33.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-8992 --namespace=crd-publish-openapi-8992 delete e2e-test-crd-publish-openapi-6366-crds test-cr'
  Sep 27 15:29:33.763: INFO: stderr: ""
  Sep 27 15:29:33.763: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  Sep 27 15:29:33.763: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-8992 --namespace=crd-publish-openapi-8992 apply -f -'
  Sep 27 15:29:34.335: INFO: stderr: ""
  Sep 27 15:29:34.335: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  Sep 27 15:29:34.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-8992 --namespace=crd-publish-openapi-8992 delete e2e-test-crd-publish-openapi-6366-crds test-cr'
  Sep 27 15:29:34.436: INFO: stderr: ""
  Sep 27 15:29:34.436: INFO: stdout: "e2e-test-crd-publish-openapi-6366-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/27/23 15:29:34.436
  Sep 27 15:29:34.436: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-8992 explain e2e-test-crd-publish-openapi-6366-crds'
  Sep 27 15:29:34.615: INFO: stderr: ""
  Sep 27 15:29:34.615: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-6366-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 27 15:29:35.981: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8992" for this suite. @ 09/27/23 15:29:35.997
• [4.629 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance]
test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 09/27/23 15:29:36.024
  Sep 27 15:29:36.024: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename hostport @ 09/27/23 15:29:36.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:36.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:36.073
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 09/27/23 15:29:36.078
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.84.220.103 on the node which pod1 resides and expect scheduled @ 09/27/23 15:29:40.106
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.84.220.103 but use UDP protocol on the node which pod2 resides @ 09/27/23 15:29:44.145
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 09/27/23 15:29:50.221
  Sep 27 15:29:50.221: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.84.220.103 http://127.0.0.1:54323/hostname] Namespace:hostport-6105 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:29:50.221: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:29:50.222: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:29:50.222: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6105/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.84.220.103+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.84.220.103, port: 54323 @ 09/27/23 15:29:50.302
  Sep 27 15:29:50.302: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.84.220.103:54323/hostname] Namespace:hostport-6105 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:29:50.302: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:29:50.302: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:29:50.302: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6105/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.84.220.103%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.84.220.103, port: 54323 UDP @ 09/27/23 15:29:50.362
  Sep 27 15:29:50.362: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.84.220.103 54323] Namespace:hostport-6105 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:29:50.362: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:29:50.362: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:29:50.362: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/hostport-6105/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.84.220.103+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  Sep 27 15:29:55.417: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-6105" for this suite. @ 09/27/23 15:29:55.421
• [19.436 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance]
test/e2e/auth/service_accounts.go:275
  STEP: Creating a kubernetes client @ 09/27/23 15:29:55.46
  Sep 27 15:29:55.460: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:29:55.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:55.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:55.53
  STEP: Creating a pod to test service account token:  @ 09/27/23 15:29:55.533
  STEP: Saw pod success @ 09/27/23 15:29:59.577
  Sep 27 15:29:59.581: INFO: Trying to get logs from node conformance-1 pod test-pod-a717ad41-d9b2-484a-87ec-9c7b9dd85810 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:29:59.586
  Sep 27 15:29:59.641: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3258" for this suite. @ 09/27/23 15:29:59.644
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance]
test/e2e/auth/service_accounts.go:529
  STEP: Creating a kubernetes client @ 09/27/23 15:29:59.661
  Sep 27 15:29:59.661: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:29:59.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:29:59.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:29:59.72
  Sep 27 15:29:59.783: INFO: created pod
  STEP: Saw pod success @ 09/27/23 15:30:03.8
  Sep 27 15:30:33.802: INFO: polling logs
  Sep 27 15:30:33.806: INFO: Pod logs: 
  I0927 15:30:00.671165       1 log.go:194] OK: Got token
  I0927 15:30:00.671233       1 log.go:194] validating with in-cluster discovery
  I0927 15:30:00.671545       1 log.go:194] OK: got issuer https://kubernetes.default.svc
  I0927 15:30:00.671574       1 log.go:194] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4226:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000049f50), NotBefore:(*jwt.NumericDate)(0xc00025c038), IssuedAt:(*jwt.NumericDate)(0xc000049f60), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4226", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2108fd14-b87b-4057-a0d9-f3a228b79feb"}}}
  I0927 15:30:00.687931       1 log.go:194] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc
  I0927 15:30:00.701176       1 log.go:194] OK: Validated signature on JWT
  I0927 15:30:00.701246       1 log.go:194] OK: Got valid claims from token!
  I0927 15:30:00.701269       1 log.go:194] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc", Subject:"system:serviceaccount:svcaccounts-4226:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001b1778), NotBefore:(*jwt.NumericDate)(0xc0001b17a0), IssuedAt:(*jwt.NumericDate)(0xc0001b1780), ID:""}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4226", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"2108fd14-b87b-4057-a0d9-f3a228b79feb"}}}

  Sep 27 15:30:33.806: INFO: completed pod
  Sep 27 15:30:33.818: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4226" for this suite. @ 09/27/23 15:30:33.82
• [34.174 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 09/27/23 15:30:33.835
  Sep 27 15:30:33.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:30:33.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:33.876
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:33.878
  STEP: Creating secret with name secret-test-f1c14a4c-2042-4dbd-9edc-f83ad1264238 @ 09/27/23 15:30:33.879
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:30:33.892
  STEP: Saw pod success @ 09/27/23 15:30:37.914
  Sep 27 15:30:37.917: INFO: Trying to get logs from node conformance-1 pod pod-secrets-62936944-7334-4168-b31a-b423873d613d container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:30:37.92
  Sep 27 15:30:37.959: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5074" for this suite. @ 09/27/23 15:30:37.96
• [4.138 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount  [Conformance]
test/e2e/auth/service_accounts.go:161
  STEP: Creating a kubernetes client @ 09/27/23 15:30:37.974
  Sep 27 15:30:37.974: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:30:37.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:38.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:38.003
  Sep 27 15:30:38.050: INFO: created pod pod-service-account-defaultsa
  Sep 27 15:30:38.050: INFO: pod pod-service-account-defaultsa service account token volume mount: true
  Sep 27 15:30:38.063: INFO: created pod pod-service-account-mountsa
  Sep 27 15:30:38.063: INFO: pod pod-service-account-mountsa service account token volume mount: true
  Sep 27 15:30:38.094: INFO: created pod pod-service-account-nomountsa
  Sep 27 15:30:38.095: INFO: pod pod-service-account-nomountsa service account token volume mount: false
  Sep 27 15:30:38.151: INFO: created pod pod-service-account-defaultsa-mountspec
  Sep 27 15:30:38.151: INFO: pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  Sep 27 15:30:38.218: INFO: created pod pod-service-account-mountsa-mountspec
  Sep 27 15:30:38.218: INFO: pod pod-service-account-mountsa-mountspec service account token volume mount: true
  Sep 27 15:30:38.274: INFO: created pod pod-service-account-nomountsa-mountspec
  Sep 27 15:30:38.274: INFO: pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  Sep 27 15:30:38.294: INFO: created pod pod-service-account-defaultsa-nomountspec
  Sep 27 15:30:38.294: INFO: pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  Sep 27 15:30:38.337: INFO: created pod pod-service-account-mountsa-nomountspec
  Sep 27 15:30:38.337: INFO: pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  Sep 27 15:30:38.399: INFO: created pod pod-service-account-nomountsa-nomountspec
  Sep 27 15:30:38.399: INFO: pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  Sep 27 15:30:38.399: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6569" for this suite. @ 09/27/23 15:30:38.406
• [0.465 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:54
  STEP: Creating a kubernetes client @ 09/27/23 15:30:38.45
  Sep 27 15:30:38.450: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:30:38.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:38.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:38.536
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:30:38.548
  STEP: Saw pod success @ 09/27/23 15:30:42.603
  Sep 27 15:30:42.606: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-e43c7f12-2cf7-48b6-9a7d-5ec54c847774 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:30:42.612
  Sep 27 15:30:42.647: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5553" for this suite. @ 09/27/23 15:30:42.651
• [4.218 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance]
test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 09/27/23 15:30:42.671
  Sep 27 15:30:42.671: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:30:42.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:30:42.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:30:42.705
  STEP: Setting up data @ 09/27/23 15:30:42.713
  STEP: Creating pod pod-subpath-test-downwardapi-crm4 @ 09/27/23 15:30:42.742
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:30:42.742
  STEP: Saw pod success @ 09/27/23 15:31:06.839
  Sep 27 15:31:06.842: INFO: Trying to get logs from node conformance-1 pod pod-subpath-test-downwardapi-crm4 container test-container-subpath-downwardapi-crm4: <nil>
  STEP: delete the pod @ 09/27/23 15:31:06.847
  STEP: Deleting pod pod-subpath-test-downwardapi-crm4 @ 09/27/23 15:31:06.89
  Sep 27 15:31:06.890: INFO: Deleting pod "pod-subpath-test-downwardapi-crm4" in namespace "subpath-8759"
  Sep 27 15:31:06.892: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8759" for this suite. @ 09/27/23 15:31:06.895
• [24.240 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:357
  STEP: Creating a kubernetes client @ 09/27/23 15:31:06.911
  Sep 27 15:31:06.911: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:31:06.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:06.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:06.96
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 09/27/23 15:31:06.962
  Sep 27 15:31:06.963: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:31:08.369: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:31:13.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2151" for this suite. @ 09/27/23 15:31:13.964
• [7.080 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:31:13.991
  Sep 27 15:31:13.992: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:31:13.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:14.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:14.026
  STEP: Creating secret with name secret-test-43fadb1a-d4b2-4c9d-ae38-33bedf21dd2e @ 09/27/23 15:31:14.034
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:31:14.053
  STEP: Saw pod success @ 09/27/23 15:31:18.081
  Sep 27 15:31:18.083: INFO: Trying to get logs from node conformance-1 pod pod-secrets-8b68c140-4929-4a15-86d4-4bb071d43fa2 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:31:18.087
  Sep 27 15:31:18.132: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8932" for this suite. @ 09/27/23 15:31:18.135
• [4.157 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:177
  STEP: Creating a kubernetes client @ 09/27/23 15:31:18.15
  Sep 27 15:31:18.151: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:31:18.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:18.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:18.196
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 09/27/23 15:31:18.198
  STEP: Saw pod success @ 09/27/23 15:31:22.232
  Sep 27 15:31:22.234: INFO: Trying to get logs from node conformance-1 pod pod-6e25388f-a646-429f-a0e6-3d430af4298d container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:22.237
  Sep 27 15:31:22.280: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1874" for this suite. @ 09/27/23 15:31:22.282
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:222
  STEP: Creating a kubernetes client @ 09/27/23 15:31:22.3
  Sep 27 15:31:22.300: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:31:22.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:22.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:22.346
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:31:22.348
  STEP: Saw pod success @ 09/27/23 15:31:26.375
  Sep 27 15:31:26.378: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-e73a77f2-4849-498c-be08-195775da2612 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:26.383
  Sep 27 15:31:26.423: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3116" for this suite. @ 09/27/23 15:31:26.426
• [4.146 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 09/27/23 15:31:26.448
  Sep 27 15:31:26.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:31:26.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:26.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:26.485
  STEP: Saw pod success @ 09/27/23 15:31:32.587
  Sep 27 15:31:32.590: INFO: Trying to get logs from node conformance-1 pod client-envvars-957bfe7f-3557-45c0-a881-ad47b4f7d1a9 container env3cont: <nil>
  STEP: delete the pod @ 09/27/23 15:31:32.595
  Sep 27 15:31:32.638: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3424" for this suite. @ 09/27/23 15:31:32.641
• [6.207 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance]
test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 09/27/23 15:31:32.656
  Sep 27 15:31:32.656: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:31:32.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:32.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:32.693
  STEP: Setting up server cert @ 09/27/23 15:31:32.755
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:31:33.12
  STEP: Deploying the webhook pod @ 09/27/23 15:31:33.152
  STEP: Wait for the deployment to be ready @ 09/27/23 15:31:33.187
  Sep 27 15:31:33.193: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:31:35.209
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:31:35.25
  Sep 27 15:31:36.251: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 09/27/23 15:31:36.259
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 09/27/23 15:31:36.261
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 09/27/23 15:31:36.261
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 09/27/23 15:31:36.262
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 09/27/23 15:31:36.263
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/27/23 15:31:36.263
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 09/27/23 15:31:36.265
  Sep 27 15:31:36.265: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3686" for this suite. @ 09/27/23 15:31:36.475
  STEP: Destroying namespace "webhook-markers-2049" for this suite. @ 09/27/23 15:31:36.521
• [3.917 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:31:36.58
  Sep 27 15:31:36.580: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:31:36.581
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:36.683
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:36.69
  STEP: Creating configMap with name configmap-test-volume-7cbbe851-dfc1-444c-b1e0-e9fc761ae069 @ 09/27/23 15:31:36.694
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:31:36.72
  STEP: Saw pod success @ 09/27/23 15:31:40.768
  Sep 27 15:31:40.770: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-0faeaaff-919f-4a02-8ea5-2ffd7d266581 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:40.774
  Sep 27 15:31:40.816: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-887" for this suite. @ 09/27/23 15:31:40.818
• [4.254 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:117
  STEP: Creating a kubernetes client @ 09/27/23 15:31:40.835
  Sep 27 15:31:40.835: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:31:40.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:40.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:40.866
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 09/27/23 15:31:40.874
  STEP: Saw pod success @ 09/27/23 15:31:44.903
  Sep 27 15:31:44.906: INFO: Trying to get logs from node conformance-1 pod pod-8d360903-cad3-46b8-b033-c6189bd1342c container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:44.91
  Sep 27 15:31:44.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7088" for this suite. @ 09/27/23 15:31:44.946
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance]
test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 09/27/23 15:31:44.964
  Sep 27 15:31:44.964: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:31:44.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:45.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:45.011
  STEP: creating the pod @ 09/27/23 15:31:45.013
  STEP: submitting the pod to kubernetes @ 09/27/23 15:31:45.013
  STEP: verifying QOS class is set on the pod @ 09/27/23 15:31:45.03
  Sep 27 15:31:45.032: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7055" for this suite. @ 09/27/23 15:31:45.035
• [0.096 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance]
test/e2e/common/node/expansion.go:115
  STEP: Creating a kubernetes client @ 09/27/23 15:31:45.061
  Sep 27 15:31:45.061: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 15:31:45.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:45.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:45.117
  STEP: Creating a pod to test substitution in volume subpath @ 09/27/23 15:31:45.119
  STEP: Saw pod success @ 09/27/23 15:31:49.156
  Sep 27 15:31:49.159: INFO: Trying to get logs from node conformance-1 pod var-expansion-0b667c61-9635-427a-910c-9f398893e5fc container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:31:49.164
  Sep 27 15:31:49.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4896" for this suite. @ 09/27/23 15:31:49.213
• [4.169 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:309
  STEP: Creating a kubernetes client @ 09/27/23 15:31:49.231
  Sep 27 15:31:49.231: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:31:49.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:31:49.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:31:49.282
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 09/27/23 15:31:49.285
  Sep 27 15:31:49.286: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 09/27/23 15:31:54.907
  Sep 27 15:31:54.908: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:31:56.370: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:32:01.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7130" for this suite. @ 09/27/23 15:32:01.92
• [12.705 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance]
test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 09/27/23 15:32:01.938
  Sep 27 15:32:01.938: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:32:01.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:01.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:01.985
  STEP: Setting up server cert @ 09/27/23 15:32:02.033
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:32:02.369
  STEP: Deploying the webhook pod @ 09/27/23 15:32:02.384
  STEP: Wait for the deployment to be ready @ 09/27/23 15:32:02.417
  Sep 27 15:32:02.427: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:32:04.437
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:32:04.466
  Sep 27 15:32:05.467: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 09/27/23 15:32:05.473
  STEP: create a pod @ 09/27/23 15:32:05.493
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 09/27/23 15:32:07.517
  Sep 27 15:32:07.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=webhook-3998 attach --namespace=webhook-3998 to-be-attached-pod -i -c=container1'
  Sep 27 15:32:07.597: INFO: rc: 1
  Sep 27 15:32:07.597: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3998" for this suite. @ 09/27/23 15:32:07.792
  STEP: Destroying namespace "webhook-markers-7894" for this suite. @ 09/27/23 15:32:07.837
• [5.935 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:262
  STEP: Creating a kubernetes client @ 09/27/23 15:32:07.876
  Sep 27 15:32:07.876: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:32:07.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:07.935
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:07.939
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:32:07.941
  STEP: Saw pod success @ 09/27/23 15:32:11.971
  Sep 27 15:32:11.974: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-ff3b3f67-2f6b-4d83-99ff-e90b029d875c container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:32:11.978
  Sep 27 15:32:12.012: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2114" for this suite. @ 09/27/23 15:32:12.015
• [4.154 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance]
test/e2e/network/service.go:1533
  STEP: Creating a kubernetes client @ 09/27/23 15:32:12.034
  Sep 27 15:32:12.034: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:32:12.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:12.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:12.068
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2170 @ 09/27/23 15:32:12.078
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 09/27/23 15:32:12.127
  STEP: creating service externalsvc in namespace services-2170 @ 09/27/23 15:32:12.127
  STEP: creating replication controller externalsvc in namespace services-2170 @ 09/27/23 15:32:12.178
  I0927 15:32:12.204990      21 runners.go:197] Created replication controller with name: externalsvc, namespace: services-2170, replica count: 2
  I0927 15:32:15.256226      21 runners.go:197] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 09/27/23 15:32:15.258
  Sep 27 15:32:15.314: INFO: Creating new exec pod
  Sep 27 15:32:17.336: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-2170 exec execpod8sqwb -- /bin/sh -x -c nslookup nodeport-service.services-2170.svc.cluster.local'
  Sep 27 15:32:17.486: INFO: stderr: "+ nslookup nodeport-service.services-2170.svc.cluster.local\n"
  Sep 27 15:32:17.486: INFO: stdout: "Server:\t\t10.152.183.10\nAddress:\t10.152.183.10#53\n\nnodeport-service.services-2170.svc.cluster.local\tcanonical name = externalsvc.services-2170.svc.cluster.local.\nName:\texternalsvc.services-2170.svc.cluster.local\nAddress: 10.152.183.54\n\n"
  Sep 27 15:32:17.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController externalsvc in namespace services-2170, will wait for the garbage collector to delete the pods @ 09/27/23 15:32:17.489
  Sep 27 15:32:17.559: INFO: Deleting ReplicationController externalsvc took: 16.743149ms
  Sep 27 15:32:17.661: INFO: Terminating ReplicationController externalsvc pods took: 101.119126ms
  Sep 27 15:32:21.118: INFO: Cleaning up the NodePort to ExternalName test service
  STEP: Destroying namespace "services-2170" for this suite. @ 09/27/23 15:32:21.149
• [9.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance]
test/e2e/network/endpointslice.go:355
  STEP: Creating a kubernetes client @ 09/27/23 15:32:21.174
  Sep 27 15:32:21.174: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 15:32:21.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:21.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:21.221
  STEP: getting /apis @ 09/27/23 15:32:21.224
  STEP: getting /apis/discovery.k8s.io @ 09/27/23 15:32:21.229
  STEP: getting /apis/discovery.k8s.iov1 @ 09/27/23 15:32:21.23
  STEP: creating @ 09/27/23 15:32:21.231
  STEP: getting @ 09/27/23 15:32:21.275
  STEP: listing @ 09/27/23 15:32:21.279
  STEP: watching @ 09/27/23 15:32:21.282
  Sep 27 15:32:21.282: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 15:32:21.283
  STEP: cluster-wide watching @ 09/27/23 15:32:21.285
  Sep 27 15:32:21.285: INFO: starting watch
  STEP: patching @ 09/27/23 15:32:21.287
  STEP: updating @ 09/27/23 15:32:21.301
  Sep 27 15:32:21.321: INFO: waiting for watch events with expected annotations
  Sep 27 15:32:21.321: INFO: saw patched and updated annotations
  STEP: deleting @ 09/27/23 15:32:21.321
  STEP: deleting a collection @ 09/27/23 15:32:21.341
  Sep 27 15:32:21.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5087" for this suite. @ 09/27/23 15:32:21.379
• [0.219 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance]
test/e2e/auth/service_accounts.go:740
  STEP: Creating a kubernetes client @ 09/27/23 15:32:21.393
  Sep 27 15:32:21.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:32:21.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:21.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:21.45
  Sep 27 15:32:21.455: INFO: Got root ca configmap in namespace "svcaccounts-8714"
  Sep 27 15:32:21.473: INFO: Deleted root ca configmap in namespace "svcaccounts-8714"
  STEP: waiting for a new root ca configmap created @ 09/27/23 15:32:21.974
  Sep 27 15:32:21.978: INFO: Recreated root ca configmap in namespace "svcaccounts-8714"
  Sep 27 15:32:22.001: INFO: Updated root ca configmap in namespace "svcaccounts-8714"
  STEP: waiting for the root ca configmap reconciled @ 09/27/23 15:32:22.503
  Sep 27 15:32:22.506: INFO: Reconciled root ca configmap in namespace "svcaccounts-8714"
  Sep 27 15:32:22.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8714" for this suite. @ 09/27/23 15:32:22.509
• [1.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance]
test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 09/27/23 15:32:22.527
  Sep 27 15:32:22.527: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:32:22.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:32:22.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:32:22.573
  STEP: Creating a suspended cronjob @ 09/27/23 15:32:22.576
  STEP: Ensuring no jobs are scheduled @ 09/27/23 15:32:22.593
  STEP: Ensuring no job exists by listing jobs explicitly @ 09/27/23 15:37:22.598
  STEP: Removing cronjob @ 09/27/23 15:37:22.601
  Sep 27 15:37:22.614: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-460" for this suite. @ 09/27/23 15:37:22.618
• [300.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance]
test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 09/27/23 15:37:22.636
  Sep 27 15:37:22.636: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:37:22.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:37:22.68
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:37:22.683
  Sep 27 15:37:22.706: INFO: Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 15:37:22.722
  Sep 27 15:37:22.730: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:37:22.730: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:37:23.742: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:37:23.742: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 15:37:24.739: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:37:24.739: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 09/27/23 15:37:24.75
  STEP: Check that daemon pods images are updated. @ 09/27/23 15:37:24.778
  Sep 27 15:37:24.782: INFO: Wrong image for pod: daemon-set-6rvjb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 15:37:24.782: INFO: Wrong image for pod: daemon-set-bgtrl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 15:37:25.789: INFO: Wrong image for pod: daemon-set-6rvjb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 15:37:26.790: INFO: Wrong image for pod: daemon-set-6rvjb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 15:37:26.790: INFO: Pod daemon-set-tbj8f is not available
  Sep 27 15:37:27.792: INFO: Wrong image for pod: daemon-set-6rvjb. Expected: registry.k8s.io/e2e-test-images/agnhost:2.45, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  Sep 27 15:37:27.792: INFO: Pod daemon-set-tbj8f is not available
  Sep 27 15:37:29.790: INFO: Pod daemon-set-qhh8g is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 09/27/23 15:37:29.794
  Sep 27 15:37:29.802: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:37:29.802: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:37:30.810: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 15:37:30.810: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:37:31.810: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:37:31.810: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:37:31.822
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1975, will wait for the garbage collector to delete the pods @ 09/27/23 15:37:31.822
  Sep 27 15:37:31.891: INFO: Deleting DaemonSet.extensions daemon-set took: 15.804575ms
  Sep 27 15:37:31.992: INFO: Terminating DaemonSet.extensions daemon-set pods took: 101.062601ms
  Sep 27 15:37:34.197: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:37:34.197: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:37:34.200: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24722"},"items":null}

  Sep 27 15:37:34.204: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24722"},"items":null}

  Sep 27 15:37:34.213: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1975" for this suite. @ 09/27/23 15:37:34.216
• [11.596 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance]
test/e2e/apimachinery/resource_quota.go:693
  STEP: Creating a kubernetes client @ 09/27/23 15:37:34.235
  Sep 27 15:37:34.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:37:34.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:37:34.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:37:34.278
  STEP: Creating a ResourceQuota with terminating scope @ 09/27/23 15:37:34.285
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:37:34.302
  STEP: Creating a ResourceQuota with not terminating scope @ 09/27/23 15:37:36.305
  STEP: Ensuring ResourceQuota status is calculated @ 09/27/23 15:37:36.328
  STEP: Creating a long running pod @ 09/27/23 15:37:38.336
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 09/27/23 15:37:38.38
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 09/27/23 15:37:40.385
  STEP: Deleting the pod @ 09/27/23 15:37:42.388
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:37:42.443
  STEP: Creating a terminating pod @ 09/27/23 15:37:44.446
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 09/27/23 15:37:44.476
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 09/27/23 15:37:46.48
  STEP: Deleting the pod @ 09/27/23 15:37:48.484
  STEP: Ensuring resource quota status released the pod usage @ 09/27/23 15:37:48.526
  Sep 27 15:37:50.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1822" for this suite. @ 09/27/23 15:37:50.533
• [16.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods  [Conformance]
test/e2e/network/service.go:785
  STEP: Creating a kubernetes client @ 09/27/23 15:37:50.561
  Sep 27 15:37:50.561: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:37:50.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:37:50.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:37:50.614
  STEP: creating service endpoint-test2 in namespace services-4246 @ 09/27/23 15:37:50.616
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4246 to expose endpoints map[] @ 09/27/23 15:37:50.648
  Sep 27 15:37:50.652: INFO: Failed go get Endpoints object: endpoints "endpoint-test2" not found
  Sep 27 15:37:51.658: INFO: successfully validated that service endpoint-test2 in namespace services-4246 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-4246 @ 09/27/23 15:37:51.658
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4246 to expose endpoints map[pod1:[80]] @ 09/27/23 15:37:53.689
  Sep 27 15:37:53.698: INFO: successfully validated that service endpoint-test2 in namespace services-4246 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 09/27/23 15:37:53.698
  Sep 27 15:37:53.698: INFO: Creating new exec pod
  Sep 27 15:37:56.728: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 15:37:56.853: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 15:37:56.853: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:37:56.853: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.131 80'
  Sep 27 15:37:56.990: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.131 80\nConnection to 10.152.183.131 80 port [tcp/http] succeeded!\n"
  Sep 27 15:37:56.990: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-4246 @ 09/27/23 15:37:56.99
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4246 to expose endpoints map[pod1:[80] pod2:[80]] @ 09/27/23 15:38:01.025
  Sep 27 15:38:01.034: INFO: successfully validated that service endpoint-test2 in namespace services-4246 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 09/27/23 15:38:01.034
  Sep 27 15:38:02.034: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 15:38:02.183: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 15:38:02.183: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:38:02.183: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.131 80'
  Sep 27 15:38:02.312: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.131 80\nConnection to 10.152.183.131 80 port [tcp/http] succeeded!\n"
  Sep 27 15:38:02.312: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-4246 @ 09/27/23 15:38:02.312
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4246 to expose endpoints map[pod2:[80]] @ 09/27/23 15:38:02.426
  Sep 27 15:38:03.450: INFO: successfully validated that service endpoint-test2 in namespace services-4246 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 09/27/23 15:38:03.45
  Sep 27 15:38:04.451: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  Sep 27 15:38:04.589: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  Sep 27 15:38:04.589: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 15:38:04.589: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4246 exec execpodc4kqx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.131 80'
  Sep 27 15:38:04.722: INFO: stderr: "+ + echonc hostName\n -v -t -w 2 10.152.183.131 80\nConnection to 10.152.183.131 80 port [tcp/http] succeeded!\n"
  Sep 27 15:38:04.722: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-4246 @ 09/27/23 15:38:04.722
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-4246 to expose endpoints map[] @ 09/27/23 15:38:04.792
  Sep 27 15:38:05.806: INFO: successfully validated that service endpoint-test2 in namespace services-4246 exposes endpoints map[]
  Sep 27 15:38:05.806: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4246" for this suite. @ 09/27/23 15:38:05.92
• [15.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:262
  STEP: Creating a kubernetes client @ 09/27/23 15:38:05.957
  Sep 27 15:38:05.957: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:38:05.958
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:06.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:06.012
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:38:06.016
  STEP: Saw pod success @ 09/27/23 15:38:10.043
  Sep 27 15:38:10.045: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-5e0090b4-b309-4b78-80a9-ede6f2886a8a container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:38:10.055
  Sep 27 15:38:10.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3038" for this suite. @ 09/27/23 15:38:10.092
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:141
  STEP: Creating a kubernetes client @ 09/27/23 15:38:10.108
  Sep 27 15:38:10.108: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-webhook @ 09/27/23 15:38:10.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:10.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:10.155
  STEP: Setting up server cert @ 09/27/23 15:38:10.157
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/27/23 15:38:10.339
  STEP: Deploying the custom resource conversion webhook pod @ 09/27/23 15:38:10.367
  STEP: Wait for the deployment to be ready @ 09/27/23 15:38:10.398
  Sep 27 15:38:10.405: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:38:12.414
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:38:12.439
  Sep 27 15:38:13.440: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 27 15:38:13.445: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Creating a v1 custom resource @ 09/27/23 15:38:16.027
  STEP: v2 custom resource should be converted @ 09/27/23 15:38:16.049
  Sep 27 15:38:16.053: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1356" for this suite. @ 09/27/23 15:38:16.738
• [6.663 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 09/27/23 15:38:16.773
  Sep 27 15:38:16.773: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:38:16.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:16.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:16.86
  STEP: Creating secret with name s-test-opt-del-50005371-5e50-4941-9cf1-bce36edaff59 @ 09/27/23 15:38:16.874
  STEP: Creating secret with name s-test-opt-upd-edda14fe-1049-4b7c-a3bf-73e41e81448a @ 09/27/23 15:38:16.907
  STEP: Creating the pod @ 09/27/23 15:38:16.934
  STEP: Deleting secret s-test-opt-del-50005371-5e50-4941-9cf1-bce36edaff59 @ 09/27/23 15:38:18.984
  STEP: Updating secret s-test-opt-upd-edda14fe-1049-4b7c-a3bf-73e41e81448a @ 09/27/23 15:38:18.999
  STEP: Creating secret with name s-test-opt-create-c622492c-d1a9-4434-9df7-2f304fffc3c5 @ 09/27/23 15:38:19.019
  STEP: waiting to observe update in volume @ 09/27/23 15:38:19.04
  Sep 27 15:38:21.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-670" for this suite. @ 09/27/23 15:38:21.062
• [4.309 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 09/27/23 15:38:21.084
  Sep 27 15:38:21.084: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:38:21.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:21.128
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:21.131
  STEP: Creating projection with secret that has name projected-secret-test-e876437a-5292-496c-af59-eaf3fc0ff981 @ 09/27/23 15:38:21.133
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:38:21.156
  STEP: Saw pod success @ 09/27/23 15:38:25.186
  Sep 27 15:38:25.190: INFO: Trying to get logs from node conformance-1 pod pod-projected-secrets-7de45cc4-697d-44ca-9392-505e7564b71a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:38:25.194
  Sep 27 15:38:25.226: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9720" for this suite. @ 09/27/23 15:38:25.229
• [4.162 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance]
test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 09/27/23 15:38:25.246
  Sep 27 15:38:25.247: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:38:25.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:25.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:25.292
  STEP: Setting up server cert @ 09/27/23 15:38:25.342
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:38:25.551
  STEP: Deploying the webhook pod @ 09/27/23 15:38:25.575
  STEP: Wait for the deployment to be ready @ 09/27/23 15:38:25.607
  Sep 27 15:38:25.616: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 15:38:27.629: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 25, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 15:38:29.632
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:38:29.669
  Sep 27 15:38:30.670: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 15:38:30.676: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-3628-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 15:38:31.21
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/27/23 15:38:31.259
  Sep 27 15:38:33.299: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4461" for this suite. @ 09/27/23 15:38:34.003
  STEP: Destroying namespace "webhook-markers-9957" for this suite. @ 09/27/23 15:38:34.028
• [8.805 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance]
test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 09/27/23 15:38:34.052
  Sep 27 15:38:34.052: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 15:38:34.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:34.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:34.104
  Sep 27 15:38:34.125: INFO: Pod name rollover-pod: Found 0 pods out of 1
  Sep 27 15:38:39.129: INFO: Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 15:38:39.13
  Sep 27 15:38:39.130: INFO: Waiting for pods owned by replica set "test-rollover-controller" to become ready
  Sep 27 15:38:41.133: INFO: Creating deployment "test-rollover-deployment"
  Sep 27 15:38:41.169: INFO: Make sure deployment "test-rollover-deployment" performs scaling operations
  Sep 27 15:38:43.176: INFO: Check revision of new replica set for deployment "test-rollover-deployment"
  Sep 27 15:38:43.181: INFO: Ensure that both replica sets have 1 created replica
  Sep 27 15:38:43.185: INFO: Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  Sep 27 15:38:43.209: INFO: Updating deployment test-rollover-deployment
  Sep 27 15:38:43.209: INFO: Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  Sep 27 15:38:45.217: INFO: Wait for revision update of deployment "test-rollover-deployment" to 2
  Sep 27 15:38:45.222: INFO: Make sure deployment "test-rollover-deployment" is complete
  Sep 27 15:38:45.226: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 15:38:45.226: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 15:38:47.232: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 15:38:47.233: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 15:38:49.233: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 15:38:49.234: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 15:38:51.232: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 15:38:51.232: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 15:38:53.231: INFO: all replica sets need to contain the pod-template-hash label
  Sep 27 15:38:53.231: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 38, 44, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 38, 41, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-5d484bf7f9\" is progressing."}}, CollisionCount:(*int32)(nil)}
  Sep 27 15:38:55.232: INFO: 
  Sep 27 15:38:55.232: INFO: Ensure that both old replica sets have no replicas
  Sep 27 15:38:55.236: INFO: Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e2dc3069-55ff-4235-86c6-2f4330f23472",
      ResourceVersion: (string) (len=5) "25372",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-5d484bf7f9\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 15:38:55.238: INFO: New ReplicaSet "test-rollover-deployment-5d484bf7f9" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9cbd7f3f-7a33-491f-b99a-0d35176b9142",
      ResourceVersion: (string) (len=5) "25362",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e2dc3069-55ff-4235-86c6-2f4330f23472",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 32 64 63 33 30  36 39 2d 35 35 66 66 2d  |\"e2dc3069-55ff-|
              00000120  34 32 33 35 2d 38 36 63  36 2d 32 66 34 33 33 30  |4235-86c6-2f4330|
              00000130  66 32 33 34 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f23472\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:38:55.241: INFO: All old ReplicaSets of Deployment "test-rollover-deployment":
  Sep 27 15:38:55.241: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ebbc90b-fe67-4cb6-b339-bc60ac2a6b8c",
      ResourceVersion: (string) (len=5) "25371",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e2dc3069-55ff-4235-86c6-2f4330f23472",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  65 32 64 63 33 30 36 39  2d 35 35 66 66 2d 34 32  |e2dc3069-55ff-42|
              000000c0  33 35 2d 38 36 63 36 2d  32 66 34 33 33 30 66 32  |35-86c6-2f4330f2|
              000000d0  33 34 37 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |3472\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425934,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:38:55.242: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-664fc6c874",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04c39243-b178-423c-baf9-799030e8aaa0",
      ResourceVersion: (string) (len=5) "25325",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "e2dc3069-55ff-4235-86c6-2f4330f23472",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 32 64 63 33 30  36 39 2d 35 35 66 66 2d  |\"e2dc3069-55ff-|
              00000120  34 32 33 35 2d 38 36 63  36 2d 32 66 34 33 33 30  |4235-86c6-2f4330|
              00000130  66 32 33 34 37 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f23472\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "664fc6c874"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:38:55.244: INFO: Pod "test-rollover-deployment-5d484bf7f9-5q76l" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-5d484bf7f9-5q76l",
      GenerateName: (string) (len=36) "test-rollover-deployment-5d484bf7f9-",
      Namespace: (string) (len=15) "deployment-5503",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b89c425e-c354-4a28-81c5-a157a8b5bff9",
      ResourceVersion: (string) (len=5) "25340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d484bf7f9"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "018d44407456a74059cda9908dd37730d294e20b50c605e7cfb5cda478d4fe58",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.1.20.115/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.1.20.115/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-5d484bf7f9",
          UID: (types.UID) (len=36) "9cbd7f3f-7a33-491f-b99a-0d35176b9142",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  62 64 37 66 33 66 2d 37  |d\":\"9cbd7f3f-7|
              00000090  61 33 33 2d 34 39 31 66  2d 62 39 39 61 2d 30 64  |a33-491f-b99a-0d|
              000000a0  33 35 31 37 36 62 39 31  34 32 5c 22 7d 22 3a 7b  |35176b9142\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=518) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  31 31 35 5c 22 7d 22 3a  |10.1.20.115\"}":|
              000001e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              000001f0  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000200  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nprhw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nprhw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831425923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=11) "10.1.20.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.1.20.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831425923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831425924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://e23d851b3888c31074c66924ae2c74e31affea0a4343ae2d4eceb691ba933d75",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 15:38:55.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5503" for this suite. @ 09/27/23 15:38:55.247
• [21.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:99
  STEP: Creating a kubernetes client @ 09/27/23 15:38:55.271
  Sep 27 15:38:55.271: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:38:55.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:55.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:55.299
  STEP: Creating configMap with name projected-configmap-test-volume-map-dfc0ad87-51a1-4f04-b9a4-7a6ec7a007c0 @ 09/27/23 15:38:55.308
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:38:55.319
  STEP: Saw pod success @ 09/27/23 15:38:59.342
  Sep 27 15:38:59.343: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-71fca06b-34dd-4a24-b198-ab9eebf58645 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:38:59.347
  Sep 27 15:38:59.386: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8307" for this suite. @ 09/27/23 15:38:59.389
• [4.133 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never  [Conformance]
test/e2e/kubectl/kubectl.go:1707
  STEP: Creating a kubernetes client @ 09/27/23 15:38:59.404
  Sep 27 15:38:59.404: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:38:59.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:38:59.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:38:59.446
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:38:59.447
  Sep 27 15:38:59.447: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8104 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  Sep 27 15:38:59.512: INFO: stderr: ""
  Sep 27 15:38:59.512: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/27/23 15:38:59.512
  Sep 27 15:38:59.517: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-8104 delete pods e2e-test-httpd-pod'
  Sep 27 15:39:00.760: INFO: stderr: ""
  Sep 27 15:39:00.760: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 15:39:00.760: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8104" for this suite. @ 09/27/23 15:39:00.763
• [1.387 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance]
test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 09/27/23 15:39:00.791
  Sep 27 15:39:00.791: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:39:00.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:00.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:00.841
  Sep 27 15:39:00.940: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9150" for this suite. @ 09/27/23 15:39:00.943
• [0.176 seconds]
------------------------------
S
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance]
test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 09/27/23 15:39:00.967
  Sep 27 15:39:00.967: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 09/27/23 15:39:00.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:01.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:01.018
  STEP: creating a target pod @ 09/27/23 15:39:01.026
  STEP: adding an ephemeral container @ 09/27/23 15:39:03.088
  STEP: checking pod container endpoints @ 09/27/23 15:39:07.141
  Sep 27 15:39:07.141: INFO: ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7245 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:39:07.141: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:39:07.141: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:39:07.141: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/ephemeral-containers-test-7245/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  Sep 27 15:39:07.216: INFO: Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 09/27/23 15:39:07.22
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 09/27/23 15:39:07.222
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 09/27/23 15:39:07.237
  Sep 27 15:39:07.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7245" for this suite. @ 09/27/23 15:39:07.247
• [6.315 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:250
  STEP: Creating a kubernetes client @ 09/27/23 15:39:07.283
  Sep 27 15:39:07.283: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:39:07.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:07.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:07.347
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:39:07.349
  STEP: Saw pod success @ 09/27/23 15:39:11.372
  Sep 27 15:39:11.374: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-376a5bd5-cf47-4257-b9f5-bf4846f6aac3 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:39:11.378
  Sep 27 15:39:11.410: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6931" for this suite. @ 09/27/23 15:39:11.412
• [4.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API  should support creating IngressClass API operations [Conformance]
test/e2e/network/ingressclass.go:266
  STEP: Creating a kubernetes client @ 09/27/23 15:39:11.428
  Sep 27 15:39:11.428: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename ingressclass @ 09/27/23 15:39:11.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:11.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:11.483
  STEP: getting /apis @ 09/27/23 15:39:11.484
  STEP: getting /apis/networking.k8s.io @ 09/27/23 15:39:11.486
  STEP: getting /apis/networking.k8s.iov1 @ 09/27/23 15:39:11.487
  STEP: creating @ 09/27/23 15:39:11.488
  STEP: getting @ 09/27/23 15:39:11.526
  STEP: listing @ 09/27/23 15:39:11.528
  STEP: watching @ 09/27/23 15:39:11.53
  Sep 27 15:39:11.530: INFO: starting watch
  STEP: patching @ 09/27/23 15:39:11.531
  STEP: updating @ 09/27/23 15:39:11.544
  Sep 27 15:39:11.556: INFO: waiting for watch events with expected annotations
  Sep 27 15:39:11.556: INFO: saw patched and updated annotations
  STEP: deleting @ 09/27/23 15:39:11.557
  STEP: deleting a collection @ 09/27/23 15:39:11.575
  Sep 27 15:39:11.603: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-3461" for this suite. @ 09/27/23 15:39:11.605
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 09/27/23 15:39:11.619
  Sep 27 15:39:11.619: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename containers @ 09/27/23 15:39:11.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:11.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:11.648
  STEP: Creating a pod to test override all @ 09/27/23 15:39:11.656
  STEP: Saw pod success @ 09/27/23 15:39:15.684
  Sep 27 15:39:15.686: INFO: Trying to get logs from node conformance-1 pod client-containers-fe1947c1-19c3-4af2-8ae3-4ffe73cb6402 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:39:15.689
  Sep 27 15:39:15.735: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1699" for this suite. @ 09/27/23 15:39:15.737
• [4.132 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:252
  STEP: Creating a kubernetes client @ 09/27/23 15:39:15.752
  Sep 27 15:39:15.752: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:39:15.753
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:15.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:15.794
  STEP: Creating a test namespace @ 09/27/23 15:39:15.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:15.832
  STEP: Creating a service in the namespace @ 09/27/23 15:39:15.834
  STEP: Deleting the namespace @ 09/27/23 15:39:15.869
  STEP: Waiting for the namespace to be removed. @ 09/27/23 15:39:15.915
  STEP: Recreating the namespace @ 09/27/23 15:39:21.919
  STEP: Verifying there is no service in the namespace @ 09/27/23 15:39:21.979
  Sep 27 15:39:21.983: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-554" for this suite. @ 09/27/23 15:39:21.987
  STEP: Destroying namespace "nsdeletetest-4014" for this suite. @ 09/27/23 15:39:22.002
  Sep 27 15:39:22.005: INFO: Namespace nsdeletetest-4014 was already deleted
  STEP: Destroying namespace "nsdeletetest-3299" for this suite. @ 09/27/23 15:39:22.005
• [6.268 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance]
test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 09/27/23 15:39:22.021
  Sep 27 15:39:22.021: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:39:22.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:22.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:22.073
  STEP: Creating a test externalName service @ 09/27/23 15:39:22.076
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:22.093
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:22.093
  STEP: creating a pod to probe DNS @ 09/27/23 15:39:22.093
  STEP: submitting the pod to kubernetes @ 09/27/23 15:39:22.093
  STEP: retrieving the pod @ 09/27/23 15:39:24.12
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:39:24.122
  Sep 27 15:39:24.128: INFO: DNS probes using dns-test-497440d2-58e2-4ff7-b428-ccaee602d624 succeeded

  STEP: changing the externalName to bar.example.com @ 09/27/23 15:39:24.128
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:24.154
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:24.154
  STEP: creating a second pod to probe DNS @ 09/27/23 15:39:24.155
  STEP: submitting the pod to kubernetes @ 09/27/23 15:39:24.155
  STEP: retrieving the pod @ 09/27/23 15:39:26.18
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:39:26.183
  Sep 27 15:39:26.186: INFO: File wheezy_udp@dns-test-service-3.dns-3452.svc.cluster.local from pod  dns-3452/dns-test-a00397b5-306b-492b-bd94-baf41cf849f3 contains '' instead of 'bar.example.com.'
  Sep 27 15:39:26.189: INFO: File jessie_udp@dns-test-service-3.dns-3452.svc.cluster.local from pod  dns-3452/dns-test-a00397b5-306b-492b-bd94-baf41cf849f3 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  Sep 27 15:39:26.189: INFO: Lookups using dns-3452/dns-test-a00397b5-306b-492b-bd94-baf41cf849f3 failed for: [wheezy_udp@dns-test-service-3.dns-3452.svc.cluster.local jessie_udp@dns-test-service-3.dns-3452.svc.cluster.local]

  Sep 27 15:39:26.193: INFO: Pod client logs for webserver: 
  Sep 27 15:39:26.197: INFO: Pod client logs for querier: 
  Sep 27 15:39:26.201: INFO: Pod client logs for jessie-querier: 
  Sep 27 15:39:31.207: INFO: DNS probes using dns-test-a00397b5-306b-492b-bd94-baf41cf849f3 succeeded

  STEP: changing the service to type=ClusterIP @ 09/27/23 15:39:31.208
  W0927 15:39:31.254316      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:31.254
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3452.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3452.svc.cluster.local; sleep 1; done
   @ 09/27/23 15:39:31.254
  STEP: creating a third pod to probe DNS @ 09/27/23 15:39:31.254
  STEP: submitting the pod to kubernetes @ 09/27/23 15:39:31.257
  STEP: retrieving the pod @ 09/27/23 15:39:33.279
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:39:33.285
  Sep 27 15:39:33.298: INFO: DNS probes using dns-test-ff9132c4-6682-4c3d-8bb1-52adefa80a37 succeeded

  Sep 27 15:39:33.298: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:39:33.301
  STEP: deleting the pod @ 09/27/23 15:39:33.331
  STEP: deleting the pod @ 09/27/23 15:39:33.419
  STEP: deleting the test externalName service @ 09/27/23 15:39:33.488
  STEP: Destroying namespace "dns-3452" for this suite. @ 09/27/23 15:39:33.549
• [11.562 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance]
test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 09/27/23 15:39:33.584
  Sep 27 15:39:33.584: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:39:33.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:39:33.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:39:33.643
  Sep 27 15:39:33.694: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 15:40:33.710: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 09/27/23 15:40:33.713
  Sep 27 15:40:33.739: INFO: Created pod: pod0-0-sched-preemption-low-priority
  Sep 27 15:40:33.754: INFO: Created pod: pod0-1-sched-preemption-medium-priority
  Sep 27 15:40:33.802: INFO: Created pod: pod1-0-sched-preemption-medium-priority
  Sep 27 15:40:33.840: INFO: Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 09/27/23 15:40:33.841
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 09/27/23 15:40:37.87
  Sep 27 15:40:41.969: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8931" for this suite. @ 09/27/23 15:40:42.067
• [68.500 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance]
test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 09/27/23 15:40:42.085
  Sep 27 15:40:42.085: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:40:42.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:42.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:42.131
  STEP: Setting up server cert @ 09/27/23 15:40:42.22
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:40:42.35
  STEP: Deploying the webhook pod @ 09/27/23 15:40:42.382
  STEP: Wait for the deployment to be ready @ 09/27/23 15:40:42.416
  Sep 27 15:40:42.427: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:40:44.437
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:40:44.481
  Sep 27 15:40:45.482: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 09/27/23 15:40:45.487
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 09/27/23 15:40:45.513
  STEP: Creating a configMap that should not be mutated @ 09/27/23 15:40:45.528
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 09/27/23 15:40:45.557
  STEP: Creating a configMap that should be mutated @ 09/27/23 15:40:45.576
  Sep 27 15:40:45.637: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6182" for this suite. @ 09/27/23 15:40:45.755
  STEP: Destroying namespace "webhook-markers-6738" for this suite. @ 09/27/23 15:40:45.777
• [3.721 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance]
test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 09/27/23 15:40:45.808
  Sep 27 15:40:45.808: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename certificates @ 09/27/23 15:40:45.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:45.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:45.862
  STEP: getting /apis @ 09/27/23 15:40:46.234
  STEP: getting /apis/certificates.k8s.io @ 09/27/23 15:40:46.239
  STEP: getting /apis/certificates.k8s.io/v1 @ 09/27/23 15:40:46.24
  STEP: creating @ 09/27/23 15:40:46.241
  STEP: getting @ 09/27/23 15:40:46.302
  STEP: listing @ 09/27/23 15:40:46.304
  STEP: watching @ 09/27/23 15:40:46.307
  Sep 27 15:40:46.307: INFO: starting watch
  STEP: patching @ 09/27/23 15:40:46.308
  STEP: updating @ 09/27/23 15:40:46.326
  Sep 27 15:40:46.342: INFO: waiting for watch events with expected annotations
  Sep 27 15:40:46.342: INFO: saw patched and updated annotations
  STEP: getting /approval @ 09/27/23 15:40:46.342
  STEP: patching /approval @ 09/27/23 15:40:46.345
  STEP: updating /approval @ 09/27/23 15:40:46.363
  STEP: getting /status @ 09/27/23 15:40:46.377
  STEP: patching /status @ 09/27/23 15:40:46.38
  STEP: updating /status @ 09/27/23 15:40:46.397
  STEP: deleting @ 09/27/23 15:40:46.413
  STEP: deleting a collection @ 09/27/23 15:40:46.436
  Sep 27 15:40:46.470: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9725" for this suite. @ 09/27/23 15:40:46.474
• [0.681 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 09/27/23 15:40:46.489
  Sep 27 15:40:46.489: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 15:40:46.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:46.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:46.538
  Sep 27 15:40:46.541: INFO: Creating deployment "test-recreate-deployment"
  Sep 27 15:40:46.555: INFO: Waiting deployment "test-recreate-deployment" to be updated to revision 1
  Sep 27 15:40:46.562: INFO: new replicaset for deployment "test-recreate-deployment" is yet to be created
  Sep 27 15:40:48.592: INFO: Waiting deployment "test-recreate-deployment" to complete
  Sep 27 15:40:48.620: INFO: Triggering a new rollout for deployment "test-recreate-deployment"
  Sep 27 15:40:48.659: INFO: Updating deployment test-recreate-deployment
  Sep 27 15:40:48.659: INFO: Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  Sep 27 15:40:49.208: INFO: Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "29a82f4a-3335-4a62-bb47-0faba721f15e",
      ResourceVersion: (string) (len=5) "26188",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831426046,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426046,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=63) "ReplicaSet \"test-recreate-deployment-76fb77d45\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 15:40:49.215: INFO: New ReplicaSet "test-recreate-deployment-76fb77d45" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "52707864-f04a-4f74-846c-35ca00f5cc08",
      ResourceVersion: (string) (len=5) "26185",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831426048,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "29a82f4a-3335-4a62-bb47-0faba721f15e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 61 38 32 66  34 61 2d 33 33 33 35 2d  |\"29a82f4a-3335-|
              00000120  34 61 36 32 2d 62 62 34  37 2d 30 66 61 62 61 37  |4a62-bb47-0faba7|
              00000130  32 31 66 31 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21f15e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45",
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:40:49.217: INFO: All old ReplicaSets of Deployment "test-recreate-deployment":
  Sep 27 15:40:49.218: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-recreate-deployment-dd4bc9d6d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "786ae50d-8ca7-423b-ada0-c76a0d232d91",
      ResourceVersion: (string) (len=5) "26171",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831426046,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "29a82f4a-3335-4a62-bb47-0faba721f15e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 39 61 38 32 66  34 61 2d 33 33 33 35 2d  |\"29a82f4a-3335-|
              00000120  34 61 36 32 2d 62 62 34  37 2d 30 66 61 62 61 37  |4a62-bb47-0faba7|
              00000130  32 31 66 31 35 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |21f15e\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=9) "dd4bc9d6d"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 15:40:49.234: INFO: Pod "test-recreate-deployment-76fb77d45-s5cws" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-recreate-deployment-76fb77d45-s5cws",
      GenerateName: (string) (len=35) "test-recreate-deployment-76fb77d45-",
      Namespace: (string) (len=15) "deployment-9814",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b640d6f-4d76-44a0-aa5b-d13c87e93d37",
      ResourceVersion: (string) (len=5) "26189",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831426048,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=9) "76fb77d45"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-recreate-deployment-76fb77d45",
          UID: (types.UID) (len=36) "52707864-f04a-4f74-846c-35ca00f5cc08",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426048,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 32  37 30 37 38 36 34 2d 66  |d\":\"52707864-f|
              00000090  30 34 61 2d 34 66 37 34  2d 38 34 36 63 2d 33 35  |04a-4f74-846c-35|
              000000a0  63 61 30 30 66 35 63 63  30 38 5c 22 7d 22 3a 7b  |ca00f5cc08\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=482) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 52  |"k:{\"type\":\"R|
              00000130  65 61 64 79 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |eady\"}":{".":{}|
              00000140  2c 22 66 3a 6c 61 73 74  50 72 6f 62 65 54 69 6d  |,"f:lastProbeTim|
              00000150  65 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |e":{},"f:lastTra|
              00000160  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000170  22 66 3a 6d 65 73 73 61  67 65 22 3a 7b 7d 2c 22  |"f:message":{},"|
              00000180  66 3a 72 65 61 73 6f 6e  22 3a 7b 7d 2c 22 66 3a  |f:reason":{},"f:|
              00000190  73 74 61 74 75 73 22 3a  7b 7d 2c 22 66 3a 74 79  |status":{},"f:ty|
              000001a0  70 65 22 3a 7b 7d 7d 7d  2c 22 66 3a 63 6f 6e 74  |pe":{}}},"f:cont|
              000001b0  61 69 6e 65 72 53 74 61  74 75 73 65 73 22 3a 7b  |ainerStatuses":{|
              000001c0  7d 2c 22 66 3a 68 6f 73  74 49 50 22 3a 7b 7d 2c  |},"f:hostIP":{},|
              000001d0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000001e0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-glbnw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-glbnw",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831426049,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831426049,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 15:40:49.237: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9814" for this suite. @ 09/27/23 15:40:49.245
• [2.790 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:197
  STEP: Creating a kubernetes client @ 09/27/23 15:40:49.28
  Sep 27 15:40:49.280: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:40:49.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:49.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:49.352
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/27/23 15:40:49.356
  STEP: Saw pod success @ 09/27/23 15:40:53.413
  Sep 27 15:40:53.416: INFO: Trying to get logs from node conformance-1 pod pod-601a133f-88a5-4f88-ad77-807d560cfc9b container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:40:53.42
  Sep 27 15:40:53.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2143" for this suite. @ 09/27/23 15:40:53.47
• [4.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:137
  STEP: Creating a kubernetes client @ 09/27/23 15:40:53.485
  Sep 27 15:40:53.485: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:40:53.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:53.521
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:53.524
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/27/23 15:40:53.532
  STEP: Saw pod success @ 09/27/23 15:40:57.562
  Sep 27 15:40:57.564: INFO: Trying to get logs from node conformance-1 pod pod-dfd5115f-c126-47a8-b8bd-cea2f1ac95d2 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:40:57.569
  Sep 27 15:40:57.617: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2991" for this suite. @ 09/27/23 15:40:57.619
• [4.148 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance]
test/e2e/apps/job.go:642
  STEP: Creating a kubernetes client @ 09/27/23 15:40:57.633
  Sep 27 15:40:57.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 15:40:57.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:57.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:57.672
  STEP: Creating a job @ 09/27/23 15:40:57.681
  STEP: Ensure pods equal to parallelism count is attached to the job @ 09/27/23 15:40:57.694
  STEP: patching /status @ 09/27/23 15:40:59.699
  STEP: updating /status @ 09/27/23 15:40:59.727
  STEP: get /status @ 09/27/23 15:40:59.735
  Sep 27 15:40:59.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8047" for this suite. @ 09/27/23 15:40:59.75
• [2.145 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:123
  STEP: Creating a kubernetes client @ 09/27/23 15:40:59.778
  Sep 27 15:40:59.778: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sysctl @ 09/27/23 15:40:59.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:59.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:59.832
  STEP: Creating a pod with one valid and two invalid sysctls @ 09/27/23 15:40:59.835
  Sep 27 15:40:59.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9263" for this suite. @ 09/27/23 15:40:59.842
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance]
test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 09/27/23 15:40:59.861
  Sep 27 15:40:59.861: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename init-container @ 09/27/23 15:40:59.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:40:59.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:40:59.908
  STEP: creating the pod @ 09/27/23 15:40:59.911
  Sep 27 15:40:59.911: INFO: PodSpec: initContainers in spec.initContainers
  Sep 27 15:41:03.228: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9221" for this suite. @ 09/27/23 15:41:03.231
• [3.383 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance]
test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 09/27/23 15:41:03.245
  Sep 27 15:41:03.245: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename taint-single-pod @ 09/27/23 15:41:03.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:41:03.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:41:03.286
  Sep 27 15:41:03.287: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 15:42:03.301: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:42:03.304: INFO: Starting informer...
  STEP: Starting pod... @ 09/27/23 15:42:03.304
  Sep 27 15:42:03.537: INFO: Pod is running on conformance-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 09/27/23 15:42:03.537
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:42:03.557
  STEP: Waiting short time to make sure Pod is queued for deletion @ 09/27/23 15:42:03.562
  Sep 27 15:42:03.562: INFO: Pod wasn't evicted. Proceeding
  Sep 27 15:42:03.562: INFO: Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 09/27/23 15:42:03.592
  STEP: Waiting some time to make sure that toleration time passed. @ 09/27/23 15:42:03.599
  Sep 27 15:43:18.600: INFO: Pod wasn't evicted. Test successful
  Sep 27 15:43:18.600: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5354" for this suite. @ 09/27/23 15:43:18.603
• [135.375 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:167
  STEP: Creating a kubernetes client @ 09/27/23 15:43:18.621
  Sep 27 15:43:18.621: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:43:18.622
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:18.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:18.667
  STEP: Creating a pod to test downward api env vars @ 09/27/23 15:43:18.669
  STEP: Saw pod success @ 09/27/23 15:43:22.694
  Sep 27 15:43:22.697: INFO: Trying to get logs from node conformance-1 pod downward-api-2fa1985e-4d64-4ba0-adaf-a69b92080c8d container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:43:22.709
  Sep 27 15:43:22.751: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9968" for this suite. @ 09/27/23 15:43:22.754
• [4.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image  [Conformance]
test/e2e/apps/rc.go:69
  STEP: Creating a kubernetes client @ 09/27/23 15:43:22.771
  Sep 27 15:43:22.771: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:43:22.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:22.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:22.817
  STEP: Creating replication controller my-hostname-basic-d71c0bd1-a406-4a7a-b374-c5bb259500d2 @ 09/27/23 15:43:22.827
  Sep 27 15:43:22.848: INFO: Pod name my-hostname-basic-d71c0bd1-a406-4a7a-b374-c5bb259500d2: Found 0 pods out of 1
  Sep 27 15:43:27.852: INFO: Pod name my-hostname-basic-d71c0bd1-a406-4a7a-b374-c5bb259500d2: Found 1 pods out of 1
  Sep 27 15:43:27.852: INFO: Ensuring all pods for ReplicationController "my-hostname-basic-d71c0bd1-a406-4a7a-b374-c5bb259500d2" are running
  Sep 27 15:43:27.854: INFO: Pod "my-hostname-basic-d71c0bd1-a406-4a7a-b374-c5bb259500d2-545bx" is running and ready(conditions: [{Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:43:22 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:43:24 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:43:24 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2023-09-27 15:43:22 +0000 UTC Reason: Message:}])
  Sep 27 15:43:27.854: INFO: Trying to dial the pod
  STEP: trying to dial each unique pod @ 09/27/23 15:43:27.854
  Sep 27 15:43:27.863: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4268" for this suite. @ 09/27/23 15:43:27.865
• [5.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:93
  STEP: Creating a kubernetes client @ 09/27/23 15:43:27.885
  Sep 27 15:43:27.885: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:43:27.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:27.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:27.933
  STEP: Creating configMap configmap-6632/configmap-test-0080b228-e12e-4207-9b8d-6d87dc3ec678 @ 09/27/23 15:43:27.94
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:43:27.955
  STEP: Saw pod success @ 09/27/23 15:43:31.982
  Sep 27 15:43:31.985: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-7464c1e7-3912-433a-be48-6a0caeaaf04a container env-test: <nil>
  STEP: delete the pod @ 09/27/23 15:43:31.99
  Sep 27 15:43:32.035: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6632" for this suite. @ 09/27/23 15:43:32.039
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 09/27/23 15:43:32.055
  Sep 27 15:43:32.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:43:32.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:32.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:32.095
  STEP: create the container @ 09/27/23 15:43:32.102
  W0927 15:43:32.117575      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:43:32.117
  STEP: get the container status @ 09/27/23 15:43:35.133
  STEP: the container should be terminated @ 09/27/23 15:43:35.136
  STEP: the termination message should be set @ 09/27/23 15:43:35.136
  Sep 27 15:43:35.136: INFO: Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 09/27/23 15:43:35.136
  Sep 27 15:43:35.193: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9614" for this suite. @ 09/27/23 15:43:35.198
• [3.159 seconds]
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance]
test/e2e/apps/rc.go:424
  STEP: Creating a kubernetes client @ 09/27/23 15:43:35.213
  Sep 27 15:43:35.213: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:43:35.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:35.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:35.25
  STEP: Creating ReplicationController "e2e-rc-v7jhf" @ 09/27/23 15:43:35.257
  Sep 27 15:43:35.277: INFO: Get Replication Controller "e2e-rc-v7jhf" to confirm replicas
  Sep 27 15:43:36.282: INFO: Get Replication Controller "e2e-rc-v7jhf" to confirm replicas
  Sep 27 15:43:36.285: INFO: Found 1 replicas for "e2e-rc-v7jhf" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-v7jhf" @ 09/27/23 15:43:36.285
  STEP: Updating a scale subresource @ 09/27/23 15:43:36.289
  STEP: Verifying replicas where modified for replication controller "e2e-rc-v7jhf" @ 09/27/23 15:43:36.308
  Sep 27 15:43:36.308: INFO: Get Replication Controller "e2e-rc-v7jhf" to confirm replicas
  Sep 27 15:43:37.312: INFO: Get Replication Controller "e2e-rc-v7jhf" to confirm replicas
  Sep 27 15:43:37.316: INFO: Found 2 replicas for "e2e-rc-v7jhf" replication controller
  Sep 27 15:43:37.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2047" for this suite. @ 09/27/23 15:43:37.319
• [2.121 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance]
test/e2e/apimachinery/resource_quota.go:946
  STEP: Creating a kubernetes client @ 09/27/23 15:43:37.338
  Sep 27 15:43:37.339: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:43:37.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:37.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:37.425
  STEP: Creating a ResourceQuota @ 09/27/23 15:43:37.43
  STEP: Getting a ResourceQuota @ 09/27/23 15:43:37.45
  STEP: Listing all ResourceQuotas with LabelSelector @ 09/27/23 15:43:37.455
  STEP: Patching the ResourceQuota @ 09/27/23 15:43:37.458
  STEP: Deleting a Collection of ResourceQuotas @ 09/27/23 15:43:37.496
  STEP: Verifying the deleted ResourceQuota @ 09/27/23 15:43:37.528
  Sep 27 15:43:37.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7173" for this suite. @ 09/27/23 15:43:37.536
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching  [Conformance]
test/e2e/scheduling/predicates.go:444
  STEP: Creating a kubernetes client @ 09/27/23 15:43:37.555
  Sep 27 15:43:37.555: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 15:43:37.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:37.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:37.6
  Sep 27 15:43:37.609: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 15:43:37.616: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:43:37.622: INFO: 
  Logging pods the apiserver thinks is on node conformance-1 before test
  Sep 27 15:43:37.633: INFO: calico-node-p5zf2 from kube-system started at 2023-09-27 14:09:43 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.633: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:43:37.633: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-78vx8 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:43:37.633: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:43:37.633: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:43:37.633: INFO: e2e-rc-v7jhf-bpft7 from replication-controller-2047 started at 2023-09-27 15:43:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.633: INFO: 	Container httpd ready: true, restart count 0
  Sep 27 15:43:37.633: INFO: 
  Logging pods the apiserver thinks is on node conformance-2 before test
  Sep 27 15:43:37.643: INFO: calico-node-m6278 from kube-system started at 2023-09-27 14:10:45 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.643: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:43:37.643: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:43:37.643: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:43:37.643: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:43:37.643: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:44:47 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.643: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 15:43:37.643: INFO: sonobuoy-e2e-job-699828072b064365 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:43:37.643: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 15:43:37.643: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:43:37.644: INFO: coredns-864597b5fd-7fvch from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.644: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:43:37.644: INFO: calico-kube-controllers-77bd7c5b-d2rz9 from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.644: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 27 15:43:37.644: INFO: e2e-rc-v7jhf-qdfdm from replication-controller-2047 started at 2023-09-27 15:43:36 +0000 UTC (1 container statuses recorded)
  Sep 27 15:43:37.644: INFO: 	Container httpd ready: false, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 09/27/23 15:43:37.644
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1788cbded927b6c0], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling..] @ 09/27/23 15:43:37.7
  Sep 27 15:43:38.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2943" for this suite. @ 09/27/23 15:43:38.692
• [1.153 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:169
  STEP: Creating a kubernetes client @ 09/27/23 15:43:38.708
  Sep 27 15:43:38.708: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename discovery @ 09/27/23 15:43:38.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:38.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:38.757
  STEP: Setting up server cert @ 09/27/23 15:43:38.761
  STEP: Requesting APIResourceList from "/api/v1" @ 09/27/23 15:43:39.214
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 09/27/23 15:43:39.216
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 09/27/23 15:43:39.218
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 09/27/23 15:43:39.219
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 09/27/23 15:43:39.22
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 09/27/23 15:43:39.222
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 09/27/23 15:43:39.223
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 09/27/23 15:43:39.223
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 09/27/23 15:43:39.224
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 09/27/23 15:43:39.225
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 09/27/23 15:43:39.226
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 09/27/23 15:43:39.227
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 09/27/23 15:43:39.228
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 09/27/23 15:43:39.229
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 09/27/23 15:43:39.23
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 09/27/23 15:43:39.231
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 09/27/23 15:43:39.232
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 09/27/23 15:43:39.232
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 09/27/23 15:43:39.233
  Sep 27 15:43:39.234: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9009" for this suite. @ 09/27/23 15:43:39.237
• [0.553 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works  [Conformance]
test/e2e/apimachinery/custom_resource_definition.go:85
  STEP: Creating a kubernetes client @ 09/27/23 15:43:39.263
  Sep 27 15:43:39.263: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename custom-resource-definition @ 09/27/23 15:43:39.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:39.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:39.3
  Sep 27 15:43:39.310: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:43:46.004: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5815" for this suite. @ 09/27/23 15:43:46.008
• [6.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:91
  STEP: Creating a kubernetes client @ 09/27/23 15:43:46.035
  Sep 27 15:43:46.035: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:43:46.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:46.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:46.089
  STEP: Creating a pod to test downward api env vars @ 09/27/23 15:43:46.091
  STEP: Saw pod success @ 09/27/23 15:43:50.12
  Sep 27 15:43:50.122: INFO: Trying to get logs from node conformance-1 pod downward-api-1e6ce37f-d1ce-4a0e-b9cf-6e872797cad0 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:43:50.127
  Sep 27 15:43:50.170: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7472" for this suite. @ 09/27/23 15:43:50.173
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance]
test/e2e/apimachinery/server_version.go:40
  STEP: Creating a kubernetes client @ 09/27/23 15:43:50.193
  Sep 27 15:43:50.193: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename server-version @ 09/27/23 15:43:50.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:50.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:50.242
  STEP: Request ServerVersion @ 09/27/23 15:43:50.244
  STEP: Confirm major version @ 09/27/23 15:43:50.245
  Sep 27 15:43:50.245: INFO: Major version: 1
  STEP: Confirm minor version @ 09/27/23 15:43:50.245
  Sep 27 15:43:50.245: INFO: cleanMinorVersion: 28
  Sep 27 15:43:50.245: INFO: Minor version: 28
  Sep 27 15:43:50.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-8363" for this suite. @ 09/27/23 15:43:50.247
• [0.068 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:87
  STEP: Creating a kubernetes client @ 09/27/23 15:43:50.261
  Sep 27 15:43:50.261: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:43:50.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:50.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:50.309
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 09/27/23 15:43:50.311
  STEP: Saw pod success @ 09/27/23 15:43:54.342
  Sep 27 15:43:54.344: INFO: Trying to get logs from node conformance-1 pod pod-858bb5fc-b818-4786-96c9-a7c1a102dbeb container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:43:54.35
  Sep 27 15:43:54.389: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3600" for this suite. @ 09/27/23 15:43:54.391
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance]
test/e2e/apps/rc.go:94
  STEP: Creating a kubernetes client @ 09/27/23 15:43:54.41
  Sep 27 15:43:54.410: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:43:54.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:54.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:54.457
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 09/27/23 15:43:54.46
  STEP: When a replication controller with a matching selector is created @ 09/27/23 15:43:56.492
  STEP: Then the orphan pod is adopted @ 09/27/23 15:43:56.517
  Sep 27 15:43:57.524: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-979" for this suite. @ 09/27/23 15:43:57.527
• [3.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:174
  STEP: Creating a kubernetes client @ 09/27/23 15:43:57.542
  Sep 27 15:43:57.542: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:43:57.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:43:57.575
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:43:57.577
  STEP: Creating configMap with name cm-test-opt-del-47ec4150-ff9a-45a0-b5e2-0036c8721a3c @ 09/27/23 15:43:57.587
  STEP: Creating configMap with name cm-test-opt-upd-944722be-df2f-44c8-a860-87794378cf35 @ 09/27/23 15:43:57.599
  STEP: Creating the pod @ 09/27/23 15:43:57.612
  STEP: Deleting configmap cm-test-opt-del-47ec4150-ff9a-45a0-b5e2-0036c8721a3c @ 09/27/23 15:43:59.655
  STEP: Updating configmap cm-test-opt-upd-944722be-df2f-44c8-a860-87794378cf35 @ 09/27/23 15:43:59.674
  STEP: Creating configMap with name cm-test-opt-create-7dc6c325-104f-4248-ada1-6eb24d30895d @ 09/27/23 15:43:59.689
  STEP: waiting to observe update in volume @ 09/27/23 15:43:59.712
  Sep 27 15:44:01.734: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6667" for this suite. @ 09/27/23 15:44:01.738
• [4.223 seconds]
------------------------------
SSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance]
test/e2e/apps/disruption.go:349
  STEP: Creating a kubernetes client @ 09/27/23 15:44:01.767
  Sep 27 15:44:01.767: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption @ 09/27/23 15:44:01.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:01.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:01.807
  STEP: Creating a pdb that targets all three pods in a test replica set @ 09/27/23 15:44:01.812
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:44:01.821
  STEP: First trying to evict a pod which shouldn't be evictable @ 09/27/23 15:44:03.847
  STEP: Waiting for all pods to be running @ 09/27/23 15:44:03.848
  Sep 27 15:44:03.852: INFO: pods: 0 < 3
  STEP: locating a running pod @ 09/27/23 15:44:05.857
  STEP: Updating the pdb to allow a pod to be evicted @ 09/27/23 15:44:05.874
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:44:05.92
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/27/23 15:44:07.929
  STEP: Waiting for all pods to be running @ 09/27/23 15:44:07.929
  STEP: Waiting for the pdb to observed all healthy pods @ 09/27/23 15:44:07.95
  STEP: Patching the pdb to disallow a pod to be evicted @ 09/27/23 15:44:08.039
  STEP: Waiting for the pdb to be processed @ 09/27/23 15:44:08.147
  STEP: Waiting for all pods to be running @ 09/27/23 15:44:10.157
  STEP: locating a running pod @ 09/27/23 15:44:10.16
  STEP: Deleting the pdb to allow a pod to be evicted @ 09/27/23 15:44:10.166
  STEP: Waiting for the pdb to be deleted @ 09/27/23 15:44:10.189
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 09/27/23 15:44:10.191
  STEP: Waiting for all pods to be running @ 09/27/23 15:44:10.191
  Sep 27 15:44:10.230: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6519" for this suite. @ 09/27/23 15:44:10.253
• [8.585 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance]
test/e2e/network/service.go:1280
  STEP: Creating a kubernetes client @ 09/27/23 15:44:10.353
  Sep 27 15:44:10.353: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:44:10.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:10.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:10.475
  STEP: creating service nodeport-test with type=NodePort in namespace services-941 @ 09/27/23 15:44:10.478
  STEP: creating replication controller nodeport-test in namespace services-941 @ 09/27/23 15:44:10.539
  I0927 15:44:10.565733      21 runners.go:197] Created replication controller with name: nodeport-test, namespace: services-941, replica count: 2
  I0927 15:44:13.616674      21 runners.go:197] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:44:13.616: INFO: Creating new exec pod
  Sep 27 15:44:16.647: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  Sep 27 15:44:16.818: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  Sep 27 15:44:16.818: INFO: stdout: "nodeport-test-ktnq5"
  Sep 27 15:44:16.818: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  Sep 27 15:44:16.990: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  Sep 27 15:44:16.990: INFO: stdout: ""
  Sep 27 15:44:17.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  Sep 27 15:44:18.146: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  Sep 27 15:44:18.146: INFO: stdout: ""
  Sep 27 15:44:18.991: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.254 80'
  Sep 27 15:44:19.114: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.254 80\nConnection to 10.152.183.254 80 port [tcp/http] succeeded!\n"
  Sep 27 15:44:19.115: INFO: stdout: "nodeport-test-ktnq5"
  Sep 27 15:44:19.115: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.103 30403'
  Sep 27 15:44:19.241: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.103 30403\nConnection to 10.84.220.103 30403 port [tcp/*] succeeded!\n"
  Sep 27 15:44:19.241: INFO: stdout: "nodeport-test-ktnq5"
  Sep 27 15:44:19.241: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.167 30403'
  Sep 27 15:44:19.381: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.167 30403\nConnection to 10.84.220.167 30403 port [tcp/*] succeeded!\n"
  Sep 27 15:44:19.381: INFO: stdout: ""
  Sep 27 15:44:20.382: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-941 exec execpod8sg87 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.84.220.167 30403'
  Sep 27 15:44:20.523: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.84.220.167 30403\nConnection to 10.84.220.167 30403 port [tcp/*] succeeded!\n"
  Sep 27 15:44:20.523: INFO: stdout: "nodeport-test-ktnq5"
  Sep 27 15:44:20.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-941" for this suite. @ 09/27/23 15:44:20.527
• [10.187 seconds]
------------------------------
S
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance]
test/e2e/network/service.go:3326
  STEP: Creating a kubernetes client @ 09/27/23 15:44:20.541
  Sep 27 15:44:20.541: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:44:20.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:20.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:20.588
  STEP: creating a Service @ 09/27/23 15:44:20.594
  STEP: watching for the Service to be added @ 09/27/23 15:44:20.621
  Sep 27 15:44:20.623: INFO: Found Service test-service-zc9tr in namespace services-7419 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 0}]
  Sep 27 15:44:20.623: INFO: Service test-service-zc9tr created
  STEP: Getting /status @ 09/27/23 15:44:20.623
  Sep 27 15:44:20.627: INFO: Service test-service-zc9tr has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 09/27/23 15:44:20.627
  STEP: watching for the Service to be patched @ 09/27/23 15:44:20.645
  Sep 27 15:44:20.647: INFO: observed Service test-service-zc9tr in namespace services-7419 with annotations: map[] & LoadBalancer: {[]}
  Sep 27 15:44:20.647: INFO: Found Service test-service-zc9tr in namespace services-7419 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  []}]}
  Sep 27 15:44:20.647: INFO: Service test-service-zc9tr has service status patched
  STEP: updating the ServiceStatus @ 09/27/23 15:44:20.647
  Sep 27 15:44:20.664: INFO: updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 09/27/23 15:44:20.664
  Sep 27 15:44:20.667: INFO: Observed Service test-service-zc9tr in namespace services-7419 with annotations: map[] & Conditions: {[]}
  Sep 27 15:44:20.667: INFO: Observed event: &Service{ObjectMeta:{test-service-zc9tr  services-7419  7a60257b-6035-4ad7-8dcf-9f967149a2df 27456 0 2023-09-27 15:44:20 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2023-09-27 15:44:20 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:internalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2023-09-27 15:44:20 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:0,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.152.183.77,Type:ClusterIP,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.152.183.77],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:nil,LoadBalancerClass:nil,InternalTrafficPolicy:*Cluster,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  Sep 27 15:44:20.667: INFO: Found Service test-service-zc9tr in namespace services-7419 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 15:44:20.667: INFO: Service test-service-zc9tr has service status updated
  STEP: patching the service @ 09/27/23 15:44:20.667
  STEP: watching for the Service to be patched @ 09/27/23 15:44:20.69
  Sep 27 15:44:20.693: INFO: observed Service test-service-zc9tr in namespace services-7419 with labels: map[test-service-static:true]
  Sep 27 15:44:20.693: INFO: observed Service test-service-zc9tr in namespace services-7419 with labels: map[test-service-static:true]
  Sep 27 15:44:20.693: INFO: observed Service test-service-zc9tr in namespace services-7419 with labels: map[test-service-static:true]
  Sep 27 15:44:20.693: INFO: Found Service test-service-zc9tr in namespace services-7419 with labels: map[test-service:patched test-service-static:true]
  Sep 27 15:44:20.693: INFO: Service test-service-zc9tr patched
  STEP: deleting the service @ 09/27/23 15:44:20.693
  STEP: watching for the Service to be deleted @ 09/27/23 15:44:20.722
  Sep 27 15:44:20.724: INFO: Observed event: ADDED
  Sep 27 15:44:20.724: INFO: Observed event: MODIFIED
  Sep 27 15:44:20.724: INFO: Observed event: MODIFIED
  Sep 27 15:44:20.724: INFO: Observed event: MODIFIED
  Sep 27 15:44:20.724: INFO: Found Service test-service-zc9tr in namespace services-7419 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  Sep 27 15:44:20.724: INFO: Service test-service-zc9tr deleted
  Sep 27 15:44:20.724: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7419" for this suite. @ 09/27/23 15:44:20.727
• [0.203 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass  should support RuntimeClasses API operations [Conformance]
test/e2e/common/node/runtimeclass.go:189
  STEP: Creating a kubernetes client @ 09/27/23 15:44:20.746
  Sep 27 15:44:20.746: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:44:20.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:20.792
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:20.795
  STEP: getting /apis @ 09/27/23 15:44:20.798
  STEP: getting /apis/node.k8s.io @ 09/27/23 15:44:20.802
  STEP: getting /apis/node.k8s.io/v1 @ 09/27/23 15:44:20.803
  STEP: creating @ 09/27/23 15:44:20.804
  STEP: watching @ 09/27/23 15:44:20.843
  Sep 27 15:44:20.843: INFO: starting watch
  STEP: getting @ 09/27/23 15:44:20.858
  STEP: listing @ 09/27/23 15:44:20.861
  STEP: patching @ 09/27/23 15:44:20.864
  STEP: updating @ 09/27/23 15:44:20.878
  Sep 27 15:44:20.893: INFO: waiting for watch events with expected annotations
  STEP: deleting @ 09/27/23 15:44:20.894
  STEP: deleting a collection @ 09/27/23 15:44:20.911
  Sep 27 15:44:20.942: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1798" for this suite. @ 09/27/23 15:44:20.946
• [0.217 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:250
  STEP: Creating a kubernetes client @ 09/27/23 15:44:20.963
  Sep 27 15:44:20.963: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:44:20.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:21.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:21.012
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:44:21.014
  STEP: Saw pod success @ 09/27/23 15:44:25.042
  Sep 27 15:44:25.044: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-fd8ff880-197a-4fd5-9b5d-334dc231f95d container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:44:25.05
  Sep 27 15:44:25.083: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7123" for this suite. @ 09/27/23 15:44:25.086
• [4.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance]
test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 09/27/23 15:44:25.14
  Sep 27 15:44:25.140: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:44:25.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:25.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:25.187
  STEP: Setting up server cert @ 09/27/23 15:44:25.244
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:44:25.764
  STEP: Deploying the webhook pod @ 09/27/23 15:44:25.808
  STEP: Wait for the deployment to be ready @ 09/27/23 15:44:25.864
  Sep 27 15:44:25.873: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:44:27.89
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:44:27.935
  Sep 27 15:44:28.936: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 09/27/23 15:44:28.947
  STEP: create a configmap that should be updated by the webhook @ 09/27/23 15:44:28.986
  Sep 27 15:44:29.013: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4354" for this suite. @ 09/27/23 15:44:29.192
  STEP: Destroying namespace "webhook-markers-1553" for this suite. @ 09/27/23 15:44:29.222
• [4.104 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:354
  STEP: Creating a kubernetes client @ 09/27/23 15:44:29.245
  Sep 27 15:44:29.245: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:44:29.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:29.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:29.292
  STEP: creating a replication controller @ 09/27/23 15:44:29.303
  Sep 27 15:44:29.303: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 create -f -'
  Sep 27 15:44:29.870: INFO: stderr: ""
  Sep 27 15:44:29.870: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:44:29.87
  Sep 27 15:44:29.870: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:29.953: INFO: stderr: ""
  Sep 27 15:44:29.953: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-cdntg "
  Sep 27 15:44:29.954: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:30.046: INFO: stderr: ""
  Sep 27 15:44:30.046: INFO: stdout: ""
  Sep 27 15:44:30.046: INFO: update-demo-nautilus-qjcfd is created but not running
  Sep 27 15:44:35.047: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:35.149: INFO: stderr: ""
  Sep 27 15:44:35.149: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-cdntg "
  Sep 27 15:44:35.150: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:35.236: INFO: stderr: ""
  Sep 27 15:44:35.236: INFO: stdout: ""
  Sep 27 15:44:35.236: INFO: update-demo-nautilus-qjcfd is created but not running
  Sep 27 15:44:40.238: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:40.357: INFO: stderr: ""
  Sep 27 15:44:40.357: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-cdntg "
  Sep 27 15:44:40.357: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:40.487: INFO: stderr: ""
  Sep 27 15:44:40.487: INFO: stdout: ""
  Sep 27 15:44:40.487: INFO: update-demo-nautilus-qjcfd is created but not running
  Sep 27 15:44:45.488: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:45.553: INFO: stderr: ""
  Sep 27 15:44:45.553: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-cdntg "
  Sep 27 15:44:45.553: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:45.621: INFO: stderr: ""
  Sep 27 15:44:45.621: INFO: stdout: "true"
  Sep 27 15:44:45.621: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:45.687: INFO: stderr: ""
  Sep 27 15:44:45.687: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:45.687: INFO: validating pod update-demo-nautilus-qjcfd
  Sep 27 15:44:45.691: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:45.691: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:45.691: INFO: update-demo-nautilus-qjcfd is verified up and running
  Sep 27 15:44:45.691: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-cdntg -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:45.785: INFO: stderr: ""
  Sep 27 15:44:45.785: INFO: stdout: "true"
  Sep 27 15:44:45.785: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-cdntg -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:45.874: INFO: stderr: ""
  Sep 27 15:44:45.874: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:45.874: INFO: validating pod update-demo-nautilus-cdntg
  Sep 27 15:44:45.881: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:45.881: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:45.881: INFO: update-demo-nautilus-cdntg is verified up and running
  STEP: scaling down the replication controller @ 09/27/23 15:44:45.881
  Sep 27 15:44:45.882: INFO: scanned /root for discovery docs: <nil>
  Sep 27 15:44:45.882: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  Sep 27 15:44:46.983: INFO: stderr: ""
  Sep 27 15:44:46.983: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:44:46.983
  Sep 27 15:44:46.984: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:47.081: INFO: stderr: ""
  Sep 27 15:44:47.081: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-cdntg "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 09/27/23 15:44:47.082
  Sep 27 15:44:52.083: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:52.151: INFO: stderr: ""
  Sep 27 15:44:52.151: INFO: stdout: "update-demo-nautilus-qjcfd "
  Sep 27 15:44:52.151: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:52.215: INFO: stderr: ""
  Sep 27 15:44:52.215: INFO: stdout: "true"
  Sep 27 15:44:52.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:52.284: INFO: stderr: ""
  Sep 27 15:44:52.284: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:52.284: INFO: validating pod update-demo-nautilus-qjcfd
  Sep 27 15:44:52.288: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:52.288: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:52.288: INFO: update-demo-nautilus-qjcfd is verified up and running
  STEP: scaling up the replication controller @ 09/27/23 15:44:52.288
  Sep 27 15:44:52.289: INFO: scanned /root for discovery docs: <nil>
  Sep 27 15:44:52.289: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  Sep 27 15:44:53.422: INFO: stderr: ""
  Sep 27 15:44:53.422: INFO: stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:44:53.422
  Sep 27 15:44:53.422: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:53.514: INFO: stderr: ""
  Sep 27 15:44:53.514: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-nq6mv "
  Sep 27 15:44:53.514: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:53.582: INFO: stderr: ""
  Sep 27 15:44:53.582: INFO: stdout: "true"
  Sep 27 15:44:53.583: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:53.661: INFO: stderr: ""
  Sep 27 15:44:53.661: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:53.661: INFO: validating pod update-demo-nautilus-qjcfd
  Sep 27 15:44:53.664: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:53.664: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:53.664: INFO: update-demo-nautilus-qjcfd is verified up and running
  Sep 27 15:44:53.664: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-nq6mv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:53.807: INFO: stderr: ""
  Sep 27 15:44:53.807: INFO: stdout: ""
  Sep 27 15:44:53.807: INFO: update-demo-nautilus-nq6mv is created but not running
  Sep 27 15:44:58.808: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:44:58.865: INFO: stderr: ""
  Sep 27 15:44:58.865: INFO: stdout: "update-demo-nautilus-qjcfd update-demo-nautilus-nq6mv "
  Sep 27 15:44:58.865: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:58.910: INFO: stderr: ""
  Sep 27 15:44:58.910: INFO: stdout: "true"
  Sep 27 15:44:58.910: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-qjcfd -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:58.955: INFO: stderr: ""
  Sep 27 15:44:58.955: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:58.955: INFO: validating pod update-demo-nautilus-qjcfd
  Sep 27 15:44:58.957: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:58.958: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:58.958: INFO: update-demo-nautilus-qjcfd is verified up and running
  Sep 27 15:44:58.958: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-nq6mv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:44:59.001: INFO: stderr: ""
  Sep 27 15:44:59.001: INFO: stdout: "true"
  Sep 27 15:44:59.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods update-demo-nautilus-nq6mv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:44:59.049: INFO: stderr: ""
  Sep 27 15:44:59.049: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:44:59.049: INFO: validating pod update-demo-nautilus-nq6mv
  Sep 27 15:44:59.052: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:44:59.052: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:44:59.052: INFO: update-demo-nautilus-nq6mv is verified up and running
  STEP: using delete to clean up resources @ 09/27/23 15:44:59.052
  Sep 27 15:44:59.052: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 delete --grace-period=0 --force -f -'
  Sep 27 15:44:59.128: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 15:44:59.128: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 27 15:44:59.128: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get rc,svc -l name=update-demo --no-headers'
  Sep 27 15:44:59.196: INFO: stderr: "No resources found in kubectl-6884 namespace.\n"
  Sep 27 15:44:59.196: INFO: stdout: ""
  Sep 27 15:44:59.196: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6884 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 15:44:59.288: INFO: stderr: ""
  Sep 27 15:44:59.288: INFO: stdout: ""
  Sep 27 15:44:59.288: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6884" for this suite. @ 09/27/23 15:44:59.292
• [30.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info  [Conformance]
test/e2e/kubectl/kubectl.go:1316
  STEP: Creating a kubernetes client @ 09/27/23 15:44:59.371
  Sep 27 15:44:59.371: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:44:59.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:59.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:59.471
  STEP: validating cluster-info @ 09/27/23 15:44:59.474
  Sep 27 15:44:59.474: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6639 cluster-info'
  Sep 27 15:44:59.544: INFO: stderr: ""
  Sep 27 15:44:59.544: INFO: stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.152.183.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  Sep 27 15:44:59.544: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6639" for this suite. @ 09/27/23 15:44:59.554
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:153
  STEP: Creating a kubernetes client @ 09/27/23 15:44:59.633
  Sep 27 15:44:59.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 15:44:59.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:44:59.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:44:59.751
  Sep 27 15:44:59.753: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 15:45:01.026
  Sep 27 15:45:01.026: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-2403 --namespace=crd-publish-openapi-2403 create -f -'
  Sep 27 15:45:01.411: INFO: stderr: ""
  Sep 27 15:45:01.411: INFO: stdout: "e2e-test-crd-publish-openapi-2436-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 27 15:45:01.411: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-2403 --namespace=crd-publish-openapi-2403 delete e2e-test-crd-publish-openapi-2436-crds test-cr'
  Sep 27 15:45:01.485: INFO: stderr: ""
  Sep 27 15:45:01.485: INFO: stdout: "e2e-test-crd-publish-openapi-2436-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  Sep 27 15:45:01.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-2403 --namespace=crd-publish-openapi-2403 apply -f -'
  Sep 27 15:45:01.607: INFO: stderr: ""
  Sep 27 15:45:01.607: INFO: stdout: "e2e-test-crd-publish-openapi-2436-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  Sep 27 15:45:01.607: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-2403 --namespace=crd-publish-openapi-2403 delete e2e-test-crd-publish-openapi-2436-crds test-cr'
  Sep 27 15:45:01.699: INFO: stderr: ""
  Sep 27 15:45:01.699: INFO: stdout: "e2e-test-crd-publish-openapi-2436-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 09/27/23 15:45:01.699
  Sep 27 15:45:01.699: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-2403 explain e2e-test-crd-publish-openapi-2436-crds'
  Sep 27 15:45:02.002: INFO: stderr: ""
  Sep 27 15:45:02.002: INFO: stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2436-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  Sep 27 15:45:03.231: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2403" for this suite. @ 09/27/23 15:45:03.238
• [3.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance]
test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 09/27/23 15:45:03.256
  Sep 27 15:45:03.256: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename watch @ 09/27/23 15:45:03.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:03.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:03.34
  STEP: creating a watch on configmaps with a certain label @ 09/27/23 15:45:03.342
  STEP: creating a new configmap @ 09/27/23 15:45:03.343
  STEP: modifying the configmap once @ 09/27/23 15:45:03.358
  STEP: changing the label value of the configmap @ 09/27/23 15:45:03.386
  STEP: Expecting to observe a delete notification for the watched object @ 09/27/23 15:45:03.418
  Sep 27 15:45:03.418: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27812 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:03 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:45:03.418: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27813 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:45:03.418: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27814 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:03 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 09/27/23 15:45:03.418
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 09/27/23 15:45:03.449
  STEP: changing the label value of the configmap back @ 09/27/23 15:45:13.451
  STEP: modifying the configmap a third time @ 09/27/23 15:45:13.479
  STEP: deleting the configmap @ 09/27/23 15:45:13.493
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 09/27/23 15:45:13.505
  Sep 27 15:45:13.505: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27864 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:45:13.506: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27865 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:45:13.506: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4881  c8cfecc8-91a6-46ad-ba97-293b88e0d2fc 27866 0 2023-09-27 15:45:03 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2023-09-27 15:45:13 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 15:45:13.506: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4881" for this suite. @ 09/27/23 15:45:13.508
• [10.264 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance]
test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 09/27/23 15:45:13.522
  Sep 27 15:45:13.522: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename proxy @ 09/27/23 15:45:13.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:13.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:13.563
  Sep 27 15:45:13.565: INFO: Creating pod...
  Sep 27 15:45:15.593: INFO: Creating service...
  Sep 27 15:45:15.630: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=DELETE
  Sep 27 15:45:15.635: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 15:45:15.635: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=OPTIONS
  Sep 27 15:45:15.637: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 15:45:15.637: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=PATCH
  Sep 27 15:45:15.639: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 15:45:15.639: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=POST
  Sep 27 15:45:15.640: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 15:45:15.641: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=PUT
  Sep 27 15:45:15.642: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 15:45:15.642: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=DELETE
  Sep 27 15:45:15.666: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 15:45:15.666: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=OPTIONS
  Sep 27 15:45:15.668: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 15:45:15.668: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=PATCH
  Sep 27 15:45:15.670: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 15:45:15.670: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=POST
  Sep 27 15:45:15.672: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 15:45:15.672: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=PUT
  Sep 27 15:45:15.674: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 15:45:15.674: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=GET
  Sep 27 15:45:15.676: INFO: http.Client request:GET StatusCode:301
  Sep 27 15:45:15.676: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=GET
  Sep 27 15:45:15.677: INFO: http.Client request:GET StatusCode:301
  Sep 27 15:45:15.677: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/pods/agnhost/proxy?method=HEAD
  Sep 27 15:45:15.679: INFO: http.Client request:HEAD StatusCode:301
  Sep 27 15:45:15.679: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-4263/services/e2e-proxy-test-service/proxy?method=HEAD
  Sep 27 15:45:15.681: INFO: http.Client request:HEAD StatusCode:301
  Sep 27 15:45:15.681: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4263" for this suite. @ 09/27/23 15:45:15.683
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance]
test/e2e/apps/rc.go:103
  STEP: Creating a kubernetes client @ 09/27/23 15:45:15.701
  Sep 27 15:45:15.701: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 15:45:15.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:15.74
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:15.741
  STEP: Given a ReplicationController is created @ 09/27/23 15:45:15.743
  STEP: When the matched label of one of its pods change @ 09/27/23 15:45:15.755
  Sep 27 15:45:15.758: INFO: Pod name pod-release: Found 0 pods out of 1
  Sep 27 15:45:20.772: INFO: Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 09/27/23 15:45:20.813
  Sep 27 15:45:21.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-2612" for this suite. @ 09/27/23 15:45:21.823
• [6.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:163
  STEP: Creating a kubernetes client @ 09/27/23 15:45:21.836
  Sep 27 15:45:21.837: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:45:21.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:21.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:21.877
  STEP: Creating the pod @ 09/27/23 15:45:21.878
  Sep 27 15:45:24.423: INFO: Successfully updated pod "annotationupdateec5d647a-1f91-4865-a1c7-576dc244d9b8"
  Sep 27 15:45:28.447: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-232" for this suite. @ 09/27/23 15:45:28.451
• [6.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance]
test/e2e/apimachinery/namespace.go:272
  STEP: Creating a kubernetes client @ 09/27/23 15:45:28.471
  Sep 27 15:45:28.471: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:45:28.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:28.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:28.528
  STEP: creating a Namespace @ 09/27/23 15:45:28.531
  STEP: patching the Namespace @ 09/27/23 15:45:28.581
  STEP: get the Namespace and ensuring it has the label @ 09/27/23 15:45:28.606
  Sep 27 15:45:28.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3150" for this suite. @ 09/27/23 15:45:28.613
  STEP: Destroying namespace "nspatchtest-add6b538-8e7e-49e1-9117-07b620ee49e2-6392" for this suite. @ 09/27/23 15:45:28.634
• [0.180 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run  [Conformance]
test/e2e/scheduling/predicates.go:332
  STEP: Creating a kubernetes client @ 09/27/23 15:45:28.651
  Sep 27 15:45:28.652: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 15:45:28.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:28.71
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:28.713
  Sep 27 15:45:28.717: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 15:45:28.724: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 15:45:28.728: INFO: 
  Logging pods the apiserver thinks is on node conformance-2 before test
  Sep 27 15:45:28.737: INFO: calico-node-m6278 from kube-system started at 2023-09-27 14:10:45 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:44:47 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: sonobuoy-e2e-job-699828072b064365 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: coredns-864597b5fd-7fvch from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: calico-kube-controllers-77bd7c5b-d2rz9 from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.737: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  Sep 27 15:45:28.737: INFO: 
  Logging pods the apiserver thinks is on node conformance-1 before test
  Sep 27 15:45:28.744: INFO: calico-node-p5zf2 from kube-system started at 2023-09-27 14:09:43 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.744: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 15:45:28.744: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-78vx8 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 15:45:28.745: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 15:45:28.745: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 15:45:28.745: INFO: annotationupdateec5d647a-1f91-4865-a1c7-576dc244d9b8 from downward-api-232 started at 2023-09-27 15:45:21 +0000 UTC (1 container statuses recorded)
  Sep 27 15:45:28.745: INFO: 	Container client-container ready: true, restart count 0
  STEP: verifying the node has the label node conformance-2 @ 09/27/23 15:45:28.786
  STEP: verifying the node has the label node conformance-1 @ 09/27/23 15:45:28.813
  Sep 27 15:45:28.840: INFO: Pod calico-node-p5zf2 requesting resource cpu=250m on Node conformance-1
  Sep 27 15:45:28.840: INFO: Pod calico-node-m6278 requesting resource cpu=250m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-78vx8 requesting resource cpu=0m on Node conformance-1
  Sep 27 15:45:28.840: INFO: Pod sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv requesting resource cpu=0m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod sonobuoy requesting resource cpu=0m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod sonobuoy-e2e-job-699828072b064365 requesting resource cpu=0m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod coredns-864597b5fd-7fvch requesting resource cpu=100m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod calico-kube-controllers-77bd7c5b-d2rz9 requesting resource cpu=0m on Node conformance-2
  Sep 27 15:45:28.840: INFO: Pod annotationupdateec5d647a-1f91-4865-a1c7-576dc244d9b8 requesting resource cpu=0m on Node conformance-1
  STEP: Starting Pods to consume most of the cluster CPU. @ 09/27/23 15:45:28.84
  Sep 27 15:45:28.840: INFO: Creating a pod which consumes cpu=1155m on Node conformance-2
  Sep 27 15:45:28.866: INFO: Creating a pod which consumes cpu=1225m on Node conformance-1
  STEP: Creating another pod that requires unavailable amount of CPU. @ 09/27/23 15:45:32.917
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c.1788cbf8bd39e08c], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1084/filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c to conformance-2] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8.1788cbf8bfcf3bce], Reason = [Scheduled], Message = [Successfully assigned sched-pred-1084/filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8 to conformance-1] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8.1788cbf8eaa0a68a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8.1788cbf8ee30aee5], Reason = [Created], Message = [Created container filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8.1788cbf8f5550c44], Reason = [Started], Message = [Started container filler-pod-087c56cd-9adc-4ef4-b351-a82e25b275b8] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c.1788cbf906bbc122], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c.1788cbf90a89159d], Reason = [Created], Message = [Created container filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c.1788cbf913a7ff64], Reason = [Started], Message = [Started container filler-pod-f4c7cd5f-68b0-4496-9356-e7c662bbcb1c] @ 09/27/23 15:45:32.919
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.1788cbf9af86b5bc], Reason = [FailedScheduling], Message = [0/2 nodes are available: 2 Insufficient cpu. preemption: 0/2 nodes are available: 2 No preemption victims found for incoming pod..] @ 09/27/23 15:45:32.994
  STEP: removing the label node off the node conformance-2 @ 09/27/23 15:45:33.971
  STEP: verifying the node doesn't have the label node @ 09/27/23 15:45:34.022
  STEP: removing the label node off the node conformance-1 @ 09/27/23 15:45:34.042
  STEP: verifying the node doesn't have the label node @ 09/27/23 15:45:34.078
  Sep 27 15:45:34.111: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1084" for this suite. @ 09/27/23 15:45:34.132
• [5.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:168
  STEP: Creating a kubernetes client @ 09/27/23 15:45:34.189
  Sep 27 15:45:34.189: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:45:34.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:34.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:34.301
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:45:34.316
  STEP: create the pod with lifecycle hook @ 09/27/23 15:45:36.395
  STEP: check poststart hook @ 09/27/23 15:45:38.422
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:45:38.436
  Sep 27 15:45:42.467: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-38" for this suite. @ 09/27/23 15:45:42.47
• [8.290 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:187
  STEP: Creating a kubernetes client @ 09/27/23 15:45:42.48
  Sep 27 15:45:42.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:45:42.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:42.501
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:42.504
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/27/23 15:45:42.552
  STEP: Saw pod success @ 09/27/23 15:45:46.575
  Sep 27 15:45:46.578: INFO: Trying to get logs from node conformance-1 pod pod-60b7fcb5-109c-4f64-8463-689eaadf7f84 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:45:46.583
  Sep 27 15:45:46.609: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1711" for this suite. @ 09/27/23 15:45:46.612
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 09/27/23 15:45:46.63
  Sep 27 15:45:46.630: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:45:46.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:46.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:46.668
  STEP: Creating projection with secret that has name projected-secret-test-map-c2e51096-dbfa-4130-a784-105e892fd6fa @ 09/27/23 15:45:46.671
  STEP: Creating a pod to test consume secrets @ 09/27/23 15:45:46.679
  STEP: Saw pod success @ 09/27/23 15:45:50.704
  Sep 27 15:45:50.706: INFO: Trying to get logs from node conformance-1 pod pod-projected-secrets-bccde758-cb18-4bd5-97e9-f1177e768e90 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:45:50.71
  Sep 27 15:45:50.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7765" for this suite. @ 09/27/23 15:45:50.745
• [4.133 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 09/27/23 15:45:50.763
  Sep 27 15:45:50.763: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:45:50.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:50.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:50.803
  Sep 27 15:45:50.814: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  W0927 15:45:50.815187      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0013ed7e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0927 15:45:53.356318      21 warnings.go:70] unknown field "alpha"
  W0927 15:45:53.356350      21 warnings.go:70] unknown field "beta"
  W0927 15:45:53.356357      21 warnings.go:70] unknown field "delta"
  W0927 15:45:53.356362      21 warnings.go:70] unknown field "epsilon"
  W0927 15:45:53.356368      21 warnings.go:70] unknown field "gamma"
  Sep 27 15:45:53.912: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5305" for this suite. @ 09/27/23 15:45:53.926
• [3.178 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:217
  STEP: Creating a kubernetes client @ 09/27/23 15:45:53.943
  Sep 27 15:45:53.943: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:45:53.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:53.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:53.996
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 09/27/23 15:45:53.999
  STEP: Saw pod success @ 09/27/23 15:45:58.034
  Sep 27 15:45:58.036: INFO: Trying to get logs from node conformance-1 pod pod-0dfdfe6d-ab2f-4db5-8bdd-676447773851 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:45:58.041
  Sep 27 15:45:58.078: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1425" for this suite. @ 09/27/23 15:45:58.082
• [4.153 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance]
test/e2e/network/service.go:1416
  STEP: Creating a kubernetes client @ 09/27/23 15:45:58.097
  Sep 27 15:45:58.097: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 15:45:58.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:45:58.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:45:58.134
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3221 @ 09/27/23 15:45:58.142
  STEP: changing the ExternalName service to type=ClusterIP @ 09/27/23 15:45:58.155
  STEP: creating replication controller externalname-service in namespace services-3221 @ 09/27/23 15:45:58.186
  I0927 15:45:58.201860      21 runners.go:197] Created replication controller with name: externalname-service, namespace: services-3221, replica count: 2
  I0927 15:46:01.252804      21 runners.go:197] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:46:01.252: INFO: Creating new exec pod
  Sep 27 15:46:04.276: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:04.408: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:04.408: INFO: stdout: ""
  Sep 27 15:46:05.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:05.528: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:05.528: INFO: stdout: ""
  Sep 27 15:46:06.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:06.553: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:06.553: INFO: stdout: ""
  Sep 27 15:46:07.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:07.542: INFO: stderr: "+ + echonc hostName\n -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:07.542: INFO: stdout: ""
  Sep 27 15:46:08.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:08.548: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:08.549: INFO: stdout: ""
  Sep 27 15:46:09.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:09.549: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:09.549: INFO: stdout: ""
  Sep 27 15:46:10.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:10.518: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:10.518: INFO: stdout: ""
  Sep 27 15:46:11.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  Sep 27 15:46:11.515: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:11.515: INFO: stdout: "externalname-service-jm8rq"
  Sep 27 15:46:11.515: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  Sep 27 15:46:11.649: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:11.649: INFO: stdout: ""
  Sep 27 15:46:12.650: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3221 exec execpodb284m -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.196 80'
  Sep 27 15:46:12.820: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.196 80\nConnection to 10.152.183.196 80 port [tcp/http] succeeded!\n"
  Sep 27 15:46:12.820: INFO: stdout: "externalname-service-jm8rq"
  Sep 27 15:46:12.820: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:46:12.824: INFO: Cleaning up the ExternalName to ClusterIP test service
  STEP: Destroying namespace "services-3221" for this suite. @ 09/27/23 15:46:12.887
• [14.804 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:107
  STEP: Creating a kubernetes client @ 09/27/23 15:46:12.902
  Sep 27 15:46:12.902: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 15:46:12.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:12.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:12.954
  STEP: Performing setup for networking test in namespace pod-network-test-7990 @ 09/27/23 15:46:12.961
  STEP: creating a selector @ 09/27/23 15:46:12.961
  STEP: Creating the service pods in kubernetes @ 09/27/23 15:46:12.961
  Sep 27 15:46:12.961: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/27/23 15:46:35.074
  Sep 27 15:46:37.134: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 15:46:37.134: INFO: Going to poll 10.1.212.25 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:46:37.136: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.212.25:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7990 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:46:37.136: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:46:37.137: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:46:37.137: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7990/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.212.25%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:46:37.211: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 27 15:46:37.211: INFO: Going to poll 10.1.20.99 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:46:37.217: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.1.20.99:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7990 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:46:37.217: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:46:37.217: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:46:37.217: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-7990/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.1.20.99%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:46:37.285: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 27 15:46:37.285: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7990" for this suite. @ 09/27/23 15:46:37.289
• [24.403 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance]
test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 09/27/23 15:46:37.307
  Sep 27 15:46:37.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 15:46:37.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:37.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:37.351
  STEP: apply creating a deployment @ 09/27/23 15:46:37.358
  Sep 27 15:46:37.359: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1018" for this suite. @ 09/27/23 15:46:37.378
• [0.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance]
test/e2e/apps/replica_set.go:143
  STEP: Creating a kubernetes client @ 09/27/23 15:46:37.393
  Sep 27 15:46:37.393: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:46:37.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:37.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:37.439
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 09/27/23 15:46:37.442
  Sep 27 15:46:37.459: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 15:46:42.464: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 15:46:42.464
  STEP: getting scale subresource @ 09/27/23 15:46:42.464
  STEP: updating a scale subresource @ 09/27/23 15:46:42.468
  STEP: verifying the replicaset Spec.Replicas was modified @ 09/27/23 15:46:42.483
  STEP: Patch a scale subresource @ 09/27/23 15:46:42.487
  Sep 27 15:46:42.523: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4956" for this suite. @ 09/27/23 15:46:42.526
• [5.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:135
  STEP: Creating a kubernetes client @ 09/27/23 15:46:42.586
  Sep 27 15:46:42.586: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:46:42.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:42.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:42.679
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:46:42.688
  STEP: create the pod with lifecycle hook @ 09/27/23 15:46:46.736
  STEP: check poststart hook @ 09/27/23 15:46:48.766
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:46:48.774
  Sep 27 15:46:52.802: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4392" for this suite. @ 09/27/23 15:46:52.804
• [10.252 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:268
  STEP: Creating a kubernetes client @ 09/27/23 15:46:52.838
  Sep 27 15:46:52.838: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:46:52.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:52.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:52.893
  STEP: Creating a pod to test downward api env vars @ 09/27/23 15:46:52.896
  STEP: Saw pod success @ 09/27/23 15:46:56.936
  Sep 27 15:46:56.939: INFO: Trying to get logs from node conformance-1 pod downward-api-5ebeca83-ce7e-4741-bde6-c5eadf35cf86 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 15:46:56.944
  Sep 27 15:46:56.976: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5690" for this suite. @ 09/27/23 15:46:56.979
• [4.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance]
test/e2e/apimachinery/garbage_collector.go:638
  STEP: Creating a kubernetes client @ 09/27/23 15:46:56.994
  Sep 27 15:46:56.994: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:46:56.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:46:57.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:46:57.094
  STEP: create the rc @ 09/27/23 15:46:57.099
  W0927 15:46:57.115062      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/27/23 15:47:07.128
  STEP: wait for the rc to be deleted @ 09/27/23 15:47:07.272
  Sep 27 15:47:08.554: INFO: 100 pods remaining
  Sep 27 15:47:08.555: INFO: 90 pods has nil DeletionTimestamp
  Sep 27 15:47:08.555: INFO: 
  Sep 27 15:47:09.644: INFO: 80 pods remaining
  Sep 27 15:47:09.644: INFO: 74 pods has nil DeletionTimestamp
  Sep 27 15:47:09.644: INFO: 
  Sep 27 15:47:11.847: INFO: 65 pods remaining
  Sep 27 15:47:11.847: INFO: 59 pods has nil DeletionTimestamp
  Sep 27 15:47:11.847: INFO: 
  Sep 27 15:47:12.453: INFO: 55 pods remaining
  Sep 27 15:47:12.453: INFO: 45 pods has nil DeletionTimestamp
  Sep 27 15:47:12.453: INFO: 
  Sep 27 15:47:13.383: INFO: 38 pods remaining
  Sep 27 15:47:13.383: INFO: 31 pods has nil DeletionTimestamp
  Sep 27 15:47:13.383: INFO: 
  Sep 27 15:47:14.365: INFO: 29 pods remaining
  Sep 27 15:47:14.365: INFO: 18 pods has nil DeletionTimestamp
  Sep 27 15:47:14.365: INFO: 
  Sep 27 15:47:15.342: INFO: 12 pods remaining
  Sep 27 15:47:15.342: INFO: 5 pods has nil DeletionTimestamp
  Sep 27 15:47:15.343: INFO: 
  STEP: Gathering metrics @ 09/27/23 15:47:16.294
  W0927 15:47:16.349387      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:47:16.349: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:47:16.364: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6225" for this suite. @ 09/27/23 15:47:16.371
• [19.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:375
  STEP: Creating a kubernetes client @ 09/27/23 15:47:16.469
  Sep 27 15:47:16.469: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:47:16.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:16.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:16.726
  STEP: Creating configMap with name projected-configmap-test-volume-77bca8b7-685a-4361-ae21-c41276014bfd @ 09/27/23 15:47:16.732
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:47:16.756
  STEP: Saw pod success @ 09/27/23 15:47:41.142
  Sep 27 15:47:41.147: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-f3ff6b90-2b05-4020-a8dc-65e549921ee4 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 15:47:41.163
  Sep 27 15:47:41.227: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9339" for this suite. @ 09/27/23 15:47:41.234
• [24.795 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:194
  STEP: Creating a kubernetes client @ 09/27/23 15:47:41.265
  Sep 27 15:47:41.265: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 15:47:41.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:41.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:41.392
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:47:41.403
  STEP: Saw pod success @ 09/27/23 15:47:45.484
  Sep 27 15:47:45.488: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-647d6fc5-bfd7-4acc-aaf4-da994c93e4ce container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:47:45.494
  Sep 27 15:47:45.532: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3343" for this suite. @ 09/27/23 15:47:45.536
• [4.290 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions  [Conformance]
test/e2e/kubectl/kubectl.go:830
  STEP: Creating a kubernetes client @ 09/27/23 15:47:45.556
  Sep 27 15:47:45.556: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:47:45.557
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:45.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:45.617
  STEP: validating api versions @ 09/27/23 15:47:45.62
  Sep 27 15:47:45.620: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-7564 api-versions'
  Sep 27 15:47:45.687: INFO: stderr: ""
  Sep 27 15:47:45.687: INFO: stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta2\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  Sep 27 15:47:45.687: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7564" for this suite. @ 09/27/23 15:47:45.692
• [0.151 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance]
test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 09/27/23 15:47:45.709
  Sep 27 15:47:45.709: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 15:47:45.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:45.76
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:45.763
  STEP: Setting up server cert @ 09/27/23 15:47:45.866
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 15:47:46.398
  STEP: Deploying the webhook pod @ 09/27/23 15:47:46.416
  STEP: Wait for the deployment to be ready @ 09/27/23 15:47:46.459
  Sep 27 15:47:46.467: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  Sep 27 15:47:48.477: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 15, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 47, 46, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 15, 47, 46, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 15, 47, 46, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 09/27/23 15:47:50.481
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:47:50.518
  Sep 27 15:47:51.519: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 15:47:51.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5160-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 15:47:52.062
  STEP: Creating a custom resource while v1 is storage version @ 09/27/23 15:47:52.087
  STEP: Patching Custom Resource Definition to set v2 as storage @ 09/27/23 15:47:54.127
  STEP: Patching the custom resource while v2 is storage version @ 09/27/23 15:47:54.143
  Sep 27 15:47:54.165: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9403" for this suite. @ 09/27/23 15:47:54.849
  STEP: Destroying namespace "webhook-markers-8678" for this suite. @ 09/27/23 15:47:54.867
• [9.176 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:89
  STEP: Creating a kubernetes client @ 09/27/23 15:47:54.886
  Sep 27 15:47:54.886: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:47:54.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:54.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:54.934
  STEP: Creating configMap with name configmap-test-volume-map-60809a4d-9079-4ab5-bec2-8fa17eb3a62d @ 09/27/23 15:47:54.936
  STEP: Creating a pod to test consume configMaps @ 09/27/23 15:47:54.952
  STEP: Saw pod success @ 09/27/23 15:47:58.981
  Sep 27 15:47:58.983: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-894ce034-a411-4c65-a9e6-cdf343183a93 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 15:47:58.986
  Sep 27 15:47:59.030: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-670" for this suite. @ 09/27/23 15:47:59.033
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance]
test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 09/27/23 15:47:59.054
  Sep 27 15:47:59.054: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:47:59.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:47:59.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:47:59.089
  STEP: creating a Pod with a static label @ 09/27/23 15:47:59.104
  STEP: watching for Pod to be ready @ 09/27/23 15:47:59.124
  Sep 27 15:47:59.126: INFO: observed Pod pod-test in namespace pods-9808 in phase Pending with labels: map[test-pod-static:true] & conditions []
  Sep 27 15:47:59.139: INFO: observed Pod pod-test in namespace pods-9808 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  }]
  Sep 27 15:47:59.176: INFO: observed Pod pod-test in namespace pods-9808 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  }]
  Sep 27 15:47:59.708: INFO: observed Pod pod-test in namespace pods-9808 in phase Pending with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  }]
  Sep 27 15:48:00.481: INFO: Found Pod pod-test in namespace pods-9808 in phase Running with labels: map[test-pod-static:true] & conditions [{Initialized True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:48:00 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:48:00 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2023-09-27 15:47:59 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 09/27/23 15:48:00.486
  STEP: getting the Pod and ensuring that it's patched @ 09/27/23 15:48:00.506
  STEP: replacing the Pod's status Ready condition to False @ 09/27/23 15:48:00.508
  STEP: check the Pod again to ensure its Ready conditions are False @ 09/27/23 15:48:00.525
  STEP: deleting the Pod via a Collection with a LabelSelector @ 09/27/23 15:48:00.525
  STEP: watching for the Pod to be deleted @ 09/27/23 15:48:00.542
  Sep 27 15:48:00.543: INFO: observed event type MODIFIED
  Sep 27 15:48:02.523: INFO: observed event type MODIFIED
  Sep 27 15:48:02.629: INFO: observed event type MODIFIED
  Sep 27 15:48:02.838: INFO: observed event type MODIFIED
  Sep 27 15:48:03.480: INFO: observed event type MODIFIED
  Sep 27 15:48:03.497: INFO: observed event type MODIFIED
  Sep 27 15:48:03.514: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9808" for this suite. @ 09/27/23 15:48:03.516
• [4.475 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 09/27/23 15:48:03.53
  Sep 27 15:48:03.530: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:48:03.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:03.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:03.578
  Sep 27 15:48:03.580: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: creating the pod @ 09/27/23 15:48:03.581
  STEP: submitting the pod to kubernetes @ 09/27/23 15:48:03.581
  Sep 27 15:48:05.688: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2062" for this suite. @ 09/27/23 15:48:05.691
• [2.176 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance]
test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 09/27/23 15:48:05.707
  Sep 27 15:48:05.707: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 15:48:05.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:48:05.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:48:05.747
  Sep 27 15:48:05.808: INFO: Waiting up to 1m0s for all nodes to be ready
  Sep 27 15:49:05.824: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/27/23 15:49:05.828
  Sep 27 15:49:05.828: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/27/23 15:49:05.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:05.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:05.884
  STEP: Finding an available node @ 09/27/23 15:49:05.893
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 15:49:05.893
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 15:49:07.921
  Sep 27 15:49:07.955: INFO: found a healthy node: conformance-1
  Sep 27 15:49:14.112: INFO: pods created so far: [1 1 1]
  Sep 27 15:49:14.112: INFO: length of pods created so far: 3
  Sep 27 15:49:16.143: INFO: pods created so far: [2 2 1]
  Sep 27 15:49:23.145: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 15:49:23.209: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9927" for this suite. @ 09/27/23 15:49:23.26
  STEP: Destroying namespace "sched-preemption-7432" for this suite. @ 09/27/23 15:49:23.276
• [77.583 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance]
test/e2e/instrumentation/core_events.go:175
  STEP: Creating a kubernetes client @ 09/27/23 15:49:23.292
  Sep 27 15:49:23.292: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename events @ 09/27/23 15:49:23.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:23.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:23.329
  STEP: Create set of events @ 09/27/23 15:49:23.336
  Sep 27 15:49:23.349: INFO: created test-event-1
  Sep 27 15:49:23.365: INFO: created test-event-2
  Sep 27 15:49:23.377: INFO: created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 09/27/23 15:49:23.378
  STEP: delete collection of events @ 09/27/23 15:49:23.38
  Sep 27 15:49:23.380: INFO: requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 09/27/23 15:49:23.426
  Sep 27 15:49:23.426: INFO: requesting list of events to confirm quantity
  Sep 27 15:49:23.429: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2082" for this suite. @ 09/27/23 15:49:23.432
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed  [Conformance]
test/e2e/kubectl/kubectl.go:1674
  STEP: Creating a kubernetes client @ 09/27/23 15:49:23.448
  Sep 27 15:49:23.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:49:23.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:23.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:23.502
  Sep 27 15:49:23.504: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-3411 version'
  Sep 27 15:49:23.553: INFO: stderr: ""
  Sep 27 15:49:23.553: INFO: stdout: "Client Version: v1.28.1\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.28.1\n"
  Sep 27 15:49:23.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3411" for this suite. @ 09/27/23 15:49:23.557
• [0.123 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance]
test/e2e/apimachinery/namespace.go:243
  STEP: Creating a kubernetes client @ 09/27/23 15:49:23.571
  Sep 27 15:49:23.571: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename namespaces @ 09/27/23 15:49:23.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:23.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:23.607
  STEP: Creating a test namespace @ 09/27/23 15:49:23.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:23.656
  STEP: Creating a pod in the namespace @ 09/27/23 15:49:23.66
  STEP: Waiting for the pod to have running status @ 09/27/23 15:49:23.68
  STEP: Deleting the namespace @ 09/27/23 15:49:25.686
  STEP: Waiting for the namespace to be removed. @ 09/27/23 15:49:25.709
  STEP: Recreating the namespace @ 09/27/23 15:49:36.714
  STEP: Verifying there are no pods in the namespace @ 09/27/23 15:49:36.769
  Sep 27 15:49:36.772: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3512" for this suite. @ 09/27/23 15:49:36.775
  STEP: Destroying namespace "nsdeletetest-9887" for this suite. @ 09/27/23 15:49:36.792
  Sep 27 15:49:36.794: INFO: Namespace nsdeletetest-9887 was already deleted
  STEP: Destroying namespace "nsdeletetest-5804" for this suite. @ 09/27/23 15:49:36.794
• [13.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance]
test/e2e/instrumentation/core_events.go:57
  STEP: Creating a kubernetes client @ 09/27/23 15:49:36.813
  Sep 27 15:49:36.813: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename events @ 09/27/23 15:49:36.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:36.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:36.858
  STEP: creating a test event @ 09/27/23 15:49:36.86
  STEP: listing all events in all namespaces @ 09/27/23 15:49:36.875
  STEP: patching the test event @ 09/27/23 15:49:36.88
  STEP: fetching the test event @ 09/27/23 15:49:36.897
  STEP: updating the test event @ 09/27/23 15:49:36.899
  STEP: getting the test event @ 09/27/23 15:49:36.915
  STEP: deleting the test event @ 09/27/23 15:49:36.917
  STEP: listing all events in all namespaces @ 09/27/23 15:49:36.929
  Sep 27 15:49:36.935: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4948" for this suite. @ 09/27/23 15:49:36.937
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance]
test/e2e/apimachinery/crd_conversion_webhook.go:176
  STEP: Creating a kubernetes client @ 09/27/23 15:49:36.952
  Sep 27 15:49:36.952: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-webhook @ 09/27/23 15:49:36.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:36.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:36.986
  STEP: Setting up server cert @ 09/27/23 15:49:36.995
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 09/27/23 15:49:37.334
  STEP: Deploying the custom resource conversion webhook pod @ 09/27/23 15:49:37.361
  STEP: Wait for the deployment to be ready @ 09/27/23 15:49:37.401
  Sep 27 15:49:37.417: INFO: new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 15:49:39.437
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 15:49:39.492
  Sep 27 15:49:40.493: INFO: Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  Sep 27 15:49:40.498: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Creating a v1 custom resource @ 09/27/23 15:49:43.086
  STEP: Create a v2 custom resource @ 09/27/23 15:49:43.156
  STEP: List CRs in v1 @ 09/27/23 15:49:43.19
  STEP: List CRs in v2 @ 09/27/23 15:49:43.196
  Sep 27 15:49:43.200: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6427" for this suite. @ 09/27/23 15:49:44.059
• [7.241 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance]
test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 09/27/23 15:49:44.195
  Sep 27 15:49:44.195: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename subpath @ 09/27/23 15:49:44.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:49:44.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:49:44.291
  STEP: Setting up data @ 09/27/23 15:49:44.298
  STEP: Creating pod pod-subpath-test-projected-lr2g @ 09/27/23 15:49:44.371
  STEP: Creating a pod to test atomic-volume-subpath @ 09/27/23 15:49:44.371
  STEP: Saw pod success @ 09/27/23 15:50:08.463
  Sep 27 15:50:08.464: INFO: Trying to get logs from node conformance-1 pod pod-subpath-test-projected-lr2g container test-container-subpath-projected-lr2g: <nil>
  STEP: delete the pod @ 09/27/23 15:50:08.474
  STEP: Deleting pod pod-subpath-test-projected-lr2g @ 09/27/23 15:50:08.545
  Sep 27 15:50:08.545: INFO: Deleting pod "pod-subpath-test-projected-lr2g" in namespace "subpath-5134"
  Sep 27 15:50:08.547: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5134" for this suite. @ 09/27/23 15:50:08.549
• [24.397 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance]
test/e2e/apimachinery/garbage_collector.go:817
  STEP: Creating a kubernetes client @ 09/27/23 15:50:08.592
  Sep 27 15:50:08.592: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:50:08.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:50:08.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:50:08.647
  Sep 27 15:50:08.888: INFO: pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8b9074ff-32de-4b59-81c3-5c5c11e6e33f", Controller:(*bool)(0xc00436a6a6), BlockOwnerDeletion:(*bool)(0xc00436a6a7)}}
  Sep 27 15:50:08.931: INFO: pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"5eabbd7d-dfe0-48c4-a8d9-edf50e9184ef", Controller:(*bool)(0xc004d2cfc6), BlockOwnerDeletion:(*bool)(0xc004d2cfc7)}}
  Sep 27 15:50:08.966: INFO: pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"fe214cd2-2cdd-41b5-a772-ec3cd6f1b6d0", Controller:(*bool)(0xc004d2d256), BlockOwnerDeletion:(*bool)(0xc004d2d257)}}
  Sep 27 15:50:14.000: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9724" for this suite. @ 09/27/23 15:50:14.002
• [5.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:550
  STEP: Creating a kubernetes client @ 09/27/23 15:50:14.03
  Sep 27 15:50:14.030: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:50:14.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:50:14.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:50:14.108
  STEP: Creating pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236 @ 09/27/23 15:50:14.109
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:50:16.146
  Sep 27 15:50:16.148: INFO: Initial restart count of pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf is 0
  Sep 27 15:50:16.149: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:18.152: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:20.156: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:22.159: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:24.162: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:26.166: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:28.170: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:30.174: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:32.177: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:34.180: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:36.183: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:38.189: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:40.195: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:42.199: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:44.203: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:46.206: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:48.210: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:50.215: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:52.220: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:54.224: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:56.229: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:50:58.233: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:00.238: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:02.241: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:04.246: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:06.251: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:08.255: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:10.259: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:12.264: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:14.268: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:16.272: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:18.276: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:20.282: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:22.286: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:24.290: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:26.294: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:28.298: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:30.304: INFO: Get pod test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf in namespace container-probe-7236
  Sep 27 15:51:30.305: INFO: Restart count of pod container-probe-7236/test-grpc-5725d550-d051-45d5-b3e1-cf4a693b24bf is now 1 (1m14.156795933s elapsed)
  Sep 27 15:51:30.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:51:30.31
  STEP: Destroying namespace "container-probe-7236" for this suite. @ 09/27/23 15:51:30.346
• [76.333 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods  [Conformance]
test/e2e/auth/service_accounts.go:78
  STEP: Creating a kubernetes client @ 09/27/23 15:51:30.364
  Sep 27 15:51:30.364: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename svcaccounts @ 09/27/23 15:51:30.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:30.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:30.411
  STEP: reading a file in the container @ 09/27/23 15:51:32.453
  Sep 27 15:51:32.453: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-7eeb3a07-0273-40cd-90e7-d4ad771a8048 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 09/27/23 15:51:32.603
  Sep 27 15:51:32.603: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-7eeb3a07-0273-40cd-90e7-d4ad771a8048 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 09/27/23 15:51:32.732
  Sep 27 15:51:32.732: INFO: Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1649 pod-service-account-7eeb3a07-0273-40cd-90e7-d4ad771a8048 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  Sep 27 15:51:32.896: INFO: Got root ca configmap in namespace "svcaccounts-1649"
  Sep 27 15:51:32.898: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1649" for this suite. @ 09/27/23 15:51:32.902
• [2.553 seconds]
------------------------------
SSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:129
  STEP: Creating a kubernetes client @ 09/27/23 15:51:32.917
  Sep 27 15:51:32.917: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:51:32.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:32.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:32.966
  Sep 27 15:51:35.008: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-584" for this suite. @ 09/27/23 15:51:35.024
• [2.124 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance]
test/e2e/common/node/podtemplates.go:122
  STEP: Creating a kubernetes client @ 09/27/23 15:51:35.042
  Sep 27 15:51:35.042: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 15:51:35.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:35.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:35.073
  STEP: Create set of pod templates @ 09/27/23 15:51:35.082
  Sep 27 15:51:35.095: INFO: created test-podtemplate-1
  Sep 27 15:51:35.107: INFO: created test-podtemplate-2
  Sep 27 15:51:35.128: INFO: created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 09/27/23 15:51:35.128
  STEP: delete collection of pod templates @ 09/27/23 15:51:35.131
  Sep 27 15:51:35.131: INFO: requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 09/27/23 15:51:35.172
  Sep 27 15:51:35.172: INFO: requesting list of pod templates to confirm quantity
  Sep 27 15:51:35.175: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8315" for this suite. @ 09/27/23 15:51:35.178
• [0.149 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:236
  STEP: Creating a kubernetes client @ 09/27/23 15:51:35.191
  Sep 27 15:51:35.191: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:51:35.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:35.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:35.237
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 15:51:35.24
  STEP: Saw pod success @ 09/27/23 15:51:39.267
  Sep 27 15:51:39.270: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-df077c23-fbf1-43e2-9f10-b36a383654d3 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 15:51:39.279
  Sep 27 15:51:39.322: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3697" for this suite. @ 09/27/23 15:51:39.326
• [4.151 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 09/27/23 15:51:39.343
  Sep 27 15:51:39.343: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 09/27/23 15:51:39.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:39.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:39.39
  STEP: Setting up the test @ 09/27/23 15:51:39.393
  STEP: Creating hostNetwork=false pod @ 09/27/23 15:51:39.393
  STEP: Creating hostNetwork=true pod @ 09/27/23 15:51:41.418
  STEP: Running the test @ 09/27/23 15:51:43.453
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 09/27/23 15:51:43.453
  Sep 27 15:51:43.453: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.453: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.454: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.454: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:51:43.540: INFO: Exec stderr: ""
  Sep 27 15:51:43.540: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.540: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.541: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.541: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:51:43.599: INFO: Exec stderr: ""
  Sep 27 15:51:43.600: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.600: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.600: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.600: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:51:43.659: INFO: Exec stderr: ""
  Sep 27 15:51:43.659: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.659: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.659: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.659: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:51:43.724: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 09/27/23 15:51:43.724
  Sep 27 15:51:43.724: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.724: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.725: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.725: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 27 15:51:43.830: INFO: Exec stderr: ""
  Sep 27 15:51:43.830: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.830: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.831: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.831: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  Sep 27 15:51:43.910: INFO: Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 09/27/23 15:51:43.91
  Sep 27 15:51:43.910: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.910: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.910: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.910: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:51:43.978: INFO: Exec stderr: ""
  Sep 27 15:51:43.978: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:43.978: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:43.979: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:43.979: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  Sep 27 15:51:44.034: INFO: Exec stderr: ""
  Sep 27 15:51:44.035: INFO: ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:44.035: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:44.035: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:44.035: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:51:44.101: INFO: Exec stderr: ""
  Sep 27 15:51:44.102: INFO: ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-130 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:51:44.102: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:51:44.102: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:51:44.103: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-130/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  Sep 27 15:51:44.159: INFO: Exec stderr: ""
  Sep 27 15:51:44.159: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-130" for this suite. @ 09/27/23 15:51:44.162
• [4.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 09/27/23 15:51:44.179
  Sep 27 15:51:44.179: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 15:51:44.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:44.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:44.233
  STEP: create the container @ 09/27/23 15:51:44.236
  W0927 15:51:44.260248      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 09/27/23 15:51:44.261
  STEP: get the container status @ 09/27/23 15:51:47.277
  STEP: the container should be terminated @ 09/27/23 15:51:47.28
  STEP: the termination message should be set @ 09/27/23 15:51:47.28
  Sep 27 15:51:47.280: INFO: Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 09/27/23 15:51:47.28
  Sep 27 15:51:47.312: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6822" for this suite. @ 09/27/23 15:51:47.319
• [3.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance]
test/e2e/apps/statefulset.go:854
  STEP: Creating a kubernetes client @ 09/27/23 15:51:47.34
  Sep 27 15:51:47.340: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 15:51:47.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:51:47.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:51:47.377
  STEP: Creating service test in namespace statefulset-7419 @ 09/27/23 15:51:47.386
  STEP: Creating statefulset ss in namespace statefulset-7419 @ 09/27/23 15:51:47.4
  Sep 27 15:51:47.434: INFO: Found 0 stateful pods, waiting for 1
  Sep 27 15:51:57.438: INFO: Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 09/27/23 15:51:57.444
  STEP: updating a scale subresource @ 09/27/23 15:51:57.446
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/27/23 15:51:57.471
  STEP: Patch a scale subresource @ 09/27/23 15:51:57.474
  STEP: verifying the statefulset Spec.Replicas was modified @ 09/27/23 15:51:57.501
  Sep 27 15:51:57.504: INFO: Deleting all statefulset in ns statefulset-7419
  Sep 27 15:51:57.506: INFO: Scaling statefulset ss to 0
  Sep 27 15:52:07.548: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 15:52:07.550: INFO: Deleting statefulset ss
  Sep 27 15:52:07.587: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7419" for this suite. @ 09/27/23 15:52:07.589
• [20.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 09/27/23 15:52:07.615
  Sep 27 15:52:07.615: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 15:52:07.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:07.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:07.668
  STEP: creating the pod @ 09/27/23 15:52:07.669
  STEP: submitting the pod to kubernetes @ 09/27/23 15:52:07.669
  W0927 15:52:07.692243      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 09/27/23 15:52:09.7
  STEP: updating the pod @ 09/27/23 15:52:09.701
  Sep 27 15:52:10.227: INFO: Successfully updated pod "pod-update-activedeadlineseconds-0023725f-728a-4551-92bc-be19a0ade491"
  Sep 27 15:52:14.236: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8698" for this suite. @ 09/27/23 15:52:14.238
• [6.644 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance]
test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 09/27/23 15:52:14.261
  Sep 27 15:52:14.261: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename tables @ 09/27/23 15:52:14.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:14.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:14.313
  Sep 27 15:52:14.316: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-7912" for this suite. @ 09/27/23 15:52:14.318
• [0.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance]
test/e2e/common/node/lifecycle_hook.go:152
  STEP: Creating a kubernetes client @ 09/27/23 15:52:14.339
  Sep 27 15:52:14.339: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 09/27/23 15:52:14.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:14.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:14.377
  STEP: create the container to handle the HTTPGet hook request. @ 09/27/23 15:52:14.387
  STEP: create the pod with lifecycle hook @ 09/27/23 15:52:16.408
  STEP: delete the pod with lifecycle hook @ 09/27/23 15:52:18.428
  STEP: check prestop hook @ 09/27/23 15:52:22.453
  Sep 27 15:52:22.456: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6405" for this suite. @ 09/27/23 15:52:22.458
• [8.141 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:175
  STEP: Creating a kubernetes client @ 09/27/23 15:52:22.48
  Sep 27 15:52:22.480: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 15:52:22.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:22.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:22.526
  STEP: Creating configMap with name configmap-test-upd-b6cfe9b0-3dc1-496d-9db1-e5dbb054ad12 @ 09/27/23 15:52:22.533
  STEP: Creating the pod @ 09/27/23 15:52:22.544
  STEP: Waiting for pod with text data @ 09/27/23 15:52:24.565
  STEP: Waiting for pod with binary data @ 09/27/23 15:52:24.569
  Sep 27 15:52:24.572: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1969" for this suite. @ 09/27/23 15:52:24.574
• [2.105 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller  [Conformance]
test/e2e/kubectl/kubectl.go:341
  STEP: Creating a kubernetes client @ 09/27/23 15:52:24.585
  Sep 27 15:52:24.585: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:52:24.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:24.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:24.612
  STEP: creating a replication controller @ 09/27/23 15:52:24.623
  Sep 27 15:52:24.623: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 create -f -'
  Sep 27 15:52:24.970: INFO: stderr: ""
  Sep 27 15:52:24.970: INFO: stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 09/27/23 15:52:24.97
  Sep 27 15:52:24.970: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:52:25.016: INFO: stderr: ""
  Sep 27 15:52:25.016: INFO: stdout: ""
  STEP: Replicas for name=update-demo: expected=2 actual=0 @ 09/27/23 15:52:25.016
  Sep 27 15:52:30.018: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  Sep 27 15:52:30.093: INFO: stderr: ""
  Sep 27 15:52:30.093: INFO: stdout: "update-demo-nautilus-hlnzj update-demo-nautilus-6n2f5 "
  Sep 27 15:52:30.093: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods update-demo-nautilus-hlnzj -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:52:30.174: INFO: stderr: ""
  Sep 27 15:52:30.174: INFO: stdout: "true"
  Sep 27 15:52:30.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods update-demo-nautilus-hlnzj -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:52:30.248: INFO: stderr: ""
  Sep 27 15:52:30.248: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:52:30.248: INFO: validating pod update-demo-nautilus-hlnzj
  Sep 27 15:52:30.253: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:52:30.253: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:52:30.253: INFO: update-demo-nautilus-hlnzj is verified up and running
  Sep 27 15:52:30.253: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods update-demo-nautilus-6n2f5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  Sep 27 15:52:30.327: INFO: stderr: ""
  Sep 27 15:52:30.327: INFO: stdout: "true"
  Sep 27 15:52:30.328: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods update-demo-nautilus-6n2f5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  Sep 27 15:52:30.404: INFO: stderr: ""
  Sep 27 15:52:30.404: INFO: stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  Sep 27 15:52:30.404: INFO: validating pod update-demo-nautilus-6n2f5
  Sep 27 15:52:30.408: INFO: got data: {
    "image": "nautilus.jpg"
  }

  Sep 27 15:52:30.408: INFO: Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  Sep 27 15:52:30.408: INFO: update-demo-nautilus-6n2f5 is verified up and running
  STEP: using delete to clean up resources @ 09/27/23 15:52:30.408
  Sep 27 15:52:30.408: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 delete --grace-period=0 --force -f -'
  Sep 27 15:52:30.510: INFO: stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  Sep 27 15:52:30.510: INFO: stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  Sep 27 15:52:30.511: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get rc,svc -l name=update-demo --no-headers'
  Sep 27 15:52:30.610: INFO: stderr: "No resources found in kubectl-1077 namespace.\n"
  Sep 27 15:52:30.610: INFO: stdout: ""
  Sep 27 15:52:30.610: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-1077 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  Sep 27 15:52:30.709: INFO: stderr: ""
  Sep 27 15:52:30.709: INFO: stdout: ""
  Sep 27 15:52:30.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1077" for this suite. @ 09/27/23 15:52:30.714
• [6.157 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:183
  STEP: Creating a kubernetes client @ 09/27/23 15:52:30.742
  Sep 27 15:52:30.742: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 15:52:30.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:52:30.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:52:30.817
  STEP: Creating pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996 @ 09/27/23 15:52:30.828
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 15:52:32.861
  Sep 27 15:52:32.865: INFO: Initial restart count of pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be is 0
  Sep 27 15:52:32.869: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:34.873: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:36.877: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:38.880: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:40.885: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:42.890: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:44.893: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:46.897: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:48.901: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:50.906: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:52.909: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:54.913: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:56.917: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:52:58.921: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:00.925: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:02.982: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:04.987: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:06.991: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:08.995: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:11.000: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:13.003: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:15.007: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:17.011: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:19.015: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:21.019: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:23.024: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:25.029: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:27.032: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:29.036: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:31.043: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:33.046: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:35.050: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:37.053: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:39.057: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:41.060: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:43.064: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:45.068: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:47.073: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:49.077: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:51.081: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:53.084: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:55.088: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:57.091: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:53:59.094: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:01.099: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:03.127: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:05.131: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:07.134: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:09.138: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:11.143: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:13.146: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:15.150: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:17.153: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:19.157: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:21.161: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:23.165: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:25.169: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:27.173: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:29.178: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:31.183: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:33.188: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:35.191: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:37.195: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:39.200: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:41.204: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:43.208: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:45.212: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:47.216: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:49.220: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:51.223: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:53.227: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:55.231: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:57.235: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:54:59.239: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:01.243: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:03.282: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:05.286: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:07.291: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:09.294: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:11.298: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:13.303: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:15.318: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:17.321: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:19.325: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:21.330: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:23.334: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:25.338: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:27.341: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:29.345: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:31.350: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:33.354: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:35.358: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:37.362: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:39.365: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:41.370: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:43.374: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:45.378: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:47.382: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:49.387: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:51.390: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:53.394: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:55.398: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:57.402: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:55:59.406: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:01.410: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:03.414: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:05.417: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:07.420: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:09.423: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:11.428: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:13.430: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:15.434: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:17.438: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:19.462: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:21.465: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:23.468: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:25.472: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:27.493: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:29.497: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:31.500: INFO: Get pod liveness-074ee80f-2de9-4a08-b869-3364d8df02be in namespace container-probe-996
  Sep 27 15:56:33.500: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:56:33.503
  STEP: Destroying namespace "container-probe-996" for this suite. @ 09/27/23 15:56:33.549
• [242.840 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance]
test/e2e/apps/cronjob.go:324
  STEP: Creating a kubernetes client @ 09/27/23 15:56:33.582
  Sep 27 15:56:33.582: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:56:33.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:56:33.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:56:33.625
  STEP: Creating a cronjob @ 09/27/23 15:56:33.636
  STEP: creating @ 09/27/23 15:56:33.636
  STEP: getting @ 09/27/23 15:56:33.66
  STEP: listing @ 09/27/23 15:56:33.662
  STEP: watching @ 09/27/23 15:56:33.663
  Sep 27 15:56:33.663: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 15:56:33.664
  STEP: cluster-wide watching @ 09/27/23 15:56:33.666
  Sep 27 15:56:33.666: INFO: starting watch
  STEP: patching @ 09/27/23 15:56:33.666
  STEP: updating @ 09/27/23 15:56:33.681
  Sep 27 15:56:33.695: INFO: waiting for watch events with expected annotations
  Sep 27 15:56:33.696: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/27/23 15:56:33.696
  STEP: updating /status @ 09/27/23 15:56:33.711
  STEP: get /status @ 09/27/23 15:56:33.715
  STEP: deleting @ 09/27/23 15:56:33.716
  STEP: deleting a collection @ 09/27/23 15:56:33.746
  Sep 27 15:56:33.761: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3220" for this suite. @ 09/27/23 15:56:33.764
• [0.197 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:124
  STEP: Creating a kubernetes client @ 09/27/23 15:56:33.78
  Sep 27 15:56:33.780: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 15:56:33.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:56:33.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:56:33.823
  STEP: Performing setup for networking test in namespace pod-network-test-9069 @ 09/27/23 15:56:33.825
  STEP: creating a selector @ 09/27/23 15:56:33.825
  STEP: Creating the service pods in kubernetes @ 09/27/23 15:56:33.825
  Sep 27 15:56:33.825: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/27/23 15:56:45.906
  Sep 27 15:56:47.973: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 15:56:47.973: INFO: Going to poll 10.1.212.17 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:56:47.976: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.212.17 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9069 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:56:47.976: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:56:47.976: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:56:47.976: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9069/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.212.17+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:56:49.035: INFO: Found all 1 expected endpoints: [netserver-0]
  Sep 27 15:56:49.035: INFO: Going to poll 10.1.20.115 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  Sep 27 15:56:49.037: INFO: ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.1.20.115 8081 | grep -v '^\s*$'] Namespace:pod-network-test-9069 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 15:56:49.037: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 15:56:49.038: INFO: ExecWithOptions: Clientset creation
  Sep 27 15:56:49.038: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-9069/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.1.20.115+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 15:56:50.089: INFO: Found all 1 expected endpoints: [netserver-1]
  Sep 27 15:56:50.089: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9069" for this suite. @ 09/27/23 15:56:50.093
• [16.340 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:163
  STEP: Creating a kubernetes client @ 09/27/23 15:56:50.12
  Sep 27 15:56:50.120: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 15:56:50.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:56:50.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:56:50.159
  STEP: Creating the pod @ 09/27/23 15:56:50.161
  Sep 27 15:56:52.716: INFO: Successfully updated pod "annotationupdate4865acf2-fba4-4ab3-bbb8-83f09ec52101"
  Sep 27 15:56:56.740: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-973" for this suite. @ 09/27/23 15:56:56.744
• [6.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance]
test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 09/27/23 15:56:56.765
  Sep 27 15:56:56.765: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir-wrapper @ 09/27/23 15:56:56.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:56:56.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:56:56.862
  STEP: Creating 50 configmaps @ 09/27/23 15:56:56.869
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 15:56:57.688
  Sep 27 15:56:57.727: INFO: Pod name wrapped-volume-race-2ee9510e-149a-4e2f-8777-3edfbacaf9c8: Found 0 pods out of 5
  Sep 27 15:57:02.736: INFO: Pod name wrapped-volume-race-2ee9510e-149a-4e2f-8777-3edfbacaf9c8: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 15:57:02.736
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 15:57:02.76
  Sep 27 15:57:02.800: INFO: Pod name wrapped-volume-race-2baa0e0d-7194-4829-bffe-64c80cbe8dc9: Found 0 pods out of 5
  Sep 27 15:57:07.812: INFO: Pod name wrapped-volume-race-2baa0e0d-7194-4829-bffe-64c80cbe8dc9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 15:57:07.812
  STEP: Creating RC which spawns configmap-volume pods @ 09/27/23 15:57:07.832
  Sep 27 15:57:07.860: INFO: Pod name wrapped-volume-race-7f89c8b2-8674-4fb4-955f-2ce07d43d594: Found 0 pods out of 5
  Sep 27 15:57:12.871: INFO: Pod name wrapped-volume-race-7f89c8b2-8674-4fb4-955f-2ce07d43d594: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 09/27/23 15:57:12.871
  Sep 27 15:57:12.884: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController wrapped-volume-race-7f89c8b2-8674-4fb4-955f-2ce07d43d594 in namespace emptydir-wrapper-5948, will wait for the garbage collector to delete the pods @ 09/27/23 15:57:12.886
  Sep 27 15:57:12.958: INFO: Deleting ReplicationController wrapped-volume-race-7f89c8b2-8674-4fb4-955f-2ce07d43d594 took: 18.692158ms
  Sep 27 15:57:13.059: INFO: Terminating ReplicationController wrapped-volume-race-7f89c8b2-8674-4fb4-955f-2ce07d43d594 pods took: 100.785395ms
  STEP: deleting ReplicationController wrapped-volume-race-2baa0e0d-7194-4829-bffe-64c80cbe8dc9 in namespace emptydir-wrapper-5948, will wait for the garbage collector to delete the pods @ 09/27/23 15:57:15.26
  Sep 27 15:57:15.345: INFO: Deleting ReplicationController wrapped-volume-race-2baa0e0d-7194-4829-bffe-64c80cbe8dc9 took: 30.196877ms
  Sep 27 15:57:15.550: INFO: Terminating ReplicationController wrapped-volume-race-2baa0e0d-7194-4829-bffe-64c80cbe8dc9 pods took: 204.89063ms
  STEP: deleting ReplicationController wrapped-volume-race-2ee9510e-149a-4e2f-8777-3edfbacaf9c8 in namespace emptydir-wrapper-5948, will wait for the garbage collector to delete the pods @ 09/27/23 15:57:18.151
  Sep 27 15:57:18.228: INFO: Deleting ReplicationController wrapped-volume-race-2ee9510e-149a-4e2f-8777-3edfbacaf9c8 took: 21.390704ms
  Sep 27 15:57:18.428: INFO: Terminating ReplicationController wrapped-volume-race-2ee9510e-149a-4e2f-8777-3edfbacaf9c8 pods took: 200.18386ms
  STEP: Cleaning up the configMaps @ 09/27/23 15:57:21.029
  STEP: Destroying namespace "emptydir-wrapper-5948" for this suite. @ 09/27/23 15:57:21.914
• [25.164 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 09/27/23 15:57:21.931
  Sep 27 15:57:21.931: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 15:57:21.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:21.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:21.987
  STEP: Creating secret with name s-test-opt-del-ccc16994-fd48-49ed-bf42-608fef4dae5c @ 09/27/23 15:57:21.993
  STEP: Creating secret with name s-test-opt-upd-8ba3f6ec-88eb-4239-90fb-9a84550421c3 @ 09/27/23 15:57:22.008
  STEP: Creating the pod @ 09/27/23 15:57:22.029
  STEP: Deleting secret s-test-opt-del-ccc16994-fd48-49ed-bf42-608fef4dae5c @ 09/27/23 15:57:24.076
  STEP: Updating secret s-test-opt-upd-8ba3f6ec-88eb-4239-90fb-9a84550421c3 @ 09/27/23 15:57:24.091
  STEP: Creating secret with name s-test-opt-create-43bb654d-b62d-47c7-bfc6-06436682c048 @ 09/27/23 15:57:24.104
  STEP: waiting to observe update in volume @ 09/27/23 15:57:24.117
  Sep 27 15:57:26.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8682" for this suite. @ 09/27/23 15:57:26.143
• [4.231 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance]
test/e2e/common/node/runtimeclass.go:156
  STEP: Creating a kubernetes client @ 09/27/23 15:57:26.163
  Sep 27 15:57:26.164: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename runtimeclass @ 09/27/23 15:57:26.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:26.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:26.211
  STEP: Deleting RuntimeClass runtimeclass-4272-delete-me @ 09/27/23 15:57:26.23
  STEP: Waiting for the RuntimeClass to disappear @ 09/27/23 15:57:26.245
  Sep 27 15:57:26.254: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-4272" for this suite. @ 09/27/23 15:57:26.258
• [0.112 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster  [Conformance]
test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 09/27/23 15:57:26.277
  Sep 27 15:57:26.277: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 15:57:26.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:26.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:26.326
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:57:26.329
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 09/27/23 15:57:26.329
  STEP: creating a pod to probe DNS @ 09/27/23 15:57:26.329
  STEP: submitting the pod to kubernetes @ 09/27/23 15:57:26.329
  STEP: retrieving the pod @ 09/27/23 15:57:28.355
  STEP: looking for the results for each expected name from probers @ 09/27/23 15:57:28.36
  Sep 27 15:57:28.374: INFO: DNS probes using dns-4955/dns-test-b31c9493-1cd7-44bf-a1ae-8026a6e104f9 succeeded

  Sep 27 15:57:28.375: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 15:57:28.379
  STEP: Destroying namespace "dns-4955" for this suite. @ 09/27/23 15:57:28.445
• [2.201 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:167
  STEP: Creating a kubernetes client @ 09/27/23 15:57:28.481
  Sep 27 15:57:28.481: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 15:57:28.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:28.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:28.548
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 09/27/23 15:57:28.556
  STEP: Saw pod success @ 09/27/23 15:57:32.606
  Sep 27 15:57:32.612: INFO: Trying to get logs from node conformance-1 pod pod-a26d8414-c270-42d4-b1cb-cbc9e437aafa container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:57:32.62
  Sep 27 15:57:32.676: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2564" for this suite. @ 09/27/23 15:57:32.68
• [4.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance]
test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 09/27/23 15:57:32.701
  Sep 27 15:57:32.701: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 15:57:32.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:32.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:32.762
  Sep 27 15:57:32.800: INFO: Create a RollingUpdate DaemonSet
  Sep 27 15:57:32.819: INFO: Check that daemon pods launch on every node of the cluster
  Sep 27 15:57:32.830: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:57:32.830: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:57:33.850: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:57:33.850: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:57:34.839: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:57:34.839: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 15:57:35.837: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 15:57:35.837: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  Sep 27 15:57:35.837: INFO: Update the DaemonSet to trigger a rollout
  Sep 27 15:57:35.866: INFO: Updating DaemonSet daemon-set
  Sep 27 15:57:37.885: INFO: Roll back the DaemonSet before rollout is complete
  Sep 27 15:57:37.905: INFO: Updating DaemonSet daemon-set
  Sep 27 15:57:37.905: INFO: Make sure DaemonSet rollback is complete
  Sep 27 15:57:37.913: INFO: Wrong image for pod: daemon-set-zkr5l. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  Sep 27 15:57:37.914: INFO: Pod daemon-set-zkr5l is not available
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 15:57:45.939
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2918, will wait for the garbage collector to delete the pods @ 09/27/23 15:57:45.939
  Sep 27 15:57:46.016: INFO: Deleting DaemonSet.extensions daemon-set took: 23.353085ms
  Sep 27 15:57:46.117: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.993402ms
  Sep 27 15:57:49.121: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 15:57:49.121: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 15:57:49.124: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33384"},"items":null}

  Sep 27 15:57:49.127: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33384"},"items":null}

  Sep 27 15:57:49.136: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2918" for this suite. @ 09/27/23 15:57:49.139
• [16.452 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance]
test/e2e/apps/job.go:430
  STEP: Creating a kubernetes client @ 09/27/23 15:57:49.156
  Sep 27 15:57:49.156: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename job @ 09/27/23 15:57:49.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:49.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:49.192
  STEP: Creating a job @ 09/27/23 15:57:49.202
  STEP: Ensuring job reaches completions @ 09/27/23 15:57:49.215
  Sep 27 15:57:59.219: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5649" for this suite. @ 09/27/23 15:57:59.223
• [10.094 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance]
test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 09/27/23 15:57:59.25
  Sep 27 15:57:59.250: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename cronjob @ 09/27/23 15:57:59.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:57:59.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:57:59.286
  STEP: Creating a cronjob @ 09/27/23 15:57:59.294
  STEP: Ensuring more than one job is running at a time @ 09/27/23 15:57:59.309
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 09/27/23 15:59:01.314
  STEP: Removing cronjob @ 09/27/23 15:59:01.318
  Sep 27 15:59:01.333: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8902" for this suite. @ 09/27/23 15:59:01.337
• [62.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance]
test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 09/27/23 15:59:01.359
  Sep 27 15:59:01.359: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename endpointslicemirroring @ 09/27/23 15:59:01.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:01.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:01.451
  STEP: mirroring a new custom Endpoint @ 09/27/23 15:59:01.508
  Sep 27 15:59:01.526: INFO: Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 09/27/23 15:59:03.53
  Sep 27 15:59:03.556: INFO: Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 09/27/23 15:59:05.56
  Sep 27 15:59:05.590: INFO: Waiting for 0 EndpointSlices to exist, got 1
  Sep 27 15:59:07.594: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-6438" for this suite. @ 09/27/23 15:59:07.598
• [6.265 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance]
test/e2e/apps/replica_set.go:165
  STEP: Creating a kubernetes client @ 09/27/23 15:59:07.624
  Sep 27 15:59:07.624: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 15:59:07.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:07.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:07.66
  STEP: Create a ReplicaSet @ 09/27/23 15:59:07.668
  STEP: Verify that the required pods have come up @ 09/27/23 15:59:07.68
  Sep 27 15:59:07.683: INFO: Pod name sample-pod: Found 0 pods out of 3
  Sep 27 15:59:12.687: INFO: Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 09/27/23 15:59:12.687
  Sep 27 15:59:12.690: INFO: Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 09/27/23 15:59:12.69
  STEP: DeleteCollection of the ReplicaSets @ 09/27/23 15:59:12.693
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 09/27/23 15:59:12.711
  Sep 27 15:59:12.718: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-608" for this suite. @ 09/27/23 15:59:12.724
• [5.153 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs  [Conformance]
test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 09/27/23 15:59:12.778
  Sep 27 15:59:12.778: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl-logs @ 09/27/23 15:59:12.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:12.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:12.909
  STEP: creating an pod @ 09/27/23 15:59:12.918
  Sep 27 15:59:12.918: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.45 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  Sep 27 15:59:13.025: INFO: stderr: ""
  Sep 27 15:59:13.025: INFO: stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 09/27/23 15:59:13.025
  Sep 27 15:59:13.025: INFO: Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  Sep 27 15:59:15.035: INFO: Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 09/27/23 15:59:15.035
  Sep 27 15:59:15.035: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator'
  Sep 27 15:59:15.111: INFO: stderr: ""
  Sep 27 15:59:15.111: INFO: stdout: "I0927 15:59:14.099848       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/f92m 554\nI0927 15:59:14.300561       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/kkw 375\nI0927 15:59:14.500916       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/xm6 408\nI0927 15:59:14.700502       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/68l 264\nI0927 15:59:14.900674       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/b96 311\nI0927 15:59:15.099913       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/6f2m 417\n"
  STEP: limiting log lines @ 09/27/23 15:59:15.111
  Sep 27 15:59:15.111: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator --tail=1'
  Sep 27 15:59:15.189: INFO: stderr: ""
  Sep 27 15:59:15.189: INFO: stdout: "I0927 15:59:15.099913       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/6f2m 417\n"
  Sep 27 15:59:15.189: INFO: got output "I0927 15:59:15.099913       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/6f2m 417\n"
  STEP: limiting log bytes @ 09/27/23 15:59:15.189
  Sep 27 15:59:15.189: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator --limit-bytes=1'
  Sep 27 15:59:15.258: INFO: stderr: ""
  Sep 27 15:59:15.258: INFO: stdout: "I"
  Sep 27 15:59:15.258: INFO: got output "I"
  STEP: exposing timestamps @ 09/27/23 15:59:15.258
  Sep 27 15:59:15.258: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator --tail=1 --timestamps'
  Sep 27 15:59:15.333: INFO: stderr: ""
  Sep 27 15:59:15.334: INFO: stdout: "2023-09-27T17:59:15.300376215+02:00 I0927 15:59:15.300256       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/9qd 267\n"
  Sep 27 15:59:15.334: INFO: got output "2023-09-27T17:59:15.300376215+02:00 I0927 15:59:15.300256       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/9qd 267\n"
  STEP: restricting to a time range @ 09/27/23 15:59:15.334
  Sep 27 15:59:17.835: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator --since=1s'
  Sep 27 15:59:17.899: INFO: stderr: ""
  Sep 27 15:59:17.899: INFO: stdout: "I0927 15:59:16.900870       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/bv4 343\nI0927 15:59:17.100058       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/8gt 428\nI0927 15:59:17.300223       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/gsfv 282\nI0927 15:59:17.500495       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/kxj 308\nI0927 15:59:17.700892       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/g86 364\n"
  Sep 27 15:59:17.900: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 logs logs-generator logs-generator --since=24h'
  Sep 27 15:59:17.974: INFO: stderr: ""
  Sep 27 15:59:17.974: INFO: stdout: "I0927 15:59:14.099848       1 logs_generator.go:76] 0 GET /api/v1/namespaces/kube-system/pods/f92m 554\nI0927 15:59:14.300561       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/kube-system/pods/kkw 375\nI0927 15:59:14.500916       1 logs_generator.go:76] 2 POST /api/v1/namespaces/default/pods/xm6 408\nI0927 15:59:14.700502       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/68l 264\nI0927 15:59:14.900674       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/b96 311\nI0927 15:59:15.099913       1 logs_generator.go:76] 5 POST /api/v1/namespaces/ns/pods/6f2m 417\nI0927 15:59:15.300256       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/9qd 267\nI0927 15:59:15.500781       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/kdv 339\nI0927 15:59:15.699940       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/default/pods/mwxf 301\nI0927 15:59:15.900172       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/fls 474\nI0927 15:59:16.100510       1 logs_generator.go:76] 10 GET /api/v1/namespaces/default/pods/td7 559\nI0927 15:59:16.300826       1 logs_generator.go:76] 11 POST /api/v1/namespaces/default/pods/d7s 313\nI0927 15:59:16.500180       1 logs_generator.go:76] 12 GET /api/v1/namespaces/kube-system/pods/mdt9 392\nI0927 15:59:16.700543       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/ns/pods/6bf 290\nI0927 15:59:16.900870       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/bv4 343\nI0927 15:59:17.100058       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/8gt 428\nI0927 15:59:17.300223       1 logs_generator.go:76] 16 GET /api/v1/namespaces/default/pods/gsfv 282\nI0927 15:59:17.500495       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/kxj 308\nI0927 15:59:17.700892       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/ns/pods/g86 364\nI0927 15:59:17.900070       1 logs_generator.go:76] 19 GET /api/v1/namespaces/ns/pods/p58 557\n"
  Sep 27 15:59:17.975: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-logs-8749 delete pod logs-generator'
  Sep 27 15:59:19.245: INFO: stderr: ""
  Sep 27 15:59:19.245: INFO: stdout: "pod \"logs-generator\" deleted\n"
  Sep 27 15:59:19.245: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-8749" for this suite. @ 09/27/23 15:59:19.249
• [6.485 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod  [Conformance]
test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 09/27/23 15:59:19.264
  Sep 27 15:59:19.264: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename proxy @ 09/27/23 15:59:19.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:19.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:19.308
  STEP: starting an echo server on multiple ports @ 09/27/23 15:59:19.338
  STEP: creating replication controller proxy-service-m2hs5 in namespace proxy-6465 @ 09/27/23 15:59:19.338
  I0927 15:59:19.359611      21 runners.go:197] Created replication controller with name: proxy-service-m2hs5, namespace: proxy-6465, replica count: 1
  I0927 15:59:20.410782      21 runners.go:197] proxy-service-m2hs5 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0927 15:59:21.411194      21 runners.go:197] proxy-service-m2hs5 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 15:59:21.414: INFO: setup took 2.102565887s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 09/27/23 15:59:21.414
  Sep 27 15:59:21.426: INFO: (0) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 11.476039ms)
  Sep 27 15:59:21.426: INFO: (0) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 11.688423ms)
  Sep 27 15:59:21.426: INFO: (0) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 11.766397ms)
  Sep 27 15:59:21.426: INFO: (0) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 11.74405ms)
  Sep 27 15:59:21.427: INFO: (0) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 13.197731ms)
  Sep 27 15:59:21.429: INFO: (0) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 15.031641ms)
  Sep 27 15:59:21.429: INFO: (0) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 15.307393ms)
  Sep 27 15:59:21.429: INFO: (0) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 15.252131ms)
  Sep 27 15:59:21.429: INFO: (0) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 15.216913ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 18.48793ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 18.75718ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 18.939326ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 19.21963ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 19.166704ms)
  Sep 27 15:59:21.433: INFO: (0) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 19.18817ms)
  Sep 27 15:59:21.434: INFO: (0) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 19.393757ms)
  Sep 27 15:59:21.438: INFO: (1) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 3.473512ms)
  Sep 27 15:59:21.438: INFO: (1) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 3.826335ms)
  Sep 27 15:59:21.441: INFO: (1) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 6.243962ms)
  Sep 27 15:59:21.441: INFO: (1) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 6.477667ms)
  Sep 27 15:59:21.442: INFO: (1) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 6.914893ms)
  Sep 27 15:59:21.442: INFO: (1) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 7.615235ms)
  Sep 27 15:59:21.442: INFO: (1) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 7.628534ms)
  Sep 27 15:59:21.443: INFO: (1) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 8.345268ms)
  Sep 27 15:59:21.444: INFO: (1) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 9.717751ms)
  Sep 27 15:59:21.444: INFO: (1) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 9.932071ms)
  Sep 27 15:59:21.444: INFO: (1) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 9.238096ms)
  Sep 27 15:59:21.444: INFO: (1) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 9.561172ms)
  Sep 27 15:59:21.445: INFO: (1) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 9.875082ms)
  Sep 27 15:59:21.447: INFO: (1) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 11.844163ms)
  Sep 27 15:59:21.447: INFO: (1) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 12.629273ms)
  Sep 27 15:59:21.447: INFO: (1) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 12.557851ms)
  Sep 27 15:59:21.453: INFO: (2) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 5.764517ms)
  Sep 27 15:59:21.453: INFO: (2) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 5.859729ms)
  Sep 27 15:59:21.453: INFO: (2) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 6.219891ms)
  Sep 27 15:59:21.454: INFO: (2) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 7.022508ms)
  Sep 27 15:59:21.456: INFO: (2) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 8.225695ms)
  Sep 27 15:59:21.456: INFO: (2) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 8.439438ms)
  Sep 27 15:59:21.457: INFO: (2) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 9.142836ms)
  Sep 27 15:59:21.457: INFO: (2) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 9.232234ms)
  Sep 27 15:59:21.457: INFO: (2) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 9.19529ms)
  Sep 27 15:59:21.458: INFO: (2) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 10.966996ms)
  Sep 27 15:59:21.458: INFO: (2) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 11.174256ms)
  Sep 27 15:59:21.459: INFO: (2) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 11.144686ms)
  Sep 27 15:59:21.459: INFO: (2) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 11.455761ms)
  Sep 27 15:59:21.459: INFO: (2) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 11.690682ms)
  Sep 27 15:59:21.460: INFO: (2) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 12.448397ms)
  Sep 27 15:59:21.460: INFO: (2) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 12.392172ms)
  Sep 27 15:59:21.466: INFO: (3) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 5.460602ms)
  Sep 27 15:59:21.466: INFO: (3) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 5.382197ms)
  Sep 27 15:59:21.467: INFO: (3) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 6.987711ms)
  Sep 27 15:59:21.467: INFO: (3) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 6.726927ms)
  Sep 27 15:59:21.470: INFO: (3) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 9.810732ms)
  Sep 27 15:59:21.470: INFO: (3) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 10.18937ms)
  Sep 27 15:59:21.470: INFO: (3) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 10.297145ms)
  Sep 27 15:59:21.470: INFO: (3) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 10.072187ms)
  Sep 27 15:59:21.471: INFO: (3) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 10.385637ms)
  Sep 27 15:59:21.471: INFO: (3) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 10.607123ms)
  Sep 27 15:59:21.471: INFO: (3) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 11.170981ms)
  Sep 27 15:59:21.472: INFO: (3) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 11.304255ms)
  Sep 27 15:59:21.472: INFO: (3) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 11.63818ms)
  Sep 27 15:59:21.472: INFO: (3) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 12.407599ms)
  Sep 27 15:59:21.472: INFO: (3) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 12.245737ms)
  Sep 27 15:59:21.473: INFO: (3) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 12.227402ms)
  Sep 27 15:59:21.478: INFO: (4) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 5.134491ms)
  Sep 27 15:59:21.478: INFO: (4) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 5.24026ms)
  Sep 27 15:59:21.478: INFO: (4) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 5.065699ms)
  Sep 27 15:59:21.478: INFO: (4) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 5.191574ms)
  Sep 27 15:59:21.478: INFO: (4) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 5.474706ms)
  Sep 27 15:59:21.479: INFO: (4) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 5.988272ms)
  Sep 27 15:59:21.480: INFO: (4) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 6.568287ms)
  Sep 27 15:59:21.480: INFO: (4) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 6.87972ms)
  Sep 27 15:59:21.481: INFO: (4) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 7.416512ms)
  Sep 27 15:59:21.495: INFO: (4) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 22.100865ms)
  Sep 27 15:59:21.509: INFO: (4) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 35.95246ms)
  Sep 27 15:59:21.510: INFO: (4) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 37.046564ms)
  Sep 27 15:59:21.513: INFO: (4) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 40.428317ms)
  Sep 27 15:59:21.513: INFO: (4) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 40.531858ms)
  Sep 27 15:59:21.514: INFO: (4) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 40.56743ms)
  Sep 27 15:59:21.518: INFO: (4) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 44.979283ms)
  Sep 27 15:59:21.550: INFO: (5) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 31.902323ms)
  Sep 27 15:59:21.579: INFO: (5) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 61.371866ms)
  Sep 27 15:59:21.579: INFO: (5) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 61.692259ms)
  Sep 27 15:59:21.580: INFO: (5) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 61.592377ms)
  Sep 27 15:59:21.580: INFO: (5) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 61.042827ms)
  Sep 27 15:59:21.581: INFO: (5) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 61.343857ms)
  Sep 27 15:59:21.581: INFO: (5) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 61.688284ms)
  Sep 27 15:59:21.581: INFO: (5) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 61.599807ms)
  Sep 27 15:59:21.585: INFO: (5) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 65.932174ms)
  Sep 27 15:59:21.585: INFO: (5) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 65.863859ms)
  Sep 27 15:59:21.585: INFO: (5) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 66.539858ms)
  Sep 27 15:59:21.586: INFO: (5) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 67.25663ms)
  Sep 27 15:59:21.589: INFO: (5) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 70.913311ms)
  Sep 27 15:59:21.590: INFO: (5) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 70.107872ms)
  Sep 27 15:59:21.590: INFO: (5) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 70.418035ms)
  Sep 27 15:59:21.597: INFO: (5) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 78.503091ms)
  Sep 27 15:59:21.618: INFO: (6) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 20.384439ms)
  Sep 27 15:59:21.627: INFO: (6) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 28.888219ms)
  Sep 27 15:59:21.654: INFO: (6) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 56.635714ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 88.330694ms)
  Sep 27 15:59:21.687: INFO: (6) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 89.281943ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 88.245601ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 88.555258ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 88.454282ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 88.400226ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 88.982687ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 88.752994ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 88.589698ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 88.856643ms)
  Sep 27 15:59:21.686: INFO: (6) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 88.641841ms)
  Sep 27 15:59:21.687: INFO: (6) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 88.950838ms)
  Sep 27 15:59:21.687: INFO: (6) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 89.299628ms)
  Sep 27 15:59:21.700: INFO: (7) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 13.01037ms)
  Sep 27 15:59:21.701: INFO: (7) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 13.417768ms)
  Sep 27 15:59:21.701: INFO: (7) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 13.98486ms)
  Sep 27 15:59:21.701: INFO: (7) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 13.8182ms)
  Sep 27 15:59:21.701: INFO: (7) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 13.925057ms)
  Sep 27 15:59:21.702: INFO: (7) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 14.850727ms)
  Sep 27 15:59:21.703: INFO: (7) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 15.406532ms)
  Sep 27 15:59:21.704: INFO: (7) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 16.738357ms)
  Sep 27 15:59:21.705: INFO: (7) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 17.777837ms)
  Sep 27 15:59:21.706: INFO: (7) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 18.852568ms)
  Sep 27 15:59:21.708: INFO: (7) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 20.76735ms)
  Sep 27 15:59:21.708: INFO: (7) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 20.761021ms)
  Sep 27 15:59:21.710: INFO: (7) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 22.210879ms)
  Sep 27 15:59:21.710: INFO: (7) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 22.739314ms)
  Sep 27 15:59:21.711: INFO: (7) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 23.167945ms)
  Sep 27 15:59:21.714: INFO: (7) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 25.832982ms)
  Sep 27 15:59:21.720: INFO: (8) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 6.05902ms)
  Sep 27 15:59:21.721: INFO: (8) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 6.984967ms)
  Sep 27 15:59:21.722: INFO: (8) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 8.138719ms)
  Sep 27 15:59:21.722: INFO: (8) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 8.644102ms)
  Sep 27 15:59:21.724: INFO: (8) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 9.517208ms)
  Sep 27 15:59:21.726: INFO: (8) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 12.053521ms)
  Sep 27 15:59:21.727: INFO: (8) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 12.336441ms)
  Sep 27 15:59:21.726: INFO: (8) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 12.320353ms)
  Sep 27 15:59:21.727: INFO: (8) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 12.85119ms)
  Sep 27 15:59:21.728: INFO: (8) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 14.459071ms)
  Sep 27 15:59:21.729: INFO: (8) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 14.787682ms)
  Sep 27 15:59:21.730: INFO: (8) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 16.444949ms)
  Sep 27 15:59:21.731: INFO: (8) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 16.979014ms)
  Sep 27 15:59:21.734: INFO: (8) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 19.368296ms)
  Sep 27 15:59:21.734: INFO: (8) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 19.530816ms)
  Sep 27 15:59:21.734: INFO: (8) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 19.93917ms)
  Sep 27 15:59:21.741: INFO: (9) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 5.818008ms)
  Sep 27 15:59:21.741: INFO: (9) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 6.675141ms)
  Sep 27 15:59:21.749: INFO: (9) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 12.886807ms)
  Sep 27 15:59:21.749: INFO: (9) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 12.983109ms)
  Sep 27 15:59:21.749: INFO: (9) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 13.823216ms)
  Sep 27 15:59:21.753: INFO: (9) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 16.744442ms)
  Sep 27 15:59:21.753: INFO: (9) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 17.304493ms)
  Sep 27 15:59:21.753: INFO: (9) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 16.85891ms)
  Sep 27 15:59:21.753: INFO: (9) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 17.478864ms)
  Sep 27 15:59:21.753: INFO: (9) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 18.233031ms)
  Sep 27 15:59:21.758: INFO: (9) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 22.392222ms)
  Sep 27 15:59:21.758: INFO: (9) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 22.376124ms)
  Sep 27 15:59:21.758: INFO: (9) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 22.291135ms)
  Sep 27 15:59:21.758: INFO: (9) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 23.153122ms)
  Sep 27 15:59:21.760: INFO: (9) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 23.918896ms)
  Sep 27 15:59:21.760: INFO: (9) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 24.992599ms)
  Sep 27 15:59:21.770: INFO: (10) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 8.719891ms)
  Sep 27 15:59:21.771: INFO: (10) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 10.00478ms)
  Sep 27 15:59:21.772: INFO: (10) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 10.270034ms)
  Sep 27 15:59:21.773: INFO: (10) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 12.150775ms)
  Sep 27 15:59:21.774: INFO: (10) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 12.991771ms)
  Sep 27 15:59:21.776: INFO: (10) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 15.031997ms)
  Sep 27 15:59:21.777: INFO: (10) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 14.958084ms)
  Sep 27 15:59:21.778: INFO: (10) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 16.657961ms)
  Sep 27 15:59:21.780: INFO: (10) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 18.87635ms)
  Sep 27 15:59:21.780: INFO: (10) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 18.953175ms)
  Sep 27 15:59:21.781: INFO: (10) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 19.622502ms)
  Sep 27 15:59:21.782: INFO: (10) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 19.422431ms)
  Sep 27 15:59:21.782: INFO: (10) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 20.118112ms)
  Sep 27 15:59:21.783: INFO: (10) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 21.978122ms)
  Sep 27 15:59:21.784: INFO: (10) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 22.64822ms)
  Sep 27 15:59:21.784: INFO: (10) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 22.539824ms)
  Sep 27 15:59:21.797: INFO: (11) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 11.925408ms)
  Sep 27 15:59:21.802: INFO: (11) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 16.883327ms)
  Sep 27 15:59:21.802: INFO: (11) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 16.508039ms)
  Sep 27 15:59:21.802: INFO: (11) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 16.668447ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 24.705714ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 24.532561ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 25.113746ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 25.160568ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 24.721409ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 24.495041ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 24.962697ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 24.647697ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 24.589398ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 24.873239ms)
  Sep 27 15:59:21.810: INFO: (11) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 25.555088ms)
  Sep 27 15:59:21.811: INFO: (11) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 26.539965ms)
  Sep 27 15:59:21.824: INFO: (12) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 11.842283ms)
  Sep 27 15:59:21.825: INFO: (12) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 12.306574ms)
  Sep 27 15:59:21.828: INFO: (12) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 14.218184ms)
  Sep 27 15:59:21.829: INFO: (12) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 16.288371ms)
  Sep 27 15:59:21.832: INFO: (12) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 18.621545ms)
  Sep 27 15:59:21.834: INFO: (12) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 20.248059ms)
  Sep 27 15:59:21.835: INFO: (12) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 21.564178ms)
  Sep 27 15:59:21.836: INFO: (12) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 22.627297ms)
  Sep 27 15:59:21.837: INFO: (12) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 23.596512ms)
  Sep 27 15:59:21.838: INFO: (12) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 25.83999ms)
  Sep 27 15:59:21.840: INFO: (12) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 26.840551ms)
  Sep 27 15:59:21.841: INFO: (12) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 28.710272ms)
  Sep 27 15:59:21.842: INFO: (12) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 29.155922ms)
  Sep 27 15:59:21.842: INFO: (12) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 29.512976ms)
  Sep 27 15:59:21.843: INFO: (12) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 29.885366ms)
  Sep 27 15:59:21.844: INFO: (12) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 30.692842ms)
  Sep 27 15:59:21.857: INFO: (13) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 11.173334ms)
  Sep 27 15:59:21.860: INFO: (13) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 13.88732ms)
  Sep 27 15:59:21.864: INFO: (13) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 18.845849ms)
  Sep 27 15:59:21.865: INFO: (13) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 19.907767ms)
  Sep 27 15:59:21.866: INFO: (13) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 20.20899ms)
  Sep 27 15:59:21.866: INFO: (13) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 22.170639ms)
  Sep 27 15:59:21.866: INFO: (13) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 20.724459ms)
  Sep 27 15:59:21.867: INFO: (13) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 21.222249ms)
  Sep 27 15:59:21.871: INFO: (13) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 26.479849ms)
  Sep 27 15:59:21.871: INFO: (13) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 26.481509ms)
  Sep 27 15:59:21.871: INFO: (13) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 26.873371ms)
  Sep 27 15:59:21.872: INFO: (13) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 27.184539ms)
  Sep 27 15:59:21.872: INFO: (13) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 27.179105ms)
  Sep 27 15:59:21.872: INFO: (13) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 27.994416ms)
  Sep 27 15:59:21.873: INFO: (13) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 27.116652ms)
  Sep 27 15:59:21.873: INFO: (13) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 26.454393ms)
  Sep 27 15:59:21.886: INFO: (14) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 12.513421ms)
  Sep 27 15:59:21.887: INFO: (14) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 13.420471ms)
  Sep 27 15:59:21.891: INFO: (14) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 18.120081ms)
  Sep 27 15:59:21.892: INFO: (14) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 18.812168ms)
  Sep 27 15:59:21.894: INFO: (14) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 20.994246ms)
  Sep 27 15:59:21.894: INFO: (14) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 20.854081ms)
  Sep 27 15:59:21.894: INFO: (14) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 21.330932ms)
  Sep 27 15:59:21.894: INFO: (14) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 20.789275ms)
  Sep 27 15:59:21.895: INFO: (14) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 21.975489ms)
  Sep 27 15:59:21.895: INFO: (14) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 22.399096ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 22.662816ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 23.049975ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 23.330057ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 22.882452ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 23.196191ms)
  Sep 27 15:59:21.896: INFO: (14) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 23.251207ms)
  Sep 27 15:59:21.904: INFO: (15) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 7.618649ms)
  Sep 27 15:59:21.906: INFO: (15) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 9.382653ms)
  Sep 27 15:59:21.906: INFO: (15) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 9.529028ms)
  Sep 27 15:59:21.906: INFO: (15) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 9.372902ms)
  Sep 27 15:59:21.907: INFO: (15) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 10.291131ms)
  Sep 27 15:59:21.910: INFO: (15) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 12.76218ms)
  Sep 27 15:59:21.912: INFO: (15) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 14.981478ms)
  Sep 27 15:59:21.913: INFO: (15) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 15.304616ms)
  Sep 27 15:59:21.914: INFO: (15) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 16.655253ms)
  Sep 27 15:59:21.917: INFO: (15) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 19.48995ms)
  Sep 27 15:59:21.918: INFO: (15) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 20.68182ms)
  Sep 27 15:59:21.920: INFO: (15) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 22.381322ms)
  Sep 27 15:59:21.921: INFO: (15) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 23.191278ms)
  Sep 27 15:59:21.922: INFO: (15) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 24.637367ms)
  Sep 27 15:59:21.923: INFO: (15) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 25.352383ms)
  Sep 27 15:59:21.924: INFO: (15) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 26.287326ms)
  Sep 27 15:59:21.936: INFO: (16) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 10.17387ms)
  Sep 27 15:59:21.936: INFO: (16) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 11.876327ms)
  Sep 27 15:59:21.936: INFO: (16) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 10.740893ms)
  Sep 27 15:59:21.937: INFO: (16) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 12.164433ms)
  Sep 27 15:59:21.939: INFO: (16) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 13.815779ms)
  Sep 27 15:59:21.940: INFO: (16) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 14.754859ms)
  Sep 27 15:59:21.941: INFO: (16) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 16.835704ms)
  Sep 27 15:59:21.943: INFO: (16) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 18.25542ms)
  Sep 27 15:59:21.943: INFO: (16) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 17.260364ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 18.615126ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 19.885846ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 19.736466ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 19.197681ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 20.957873ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 20.564958ms)
  Sep 27 15:59:21.945: INFO: (16) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 21.236014ms)
  Sep 27 15:59:21.952: INFO: (17) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 5.883546ms)
  Sep 27 15:59:21.956: INFO: (17) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 9.349952ms)
  Sep 27 15:59:21.957: INFO: (17) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 10.892348ms)
  Sep 27 15:59:21.962: INFO: (17) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 15.634562ms)
  Sep 27 15:59:21.962: INFO: (17) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 15.595433ms)
  Sep 27 15:59:21.963: INFO: (17) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 16.274487ms)
  Sep 27 15:59:21.963: INFO: (17) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 16.575209ms)
  Sep 27 15:59:21.963: INFO: (17) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 17.419092ms)
  Sep 27 15:59:21.964: INFO: (17) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 18.248668ms)
  Sep 27 15:59:21.964: INFO: (17) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 17.741414ms)
  Sep 27 15:59:21.964: INFO: (17) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 18.75398ms)
  Sep 27 15:59:21.965: INFO: (17) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 18.76627ms)
  Sep 27 15:59:21.967: INFO: (17) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 20.770893ms)
  Sep 27 15:59:21.969: INFO: (17) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 23.242416ms)
  Sep 27 15:59:21.971: INFO: (17) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 24.607522ms)
  Sep 27 15:59:21.971: INFO: (17) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 24.800778ms)
  Sep 27 15:59:21.982: INFO: (18) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 11.064128ms)
  Sep 27 15:59:21.989: INFO: (18) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 17.486398ms)
  Sep 27 15:59:21.991: INFO: (18) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 19.714471ms)
  Sep 27 15:59:21.992: INFO: (18) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 20.233343ms)
  Sep 27 15:59:21.992: INFO: (18) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 20.355453ms)
  Sep 27 15:59:21.993: INFO: (18) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 21.631458ms)
  Sep 27 15:59:21.993: INFO: (18) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 21.203178ms)
  Sep 27 15:59:21.993: INFO: (18) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 21.768372ms)
  Sep 27 15:59:21.995: INFO: (18) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 22.916916ms)
  Sep 27 15:59:21.996: INFO: (18) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 23.91189ms)
  Sep 27 15:59:21.996: INFO: (18) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 24.947942ms)
  Sep 27 15:59:21.997: INFO: (18) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 24.928109ms)
  Sep 27 15:59:21.997: INFO: (18) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 25.612061ms)
  Sep 27 15:59:21.997: INFO: (18) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 25.671125ms)
  Sep 27 15:59:21.998: INFO: (18) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 26.553176ms)
  Sep 27 15:59:21.998: INFO: (18) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 26.388528ms)
  Sep 27 15:59:22.003: INFO: (19) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:443/proxy/tlsrewritem... (200; 4.791361ms)
  Sep 27 15:59:22.010: INFO: (19) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:460/proxy/: tls baz (200; 10.590675ms)
  Sep 27 15:59:22.013: INFO: (19) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8/proxy/rewriteme">test</a> (200; 13.823577ms)
  Sep 27 15:59:22.013: INFO: (19) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 13.768562ms)
  Sep 27 15:59:22.015: INFO: (19) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname2/proxy/: tls qux (200; 15.937169ms)
  Sep 27 15:59:22.016: INFO: (19) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">test<... (200; 17.378378ms)
  Sep 27 15:59:22.017: INFO: (19) /api/v1/namespaces/proxy-6465/services/https:proxy-service-m2hs5:tlsportname1/proxy/: tls baz (200; 17.029368ms)
  Sep 27 15:59:22.017: INFO: (19) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 17.754579ms)
  Sep 27 15:59:22.017: INFO: (19) /api/v1/namespaces/proxy-6465/pods/https:proxy-service-m2hs5-zwkf8:462/proxy/: tls qux (200; 17.280973ms)
  Sep 27 15:59:22.018: INFO: (19) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/: <a href="/api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:1080/proxy/rewriteme">... (200; 18.93148ms)
  Sep 27 15:59:22.018: INFO: (19) /api/v1/namespaces/proxy-6465/pods/http:proxy-service-m2hs5-zwkf8:162/proxy/: bar (200; 18.511381ms)
  Sep 27 15:59:22.021: INFO: (19) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname1/proxy/: foo (200; 21.238129ms)
  Sep 27 15:59:22.021: INFO: (19) /api/v1/namespaces/proxy-6465/pods/proxy-service-m2hs5-zwkf8:160/proxy/: foo (200; 22.235889ms)
  Sep 27 15:59:22.021: INFO: (19) /api/v1/namespaces/proxy-6465/services/http:proxy-service-m2hs5:portname2/proxy/: bar (200; 22.192614ms)
  Sep 27 15:59:22.021: INFO: (19) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname1/proxy/: foo (200; 20.987694ms)
  Sep 27 15:59:22.022: INFO: (19) /api/v1/namespaces/proxy-6465/services/proxy-service-m2hs5:portname2/proxy/: bar (200; 23.186923ms)
  Sep 27 15:59:22.022: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting ReplicationController proxy-service-m2hs5 in namespace proxy-6465, will wait for the garbage collector to delete the pods @ 09/27/23 15:59:22.026
  Sep 27 15:59:22.112: INFO: Deleting ReplicationController proxy-service-m2hs5 took: 32.619858ms
  Sep 27 15:59:22.214: INFO: Terminating ReplicationController proxy-service-m2hs5 pods took: 101.45638ms
  STEP: Destroying namespace "proxy-6465" for this suite. @ 09/27/23 15:59:24.314
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance]
test/e2e/node/security_context.go:164
  STEP: Creating a kubernetes client @ 09/27/23 15:59:24.337
  Sep 27 15:59:24.337: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context @ 09/27/23 15:59:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:24.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:24.389
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 09/27/23 15:59:24.393
  STEP: Saw pod success @ 09/27/23 15:59:28.426
  Sep 27 15:59:28.428: INFO: Trying to get logs from node conformance-1 pod security-context-9ea790e7-9847-403a-8af7-d065e44b1dad container test-container: <nil>
  STEP: delete the pod @ 09/27/23 15:59:28.433
  Sep 27 15:59:28.466: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3418" for this suite. @ 09/27/23 15:59:28.469
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:321
  STEP: Creating a kubernetes client @ 09/27/23 15:59:28.487
  Sep 27 15:59:28.487: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 15:59:28.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:28.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:28.538
  STEP: create the rc @ 09/27/23 15:59:28.541
  W0927 15:59:28.558676      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 09/27/23 15:59:33.564
  STEP: wait for all pods to be garbage collected @ 09/27/23 15:59:33.592
  STEP: Gathering metrics @ 09/27/23 15:59:38.601
  W0927 15:59:38.607042      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 15:59:38.607: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 15:59:38.607: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5167" for this suite. @ 09/27/23 15:59:38.61
• [10.137 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image  [Conformance]
test/e2e/kubectl/kubectl.go:1741
  STEP: Creating a kubernetes client @ 09/27/23 15:59:38.625
  Sep 27 15:59:38.625: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 15:59:38.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:38.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:38.689
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 09/27/23 15:59:38.691
  Sep 27 15:59:38.692: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6005 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  Sep 27 15:59:38.767: INFO: stderr: ""
  Sep 27 15:59:38.767: INFO: stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 09/27/23 15:59:38.767
  STEP: verifying the pod e2e-test-httpd-pod was created @ 09/27/23 15:59:43.82
  Sep 27 15:59:43.820: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6005 get pod e2e-test-httpd-pod -o json'
  Sep 27 15:59:43.883: INFO: stderr: ""
  Sep 27 15:59:43.883: INFO: stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"aab1c76be0b4815c31f3577c6092b06e05a4064bcaa1561ad104f93a812833f9\",\n            \"cni.projectcalico.org/podIP\": \"10.1.20.117/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.1.20.117/32\"\n        },\n        \"creationTimestamp\": \"2023-09-27T15:59:38Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-6005\",\n        \"resourceVersion\": \"34089\",\n        \"uid\": \"704b0b8c-7b87-43f7-8141-1d489ad0f8e9\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-s99np\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"conformance-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-s99np\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:59:38Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:59:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:59:40Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2023-09-27T15:59:38Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://445411bcdae59d56b48352300d97ddc9a8c90071e1bd342314b9097452cd33c3\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2023-09-27T15:59:39Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.84.220.167\",\n        \"phase\": \"Running\",\n        \"podIP\": \"10.1.20.117\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.1.20.117\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2023-09-27T15:59:38Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 09/27/23 15:59:43.883
  Sep 27 15:59:43.883: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6005 replace -f -'
  Sep 27 15:59:44.165: INFO: stderr: ""
  Sep 27 15:59:44.165: INFO: stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.29-4 @ 09/27/23 15:59:44.165
  Sep 27 15:59:44.174: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-6005 delete pods e2e-test-httpd-pod'
  Sep 27 15:59:46.402: INFO: stderr: ""
  Sep 27 15:59:46.402: INFO: stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  Sep 27 15:59:46.403: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6005" for this suite. @ 09/27/23 15:59:46.407
• [7.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance]
test/e2e/apimachinery/resource_quota.go:328
  STEP: Creating a kubernetes client @ 09/27/23 15:59:46.448
  Sep 27 15:59:46.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 15:59:46.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 15:59:46.533
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 15:59:46.536
  STEP: Counting existing ResourceQuota @ 09/27/23 16:00:03.542
  STEP: Creating a ResourceQuota @ 09/27/23 16:00:08.547
  STEP: Ensuring resource quota status is calculated @ 09/27/23 16:00:08.562
  STEP: Creating a ConfigMap @ 09/27/23 16:00:10.567
  STEP: Ensuring resource quota status captures configMap creation @ 09/27/23 16:00:10.626
  STEP: Deleting a ConfigMap @ 09/27/23 16:00:12.63
  STEP: Ensuring resource quota status released usage @ 09/27/23 16:00:12.648
  Sep 27 16:00:14.653: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3036" for this suite. @ 09/27/23 16:00:14.656
• [28.224 seconds]
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance]
test/e2e/scheduling/limit_range.go:61
  STEP: Creating a kubernetes client @ 09/27/23 16:00:14.673
  Sep 27 16:00:14.673: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename limitrange @ 09/27/23 16:00:14.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:00:14.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:00:14.723
  STEP: Creating a LimitRange @ 09/27/23 16:00:14.725
  STEP: Setting up watch @ 09/27/23 16:00:14.725
  STEP: Submitting a LimitRange @ 09/27/23 16:00:14.828
  STEP: Verifying LimitRange creation was observed @ 09/27/23 16:00:14.853
  STEP: Fetching the LimitRange to ensure it has proper values @ 09/27/23 16:00:14.853
  Sep 27 16:00:14.855: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 27 16:00:14.855: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 09/27/23 16:00:14.855
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 09/27/23 16:00:14.873
  Sep 27 16:00:14.876: INFO: Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  Sep 27 16:00:14.876: INFO: Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 09/27/23 16:00:14.876
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 09/27/23 16:00:14.91
  Sep 27 16:00:14.914: INFO: Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  Sep 27 16:00:14.914: INFO: Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 09/27/23 16:00:14.914
  STEP: Failing to create a Pod with more than max resources @ 09/27/23 16:00:14.915
  STEP: Updating a LimitRange @ 09/27/23 16:00:14.917
  STEP: Verifying LimitRange updating is effective @ 09/27/23 16:00:14.948
  STEP: Creating a Pod with less than former min resources @ 09/27/23 16:00:16.952
  STEP: Failing to create a Pod with more than max resources @ 09/27/23 16:00:16.977
  STEP: Deleting a LimitRange @ 09/27/23 16:00:16.982
  STEP: Verifying the LimitRange was deleted @ 09/27/23 16:00:17.01
  Sep 27 16:00:22.014: INFO: limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 09/27/23 16:00:22.015
  Sep 27 16:00:22.039: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-5866" for this suite. @ 09/27/23 16:00:22.041
• [7.400 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection][NodeConformance] [Conformance]
test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 09/27/23 16:00:22.073
  Sep 27 16:00:22.073: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:00:22.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:00:22.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:00:22.115
  STEP: Creating configMap with name configmap-projected-all-test-volume-2bbfdb93-79ea-4e68-9a74-a693a43cb29e @ 09/27/23 16:00:22.117
  STEP: Creating secret with name secret-projected-all-test-volume-5d58ad6a-13f1-4394-ba99-609b3e1accac @ 09/27/23 16:00:22.131
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 09/27/23 16:00:22.142
  STEP: Saw pod success @ 09/27/23 16:00:26.175
  Sep 27 16:00:26.177: INFO: Trying to get logs from node conformance-1 pod projected-volume-2e9bf8e0-264c-48c5-9c57-51c32b22e0f3 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 16:00:26.18
  Sep 27 16:00:26.210: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-167" for this suite. @ 09/27/23 16:00:26.212
• [4.154 seconds]
------------------------------
SSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:107
  STEP: Creating a kubernetes client @ 09/27/23 16:00:26.227
  Sep 27 16:00:26.227: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 16:00:26.227
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:00:26.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:00:26.267
  Sep 27 16:01:26.286: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9509" for this suite. @ 09/27/23 16:01:26.289
• [60.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance]
test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 09/27/23 16:01:26.306
  Sep 27 16:01:26.306: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 16:01:26.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:01:26.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:01:26.359
  Sep 27 16:01:26.401: INFO: Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 09/27/23 16:01:26.423
  Sep 27 16:01:26.427: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:26.427: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 09/27/23 16:01:26.427
  Sep 27 16:01:26.458: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:26.458: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:01:27.462: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:27.462: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:01:28.461: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 16:01:28.461: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 09/27/23 16:01:28.465
  Sep 27 16:01:28.490: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 16:01:28.490: INFO: Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  Sep 27 16:01:29.495: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:29.495: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 09/27/23 16:01:29.495
  Sep 27 16:01:29.524: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:29.524: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:01:30.529: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:30.529: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:01:31.529: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:31.529: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:01:32.531: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 16:01:32.531: INFO: Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 16:01:32.539
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4678, will wait for the garbage collector to delete the pods @ 09/27/23 16:01:32.539
  Sep 27 16:01:32.610: INFO: Deleting DaemonSet.extensions daemon-set took: 17.227258ms
  Sep 27 16:01:32.711: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.67884ms
  Sep 27 16:01:35.815: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:01:35.815: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 16:01:35.818: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"34525"},"items":null}

  Sep 27 16:01:35.822: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"34525"},"items":null}

  Sep 27 16:01:35.856: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4678" for this suite. @ 09/27/23 16:01:35.862
• [9.574 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:84
  STEP: Creating a kubernetes client @ 09/27/23 16:01:35.881
  Sep 27 16:01:35.881: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 16:01:35.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:01:35.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:01:35.93
  STEP: Performing setup for networking test in namespace pod-network-test-4311 @ 09/27/23 16:01:35.933
  STEP: creating a selector @ 09/27/23 16:01:35.933
  STEP: Creating the service pods in kubernetes @ 09/27/23 16:01:35.933
  Sep 27 16:01:35.933: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/27/23 16:01:58.035
  Sep 27 16:02:00.055: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 16:02:00.055: INFO: Breadth first check of 10.1.20.69 on host 10.84.220.167...
  Sep 27 16:02:00.056: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.20.68:9080/dial?request=hostname&protocol=http&host=10.1.20.69&port=8083&tries=1'] Namespace:pod-network-test-4311 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:02:00.056: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:02:00.057: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:02:00.057: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4311/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.20.68%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.20.69%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 16:02:00.122: INFO: Waiting for responses: map[]
  Sep 27 16:02:00.123: INFO: reached 10.1.20.69 after 0/1 tries
  Sep 27 16:02:00.123: INFO: Breadth first check of 10.1.212.19 on host 10.84.220.103...
  Sep 27 16:02:00.125: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.20.68:9080/dial?request=hostname&protocol=http&host=10.1.212.19&port=8083&tries=1'] Namespace:pod-network-test-4311 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:02:00.125: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:02:00.125: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:02:00.125: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-4311/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.20.68%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.1.212.19%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 16:02:00.173: INFO: Waiting for responses: map[]
  Sep 27 16:02:00.173: INFO: reached 10.1.212.19 after 0/1 tries
  Sep 27 16:02:00.173: INFO: Going to retry 0 out of 2 pods....
  Sep 27 16:02:00.173: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4311" for this suite. @ 09/27/23 16:02:00.176
• [24.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance]
test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 09/27/23 16:02:00.194
  Sep 27 16:02:00.194: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-runtime @ 09/27/23 16:02:00.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:02:00.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:02:00.222
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 09/27/23 16:02:00.245
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 09/27/23 16:02:16.299
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 09/27/23 16:02:16.301
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 09/27/23 16:02:16.304
  STEP: Container 'terminate-cmd-rpa': should be possible to delete [NodeConformance] @ 09/27/23 16:02:16.304
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 09/27/23 16:02:16.363
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 09/27/23 16:02:19.381
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 09/27/23 16:02:20.387
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 09/27/23 16:02:20.39
  STEP: Container 'terminate-cmd-rpof': should be possible to delete [NodeConformance] @ 09/27/23 16:02:20.39
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 09/27/23 16:02:20.44
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 09/27/23 16:02:21.445
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 09/27/23 16:02:23.452
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 09/27/23 16:02:23.455
  STEP: Container 'terminate-cmd-rpn': should be possible to delete [NodeConformance] @ 09/27/23 16:02:23.455
  Sep 27 16:02:23.485: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8079" for this suite. @ 09/27/23 16:02:23.492
• [23.310 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:135
  STEP: Creating a kubernetes client @ 09/27/23 16:02:23.504
  Sep 27 16:02:23.504: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 16:02:23.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:02:23.547
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:02:23.549
  Sep 27 16:02:23.615: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1063" for this suite. @ 09/27/23 16:02:23.617
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance]
test/e2e/apps/deployment.go:488
  STEP: Creating a kubernetes client @ 09/27/23 16:02:23.633
  Sep 27 16:02:23.633: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 16:02:23.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:02:23.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:02:23.674
  STEP: creating a Deployment @ 09/27/23 16:02:23.684
  Sep 27 16:02:23.684: INFO: Creating simple deployment test-deployment-b8mvm
  Sep 27 16:02:23.750: INFO: deployment "test-deployment-b8mvm" doesn't have the required revision set
  STEP: Getting /status @ 09/27/23 16:02:25.765
  Sep 27 16:02:25.767: INFO: Deployment test-deployment-b8mvm has Conditions: [{Available True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b8mvm-5d576bd769" has successfully progressed.}]
  STEP: updating Deployment Status @ 09/27/23 16:02:25.767
  Sep 27 16:02:25.791: INFO: updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 16, 2, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 16, 2, 24, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 16, 2, 24, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 16, 2, 23, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-b8mvm-5d576bd769\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 09/27/23 16:02:25.792
  Sep 27 16:02:25.793: INFO: Observed &Deployment event: ADDED
  Sep 27 16:02:25.793: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b8mvm-5d576bd769"}
  Sep 27 16:02:25.793: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.793: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b8mvm-5d576bd769"}
  Sep 27 16:02:25.793: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 16:02:25.793: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b8mvm-5d576bd769" is progressing.}
  Sep 27 16:02:25.794: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b8mvm-5d576bd769" has successfully progressed.}
  Sep 27 16:02:25.794: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 16:02:25.794: INFO: Observed Deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b8mvm-5d576bd769" has successfully progressed.}
  Sep 27 16:02:25.794: INFO: Found Deployment test-deployment-b8mvm in namespace deployment-9978 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 16:02:25.794: INFO: Deployment test-deployment-b8mvm has an updated status
  STEP: patching the Statefulset Status @ 09/27/23 16:02:25.794
  Sep 27 16:02:25.794: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 16:02:25.809: INFO: Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 09/27/23 16:02:25.809
  Sep 27 16:02:25.810: INFO: Observed &Deployment event: ADDED
  Sep 27 16:02:25.810: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b8mvm-5d576bd769"}
  Sep 27 16:02:25.811: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-b8mvm-5d576bd769"}
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 16:02:25.811: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:23 +0000 UTC 2023-09-27 16:02:23 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-b8mvm-5d576bd769" is progressing.}
  Sep 27 16:02:25.811: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b8mvm-5d576bd769" has successfully progressed.}
  Sep 27 16:02:25.811: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.811: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:24 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  Sep 27 16:02:25.812: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2023-09-27 16:02:24 +0000 UTC 2023-09-27 16:02:23 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-b8mvm-5d576bd769" has successfully progressed.}
  Sep 27 16:02:25.812: INFO: Observed deployment test-deployment-b8mvm in namespace deployment-9978 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 16:02:25.812: INFO: Observed &Deployment event: MODIFIED
  Sep 27 16:02:25.812: INFO: Found deployment test-deployment-b8mvm in namespace deployment-9978 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  Sep 27 16:02:25.812: INFO: Deployment test-deployment-b8mvm has a patched status
  Sep 27 16:02:25.813: INFO: Deployment "test-deployment-b8mvm":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-b8mvm",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bf566333-cce6-4f70-aa13-d6f2ad06318b",
      ResourceVersion: (string) (len=5) "34819",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427345,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 16:02:25.818: INFO: New ReplicaSet "test-deployment-b8mvm-5d576bd769" of Deployment "test-deployment-b8mvm":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-b8mvm-5d576bd769",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13868c7a-813c-4956-a41a-9842835b6d67",
      ResourceVersion: (string) (len=5) "34813",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-b8mvm",
          UID: (types.UID) (len=36) "bf566333-cce6-4f70-aa13-d6f2ad06318b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 62 66 35  |k:{\"uid\":\"bf5|
              00000120  36 36 33 33 33 2d 63 63  65 36 2d 34 66 37 30 2d  |66333-cce6-4f70-|
              00000130  61 61 31 33 2d 64 36 66  32 61 64 30 36 33 31 38  |aa13-d6f2ad06318|
              00000140  62 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |b\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 16:02:25.824: INFO: Pod "test-deployment-b8mvm-5d576bd769-7jqp4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=38) "test-deployment-b8mvm-5d576bd769-7jqp4",
      GenerateName: (string) (len=33) "test-deployment-b8mvm-5d576bd769-",
      Namespace: (string) (len=15) "deployment-9978",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "373e245b-79ac-468c-ba91-ff76446dd2c6",
      ResourceVersion: (string) (len=5) "34812",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5d576bd769",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.20.71/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.20.71/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "400ed420901ddc3169e6cd28b22d402ca0986aef2b24ac93f33d4a77ba077c69"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=32) "test-deployment-b8mvm-5d576bd769",
          UID: (types.UID) (len=36) "13868c7a-813c-4956-a41a-9842835b6d67",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 33 38 36 38 63 37  61 2d 38 31 33 63 2d 34  |"13868c7a-813c-4|
              000000a0  39 35 36 2d 61 34 31 61  2d 39 38 34 32 38 33 35  |956-a41a-9842835|
              000000b0  62 36 64 36 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b6d67\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  37 31 5c 22 7d 22 3a 7b  |10.1.20.71\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wqjbl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wqjbl",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427344,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427343,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.1.20.71",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.20.71"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427343,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831427344,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2c4e7c5b76b78829a4bdc0ce912a831b5005508fc5bd2de1d8c4fa8eb2fc3f7e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 16:02:25.827: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9978" for this suite. @ 09/27/23 16:02:25.832
• [2.221 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance]
test/e2e/apps/statefulset.go:318
  STEP: Creating a kubernetes client @ 09/27/23 16:02:25.855
  Sep 27 16:02:25.855: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 16:02:25.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:02:25.903
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:02:25.906
  STEP: Creating service test in namespace statefulset-8810 @ 09/27/23 16:02:25.908
  STEP: Creating a new StatefulSet @ 09/27/23 16:02:25.92
  Sep 27 16:02:25.937: INFO: Found 0 stateful pods, waiting for 3
  Sep 27 16:02:35.943: INFO: Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 16:02:35.943: INFO: Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 16:02:35.943: INFO: Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 16:02:35.950: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8810 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 16:02:36.093: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 16:02:36.093: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 16:02:36.093: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 09/27/23 16:02:46.106
  Sep 27 16:02:46.144: INFO: Updating stateful set ss2
  STEP: Creating a new revision @ 09/27/23 16:02:46.144
  STEP: Updating Pods in reverse ordinal order @ 09/27/23 16:02:56.157
  Sep 27 16:02:56.159: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8810 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 16:02:56.317: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 16:02:56.317: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 16:02:56.317: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 09/27/23 16:03:06.335
  Sep 27 16:03:06.335: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8810 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  Sep 27 16:03:06.505: INFO: stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  Sep 27 16:03:06.505: INFO: stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  Sep 27 16:03:06.505: INFO: stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  Sep 27 16:03:16.566: INFO: Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 09/27/23 16:03:26.581
  Sep 27 16:03:26.584: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=statefulset-8810 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  Sep 27 16:03:26.742: INFO: stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  Sep 27 16:03:26.742: INFO: stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  Sep 27 16:03:26.742: INFO: stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  Sep 27 16:03:36.771: INFO: Deleting all statefulset in ns statefulset-8810
  Sep 27 16:03:36.776: INFO: Scaling statefulset ss2 to 0
  Sep 27 16:03:46.828: INFO: Waiting for statefulset status.replicas updated to 0
  Sep 27 16:03:46.831: INFO: Deleting statefulset ss2
  Sep 27 16:03:46.867: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8810" for this suite. @ 09/27/23 16:03:46.872
• [81.049 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:74
  STEP: Creating a kubernetes client @ 09/27/23 16:03:46.904
  Sep 27 16:03:46.905: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 16:03:46.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:03:46.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:03:46.955
  STEP: Creating configMap with name configmap-test-volume-c9aaec2b-7f30-495b-b764-6ff4409c67c8 @ 09/27/23 16:03:46.957
  STEP: Creating a pod to test consume configMaps @ 09/27/23 16:03:46.973
  STEP: Saw pod success @ 09/27/23 16:03:51.004
  Sep 27 16:03:51.015: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-eeb9a072-4bdf-43e9-918c-8c7592a0ef32 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 16:03:51.037
  Sep 27 16:03:51.081: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4686" for this suite. @ 09/27/23 16:03:51.085
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/node/security_context.go:609
  STEP: Creating a kubernetes client @ 09/27/23 16:03:51.112
  Sep 27 16:03:51.112: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename security-context-test @ 09/27/23 16:03:51.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:03:51.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:03:51.172
  Sep 27 16:03:57.215: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-559" for this suite. @ 09/27/23 16:03:57.218
• [6.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance]
test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 09/27/23 16:03:57.254
  Sep 27 16:03:57.254: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:03:57.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:03:57.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:03:57.319
  STEP: Setting up server cert @ 09/27/23 16:03:57.376
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:03:57.678
  STEP: Deploying the webhook pod @ 09/27/23 16:03:57.704
  STEP: Wait for the deployment to be ready @ 09/27/23 16:03:57.744
  Sep 27 16:03:57.750: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 16:03:59.757
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:03:59.799
  Sep 27 16:04:00.800: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 09/27/23 16:04:00.973
  STEP: Creating a configMap that should be mutated @ 09/27/23 16:04:00.98
  STEP: Deleting the collection of validation webhooks @ 09/27/23 16:04:01.017
  STEP: Creating a configMap that should not be mutated @ 09/27/23 16:04:01.204
  Sep 27 16:04:01.238: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5128" for this suite. @ 09/27/23 16:04:01.37
  STEP: Destroying namespace "webhook-markers-2242" for this suite. @ 09/27/23 16:04:01.401
• [4.182 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:208
  STEP: Creating a kubernetes client @ 09/27/23 16:04:01.437
  Sep 27 16:04:01.437: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:04:01.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:01.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:01.496
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 16:04:01.497
  STEP: Saw pod success @ 09/27/23 16:04:05.529
  Sep 27 16:04:05.531: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-3caa2170-8ca0-4af0-ad24-64aae10deba1 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 16:04:05.534
  Sep 27 16:04:05.574: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7488" for this suite. @ 09/27/23 16:04:05.576
• [4.152 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance]
test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 09/27/23 16:04:05.59
  Sep 27 16:04:05.590: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename proxy @ 09/27/23 16:04:05.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:05.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:05.623
  Sep 27 16:04:05.633: INFO: Creating pod...
  Sep 27 16:04:07.654: INFO: Creating service...
  Sep 27 16:04:07.685: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/DELETE
  Sep 27 16:04:07.691: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 16:04:07.691: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/GET
  Sep 27 16:04:07.694: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 27 16:04:07.694: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/HEAD
  Sep 27 16:04:07.696: INFO: http.Client request:HEAD | StatusCode:200
  Sep 27 16:04:07.696: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/OPTIONS
  Sep 27 16:04:07.698: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 16:04:07.698: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/PATCH
  Sep 27 16:04:07.700: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 16:04:07.700: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/POST
  Sep 27 16:04:07.701: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 16:04:07.701: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/pods/agnhost/proxy/some/path/with/PUT
  Sep 27 16:04:07.703: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 16:04:07.703: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/DELETE
  Sep 27 16:04:07.705: INFO: http.Client request:DELETE | StatusCode:404 | Response: | Method:
  Sep 27 16:04:07.718: INFO: http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  Sep 27 16:04:07.718: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/GET
  Sep 27 16:04:07.720: INFO: http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  Sep 27 16:04:07.720: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/HEAD
  Sep 27 16:04:07.728: INFO: http.Client request:HEAD | StatusCode:200
  Sep 27 16:04:07.728: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/OPTIONS
  Sep 27 16:04:07.730: INFO: http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  Sep 27 16:04:07.730: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/PATCH
  Sep 27 16:04:07.738: INFO: http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  Sep 27 16:04:07.738: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/POST
  Sep 27 16:04:07.740: INFO: http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  Sep 27 16:04:07.740: INFO: Starting http.Client for https://10.152.183.1:443/api/v1/namespaces/proxy-1286/services/test-service/proxy/some/path/with/PUT
  Sep 27 16:04:07.742: INFO: http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  Sep 27 16:04:07.742: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1286" for this suite. @ 09/27/23 16:04:07.744
• [2.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance]
test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 09/27/23 16:04:07.761
  Sep 27 16:04:07.761: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:04:07.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:07.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:07.801
  STEP: Setting up server cert @ 09/27/23 16:04:07.859
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:04:08.007
  STEP: Deploying the webhook pod @ 09/27/23 16:04:08.027
  STEP: Wait for the deployment to be ready @ 09/27/23 16:04:08.054
  Sep 27 16:04:08.058: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 09/27/23 16:04:10.065
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:04:10.091
  Sep 27 16:04:11.091: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 16:04:11.096: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7104-crds.webhook.example.com via the AdmissionRegistration API @ 09/27/23 16:04:11.612
  STEP: Creating a custom resource that should be mutated by the webhook @ 09/27/23 16:04:11.632
  Sep 27 16:04:13.660: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6232" for this suite. @ 09/27/23 16:04:14.399
  STEP: Destroying namespace "webhook-markers-3690" for this suite. @ 09/27/23 16:04:14.414
• [6.667 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance]
test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 09/27/23 16:04:14.429
  Sep 27 16:04:14.429: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename watch @ 09/27/23 16:04:14.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:14.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:14.474
  STEP: creating a watch on configmaps with label A @ 09/27/23 16:04:14.477
  STEP: creating a watch on configmaps with label B @ 09/27/23 16:04:14.478
  STEP: creating a watch on configmaps with label A or B @ 09/27/23 16:04:14.479
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 09/27/23 16:04:14.48
  Sep 27 16:04:14.492: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35810 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:14.492: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35810 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 09/27/23 16:04:14.492
  Sep 27 16:04:14.508: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35811 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:14.509: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35811 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 09/27/23 16:04:14.509
  Sep 27 16:04:14.522: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35812 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:14.522: INFO: Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35812 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 09/27/23 16:04:14.522
  Sep 27 16:04:14.537: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35813 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:14.537: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-8188  956663a3-2480-4025-bd09-ddb70fe96499 35813 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 09/27/23 16:04:14.537
  Sep 27 16:04:14.549: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8188  d3b4ddb7-666d-4be5-bf2c-90a554270d63 35814 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:14.549: INFO: Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8188  d3b4ddb7-666d-4be5-bf2c-90a554270d63 35814 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 09/27/23 16:04:24.55
  Sep 27 16:04:24.575: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8188  d3b4ddb7-666d-4be5-bf2c-90a554270d63 35849 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:24.575: INFO: Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-8188  d3b4ddb7-666d-4be5-bf2c-90a554270d63 35849 0 2023-09-27 16:04:14 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2023-09-27 16:04:14 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  Sep 27 16:04:34.575: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8188" for this suite. @ 09/27/23 16:04:34.58
• [20.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance]
test/e2e/common/node/configmap.go:138
  STEP: Creating a kubernetes client @ 09/27/23 16:04:34.597
  Sep 27 16:04:34.597: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 16:04:34.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:34.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:34.635
  STEP: Creating configMap that has name configmap-test-emptyKey-ef3b3e0a-7952-4e7a-9ebb-1bb912f8ebc6 @ 09/27/23 16:04:34.641
  Sep 27 16:04:34.642: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1182" for this suite. @ 09/27/23 16:04:34.645
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance]
test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 09/27/23 16:04:34.665
  Sep 27 16:04:34.665: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 16:04:34.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:34.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:34.699
  STEP: Creating a test headless service @ 09/27/23 16:04:34.71
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8637.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8637.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 09/27/23 16:04:34.722
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8637.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8637.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 09/27/23 16:04:34.722
  STEP: creating a pod to probe DNS @ 09/27/23 16:04:34.722
  STEP: submitting the pod to kubernetes @ 09/27/23 16:04:34.722
  STEP: retrieving the pod @ 09/27/23 16:04:38.775
  STEP: looking for the results for each expected name from probers @ 09/27/23 16:04:38.778
  Sep 27 16:04:38.788: INFO: Unable to read jessie_hosts@dns-querier-2 from pod dns-8637/dns-test-914581c3-a45a-4a73-aabd-edcea6b7260e: the server could not find the requested resource (get pods dns-test-914581c3-a45a-4a73-aabd-edcea6b7260e)
  Sep 27 16:04:38.788: INFO: Lookups using dns-8637/dns-test-914581c3-a45a-4a73-aabd-edcea6b7260e failed for: [jessie_hosts@dns-querier-2]

  Sep 27 16:04:38.798: INFO: Pod client logs for webserver: 
  Sep 27 16:04:38.802: INFO: Pod client logs for querier: 
  Sep 27 16:04:38.805: INFO: Pod client logs for jessie-querier: 
  Sep 27 16:04:43.823: INFO: DNS probes using dns-8637/dns-test-914581c3-a45a-4a73-aabd-edcea6b7260e succeeded

  Sep 27 16:04:43.823: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 16:04:43.827
  STEP: deleting the test headless service @ 09/27/23 16:04:43.972
  STEP: Destroying namespace "dns-8637" for this suite. @ 09/27/23 16:04:44.122
• [9.509 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance]
test/e2e/common/network/networking.go:95
  STEP: Creating a kubernetes client @ 09/27/23 16:04:44.176
  Sep 27 16:04:44.176: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pod-network-test @ 09/27/23 16:04:44.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:04:44.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:04:44.244
  STEP: Performing setup for networking test in namespace pod-network-test-5815 @ 09/27/23 16:04:44.247
  STEP: creating a selector @ 09/27/23 16:04:44.247
  STEP: Creating the service pods in kubernetes @ 09/27/23 16:04:44.247
  Sep 27 16:04:44.247: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 09/27/23 16:05:06.406
  Sep 27 16:05:08.443: INFO: Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  Sep 27 16:05:08.443: INFO: Breadth first check of 10.1.212.20 on host 10.84.220.103...
  Sep 27 16:05:08.446: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.20.111:9080/dial?request=hostname&protocol=udp&host=10.1.212.20&port=8081&tries=1'] Namespace:pod-network-test-5815 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:05:08.446: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:05:08.446: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:05:08.446: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5815/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.20.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.212.20%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 16:05:08.525: INFO: Waiting for responses: map[]
  Sep 27 16:05:08.525: INFO: reached 10.1.212.20 after 0/1 tries
  Sep 27 16:05:08.525: INFO: Breadth first check of 10.1.20.83 on host 10.84.220.167...
  Sep 27 16:05:08.529: INFO: ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.1.20.111:9080/dial?request=hostname&protocol=udp&host=10.1.20.83&port=8081&tries=1'] Namespace:pod-network-test-5815 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:05:08.529: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:05:08.530: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:05:08.530: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/pod-network-test-5815/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.1.20.111%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.1.20.83%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  Sep 27 16:05:08.603: INFO: Waiting for responses: map[]
  Sep 27 16:05:08.603: INFO: reached 10.1.20.83 after 0/1 tries
  Sep 27 16:05:08.603: INFO: Going to retry 0 out of 2 pods....
  Sep 27 16:05:08.604: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5815" for this suite. @ 09/27/23 16:05:08.609
• [24.464 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance]
test/e2e/common/node/expansion.go:95
  STEP: Creating a kubernetes client @ 09/27/23 16:05:08.641
  Sep 27 16:05:08.641: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 16:05:08.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:08.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:08.739
  STEP: Creating a pod to test substitution in container's args @ 09/27/23 16:05:08.743
  STEP: Saw pod success @ 09/27/23 16:05:12.792
  Sep 27 16:05:12.794: INFO: Trying to get logs from node conformance-1 pod var-expansion-a1e7de01-0206-41b6-9b37-52ac6c214de9 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 16:05:12.799
  Sep 27 16:05:12.854: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4321" for this suite. @ 09/27/23 16:05:12.857
• [4.244 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance]
test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 09/27/23 16:05:12.885
  Sep 27 16:05:12.885: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption @ 09/27/23 16:05:12.887
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:12.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:12.986
  STEP: Creating a kubernetes client @ 09/27/23 16:05:12.989
  Sep 27 16:05:12.989: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption-2 @ 09/27/23 16:05:12.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:13.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:13.076
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:13.141
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:15.226
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:17.279
  STEP: listing a collection of PDBs across all namespaces @ 09/27/23 16:05:19.288
  STEP: listing a collection of PDBs in namespace disruption-6460 @ 09/27/23 16:05:19.295
  STEP: deleting a collection of PDBs @ 09/27/23 16:05:19.298
  STEP: Waiting for the PDB collection to be deleted @ 09/27/23 16:05:19.377
  Sep 27 16:05:19.380: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 16:05:19.384: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-6028" for this suite. @ 09/27/23 16:05:19.387
  STEP: Destroying namespace "disruption-6460" for this suite. @ 09/27/23 16:05:19.41
• [6.562 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance]
test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 09/27/23 16:05:19.448
  Sep 27 16:05:19.448: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 16:05:19.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:19.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:19.557
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 16:05:19.599
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 16:05:19.655
  Sep 27 16:05:19.669: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:05:19.669: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 16:05:20.699: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:05:20.699: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 16:05:21.677: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 16:05:21.677: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:05:22.676: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 16:05:22.676: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 09/27/23 16:05:22.678
  Sep 27 16:05:22.680: INFO: Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 09/27/23 16:05:22.68
  Sep 27 16:05:22.708: INFO: updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 09/27/23 16:05:22.708
  Sep 27 16:05:22.711: INFO: Observed &DaemonSet event: ADDED
  Sep 27 16:05:22.711: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.711: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.712: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.712: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.712: INFO: Found daemon set daemon-set in namespace daemonsets-7144 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 16:05:22.712: INFO: Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 09/27/23 16:05:22.712
  STEP: watching for the daemon set status to be patched @ 09/27/23 16:05:22.727
  Sep 27 16:05:22.729: INFO: Observed &DaemonSet event: ADDED
  Sep 27 16:05:22.730: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.730: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.730: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.730: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.731: INFO: Observed daemon set daemon-set in namespace daemonsets-7144 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 16:05:22.731: INFO: Observed &DaemonSet event: MODIFIED
  Sep 27 16:05:22.731: INFO: Found daemon set daemon-set in namespace daemonsets-7144 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  Sep 27 16:05:22.731: INFO: Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 16:05:22.735
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7144, will wait for the garbage collector to delete the pods @ 09/27/23 16:05:22.735
  Sep 27 16:05:22.803: INFO: Deleting DaemonSet.extensions daemon-set took: 14.532935ms
  Sep 27 16:05:22.904: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.769278ms
  Sep 27 16:05:25.209: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:05:25.209: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 16:05:25.212: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36222"},"items":null}

  Sep 27 16:05:25.214: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36222"},"items":null}

  Sep 27 16:05:25.223: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7144" for this suite. @ 09/27/23 16:05:25.227
• [5.809 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 09/27/23 16:05:25.259
  Sep 27 16:05:25.259: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 16:05:25.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:25.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:25.306
  Sep 27 16:05:25.308: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: creating the pod @ 09/27/23 16:05:25.309
  STEP: submitting the pod to kubernetes @ 09/27/23 16:05:25.309
  Sep 27 16:05:27.340: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9636" for this suite. @ 09/27/23 16:05:27.344
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance]
test/e2e/common/node/podtemplates.go:53
  STEP: Creating a kubernetes client @ 09/27/23 16:05:27.358
  Sep 27 16:05:27.358: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename podtemplate @ 09/27/23 16:05:27.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:27.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:27.405
  Sep 27 16:05:27.465: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-168" for this suite. @ 09/27/23 16:05:27.481
• [0.147 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance]
test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 09/27/23 16:05:27.507
  Sep 27 16:05:27.507: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption @ 09/27/23 16:05:27.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:27.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:27.557
  STEP: creating the pdb @ 09/27/23 16:05:27.559
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:27.571
  STEP: updating the pdb @ 09/27/23 16:05:29.58
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:29.599
  STEP: patching the pdb @ 09/27/23 16:05:31.608
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:05:31.629
  STEP: Waiting for the pdb to be deleted @ 09/27/23 16:05:33.66
  Sep 27 16:05:33.663: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7896" for this suite. @ 09/27/23 16:05:33.667
• [6.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance]
test/e2e/apps/replica_set.go:176
  STEP: Creating a kubernetes client @ 09/27/23 16:05:33.687
  Sep 27 16:05:33.687: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 16:05:33.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:33.847
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:33.851
  STEP: Create a Replicaset @ 09/27/23 16:05:33.856
  STEP: Verify that the required pods have come up. @ 09/27/23 16:05:33.875
  Sep 27 16:05:33.883: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 16:05:38.887: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 16:05:38.887
  STEP: Getting /status @ 09/27/23 16:05:38.887
  Sep 27 16:05:38.890: INFO: Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 09/27/23 16:05:38.89
  Sep 27 16:05:38.909: INFO: updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 09/27/23 16:05:38.909
  Sep 27 16:05:38.911: INFO: Observed &ReplicaSet event: ADDED
  Sep 27 16:05:38.911: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.911: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.912: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.912: INFO: Found replicaset test-rs in namespace replicaset-3968 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  Sep 27 16:05:38.912: INFO: Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 09/27/23 16:05:38.912
  Sep 27 16:05:38.912: INFO: Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  Sep 27 16:05:38.926: INFO: Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 09/27/23 16:05:38.926
  Sep 27 16:05:38.928: INFO: Observed &ReplicaSet event: ADDED
  Sep 27 16:05:38.928: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.929: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.929: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.929: INFO: Observed replicaset test-rs in namespace replicaset-3968 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  Sep 27 16:05:38.929: INFO: Observed &ReplicaSet event: MODIFIED
  Sep 27 16:05:38.929: INFO: Found replicaset test-rs in namespace replicaset-3968 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  Sep 27 16:05:38.929: INFO: Replicaset test-rs has a patched status
  Sep 27 16:05:38.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-3968" for this suite. @ 09/27/23 16:05:38.933
• [5.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance]
test/e2e/network/endpointslice.go:68
  STEP: Creating a kubernetes client @ 09/27/23 16:05:38.95
  Sep 27 16:05:38.950: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 16:05:38.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:38.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:38.988
  Sep 27 16:05:39.002: INFO: Endpoints addresses: [10.84.220.103 10.84.220.167] , ports: [16443]
  Sep 27 16:05:39.002: INFO: EndpointSlices addresses: [10.84.220.103 10.84.220.167] , ports: [16443]
  Sep 27 16:05:39.002: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5658" for this suite. @ 09/27/23 16:05:39.006
• [0.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_downwardapi.go:69
  STEP: Creating a kubernetes client @ 09/27/23 16:05:39.025
  Sep 27 16:05:39.025: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:05:39.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:39.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:39.063
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 16:05:39.072
  STEP: Saw pod success @ 09/27/23 16:05:43.099
  Sep 27 16:05:43.102: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-78dfe506-8872-4f33-926f-f8de7a798763 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 16:05:43.106
  Sep 27 16:05:43.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-698" for this suite. @ 09/27/23 16:05:43.141
• [4.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance]
test/e2e/apimachinery/garbage_collector.go:479
  STEP: Creating a kubernetes client @ 09/27/23 16:05:43.157
  Sep 27 16:05:43.157: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename gc @ 09/27/23 16:05:43.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:43.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:43.202
  STEP: create the deployment @ 09/27/23 16:05:43.205
  W0927 16:05:43.220428      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 09/27/23 16:05:43.22
  STEP: delete the deployment @ 09/27/23 16:05:43.73
  STEP: wait for all rs to be garbage collected @ 09/27/23 16:05:43.77
  STEP: expected 0 rs, got 1 rs @ 09/27/23 16:05:43.789
  STEP: expected 0 pods, got 2 pods @ 09/27/23 16:05:43.796
  STEP: Gathering metrics @ 09/27/23 16:05:44.326
  W0927 16:05:44.346072      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  Sep 27 16:05:44.346: INFO: For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  Sep 27 16:05:44.346: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9669" for this suite. @ 09/27/23 16:05:44.361
• [1.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 09/27/23 16:05:44.401
  Sep 27 16:05:44.401: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename containers @ 09/27/23 16:05:44.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:44.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:44.495
  STEP: Creating a pod to test override command @ 09/27/23 16:05:44.499
  STEP: Saw pod success @ 09/27/23 16:05:48.558
  Sep 27 16:05:48.561: INFO: Trying to get logs from node conformance-1 pod client-containers-b4100a64-d49b-4c88-b6ff-189bac399865 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 16:05:48.565
  Sep 27 16:05:48.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9608" for this suite. @ 09/27/23 16:05:48.628
• [4.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:222
  STEP: Creating a kubernetes client @ 09/27/23 16:05:48.646
  Sep 27 16:05:48.646: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 16:05:48.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:48.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:48.702
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 16:05:48.705
  STEP: Saw pod success @ 09/27/23 16:05:52.734
  Sep 27 16:05:52.736: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-17dbae32-3b75-4ddf-a8cc-1e676a474411 container client-container: <nil>
  STEP: delete the pod @ 09/27/23 16:05:52.74
  Sep 27 16:05:52.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2168" for this suite. @ 09/27/23 16:05:52.773
• [4.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods  [Conformance]
test/e2e/network/service.go:846
  STEP: Creating a kubernetes client @ 09/27/23 16:05:52.789
  Sep 27 16:05:52.789: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 16:05:52.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:05:52.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:05:52.824
  STEP: creating service multi-endpoint-test in namespace services-7590 @ 09/27/23 16:05:52.831
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7590 to expose endpoints map[] @ 09/27/23 16:05:52.861
  Sep 27 16:05:52.865: INFO: Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  Sep 27 16:05:53.872: INFO: successfully validated that service multi-endpoint-test in namespace services-7590 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-7590 @ 09/27/23 16:05:53.872
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7590 to expose endpoints map[pod1:[100]] @ 09/27/23 16:05:55.908
  Sep 27 16:05:55.922: INFO: successfully validated that service multi-endpoint-test in namespace services-7590 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-7590 @ 09/27/23 16:05:55.922
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7590 to expose endpoints map[pod1:[100] pod2:[101]] @ 09/27/23 16:05:57.964
  Sep 27 16:05:57.973: INFO: successfully validated that service multi-endpoint-test in namespace services-7590 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 09/27/23 16:05:57.973
  Sep 27 16:05:57.973: INFO: Creating new exec pod
  Sep 27 16:06:01.001: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-7590 exec execpodjtt62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  Sep 27 16:06:01.129: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  Sep 27 16:06:01.129: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:06:01.129: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-7590 exec execpodjtt62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.181 80'
  Sep 27 16:06:01.277: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.181 80\nConnection to 10.152.183.181 80 port [tcp/http] succeeded!\n"
  Sep 27 16:06:01.277: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:06:01.277: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-7590 exec execpodjtt62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  Sep 27 16:06:01.420: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  Sep 27 16:06:01.421: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:06:01.421: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-7590 exec execpodjtt62 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.181 81'
  Sep 27 16:06:01.553: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.181 81\nConnection to 10.152.183.181 81 port [tcp/*] succeeded!\n"
  Sep 27 16:06:01.553: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-7590 @ 09/27/23 16:06:01.553
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7590 to expose endpoints map[pod2:[101]] @ 09/27/23 16:06:01.64
  Sep 27 16:06:02.671: INFO: successfully validated that service multi-endpoint-test in namespace services-7590 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-7590 @ 09/27/23 16:06:02.671
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-7590 to expose endpoints map[] @ 09/27/23 16:06:02.742
  Sep 27 16:06:03.765: INFO: successfully validated that service multi-endpoint-test in namespace services-7590 exposes endpoints map[]
  Sep 27 16:06:03.765: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7590" for this suite. @ 09/27/23 16:06:03.819
• [11.055 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance]
test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 09/27/23 16:06:03.846
  Sep 27 16:06:03.846: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 16:06:03.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:03.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:03.898
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 09/27/23 16:06:03.9
  Sep 27 16:06:03.916: INFO: Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-224  619ef30b-c2a1-4747-b74f-c1828f893142 36614 0 2023-09-27 16:06:03 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2023-09-27 16:06:03 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-7lftc,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.45,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-7lftc,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 09/27/23 16:06:05.925
  Sep 27 16:06:05.925: INFO: ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-224 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:06:05.925: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:06:05.926: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:06:05.926: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-224/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 09/27/23 16:06:06.012
  Sep 27 16:06:06.013: INFO: ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-224 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:06:06.013: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:06:06.013: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:06:06.013: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/dns-224/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  Sep 27 16:06:06.091: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 16:06:06.096: INFO: Deleting pod test-dns-nameservers...
  STEP: Destroying namespace "dns-224" for this suite. @ 09/27/23 16:06:06.133
• [2.304 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:124
  STEP: Creating a kubernetes client @ 09/27/23 16:06:06.151
  Sep 27 16:06:06.151: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:06:06.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:06.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:06.203
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-499ab585-d76b-4a93-bb04-9f9f68aae388 @ 09/27/23 16:06:06.209
  STEP: Creating the pod @ 09/27/23 16:06:06.223
  STEP: Updating configmap projected-configmap-test-upd-499ab585-d76b-4a93-bb04-9f9f68aae388 @ 09/27/23 16:06:08.257
  STEP: waiting to observe update in volume @ 09/27/23 16:06:08.274
  Sep 27 16:06:10.283: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7855" for this suite. @ 09/27/23 16:06:10.285
• [4.159 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance]
test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 09/27/23 16:06:10.311
  Sep 27 16:06:10.311: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename deployment @ 09/27/23 16:06:10.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:10.34
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:10.342
  Sep 27 16:06:10.349: INFO: Creating replica set "test-rolling-update-controller" (going to be adopted)
  Sep 27 16:06:10.363: INFO: Pod name sample-pod: Found 0 pods out of 1
  Sep 27 16:06:15.366: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 16:06:15.366
  Sep 27 16:06:15.366: INFO: Creating deployment "test-rolling-update-deployment"
  Sep 27 16:06:15.387: INFO: Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  Sep 27 16:06:15.392: INFO: new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  Sep 27 16:06:17.395: INFO: Ensuring status for deployment "test-rolling-update-deployment" is the expected
  Sep 27 16:06:17.397: INFO: Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  Sep 27 16:06:17.401: INFO: Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de0b758a-a4b7-46ad-9ca3-220fb9e2b57a",
      ResourceVersion: (string) (len=5) "36768",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427575,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=82) "ReplicaSet \"test-rolling-update-deployment-7f5c55c64\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  Sep 27 16:06:17.403: INFO: New ReplicaSet "test-rolling-update-deployment-7f5c55c64" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "868f73e4-ae5a-4c9e-840b-1bccf4ecce04",
      ResourceVersion: (string) (len=5) "36758",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427575,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "de0b758a-a4b7-46ad-9ca3-220fb9e2b57a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 65 30 62 37 35  38 61 2d 61 34 62 37 2d  |\"de0b758a-a4b7-|
              00000120  34 36 61 64 2d 39 63 61  33 2d 32 32 30 66 62 39  |46ad-9ca3-220fb9|
              00000130  65 32 62 35 37 61 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |e2b57a\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 16:06:17.404: INFO: All old ReplicaSets of Deployment "test-rolling-update-deployment":
  Sep 27 16:06:17.404: INFO: (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2c7bd9dd-35aa-4a03-be61-ad12e541822a",
      ResourceVersion: (string) (len=5) "36767",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427570,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "de0b758a-a4b7-46ad-9ca3-220fb9e2b57a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427570,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 64 65 30 62 37 35 38  |"uid\":\"de0b758|
              000000b0  61 2d 61 34 62 37 2d 34  36 61 64 2d 39 63 61 33  |a-a4b7-46ad-9ca3|
              000000c0  2d 32 32 30 66 62 39 65  32 62 35 37 61 5c 22 7d  |-220fb9e2b57a\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  Sep 27 16:06:17.407: INFO: Pod "test-rolling-update-deployment-7f5c55c64-7lml5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=46) "test-rolling-update-deployment-7f5c55c64-7lml5",
      GenerateName: (string) (len=41) "test-rolling-update-deployment-7f5c55c64-",
      Namespace: (string) (len=15) "deployment-1042",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78f2a25f-a859-45a4-8eae-94cbcb16bb20",
      ResourceVersion: (string) (len=5) "36757",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427575,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=9) "7f5c55c64"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "63c1cfa833fe3d21aba8def93e36fe6832e90c53980aa0efa286ae0e5a3b48cb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.1.20.91/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.1.20.91/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=40) "test-rolling-update-deployment-7f5c55c64",
          UID: (types.UID) (len=36) "868f73e4-ae5a-4c9e-840b-1bccf4ecce04",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 36  38 66 37 33 65 34 2d 61  |d\":\"868f73e4-a|
              00000090  65 35 61 2d 34 63 39 65  2d 38 34 30 62 2d 31 62  |e5a-4c9e-840b-1b|
              000000a0  63 63 66 34 65 63 63 65  30 34 5c 22 7d 22 3a 7b  |ccf4ecce04\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427576,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "kubelite",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=517) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 52 65 61 64 79 5c  22 7d 22 3a 7b 22 2e 22  |\"Ready\"}":{"."|
              00000120  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000130  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000140  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000150  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000160  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 7d 2c 22  |,"f:type":{}}},"|
              00000170  66 3a 63 6f 6e 74 61 69  6e 65 72 53 74 61 74 75  |f:containerStatu|
              00000180  73 65 73 22 3a 7b 7d 2c  22 66 3a 68 6f 73 74 49  |ses":{},"f:hostI|
              00000190  50 22 3a 7b 7d 2c 22 66  3a 70 68 61 73 65 22 3a  |P":{},"f:phase":|
              000001a0  7b 7d 2c 22 66 3a 70 6f  64 49 50 22 3a 7b 7d 2c  |{},"f:podIP":{},|
              000001b0  22 66 3a 70 6f 64 49 50  73 22 3a 7b 22 2e 22 3a  |"f:podIPs":{".":|
              000001c0  7b 7d 2c 22 6b 3a 7b 5c  22 69 70 5c 22 3a 5c 22  |{},"k:{\"ip\":\"|
              000001d0  31 30 2e 31 2e 32 30 2e  39 31 5c 22 7d 22 3a 7b  |10.1.20.91\"}":{|
              000001e0  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              000001f0  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000200  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lv77p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  })
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lv77p",
              ReadOnly: (bool) true,
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "conformance-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=4) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427577,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63831427575,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "10.84.220.167",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) (len=10) "10.1.20.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.1.20.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63831427575,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63831427576,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.45",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:2c5b5b056076334e4cf431d964d102e44cbca8f1e6b16ac1e477a0ffbe6caac4",
          ContainerID: (string) (len=77) "containerd://439eff1800416587a3548ccadbd7519447c43389d8f47119c2715eeec82e94b4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>)
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  Sep 27 16:06:17.408: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1042" for this suite. @ 09/27/23 16:06:17.411
• [7.115 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:194
  STEP: Creating a kubernetes client @ 09/27/23 16:06:17.427
  Sep 27 16:06:17.427: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 16:06:17.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:17.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:17.46
  Sep 27 16:06:17.468: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 09/27/23 16:06:18.828
  Sep 27 16:06:18.828: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-5697 --namespace=crd-publish-openapi-5697 create -f -'
  Sep 27 16:06:19.118: INFO: stderr: ""
  Sep 27 16:06:19.118: INFO: stdout: "e2e-test-crd-publish-openapi-5591-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 27 16:06:19.118: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-5697 --namespace=crd-publish-openapi-5697 delete e2e-test-crd-publish-openapi-5591-crds test-cr'
  Sep 27 16:06:19.176: INFO: stderr: ""
  Sep 27 16:06:19.176: INFO: stdout: "e2e-test-crd-publish-openapi-5591-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  Sep 27 16:06:19.176: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-5697 --namespace=crd-publish-openapi-5697 apply -f -'
  Sep 27 16:06:19.314: INFO: stderr: ""
  Sep 27 16:06:19.314: INFO: stdout: "e2e-test-crd-publish-openapi-5591-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  Sep 27 16:06:19.314: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-5697 --namespace=crd-publish-openapi-5697 delete e2e-test-crd-publish-openapi-5591-crds test-cr'
  Sep 27 16:06:19.412: INFO: stderr: ""
  Sep 27 16:06:19.412: INFO: stdout: "e2e-test-crd-publish-openapi-5591-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 09/27/23 16:06:19.412
  Sep 27 16:06:19.412: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-5697 explain e2e-test-crd-publish-openapi-5591-crds'
  Sep 27 16:06:19.517: INFO: stderr: ""
  Sep 27 16:06:19.517: INFO: stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-5591-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  Sep 27 16:06:20.771: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5697" for this suite. @ 09/27/23 16:06:20.78
• [3.378 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance]
test/e2e/apimachinery/crd_publish_openapi.go:69
  STEP: Creating a kubernetes client @ 09/27/23 16:06:20.805
  Sep 27 16:06:20.805: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename crd-publish-openapi @ 09/27/23 16:06:20.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:21.443
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:21.445
  Sep 27 16:06:21.447: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 09/27/23 16:06:22.761
  Sep 27 16:06:22.762: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 create -f -'
  Sep 27 16:06:23.137: INFO: stderr: ""
  Sep 27 16:06:23.137: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 27 16:06:23.137: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 delete e2e-test-crd-publish-openapi-7032-crds test-foo'
  Sep 27 16:06:23.216: INFO: stderr: ""
  Sep 27 16:06:23.216: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  Sep 27 16:06:23.216: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 apply -f -'
  Sep 27 16:06:23.485: INFO: stderr: ""
  Sep 27 16:06:23.485: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  Sep 27 16:06:23.485: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 delete e2e-test-crd-publish-openapi-7032-crds test-foo'
  Sep 27 16:06:23.548: INFO: stderr: ""
  Sep 27 16:06:23.548: INFO: stdout: "e2e-test-crd-publish-openapi-7032-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 09/27/23 16:06:23.548
  Sep 27 16:06:23.548: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 create -f -'
  Sep 27 16:06:23.648: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 09/27/23 16:06:23.648
  Sep 27 16:06:23.648: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 create -f -'
  Sep 27 16:06:23.758: INFO: rc: 1
  Sep 27 16:06:23.758: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 apply -f -'
  Sep 27 16:06:23.878: INFO: rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 09/27/23 16:06:23.878
  Sep 27 16:06:23.878: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 create -f -'
  Sep 27 16:06:23.981: INFO: rc: 1
  Sep 27 16:06:23.982: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 --namespace=crd-publish-openapi-4980 apply -f -'
  Sep 27 16:06:24.086: INFO: rc: 1
  STEP: kubectl explain works to explain CR properties @ 09/27/23 16:06:24.086
  Sep 27 16:06:24.086: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 explain e2e-test-crd-publish-openapi-7032-crds'
  Sep 27 16:06:24.181: INFO: stderr: ""
  Sep 27 16:06:24.181: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 09/27/23 16:06:24.181
  Sep 27 16:06:24.181: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 explain e2e-test-crd-publish-openapi-7032-crds.metadata'
  Sep 27 16:06:24.281: INFO: stderr: ""
  Sep 27 16:06:24.281: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  Sep 27 16:06:24.281: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 explain e2e-test-crd-publish-openapi-7032-crds.spec'
  Sep 27 16:06:24.390: INFO: stderr: ""
  Sep 27 16:06:24.390: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  Sep 27 16:06:24.390: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 explain e2e-test-crd-publish-openapi-7032-crds.spec.bars'
  Sep 27 16:06:24.487: INFO: stderr: ""
  Sep 27 16:06:24.487: INFO: stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-7032-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 09/27/23 16:06:24.487
  Sep 27 16:06:24.487: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=crd-publish-openapi-4980 explain e2e-test-crd-publish-openapi-7032-crds.spec.bars2'
  Sep 27 16:06:24.583: INFO: rc: 1
  Sep 27 16:06:25.929: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4980" for this suite. @ 09/27/23 16:06:25.939
• [5.148 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance]
test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 09/27/23 16:06:25.955
  Sep 27 16:06:25.955: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/27/23 16:06:25.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:26.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:26.015
  STEP: creating @ 09/27/23 16:06:26.018
  STEP: getting @ 09/27/23 16:06:26.039
  STEP: listing in namespace @ 09/27/23 16:06:26.041
  STEP: patching @ 09/27/23 16:06:26.044
  STEP: deleting @ 09/27/23 16:06:26.066
  Sep 27 16:06:26.090: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2855" for this suite. @ 09/27/23 16:06:26.093
• [0.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance]
test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 09/27/23 16:06:26.117
  Sep 27 16:06:26.117: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 16:06:26.118
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:26.159
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:26.173
  STEP: Creating a simple DaemonSet "daemon-set" @ 09/27/23 16:06:26.201
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 16:06:26.215
  Sep 27 16:06:26.219: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:06:26.219: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  Sep 27 16:06:27.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 1
  Sep 27 16:06:27.226: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  Sep 27 16:06:28.226: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 16:06:28.226: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 09/27/23 16:06:28.232
  Sep 27 16:06:28.258: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 16:06:28.258: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 09/27/23 16:06:28.258
  STEP: Deleting DaemonSet "daemon-set" @ 09/27/23 16:06:29.263
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7519, will wait for the garbage collector to delete the pods @ 09/27/23 16:06:29.263
  Sep 27 16:06:29.333: INFO: Deleting DaemonSet.extensions daemon-set took: 16.538464ms
  Sep 27 16:06:29.434: INFO: Terminating DaemonSet.extensions daemon-set pods took: 100.598718ms
  Sep 27 16:06:32.237: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:06:32.237: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  Sep 27 16:06:32.240: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"36967"},"items":null}

  Sep 27 16:06:32.243: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"36968"},"items":null}

  Sep 27 16:06:32.249: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7519" for this suite. @ 09/27/23 16:06:32.252
• [6.148 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance]
test/e2e/apps/rc.go:112
  STEP: Creating a kubernetes client @ 09/27/23 16:06:32.265
  Sep 27 16:06:32.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replication-controller @ 09/27/23 16:06:32.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:32.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:32.309
  STEP: creating a ReplicationController @ 09/27/23 16:06:32.312
  STEP: waiting for RC to be added @ 09/27/23 16:06:32.326
  STEP: waiting for available Replicas @ 09/27/23 16:06:32.327
  STEP: patching ReplicationController @ 09/27/23 16:06:33.201
  STEP: waiting for RC to be modified @ 09/27/23 16:06:33.218
  STEP: patching ReplicationController status @ 09/27/23 16:06:33.218
  STEP: waiting for RC to be modified @ 09/27/23 16:06:33.23
  STEP: waiting for available Replicas @ 09/27/23 16:06:33.23
  STEP: fetching ReplicationController status @ 09/27/23 16:06:33.242
  STEP: patching ReplicationController scale @ 09/27/23 16:06:33.244
  STEP: waiting for RC to be modified @ 09/27/23 16:06:33.259
  STEP: waiting for ReplicationController's scale to be the max amount @ 09/27/23 16:06:33.259
  STEP: fetching ReplicationController; ensuring that it's patched @ 09/27/23 16:06:35.031
  STEP: updating ReplicationController status @ 09/27/23 16:06:35.034
  STEP: waiting for RC to be modified @ 09/27/23 16:06:35.048
  STEP: listing all ReplicationControllers @ 09/27/23 16:06:35.049
  STEP: checking that ReplicationController has expected values @ 09/27/23 16:06:35.053
  STEP: deleting ReplicationControllers by collection @ 09/27/23 16:06:35.053
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 09/27/23 16:06:35.079
  Sep 27 16:06:35.154: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 16:06:35.154833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-6485" for this suite. @ 09/27/23 16:06:35.158
• [2.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:110
  STEP: Creating a kubernetes client @ 09/27/23 16:06:35.179
  Sep 27 16:06:35.179: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 16:06:35.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:35.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:35.209
  E0927 16:06:36.155161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:37.155402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:38.155510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:39.156636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:39.244: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2780" for this suite. @ 09/27/23 16:06:39.247
• [4.095 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:151
  STEP: Creating a kubernetes client @ 09/27/23 16:06:39.276
  Sep 27 16:06:39.276: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 16:06:39.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:06:39.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:06:39.336
  STEP: Creating pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327 @ 09/27/23 16:06:39.339
  E0927 16:06:40.156921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:41.157298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 16:06:41.362
  Sep 27 16:06:41.368: INFO: Initial restart count of pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 is 0
  Sep 27 16:06:41.373: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:42.159515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:43.159558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:43.377: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:44.159882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:45.160121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:45.381: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:46.160604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:47.161642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:47.385: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:48.162617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:49.162712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:49.390: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:50.162801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:51.163413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:51.393: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:52.163698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:53.163979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:53.398: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:54.164074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:55.164357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:55.402: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:56.164483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:57.164653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:57.406: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:06:58.165328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:06:59.165607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:06:59.411: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:00.165848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:01.166071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:01.415: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:02.166596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:03.166812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:03.419: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:04.167059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:05.167998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:05.422: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:06.168041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:07.168447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:07.426: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:08.168814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:09.169074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:09.431: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:10.169331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:11.169498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:11.434: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:12.169799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:13.169888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:13.438: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:14.170525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:15.170696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:15.442: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:16.170789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:17.171597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:17.445: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:18.171708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:19.171977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:19.450: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:20.172315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:21.172902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:21.454: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:22.173145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:23.173299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:23.458: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:24.174255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:25.174300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:25.462: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:26.177803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:27.177939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:27.466: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:28.178180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:29.178540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:29.470: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:30.178719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:31.179140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:31.473: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:32.179442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:33.180329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:33.478: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:34.180529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:35.180777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:35.482: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:36.180853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:37.181204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:37.486: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:38.182156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:39.182549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:39.489: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:40.183447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:41.183712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:41.493: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:42.183843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:43.184031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:43.496: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:44.184269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:45.184629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:45.501: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:46.184803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:47.185782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:47.504: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:48.185900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:49.186066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:49.509: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:50.186439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:51.186732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:51.513: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:52.186753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:53.186999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:53.518: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:54.187687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:55.188017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:55.522: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:56.188087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:57.188309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:57.526: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:07:58.188488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:07:59.188746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:07:59.530: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:00.188825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:01.189079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:01.532: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:02.189367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:03.189578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:03.535: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:04.189565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:05.189854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:05.538: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:06.190001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:07.190148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:07.542: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:08.190934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:09.191215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:09.546: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:10.191531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:11.191943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:11.548: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:12.192800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:13.193111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:13.551: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:14.194025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:15.194224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:15.555: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:16.194592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:17.194814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:17.557: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:18.195662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:19.195753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:19.561: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:20.195905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:21.196187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:21.564: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:22.196475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:23.196927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:23.566: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:24.197333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:25.197516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:25.570: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:26.197562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:27.197721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:27.573: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:28.198164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:29.198555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:29.577: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:30.199503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:31.199715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:31.580: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:32.200765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:33.200992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:33.584: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:34.201109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:35.201285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:35.586: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:36.202484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:37.202677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:37.589: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:38.202923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:39.203183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:39.592: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:40.203318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:41.203588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:41.596: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:42.204418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:43.205256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:43.599: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:44.205385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:45.205449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:45.602: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:46.206458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:47.207079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:47.606: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:48.207193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:49.207536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:49.610: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:50.207723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:51.207943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:51.615: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:52.208838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:53.209014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:53.619: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:54.210082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:55.210349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:55.623: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:56.210497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:57.210818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:57.627: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:08:58.211243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:08:59.211351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:08:59.632: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:00.212382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:01.212791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:01.636: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:02.212955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:03.213165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:03.640: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:04.214000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:05.214325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:05.644: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:06.215178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:07.215238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:07.647: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:08.216412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:09.217194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:09.651: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:10.217337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:11.218319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:11.655: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:12.219548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:13.219850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:13.659: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:14.220167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:15.220495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:15.664: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:16.221221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:17.220850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:17.667: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:18.221949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:19.222251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:19.672: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:20.223410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:21.224010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:21.675: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:22.224763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:23.225156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:23.679: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:24.225819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:25.225983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:25.683: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:26.226757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:27.226919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:27.687: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:28.228041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:29.228281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:29.690: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:30.228638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:31.228826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:31.694: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:32.229004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:33.229238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:33.706: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:34.229336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:35.229563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:35.710: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:36.230088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:37.230691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:37.720: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:38.231688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:39.231824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:39.724: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:40.232563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:41.233209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:41.728: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:42.233386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:43.234139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:43.734: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:44.235037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:45.235780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:45.738: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:46.236724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:47.236872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:47.741: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:48.237060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:49.237215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:49.745: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:50.237448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:51.237857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:51.748: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:52.238449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:53.238660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:53.752: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:54.238814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:55.239657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:55.755: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:56.240415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:57.240553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:57.759: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:09:58.241061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:09:59.241196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:09:59.764: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:00.241281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:01.241706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:01.767: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:02.241852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:03.242320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:03.770: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:04.242942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:05.243290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:05.773: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:06.243550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:07.243644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:07.779: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:08.244579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:09.245246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:09.783: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:10.245779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:11.245926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:11.787: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:12.246096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:13.246211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:13.790: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:14.246974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:15.247968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:15.793: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:16.248162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:17.248389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:17.796: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:18.248441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:19.248605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:19.800: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:20.248794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:21.249006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:21.803: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:22.249991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:23.250405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:23.806: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:24.250720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:25.251020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:25.810: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:26.251682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:27.251807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:27.814: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:28.252396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:29.252569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:29.817: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:30.253456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:31.253757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:31.822: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:32.254007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:33.254337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:33.826: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:34.254698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:35.255347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:35.830: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:36.255428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:37.255538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:37.833: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:38.256432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:39.257305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:39.838: INFO: Get pod busybox-c52094d1-6277-45e1-b7bf-5e0e755c7664 in namespace container-probe-6327
  E0927 16:10:40.257379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:41.258258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:41.839: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 16:10:41.843
  STEP: Destroying namespace "container-probe-6327" for this suite. @ 09/27/23 16:10:41.88
• [242.637 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance]
test/e2e/common/node/kubelet.go:148
  STEP: Creating a kubernetes client @ 09/27/23 16:10:41.914
  Sep 27 16:10:41.914: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubelet-test @ 09/27/23 16:10:41.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:10:41.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:10:41.948
  STEP: Waiting for pod completion @ 09/27/23 16:10:41.972
  E0927 16:10:42.258843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:43.259070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:44.259148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:45.260230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:45.994: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6922" for this suite. @ 09/27/23 16:10:45.997
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance]
test/e2e/network/endpointslice.go:104
  STEP: Creating a kubernetes client @ 09/27/23 16:10:46.025
  Sep 27 16:10:46.025: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename endpointslice @ 09/27/23 16:10:46.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:10:46.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:10:46.072
  E0927 16:10:46.260282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:47.260482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:48.260652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:10:48.305: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6463" for this suite. @ 09/27/23 16:10:48.313
• [2.308 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance]
test/e2e/common/node/expansion.go:300
  STEP: Creating a kubernetes client @ 09/27/23 16:10:48.336
  Sep 27 16:10:48.336: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename var-expansion @ 09/27/23 16:10:48.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:10:48.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:10:48.421
  STEP: creating the pod @ 09/27/23 16:10:48.431
  STEP: waiting for pod running @ 09/27/23 16:10:48.456
  E0927 16:10:49.260769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:50.261338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 09/27/23 16:10:50.469
  Sep 27 16:10:50.472: INFO: ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1762 PodName:var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:10:50.473: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:10:50.473: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:10:50.473: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1762/pods/var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 09/27/23 16:10:50.558
  Sep 27 16:10:50.561: INFO: ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1762 PodName:var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:10:50.561: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:10:50.561: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:10:50.561: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/var-expansion-1762/pods/var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 09/27/23 16:10:50.618
  Sep 27 16:10:51.155: INFO: Successfully updated pod "var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406"
  STEP: waiting for annotated pod running @ 09/27/23 16:10:51.156
  STEP: deleting the pod gracefully @ 09/27/23 16:10:51.16
  Sep 27 16:10:51.160: INFO: Deleting pod "var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406" in namespace "var-expansion-1762"
  Sep 27 16:10:51.184: INFO: Wait up to 5m0s for pod "var-expansion-77ba7d82-9c35-40dd-a5cb-2acd4674e406" to be fully deleted
  E0927 16:10:51.261490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:52.261603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:53.262527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:54.263397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:55.263609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:56.264384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:57.264725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:58.265204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:10:59.265874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:00.266060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:01.267196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:02.267391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:03.267919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:04.268183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:05.269245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:06.269809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:07.270161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:08.270424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:09.270662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:10.270849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:11.271361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:12.271606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:13.271784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:14.271872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:15.272234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:16.272639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:17.273711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:18.274119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:19.274795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:20.275548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:21.276486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:22.276834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:23.277064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:24.277214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:11:25.253: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1762" for this suite. @ 09/27/23 16:11:25.256
  E0927 16:11:25.277797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [36.945 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching  [Conformance]
test/e2e/scheduling/predicates.go:467
  STEP: Creating a kubernetes client @ 09/27/23 16:11:25.281
  Sep 27 16:11:25.281: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-pred @ 09/27/23 16:11:25.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:11:25.318
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:11:25.321
  Sep 27 16:11:25.327: INFO: Waiting up to 1m0s for all (but 0) nodes to be ready
  Sep 27 16:11:25.333: INFO: Waiting for terminating namespaces to be deleted...
  Sep 27 16:11:25.335: INFO: 
  Logging pods the apiserver thinks is on node conformance-1 before test
  Sep 27 16:11:25.346: INFO: calico-node-p5zf2 from kube-system started at 2023-09-27 14:09:43 +0000 UTC (1 container statuses recorded)
  Sep 27 16:11:25.346: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 16:11:25.346: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-78vx8 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 16:11:25.346: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 16:11:25.346: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 16:11:25.346: INFO: 
  Logging pods the apiserver thinks is on node conformance-2 before test
  Sep 27 16:11:25.352: INFO: calico-node-m6278 from kube-system started at 2023-09-27 14:10:45 +0000 UTC (1 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container calico-node ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: sonobuoy-systemd-logs-daemon-set-36f4f1eeeef643be-s6cbv from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: 	Container systemd-logs ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: sonobuoy from sonobuoy started at 2023-09-27 14:44:47 +0000 UTC (1 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container kube-sonobuoy ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: sonobuoy-e2e-job-699828072b064365 from sonobuoy started at 2023-09-27 14:44:49 +0000 UTC (2 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container e2e ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: 	Container sonobuoy-worker ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: coredns-864597b5fd-7fvch from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container coredns ready: true, restart count 0
  Sep 27 16:11:25.352: INFO: calico-kube-controllers-77bd7c5b-d2rz9 from kube-system started at 2023-09-27 15:13:35 +0000 UTC (1 container statuses recorded)
  Sep 27 16:11:25.352: INFO: 	Container calico-kube-controllers ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 09/27/23 16:11:25.352
  E0927 16:11:26.278176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:27.279131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 09/27/23 16:11:27.382
  STEP: Trying to apply a random label on the found node. @ 09/27/23 16:11:27.42
  STEP: verifying the node has the label kubernetes.io/e2e-52948a32-a9c2-47d4-b8d2-fd90ce0394a2 42 @ 09/27/23 16:11:27.443
  STEP: Trying to relaunch the pod, now with labels. @ 09/27/23 16:11:27.463
  E0927 16:11:28.279762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:29.280088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-52948a32-a9c2-47d4-b8d2-fd90ce0394a2 off the node conformance-1 @ 09/27/23 16:11:29.489
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-52948a32-a9c2-47d4-b8d2-fd90ce0394a2 @ 09/27/23 16:11:29.52
  Sep 27 16:11:29.525: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8046" for this suite. @ 09/27/23 16:11:29.531
• [4.285 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance]
test/e2e/apimachinery/resource_quota.go:1013
  STEP: Creating a kubernetes client @ 09/27/23 16:11:29.567
  Sep 27 16:11:29.567: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 16:11:29.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:11:29.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:11:29.625
  STEP: Creating resourceQuota "e2e-rq-status-46mqn" @ 09/27/23 16:11:29.631
  Sep 27 16:11:29.648: INFO: Resource quota "e2e-rq-status-46mqn" reports spec: hard cpu limit of 500m
  Sep 27 16:11:29.649: INFO: Resource quota "e2e-rq-status-46mqn" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-46mqn" /status @ 09/27/23 16:11:29.649
  STEP: Confirm /status for "e2e-rq-status-46mqn" resourceQuota via watch @ 09/27/23 16:11:29.694
  Sep 27 16:11:29.696: INFO: observed resourceQuota "e2e-rq-status-46mqn" in namespace "resourcequota-3579" with hard status: v1.ResourceList(nil)
  Sep 27 16:11:29.696: INFO: Found resourceQuota "e2e-rq-status-46mqn" in namespace "resourcequota-3579" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 27 16:11:29.696: INFO: ResourceQuota "e2e-rq-status-46mqn" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 09/27/23 16:11:29.699
  Sep 27 16:11:29.715: INFO: Resource quota "e2e-rq-status-46mqn" reports spec: hard cpu limit of 1
  Sep 27 16:11:29.715: INFO: Resource quota "e2e-rq-status-46mqn" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-46mqn" /status @ 09/27/23 16:11:29.715
  STEP: Confirm /status for "e2e-rq-status-46mqn" resourceQuota via watch @ 09/27/23 16:11:29.73
  Sep 27 16:11:29.732: INFO: observed resourceQuota "e2e-rq-status-46mqn" in namespace "resourcequota-3579" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  Sep 27 16:11:29.732: INFO: Found resourceQuota "e2e-rq-status-46mqn" in namespace "resourcequota-3579" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  Sep 27 16:11:29.732: INFO: ResourceQuota "e2e-rq-status-46mqn" /status was patched
  STEP: Get "e2e-rq-status-46mqn" /status @ 09/27/23 16:11:29.732
  Sep 27 16:11:29.735: INFO: Resourcequota "e2e-rq-status-46mqn" reports status: hard cpu of 1
  Sep 27 16:11:29.735: INFO: Resourcequota "e2e-rq-status-46mqn" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-46mqn" /status before checking Spec is unchanged @ 09/27/23 16:11:29.738
  Sep 27 16:11:29.751: INFO: Resourcequota "e2e-rq-status-46mqn" reports status: hard cpu of 2
  Sep 27 16:11:29.751: INFO: Resourcequota "e2e-rq-status-46mqn" reports status: hard memory of 2Gi
  Sep 27 16:11:29.753: INFO: Found resourceQuota "e2e-rq-status-46mqn" in namespace "resourcequota-3579" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  E0927 16:11:30.280285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:31.281431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:32.281843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:33.282136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:34.282544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:35.283063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:36.283823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:37.284044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:38.284239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:39.284316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:40.284487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:41.285208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:42.285258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:43.286347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:44.286501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:45.287634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:46.287837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:47.288762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:48.289149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:49.289360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:50.289454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:51.290257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:52.290514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:53.290769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:54.291000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:55.291550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:56.291764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:57.292075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:58.292192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:11:59.292814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:00.293700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:01.293824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:02.294106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:03.294498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:04.294676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:05.294921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:06.295119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:07.295438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:08.295568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:09.295787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:10.295990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:11.296173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:12.296453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:13.296822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:14.297062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:15.297841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:16.298122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:17.298396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:18.298600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:19.298824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:20.299725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:21.299928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:22.300573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:23.301114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:24.301136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:25.301837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:26.302996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:27.303259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:28.303493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:29.303834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:30.304135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:31.304463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:32.304678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:33.304902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:34.304986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:35.305473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:36.306301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:37.307012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:38.307250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:39.307403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:40.307862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:41.308046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:42.309218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:43.309411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:44.309642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:45.310273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:46.310406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:47.310719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:48.311008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:49.311331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:50.312219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:51.312666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:52.313667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:53.313893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:54.314121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:55.315187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:56.315384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:57.315564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:58.316521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:12:59.317031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:00.317692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:01.317799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:02.317943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:03.318171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:04.318443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:05.319341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:06.319448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:07.319715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:08.319822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:09.320004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:10.320507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:11.320836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:12.321169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:13.322283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:14.322542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:15.323630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:16.323792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:17.324057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:18.324378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:19.324574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:20.325486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:21.325660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:22.325969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:23.326091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:24.326858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:25.327558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:26.328143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:27.328856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:28.328959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:29.329277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:30.329523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:31.329607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:32.329832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:33.329987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:34.330100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:35.330339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:36.330578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:37.331577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:38.331890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:39.332066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:40.332338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:41.332529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:42.332718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:43.333037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:44.334052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:45.334116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:46.334310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:47.334534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:48.334630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:49.334729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:50.335001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:51.335173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:52.335253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:53.336220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:54.336428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:55.337071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:56.337278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:57.337439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:58.337802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:13:59.337891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:00.338187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:01.338405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:02.338612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:03.339338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:04.339435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:05.339815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:06.339937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:07.340206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:08.340399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:09.340626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:10.341440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:11.341749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:12.342144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:13.342393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:14.342575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:15.343374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:16.343636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:17.343803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:18.346632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:19.346933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:20.347564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:21.347750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:22.348043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:23.348233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:24.348968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:25.349627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:26.349967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:27.351027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:28.351106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:29.351355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:14:29.759: INFO: ResourceQuota "e2e-rq-status-46mqn" Spec was unchanged and /status reset
  Sep 27 16:14:29.759: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3579" for this suite. @ 09/27/23 16:14:29.762
• [180.227 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance]
test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 09/27/23 16:14:29.794
  Sep 27 16:14:29.794: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename dns @ 09/27/23 16:14:29.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:14:29.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:14:29.843
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5418.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-5418.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 09/27/23 16:14:29.845
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-5418.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-5418.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 09/27/23 16:14:29.845
  STEP: creating a pod to probe /etc/hosts @ 09/27/23 16:14:29.845
  STEP: submitting the pod to kubernetes @ 09/27/23 16:14:29.845
  E0927 16:14:30.352310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:31.352722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:32.353606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:33.353872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 09/27/23 16:14:33.872
  STEP: looking for the results for each expected name from probers @ 09/27/23 16:14:33.875
  Sep 27 16:14:33.885: INFO: Unable to read jessie_hosts@dns-querier-1 from pod dns-5418/dns-test-7367ecfc-6214-4419-a056-31e4715aa2ca: the server could not find the requested resource (get pods dns-test-7367ecfc-6214-4419-a056-31e4715aa2ca)
  Sep 27 16:14:33.885: INFO: Lookups using dns-5418/dns-test-7367ecfc-6214-4419-a056-31e4715aa2ca failed for: [jessie_hosts@dns-querier-1]

  Sep 27 16:14:33.895: INFO: Pod client logs for webserver: 
  Sep 27 16:14:33.899: INFO: Pod client logs for querier: 
  Sep 27 16:14:33.902: INFO: Pod client logs for jessie-querier: 
  E0927 16:14:34.354061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:35.354441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:36.354706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:37.354887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:38.355113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:14:38.916: INFO: DNS probes using dns-5418/dns-test-7367ecfc-6214-4419-a056-31e4715aa2ca succeeded

  Sep 27 16:14:38.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 16:14:38.921
  STEP: Destroying namespace "dns-5418" for this suite. @ 09/27/23 16:14:39.024
• [9.254 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance]
test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 09/27/23 16:14:39.05
  Sep 27 16:14:39.051: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename daemonsets @ 09/27/23 16:14:39.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:14:39.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:14:39.105
  STEP: Creating simple DaemonSet "daemon-set" @ 09/27/23 16:14:39.133
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 16:14:39.148
  Sep 27 16:14:39.158: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:14:39.158: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  E0927 16:14:39.355150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:14:40.170: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 0
  Sep 27 16:14:40.170: INFO: Node conformance-2 is running 0 daemon pod, expected 1
  E0927 16:14:40.355836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:14:41.168: INFO: Number of nodes with available pods controlled by daemonset daemon-set: 2
  Sep 27 16:14:41.168: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 09/27/23 16:14:41.171
  STEP: DeleteCollection of the DaemonSets @ 09/27/23 16:14:41.174
  STEP: Verify that ReplicaSets have been deleted @ 09/27/23 16:14:41.201
  Sep 27 16:14:41.296: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38123"},"items":null}

  Sep 27 16:14:41.300: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38123"},"items":[{"metadata":{"name":"daemon-set-vqrn6","generateName":"daemon-set-","namespace":"daemonsets-3414","uid":"1e82de4a-cc84-41d8-9c1b-1e281e6c9458","resourceVersion":"38119","creationTimestamp":"2023-09-27T16:14:39Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"af2e11f5003e7b04b409ec9bbe7b2c1a5a87090a12d9f0a932b48417727be1df","cni.projectcalico.org/podIP":"10.1.212.13/32","cni.projectcalico.org/podIPs":"10.1.212.13/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4c376c59-8a8c-4df7-9527-08abc7a9bd54","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c376c59-8a8c-4df7-9527-08abc7a9bd54\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:40Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.212.13\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-gmf7q","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-gmf7q","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conformance-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conformance-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:39Z"}],"hostIP":"10.84.220.103","podIP":"10.1.212.13","podIPs":[{"ip":"10.1.212.13"}],"startTime":"2023-09-27T16:14:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-27T16:14:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://ba28943358e77632a25f0f0bb8563ec506b446c2b505dadaaa5393071ca1bdff","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-jz897","generateName":"daemon-set-","namespace":"daemonsets-3414","uid":"76976989-7a74-4fc9-9850-1d0bb8ce61a5","resourceVersion":"38121","creationTimestamp":"2023-09-27T16:14:39Z","labels":{"controller-revision-hash":"58cb6b5b65","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"b93111fc4a009f55185930293109e1e7ff422d75a98671bfb6509a360058e6e1","cni.projectcalico.org/podIP":"10.1.20.89/32","cni.projectcalico.org/podIPs":"10.1.20.89/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"4c376c59-8a8c-4df7-9527-08abc7a9bd54","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:39Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"4c376c59-8a8c-4df7-9527-08abc7a9bd54\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelite","operation":"Update","apiVersion":"v1","time":"2023-09-27T16:14:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.1.20.89\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ng6z7","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ng6z7","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"conformance-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["conformance-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:39Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:40Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:40Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2023-09-27T16:14:39Z"}],"hostIP":"10.84.220.167","podIP":"10.1.20.89","podIPs":[{"ip":"10.1.20.89"}],"startTime":"2023-09-27T16:14:39Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2023-09-27T16:14:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://e2890ca04ecabbdefb98ddba26e77f2e47c0f368d72737d0d223ef2380cfaba2","started":true}],"qosClass":"BestEffort"}}]}

  Sep 27 16:14:41.314: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3414" for this suite. @ 09/27/23 16:14:41.317
  E0927 16:14:41.356298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.337 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance]
test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 09/27/23 16:14:41.399
  Sep 27 16:14:41.399: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename conformance-tests @ 09/27/23 16:14:41.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:14:41.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:14:41.512
  STEP: Getting node addresses @ 09/27/23 16:14:41.52
  Sep 27 16:14:41.520: INFO: Waiting up to 10m0s for all (but 0) nodes to be schedulable
  Sep 27 16:14:41.527: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4994" for this suite. @ 09/27/23 16:14:41.531
• [0.207 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance]
test/e2e/common/storage/configmap_volume.go:240
  STEP: Creating a kubernetes client @ 09/27/23 16:14:41.608
  Sep 27 16:14:41.608: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 16:14:41.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:14:41.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:14:41.72
  STEP: Creating configMap with name cm-test-opt-del-e6d92b2a-49e3-4db7-a78b-4db0711a3fab @ 09/27/23 16:14:41.728
  STEP: Creating configMap with name cm-test-opt-upd-11d17f27-f831-4d0a-8beb-d4a9536ed9b7 @ 09/27/23 16:14:41.768
  STEP: Creating the pod @ 09/27/23 16:14:41.812
  E0927 16:14:42.356495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:43.356551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:44.356845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:45.357360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-e6d92b2a-49e3-4db7-a78b-4db0711a3fab @ 09/27/23 16:14:45.888
  STEP: Updating configmap cm-test-opt-upd-11d17f27-f831-4d0a-8beb-d4a9536ed9b7 @ 09/27/23 16:14:45.924
  STEP: Creating configMap with name cm-test-opt-create-2715afae-7a7b-4588-b609-67086a1c7eb6 @ 09/27/23 16:14:45.948
  STEP: waiting to observe update in volume @ 09/27/23 16:14:45.979
  E0927 16:14:46.357416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:47.357598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:48.358345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:49.359480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:50.359587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:51.359834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:52.359995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:53.360235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:54.360908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:55.361281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:56.362407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:57.362506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:58.363904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:14:59.364010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:00.364079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:01.364182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:02.364648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:03.364870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:04.365043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:05.365364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:06.366364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:07.366905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:08.367601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:09.368409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:10.369502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:11.369808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:12.370443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:13.370663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:14.371261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:15.371686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:16.372624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:17.372914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:18.373635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:19.373930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:20.374089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:21.374420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:22.375354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:23.376166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:24.377034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:25.377539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:26.378103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:27.378315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:28.380480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:29.380629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:30.380843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:31.381144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:32.381825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:33.382059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:34.382498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:35.383200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:36.383295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:37.383316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:38.384308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:39.384624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:40.384894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:41.385007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:42.385088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:43.385702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:44.386725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:45.387388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:46.387965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:47.388151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:48.388717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:49.388914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:50.389060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:51.390177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:52.390880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:53.391182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:54.391389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:55.392004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:56.393110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:57.393313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:58.393899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:15:59.394826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:00.395809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:01.395915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:02.397001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:03.397228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:04.397619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:05.398383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:06.398956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:07.399230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:08.399422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:09.399698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:10.400453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:11.400685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:12.257: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9665" for this suite. @ 09/27/23 16:16:12.26
• [90.677 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance]
test/e2e/common/node/downwardapi.go:45
  STEP: Creating a kubernetes client @ 09/27/23 16:16:12.285
  Sep 27 16:16:12.285: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 16:16:12.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:12.324
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:12.327
  STEP: Creating a pod to test downward api env vars @ 09/27/23 16:16:12.328
  E0927 16:16:12.400845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:13.401074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:14.401439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:15.402028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:16:16.353
  Sep 27 16:16:16.355: INFO: Trying to get logs from node conformance-1 pod downward-api-16f32032-d113-4b6f-8d24-fb04faea6421 container dapi-container: <nil>
  STEP: delete the pod @ 09/27/23 16:16:16.359
  Sep 27 16:16:16.397: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2349" for this suite. @ 09/27/23 16:16:16.4
  E0927 16:16:16.402457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.136 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0  [Conformance]
test/e2e/kubectl/kubectl.go:1781
  STEP: Creating a kubernetes client @ 09/27/23 16:16:16.421
  Sep 27 16:16:16.421: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename kubectl @ 09/27/23 16:16:16.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:16.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:16.45
  STEP: starting the proxy server @ 09/27/23 16:16:16.459
  Sep 27 16:16:16.459: INFO: Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=kubectl-5180 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 09/27/23 16:16:16.486
  Sep 27 16:16:16.495: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5180" for this suite. @ 09/27/23 16:16:16.5
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance]
test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 09/27/23 16:16:16.519
  Sep 27 16:16:16.519: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:16:16.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:16.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:16.563
  STEP: Setting up server cert @ 09/27/23 16:16:16.604
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:16:16.757
  STEP: Deploying the webhook pod @ 09/27/23 16:16:16.784
  STEP: Wait for the deployment to be ready @ 09/27/23 16:16:16.812
  Sep 27 16:16:16.817: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 16:16:17.403115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:18.403581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 16:16:18.827
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:16:18.871
  E0927 16:16:19.404594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:19.872: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 09/27/23 16:16:19.877
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 16:16:19.878
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 09/27/23 16:16:19.915
  E0927 16:16:20.405615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 09/27/23 16:16:20.946
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 16:16:20.946
  E0927 16:16:21.406269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 09/27/23 16:16:22.027
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 16:16:22.027
  E0927 16:16:22.406427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:23.407109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:24.406662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:25.407277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:26.407459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 09/27/23 16:16:27.098
  STEP: Registering slow webhook via the AdmissionRegistration API @ 09/27/23 16:16:27.098
  E0927 16:16:27.408537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:28.408697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:29.408907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:30.409637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:31.409887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:32.162: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7955" for this suite. @ 09/27/23 16:16:32.293
  STEP: Destroying namespace "webhook-markers-5625" for this suite. @ 09/27/23 16:16:32.358
• [15.861 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:74
  STEP: Creating a kubernetes client @ 09/27/23 16:16:32.381
  Sep 27 16:16:32.381: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:16:32.381
  E0927 16:16:32.410922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:32.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:32.43
  STEP: Creating configMap with name projected-configmap-test-volume-46f0afbd-e079-4199-b786-3a6d9917665c @ 09/27/23 16:16:32.439
  STEP: Creating a pod to test consume configMaps @ 09/27/23 16:16:32.458
  E0927 16:16:33.411199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:34.411687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:35.412311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:36.412424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:16:36.493
  Sep 27 16:16:36.497: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-edaf0ca8-6024-4fd3-b7d8-f696dbc29788 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 16:16:36.503
  Sep 27 16:16:36.553: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7396" for this suite. @ 09/27/23 16:16:36.556
• [4.189 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/projected_configmap.go:57
  STEP: Creating a kubernetes client @ 09/27/23 16:16:36.572
  Sep 27 16:16:36.572: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename projected @ 09/27/23 16:16:36.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:36.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:36.616
  STEP: Creating configMap with name projected-configmap-test-volume-5b088dcb-6a63-408f-90eb-98e8080e40f3 @ 09/27/23 16:16:36.624
  STEP: Creating a pod to test consume configMaps @ 09/27/23 16:16:36.64
  E0927 16:16:37.412717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:38.413813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:39.413985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:40.414753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:16:40.669
  Sep 27 16:16:40.672: INFO: Trying to get logs from node conformance-1 pod pod-projected-configmaps-1fa58003-9c15-491c-8790-ed822f3bfaa0 container agnhost-container: <nil>
  STEP: delete the pod @ 09/27/23 16:16:40.676
  Sep 27 16:16:40.709: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9151" for this suite. @ 09/27/23 16:16:40.712
• [4.156 seconds]
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 09/27/23 16:16:40.73
  Sep 27 16:16:40.730: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 16:16:40.73
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:40.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:40.764
  STEP: Creating secret with name secret-test-c81c202c-205e-453d-ab59-e6daa7565b51 @ 09/27/23 16:16:40.828
  STEP: Creating a pod to test consume secrets @ 09/27/23 16:16:40.84
  E0927 16:16:41.414854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:42.415066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:43.415609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:44.415728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:16:44.87
  Sep 27 16:16:44.872: INFO: Trying to get logs from node conformance-1 pod pod-secrets-a76fd2f9-70a4-4f6a-a1a4-55e7869145be container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 16:16:44.876
  Sep 27 16:16:44.917: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6211" for this suite. @ 09/27/23 16:16:44.92
  STEP: Destroying namespace "secret-namespace-2374" for this suite. @ 09/27/23 16:16:44.937
• [4.222 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance]
test/e2e/apps/replica_set.go:154
  STEP: Creating a kubernetes client @ 09/27/23 16:16:44.953
  Sep 27 16:16:44.953: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename replicaset @ 09/27/23 16:16:44.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:44.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:45.002
  Sep 27 16:16:45.031: INFO: Pod name sample-pod: Found 0 pods out of 1
  E0927 16:16:45.416816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:46.417937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:47.418761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:48.419742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:49.420036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:50.036: INFO: Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 09/27/23 16:16:50.036
  STEP: Scaling up "test-rs" replicaset  @ 09/27/23 16:16:50.037
  Sep 27 16:16:50.059: INFO: Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 09/27/23 16:16:50.059
  Sep 27 16:16:50.088: INFO: observed ReplicaSet test-rs in namespace replicaset-1437 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 16:16:50.170: INFO: observed ReplicaSet test-rs in namespace replicaset-1437 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 16:16:50.254: INFO: observed ReplicaSet test-rs in namespace replicaset-1437 with ReadyReplicas 1, AvailableReplicas 1
  Sep 27 16:16:50.317: INFO: observed ReplicaSet test-rs in namespace replicaset-1437 with ReadyReplicas 1, AvailableReplicas 1
  E0927 16:16:50.420335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:51.319: INFO: observed ReplicaSet test-rs in namespace replicaset-1437 with ReadyReplicas 2, AvailableReplicas 2
  E0927 16:16:51.420456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:52.138: INFO: observed Replicaset test-rs in namespace replicaset-1437 with ReadyReplicas 3 found true
  Sep 27 16:16:52.138: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1437" for this suite. @ 09/27/23 16:16:52.143
• [7.209 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance]
test/e2e/common/node/secrets.go:95
  STEP: Creating a kubernetes client @ 09/27/23 16:16:52.162
  Sep 27 16:16:52.162: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 16:16:52.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:52.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:52.201
  STEP: creating secret secrets-9007/secret-test-17ded9d7-40f2-4eec-980d-c7ab7d5729c4 @ 09/27/23 16:16:52.21
  STEP: Creating a pod to test consume secrets @ 09/27/23 16:16:52.223
  E0927 16:16:52.421449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:53.421512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:54.422123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:55.422386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:16:56.25
  Sep 27 16:16:56.253: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-e81c8b4a-1a26-40c2-a9d6-ce5ea7eb8c84 container env-test: <nil>
  STEP: delete the pod @ 09/27/23 16:16:56.258
  Sep 27 16:16:56.292: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9007" for this suite. @ 09/27/23 16:16:56.295
• [4.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance]
test/e2e/apimachinery/discovery.go:125
  STEP: Creating a kubernetes client @ 09/27/23 16:16:56.313
  Sep 27 16:16:56.313: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename discovery @ 09/27/23 16:16:56.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:56.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:56.364
  STEP: Setting up server cert @ 09/27/23 16:16:56.367
  E0927 16:16:56.423306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:56.569: INFO: Checking APIGroup: apiregistration.k8s.io
  Sep 27 16:16:56.570: INFO: PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  Sep 27 16:16:56.570: INFO: Versions found [{apiregistration.k8s.io/v1 v1}]
  Sep 27 16:16:56.570: INFO: apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  Sep 27 16:16:56.570: INFO: Checking APIGroup: apps
  Sep 27 16:16:56.571: INFO: PreferredVersion.GroupVersion: apps/v1
  Sep 27 16:16:56.571: INFO: Versions found [{apps/v1 v1}]
  Sep 27 16:16:56.571: INFO: apps/v1 matches apps/v1
  Sep 27 16:16:56.571: INFO: Checking APIGroup: events.k8s.io
  Sep 27 16:16:56.572: INFO: PreferredVersion.GroupVersion: events.k8s.io/v1
  Sep 27 16:16:56.572: INFO: Versions found [{events.k8s.io/v1 v1}]
  Sep 27 16:16:56.572: INFO: events.k8s.io/v1 matches events.k8s.io/v1
  Sep 27 16:16:56.572: INFO: Checking APIGroup: authentication.k8s.io
  Sep 27 16:16:56.573: INFO: PreferredVersion.GroupVersion: authentication.k8s.io/v1
  Sep 27 16:16:56.573: INFO: Versions found [{authentication.k8s.io/v1 v1}]
  Sep 27 16:16:56.573: INFO: authentication.k8s.io/v1 matches authentication.k8s.io/v1
  Sep 27 16:16:56.573: INFO: Checking APIGroup: authorization.k8s.io
  Sep 27 16:16:56.574: INFO: PreferredVersion.GroupVersion: authorization.k8s.io/v1
  Sep 27 16:16:56.574: INFO: Versions found [{authorization.k8s.io/v1 v1}]
  Sep 27 16:16:56.574: INFO: authorization.k8s.io/v1 matches authorization.k8s.io/v1
  Sep 27 16:16:56.574: INFO: Checking APIGroup: autoscaling
  Sep 27 16:16:56.575: INFO: PreferredVersion.GroupVersion: autoscaling/v2
  Sep 27 16:16:56.575: INFO: Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  Sep 27 16:16:56.575: INFO: autoscaling/v2 matches autoscaling/v2
  Sep 27 16:16:56.575: INFO: Checking APIGroup: batch
  Sep 27 16:16:56.576: INFO: PreferredVersion.GroupVersion: batch/v1
  Sep 27 16:16:56.576: INFO: Versions found [{batch/v1 v1}]
  Sep 27 16:16:56.576: INFO: batch/v1 matches batch/v1
  Sep 27 16:16:56.576: INFO: Checking APIGroup: certificates.k8s.io
  Sep 27 16:16:56.577: INFO: PreferredVersion.GroupVersion: certificates.k8s.io/v1
  Sep 27 16:16:56.577: INFO: Versions found [{certificates.k8s.io/v1 v1}]
  Sep 27 16:16:56.577: INFO: certificates.k8s.io/v1 matches certificates.k8s.io/v1
  Sep 27 16:16:56.577: INFO: Checking APIGroup: networking.k8s.io
  Sep 27 16:16:56.578: INFO: PreferredVersion.GroupVersion: networking.k8s.io/v1
  Sep 27 16:16:56.578: INFO: Versions found [{networking.k8s.io/v1 v1}]
  Sep 27 16:16:56.578: INFO: networking.k8s.io/v1 matches networking.k8s.io/v1
  Sep 27 16:16:56.578: INFO: Checking APIGroup: policy
  Sep 27 16:16:56.580: INFO: PreferredVersion.GroupVersion: policy/v1
  Sep 27 16:16:56.580: INFO: Versions found [{policy/v1 v1}]
  Sep 27 16:16:56.580: INFO: policy/v1 matches policy/v1
  Sep 27 16:16:56.580: INFO: Checking APIGroup: rbac.authorization.k8s.io
  Sep 27 16:16:56.581: INFO: PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  Sep 27 16:16:56.581: INFO: Versions found [{rbac.authorization.k8s.io/v1 v1}]
  Sep 27 16:16:56.581: INFO: rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  Sep 27 16:16:56.581: INFO: Checking APIGroup: storage.k8s.io
  Sep 27 16:16:56.582: INFO: PreferredVersion.GroupVersion: storage.k8s.io/v1
  Sep 27 16:16:56.582: INFO: Versions found [{storage.k8s.io/v1 v1}]
  Sep 27 16:16:56.582: INFO: storage.k8s.io/v1 matches storage.k8s.io/v1
  Sep 27 16:16:56.582: INFO: Checking APIGroup: admissionregistration.k8s.io
  Sep 27 16:16:56.583: INFO: PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  Sep 27 16:16:56.583: INFO: Versions found [{admissionregistration.k8s.io/v1 v1}]
  Sep 27 16:16:56.583: INFO: admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  Sep 27 16:16:56.583: INFO: Checking APIGroup: apiextensions.k8s.io
  Sep 27 16:16:56.583: INFO: PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  Sep 27 16:16:56.583: INFO: Versions found [{apiextensions.k8s.io/v1 v1}]
  Sep 27 16:16:56.583: INFO: apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  Sep 27 16:16:56.583: INFO: Checking APIGroup: scheduling.k8s.io
  Sep 27 16:16:56.584: INFO: PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  Sep 27 16:16:56.584: INFO: Versions found [{scheduling.k8s.io/v1 v1}]
  Sep 27 16:16:56.584: INFO: scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  Sep 27 16:16:56.584: INFO: Checking APIGroup: coordination.k8s.io
  Sep 27 16:16:56.585: INFO: PreferredVersion.GroupVersion: coordination.k8s.io/v1
  Sep 27 16:16:56.585: INFO: Versions found [{coordination.k8s.io/v1 v1}]
  Sep 27 16:16:56.585: INFO: coordination.k8s.io/v1 matches coordination.k8s.io/v1
  Sep 27 16:16:56.585: INFO: Checking APIGroup: node.k8s.io
  Sep 27 16:16:56.586: INFO: PreferredVersion.GroupVersion: node.k8s.io/v1
  Sep 27 16:16:56.586: INFO: Versions found [{node.k8s.io/v1 v1}]
  Sep 27 16:16:56.586: INFO: node.k8s.io/v1 matches node.k8s.io/v1
  Sep 27 16:16:56.586: INFO: Checking APIGroup: discovery.k8s.io
  Sep 27 16:16:56.587: INFO: PreferredVersion.GroupVersion: discovery.k8s.io/v1
  Sep 27 16:16:56.587: INFO: Versions found [{discovery.k8s.io/v1 v1}]
  Sep 27 16:16:56.587: INFO: discovery.k8s.io/v1 matches discovery.k8s.io/v1
  Sep 27 16:16:56.587: INFO: Checking APIGroup: flowcontrol.apiserver.k8s.io
  Sep 27 16:16:56.588: INFO: PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1beta3
  Sep 27 16:16:56.588: INFO: Versions found [{flowcontrol.apiserver.k8s.io/v1beta3 v1beta3} {flowcontrol.apiserver.k8s.io/v1beta2 v1beta2}]
  Sep 27 16:16:56.588: INFO: flowcontrol.apiserver.k8s.io/v1beta3 matches flowcontrol.apiserver.k8s.io/v1beta3
  Sep 27 16:16:56.588: INFO: Checking APIGroup: crd.projectcalico.org
  Sep 27 16:16:56.588: INFO: PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  Sep 27 16:16:56.588: INFO: Versions found [{crd.projectcalico.org/v1 v1}]
  Sep 27 16:16:56.588: INFO: crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  Sep 27 16:16:56.588: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1257" for this suite. @ 09/27/23 16:16:56.591
• [0.302 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance]
test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 09/27/23 16:16:56.616
  Sep 27 16:16:56.616: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename containers @ 09/27/23 16:16:56.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:56.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:56.653
  E0927 16:16:57.423664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:16:58.424198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:16:58.696: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7610" for this suite. @ 09/27/23 16:16:58.701
• [2.101 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance]
test/e2e/network/ingress.go:556
  STEP: Creating a kubernetes client @ 09/27/23 16:16:58.718
  Sep 27 16:16:58.718: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename ingress @ 09/27/23 16:16:58.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:58.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:58.785
  STEP: getting /apis @ 09/27/23 16:16:58.789
  STEP: getting /apis/networking.k8s.io @ 09/27/23 16:16:58.794
  STEP: getting /apis/networking.k8s.iov1 @ 09/27/23 16:16:58.795
  STEP: creating @ 09/27/23 16:16:58.797
  STEP: getting @ 09/27/23 16:16:58.847
  STEP: listing @ 09/27/23 16:16:58.852
  STEP: watching @ 09/27/23 16:16:58.856
  Sep 27 16:16:58.856: INFO: starting watch
  STEP: cluster-wide listing @ 09/27/23 16:16:58.857
  STEP: cluster-wide watching @ 09/27/23 16:16:58.861
  Sep 27 16:16:58.861: INFO: starting watch
  STEP: patching @ 09/27/23 16:16:58.862
  STEP: updating @ 09/27/23 16:16:58.878
  Sep 27 16:16:58.901: INFO: waiting for watch events with expected annotations
  Sep 27 16:16:58.902: INFO: saw patched and updated annotations
  STEP: patching /status @ 09/27/23 16:16:58.902
  STEP: updating /status @ 09/27/23 16:16:58.919
  STEP: get /status @ 09/27/23 16:16:58.945
  STEP: deleting @ 09/27/23 16:16:58.95
  STEP: deleting a collection @ 09/27/23 16:16:58.975
  Sep 27 16:16:59.026: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8017" for this suite. @ 09/27/23 16:16:59.033
• [0.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance]
test/e2e/apps/controller_revision.go:124
  STEP: Creating a kubernetes client @ 09/27/23 16:16:59.055
  Sep 27 16:16:59.055: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename controllerrevisions @ 09/27/23 16:16:59.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:16:59.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:16:59.113
  STEP: Creating DaemonSet "e2e-zp47z-daemon-set" @ 09/27/23 16:16:59.148
  STEP: Check that daemon pods launch on every node of the cluster. @ 09/27/23 16:16:59.166
  Sep 27 16:16:59.177: INFO: Number of nodes with available pods controlled by daemonset e2e-zp47z-daemon-set: 0
  Sep 27 16:16:59.177: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  E0927 16:16:59.425096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:00.192: INFO: Number of nodes with available pods controlled by daemonset e2e-zp47z-daemon-set: 0
  Sep 27 16:17:00.192: INFO: Node conformance-1 is running 0 daemon pod, expected 1
  E0927 16:17:00.425394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:01.185: INFO: Number of nodes with available pods controlled by daemonset e2e-zp47z-daemon-set: 2
  Sep 27 16:17:01.185: INFO: Number of running nodes: 2, number of available pods: 2 in daemonset e2e-zp47z-daemon-set
  STEP: Confirm DaemonSet "e2e-zp47z-daemon-set" successfully created with "daemonset-name=e2e-zp47z-daemon-set" label @ 09/27/23 16:17:01.188
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zp47z-daemon-set" @ 09/27/23 16:17:01.194
  Sep 27 16:17:01.196: INFO: Located ControllerRevision: "e2e-zp47z-daemon-set-859db98744"
  STEP: Patching ControllerRevision "e2e-zp47z-daemon-set-859db98744" @ 09/27/23 16:17:01.199
  Sep 27 16:17:01.216: INFO: e2e-zp47z-daemon-set-859db98744 has been patched
  STEP: Create a new ControllerRevision @ 09/27/23 16:17:01.216
  Sep 27 16:17:01.233: INFO: Created ControllerRevision: e2e-zp47z-daemon-set-6bbfd67446
  STEP: Confirm that there are two ControllerRevisions @ 09/27/23 16:17:01.233
  Sep 27 16:17:01.233: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 16:17:01.236: INFO: Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zp47z-daemon-set-859db98744" @ 09/27/23 16:17:01.236
  STEP: Confirm that there is only one ControllerRevision @ 09/27/23 16:17:01.249
  Sep 27 16:17:01.250: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 16:17:01.254: INFO: Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zp47z-daemon-set-6bbfd67446" @ 09/27/23 16:17:01.257
  Sep 27 16:17:01.278: INFO: e2e-zp47z-daemon-set-6bbfd67446 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 09/27/23 16:17:01.278
  W0927 16:17:01.298307      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 09/27/23 16:17:01.298
  Sep 27 16:17:01.298: INFO: Requesting list of ControllerRevisions to confirm quantity
  E0927 16:17:01.426110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:02.302: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 16:17:02.307: INFO: Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zp47z-daemon-set-6bbfd67446=updated" @ 09/27/23 16:17:02.307
  STEP: Confirm that there is only one ControllerRevision @ 09/27/23 16:17:02.343
  Sep 27 16:17:02.343: INFO: Requesting list of ControllerRevisions to confirm quantity
  Sep 27 16:17:02.347: INFO: Found 1 ControllerRevisions
  Sep 27 16:17:02.350: INFO: ControllerRevision "e2e-zp47z-daemon-set-7b66998c8c" has revision 3
  STEP: Deleting DaemonSet "e2e-zp47z-daemon-set" @ 09/27/23 16:17:02.354
  STEP: deleting DaemonSet.extensions e2e-zp47z-daemon-set in namespace controllerrevisions-2592, will wait for the garbage collector to delete the pods @ 09/27/23 16:17:02.354
  Sep 27 16:17:02.426: INFO: Deleting DaemonSet.extensions e2e-zp47z-daemon-set took: 18.507271ms
  E0927 16:17:02.426586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:02.527: INFO: Terminating DaemonSet.extensions e2e-zp47z-daemon-set pods took: 100.835286ms
  E0927 16:17:03.426664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:04.143: INFO: Number of nodes with available pods controlled by daemonset e2e-zp47z-daemon-set: 0
  Sep 27 16:17:04.143: INFO: Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zp47z-daemon-set
  Sep 27 16:17:04.148: INFO: daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"38931"},"items":null}

  Sep 27 16:17:04.157: INFO: pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"38931"},"items":null}

  Sep 27 16:17:04.190: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2592" for this suite. @ 09/27/23 16:17:04.195
• [5.241 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance]
test/e2e/apimachinery/resource_quota.go:887
  STEP: Creating a kubernetes client @ 09/27/23 16:17:04.296
  Sep 27 16:17:04.296: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 16:17:04.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:04.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:04.424
  E0927 16:17:04.427249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 16:17:04.433
  STEP: Getting a ResourceQuota @ 09/27/23 16:17:04.462
  STEP: Updating a ResourceQuota @ 09/27/23 16:17:04.47
  STEP: Verifying a ResourceQuota was modified @ 09/27/23 16:17:04.547
  STEP: Deleting a ResourceQuota @ 09/27/23 16:17:04.554
  STEP: Verifying the deleted ResourceQuota @ 09/27/23 16:17:04.62
  Sep 27 16:17:04.624: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6592" for this suite. @ 09/27/23 16:17:04.638
• [0.369 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance]
test/e2e/apimachinery/resource_quota.go:451
  STEP: Creating a kubernetes client @ 09/27/23 16:17:04.667
  Sep 27 16:17:04.667: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename resourcequota @ 09/27/23 16:17:04.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:04.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:04.756
  STEP: Counting existing ResourceQuota @ 09/27/23 16:17:04.783
  E0927 16:17:05.428325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:06.428322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:07.428543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:08.429087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:09.429681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 09/27/23 16:17:09.788
  STEP: Ensuring resource quota status is calculated @ 09/27/23 16:17:09.802
  E0927 16:17:10.429788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:11.429914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 09/27/23 16:17:11.806
  STEP: Ensuring resource quota status captures replicaset creation @ 09/27/23 16:17:11.844
  E0927 16:17:12.430073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:13.430325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 09/27/23 16:17:13.848
  STEP: Ensuring resource quota status released usage @ 09/27/23 16:17:13.863
  E0927 16:17:14.430479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:15.431245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:15.868: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4210" for this suite. @ 09/27/23 16:17:15.871
• [11.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance]
test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 09/27/23 16:17:15.902
  Sep 27 16:17:15.902: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:17:15.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:15.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:15.957
  STEP: Setting up server cert @ 09/27/23 16:17:16.022
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:17:16.389
  STEP: Deploying the webhook pod @ 09/27/23 16:17:16.417
  E0927 16:17:16.431849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Wait for the deployment to be ready @ 09/27/23 16:17:16.456
  Sep 27 16:17:16.472: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 16:17:17.432174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:18.432344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 16:17:18.48
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:17:18.522
  E0927 16:17:19.432455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:19.522: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  Sep 27 16:17:19.528: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 09/27/23 16:17:20.057
  STEP: Creating a custom resource that should be denied by the webhook @ 09/27/23 16:17:20.091
  E0927 16:17:20.433595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:21.434161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 09/27/23 16:17:22.102
  STEP: Updating the custom resource with disallowed data should be denied @ 09/27/23 16:17:22.122
  STEP: Deleting the custom resource should be denied @ 09/27/23 16:17:22.13
  STEP: Remove the offending key and value from the custom resource data @ 09/27/23 16:17:22.138
  STEP: Deleting the updated custom resource should be successful @ 09/27/23 16:17:22.165
  Sep 27 16:17:22.183: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  E0927 16:17:22.434618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-5563" for this suite. @ 09/27/23 16:17:22.906
  STEP: Destroying namespace "webhook-markers-9141" for this suite. @ 09/27/23 16:17:22.934
• [7.056 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance]
test/e2e/common/node/configmap.go:45
  STEP: Creating a kubernetes client @ 09/27/23 16:17:22.959
  Sep 27 16:17:22.959: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename configmap @ 09/27/23 16:17:22.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:23.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:23.02
  STEP: Creating configMap configmap-792/configmap-test-15b35348-2609-42b2-b63f-5d191d530c48 @ 09/27/23 16:17:23.024
  STEP: Creating a pod to test consume configMaps @ 09/27/23 16:17:23.04
  E0927 16:17:23.435677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:24.435956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:25.436925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:26.437235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:17:27.073
  Sep 27 16:17:27.075: INFO: Trying to get logs from node conformance-1 pod pod-configmaps-8f39de5e-5015-4123-8f92-b4e5a6c8e894 container env-test: <nil>
  STEP: delete the pod @ 09/27/23 16:17:27.079
  Sep 27 16:17:27.130: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-792" for this suite. @ 09/27/23 16:17:27.133
• [4.192 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance]
test/e2e/network/service.go:3117
  STEP: Creating a kubernetes client @ 09/27/23 16:17:27.152
  Sep 27 16:17:27.152: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 16:17:27.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:27.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:27.202
  STEP: fetching services @ 09/27/23 16:17:27.205
  Sep 27 16:17:27.207: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4738" for this suite. @ 09/27/23 16:17:27.21
• [0.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance]
test/e2e/apps/statefulset.go:914
  STEP: Creating a kubernetes client @ 09/27/23 16:17:27.236
  Sep 27 16:17:27.236: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename statefulset @ 09/27/23 16:17:27.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:27.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:27.296
  STEP: Creating service test in namespace statefulset-5491 @ 09/27/23 16:17:27.299
  Sep 27 16:17:27.365: INFO: Found 0 stateful pods, waiting for 1
  E0927 16:17:27.437343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:28.437532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:29.438020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:30.438289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:31.438606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:32.439440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:33.440195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:34.440442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:35.441273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:36.441514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:37.369: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 09/27/23 16:17:37.375
  W0927 16:17:37.393634      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  Sep 27 16:17:37.398: INFO: Found 1 stateful pods, waiting for 2
  E0927 16:17:37.441995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:38.442517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:39.442682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:40.442934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:41.443133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:42.443363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:43.443418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:44.443615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:45.444106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:46.444556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:47.401: INFO: Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  Sep 27 16:17:47.401: INFO: Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 09/27/23 16:17:47.406
  STEP: Delete all of the StatefulSets @ 09/27/23 16:17:47.408
  STEP: Verify that StatefulSets have been deleted @ 09/27/23 16:17:47.434
  E0927 16:17:47.445217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:17:47.464: INFO: Deleting all statefulset in ns statefulset-5491
  Sep 27 16:17:47.486: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5491" for this suite. @ 09/27/23 16:17:47.488
• [20.310 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance]
test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 09/27/23 16:17:47.547
  Sep 27 16:17:47.547: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption @ 09/27/23 16:17:47.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:17:47.606
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:17:47.608
  Sep 27 16:17:47.650: INFO: Waiting up to 1m0s for all nodes to be ready
  E0927 16:17:48.446160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:49.446445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:50.446576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:51.446593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:52.446741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:53.446931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:54.447250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:55.447317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:56.447529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:57.447694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:58.447907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:17:59.448073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:00.448671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:01.448948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:02.449240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:03.449645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:04.449905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:05.450168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:06.450889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:07.451020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:08.451172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:09.451359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:10.451542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:11.452494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:12.453064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:13.453409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:14.454536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:15.455196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:16.456247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:17.456415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:18.456492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:19.456728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:20.456912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:21.457217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:22.457735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:23.458414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:24.458283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:25.458521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:26.458639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:27.458877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:28.459915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:29.460111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:30.460720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:31.460862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:32.461010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:33.461224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:34.462312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:35.462834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:36.463024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:37.463407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:38.463361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:39.463767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:40.464622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:41.464706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:42.465448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:43.465668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:44.465791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:45.466434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:46.467533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:47.467607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:18:47.713: INFO: Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 09/27/23 16:18:47.716
  Sep 27 16:18:47.716: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sched-preemption-path @ 09/27/23 16:18:47.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:18:47.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:18:47.762
  Sep 27 16:18:47.826: INFO: PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  Sep 27 16:18:47.828: INFO: PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  Sep 27 16:18:47.862: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 16:18:47.891: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2605" for this suite. @ 09/27/23 16:18:47.959
  STEP: Destroying namespace "sched-preemption-4171" for this suite. @ 09/27/23 16:18:47.972
• [60.440 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:527
  STEP: Creating a kubernetes client @ 09/27/23 16:18:47.988
  Sep 27 16:18:47.988: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 16:18:47.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:18:48.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:18:48.027
  STEP: Creating pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537 @ 09/27/23 16:18:48.035
  E0927 16:18:48.468049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:49.468299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 16:18:50.056
  Sep 27 16:18:50.058: INFO: Initial restart count of pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 is 0
  Sep 27 16:18:50.061: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:18:50.468790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:51.468943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:18:52.065: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:18:52.470058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:53.470999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:18:54.069: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:18:54.471191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:55.471856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:18:56.073: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:18:56.472655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:57.472858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:18:58.077: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:18:58.472994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:18:59.473931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:00.081: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:00.474898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:01.475160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:02.086: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:02.476157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:03.476380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:04.090: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:04.477258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:05.477470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:06.094: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:06.478283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:07.478683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:08.098: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:08.479483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:09.479663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:10.102: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:10.480239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:11.480747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:12.107: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:12.480947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:13.481056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:14.111: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:14.481788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:15.482484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:16.114: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:16.483423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:17.483666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:18.118: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:18.483911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:19.484198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:20.121: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:20.484413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:21.484627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:22.126: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:22.485377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:23.485452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:24.130: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:24.485579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:25.486386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:26.133: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:26.486659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:27.486868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:28.136: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:28.487533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:29.487582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:30.140: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:30.488348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:31.488687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:32.145: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:32.489543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:33.489607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:34.147: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:34.489978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:35.490464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:36.152: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:36.490836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:37.491200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:38.155: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:38.492185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:39.492509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:40.158: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:40.493325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:41.493550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:42.162: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:42.494537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:43.495535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:44.165: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:44.496440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:45.496795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:46.167: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:46.497047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:47.497752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:48.171: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:48.498749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:49.498953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:50.174: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:50.499367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:51.499415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:52.178: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:52.499629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:53.499767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:54.181: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:54.500670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:55.501381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:56.184: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:56.501862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:57.502078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:19:58.188: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:19:58.502786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:19:59.503033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:00.192: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:00.503751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:01.503972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:02.196: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:02.504584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:03.505467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:04.200: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:04.505670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:05.506490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:06.204: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:06.506661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:07.507425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:08.208: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:08.507648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:09.507905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:10.212: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:10.507986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:11.508415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:12.217: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:12.508458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:13.508936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:14.221: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:14.509400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:15.509610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:16.226: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:16.510703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:17.511025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:18.229: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:18.512097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:19.512503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:20.233: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:20.512758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:21.512851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:22.238: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:22.513488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:23.514128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:24.242: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:24.514583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:25.515215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:26.245: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:26.516037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:27.516310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:28.248: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:28.516673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:29.516851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:30.251: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:30.518025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:31.518240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:32.254: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:32.519353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:33.520527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:34.258: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:34.521577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:35.522309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:36.261: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:36.522977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:37.523312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:38.266: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:38.523599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:39.524303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:40.269: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:40.524418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:41.525070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:42.274: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:42.525174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:43.525253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:44.278: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:44.525411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:45.525513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:46.282: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:46.525856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:47.526590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:48.286: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:48.527178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:49.527394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:50.291: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:50.527592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:51.527763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:52.294: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:52.528214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:53.528512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:54.299: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:54.528665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:55.528875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:56.303: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:56.529088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:57.529301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:20:58.306: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:20:58.529341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:20:59.529705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:00.311: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:00.529808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:01.529997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:02.315: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:02.530778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:03.531104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:04.320: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:04.531943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:05.532580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:06.324: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:06.533184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:07.533511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:08.333: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:08.534507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:09.534706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:10.337: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:10.535426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:11.535627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:12.341: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:12.535725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:13.535819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:14.344: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:14.536480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:15.537164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:16.348: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:16.537362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:17.537625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:18.350: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:18.538333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:19.538630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:20.353: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:20.538731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:21.538804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:22.358: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:22.539405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:23.539656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:24.361: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:24.540702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:25.541352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:26.364: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:26.542403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:27.542622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:28.367: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:28.542862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:29.543059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:30.370: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:30.544044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:31.544307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:32.374: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:32.545086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:33.545848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:34.378: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:34.546672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:35.547332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:36.382: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:36.548379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:37.548697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:38.384: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:38.549579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:39.549792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:40.388: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:40.550527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:41.551029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:42.391: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:42.551156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:43.551696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:44.394: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:44.551876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:45.552381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:46.398: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:46.552531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:47.552946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:48.401: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:48.553589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:49.553821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:50.404: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:50.554307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:51.554548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:52.407: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:52.555283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:53.555566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:54.411: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:54.556082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:55.556834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:56.416: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:56.557454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:57.558015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:21:58.420: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:21:58.558815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:21:59.559040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:00.424: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:00.559861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:01.560166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:02.428: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:02.561090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:03.561495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:04.432: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:04.561654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:05.562493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:06.435: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:06.563082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:07.563620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:08.440: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:08.564336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:09.564681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:10.457: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:10.565656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:11.565792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:12.460: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:12.565878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:13.566027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:14.464: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:14.566970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:15.567401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:16.468: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:16.568342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:17.568606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:18.472: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:18.569230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:19.569632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:20.476: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:20.570051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:21.570255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:22.480: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:22.570895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:23.571197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:24.484: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:24.572029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:25.572736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:26.488: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:26.573675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:27.573999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:28.492: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:28.574923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:29.575265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:30.496: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:30.576293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:31.576468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:32.500: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:32.576855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:33.577275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:34.505: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:34.577805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:35.578693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:36.509: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:36.579618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:37.579854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:38.513: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:38.580006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:39.580368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:40.518: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:40.581294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:41.581374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:42.521: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:42.581829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:43.582198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:44.525: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:44.583130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:45.583271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:46.529: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:46.584140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:47.584594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:48.535: INFO: Get pod test-grpc-ab2915c4-c2b7-4917-ade0-3032aff66c82 in namespace container-probe-7537
  E0927 16:22:48.584912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:49.585382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:50.536: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 16:22:50.54
  E0927 16:22:50.586258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "container-probe-7537" for this suite. @ 09/27/23 16:22:50.615
• [242.656 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2187
  STEP: Creating a kubernetes client @ 09/27/23 16:22:50.646
  Sep 27 16:22:50.647: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 16:22:50.647
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:22:50.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:22:50.698
  STEP: creating service in namespace services-3371 @ 09/27/23 16:22:50.701
  STEP: creating service affinity-clusterip-transition in namespace services-3371 @ 09/27/23 16:22:50.701
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3371 @ 09/27/23 16:22:50.735
  I0927 16:22:50.751294      21 runners.go:197] Created replication controller with name: affinity-clusterip-transition, namespace: services-3371, replica count: 3
  E0927 16:22:51.586872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:52.587727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:53.587941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 16:22:53.802355      21 runners.go:197] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 16:22:53.807: INFO: Creating new exec pod
  E0927 16:22:54.588984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:55.589893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:56.590138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:22:56.830: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3371 exec execpod-affinity2hms8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  Sep 27 16:22:56.968: INFO: stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  Sep 27 16:22:56.969: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:22:56.969: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3371 exec execpod-affinity2hms8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.165 80'
  Sep 27 16:22:57.103: INFO: stderr: "+ + echonc hostName -v\n -t -w 2 10.152.183.165 80\nConnection to 10.152.183.165 80 port [tcp/http] succeeded!\n"
  Sep 27 16:22:57.104: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:22:57.120: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3371 exec execpod-affinity2hms8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  Sep 27 16:22:57.299: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Sep 27 16:22:57.299: INFO: stdout: "\naffinity-clusterip-transition-zml7p\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-zml7p\naffinity-clusterip-transition-zml7p\naffinity-clusterip-transition-k2vmv\naffinity-clusterip-transition-k2vmv\naffinity-clusterip-transition-k2vmv\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-k2vmv\naffinity-clusterip-transition-zml7p\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-zml7p\naffinity-clusterip-transition-k2vmv"
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-zml7p
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-zml7p
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-zml7p
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-k2vmv
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-k2vmv
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-k2vmv
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-k2vmv
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-zml7p
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-zml7p
  Sep 27 16:22:57.299: INFO: Received response from host: affinity-clusterip-transition-k2vmv
  Sep 27 16:22:57.318: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-3371 exec execpod-affinity2hms8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.165:80/ ; done'
  Sep 27 16:22:57.530: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.165:80/\n"
  Sep 27 16:22:57.530: INFO: stdout: "\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm\naffinity-clusterip-transition-f2pqm"
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Received response from host: affinity-clusterip-transition-f2pqm
  Sep 27 16:22:57.530: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 16:22:57.543: INFO: Cleaning up the exec pod
  E0927 16:22:57.590414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3371, will wait for the garbage collector to delete the pods @ 09/27/23 16:22:57.624
  Sep 27 16:22:57.700: INFO: Deleting ReplicationController affinity-clusterip-transition took: 15.667223ms
  Sep 27 16:22:57.802: INFO: Terminating ReplicationController affinity-clusterip-transition pods took: 101.20752ms
  E0927 16:22:58.590429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:22:59.591062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:00.591512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3371" for this suite. @ 09/27/23 16:23:01.156
• [10.524 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance]
test/e2e/network/service.go:2165
  STEP: Creating a kubernetes client @ 09/27/23 16:23:01.172
  Sep 27 16:23:01.172: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 16:23:01.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:23:01.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:23:01.224
  STEP: creating service in namespace services-4331 @ 09/27/23 16:23:01.228
  STEP: creating service affinity-clusterip in namespace services-4331 @ 09/27/23 16:23:01.228
  STEP: creating replication controller affinity-clusterip in namespace services-4331 @ 09/27/23 16:23:01.262
  I0927 16:23:01.299248      21 runners.go:197] Created replication controller with name: affinity-clusterip, namespace: services-4331, replica count: 3
  E0927 16:23:01.592164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:02.592984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:03.593243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0927 16:23:04.350473      21 runners.go:197] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  Sep 27 16:23:04.357: INFO: Creating new exec pod
  E0927 16:23:04.593422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:05.594425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:06.595244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:07.391: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4331 exec execpod-affinity57x57 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  Sep 27 16:23:07.519: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  Sep 27 16:23:07.519: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:23:07.519: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4331 exec execpod-affinity57x57 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.152.183.79 80'
  E0927 16:23:07.596216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:07.642: INFO: stderr: "+ echo hostName\n+ nc -v -t -w 2 10.152.183.79 80\nConnection to 10.152.183.79 80 port [tcp/http] succeeded!\n"
  Sep 27 16:23:07.642: INFO: stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  Sep 27 16:23:07.643: INFO: Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-4223319720 --namespace=services-4331 exec execpod-affinity57x57 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.152.183.79:80/ ; done'
  Sep 27 16:23:07.844: INFO: stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.152.183.79:80/\n"
  Sep 27 16:23:07.844: INFO: stdout: "\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx\naffinity-clusterip-dkjgx"
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.844: INFO: Received response from host: affinity-clusterip-dkjgx
  Sep 27 16:23:07.845: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  Sep 27 16:23:07.848: INFO: Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-4331, will wait for the garbage collector to delete the pods @ 09/27/23 16:23:07.881
  Sep 27 16:23:07.960: INFO: Deleting ReplicationController affinity-clusterip took: 16.672732ms
  Sep 27 16:23:08.061: INFO: Terminating ReplicationController affinity-clusterip pods took: 100.858977ms
  E0927 16:23:08.597224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:09.598014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:10.598959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-4331" for this suite. @ 09/27/23 16:23:11.227
• [10.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Conformance]
test/e2e/common/node/sysctl.go:77
  STEP: Creating a kubernetes client @ 09/27/23 16:23:11.245
  Sep 27 16:23:11.245: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename sysctl @ 09/27/23 16:23:11.246
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:23:11.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:23:11.297
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 09/27/23 16:23:11.3
  STEP: Watching for error events or started pod @ 09/27/23 16:23:11.316
  E0927 16:23:11.599621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:12.599764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 09/27/23 16:23:13.321
  E0927 16:23:13.599865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:14.600631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 09/27/23 16:23:15.331
  STEP: Getting logs from the pod @ 09/27/23 16:23:15.331
  STEP: Checking that the sysctl is actually updated @ 09/27/23 16:23:15.345
  Sep 27 16:23:15.345: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4137" for this suite. @ 09/27/23 16:23:15.349
• [4.117 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance]
test/e2e/common/node/container_probe.go:214
  STEP: Creating a kubernetes client @ 09/27/23 16:23:15.362
  Sep 27 16:23:15.362: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename container-probe @ 09/27/23 16:23:15.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:23:15.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:23:15.414
  STEP: Creating pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250 @ 09/27/23 16:23:15.416
  E0927 16:23:15.601770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:16.602139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 09/27/23 16:23:17.443
  Sep 27 16:23:17.447: INFO: Initial restart count of pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c is 0
  Sep 27 16:23:17.449: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:17.602982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:18.603206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:19.452: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:19.604216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:20.604521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:21.456: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:21.604902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:22.605728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:23.459: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:23.606787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:24.607443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:25.461: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:25.607909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:26.608233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:27.464: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:27.608694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:28.608956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:29.467: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:29.609768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:30.609972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:31.470: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:31.610355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:32.610544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:33.473: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:33.610804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:34.611093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:35.476: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:35.612068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:36.612210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:37.480: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:37.612457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:38.612603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:39.483: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:39.613691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:40.613867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:41.487: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:41.614285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:42.614546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:43.491: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:43.615469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:44.615527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:45.494: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:45.616122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:46.616221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:47.497: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:47.617200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:48.617395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:49.501: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:49.617882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:50.618057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:51.504: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:51.618835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:52.619012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:53.508: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:53.619528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:54.619710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:55.511: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:55.620211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:56.620999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:57.515: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:57.622060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:23:58.622261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:23:59.518: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:23:59.622989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:00.624076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:01.522: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:01.624527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:02.624620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:03.525: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:03.624912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:04.625028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:05.529: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:05.625595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:06.626456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:07.533: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:07.627013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:08.627256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:09.537: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:09.627900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:10.629101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:11.542: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:11.629157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:12.629443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:13.546: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:13.629790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:14.630502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:15.550: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:15.630811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:16.631010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:17.554: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:17.631711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:18.631934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:19.558: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:19.632935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:20.633520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:21.563: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:21.634515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:22.634649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:23.566: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:23.635141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:24.635111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:25.573: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:25.635688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:26.635812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:27.576: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:27.636077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:28.636348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:29.580: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:29.637287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:30.637603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:31.585: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:31.638130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:32.638216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:33.588: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:33.638840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:34.639074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:35.592: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:35.639472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:36.639692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:37.595: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:37.640113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:38.640330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:39.599: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:39.641048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:40.641319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:41.603: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:41.641635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:42.641964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:43.607: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:43.642456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:44.642705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:45.611: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:45.643023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:46.643334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:47.615: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:47.643763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:48.643875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:49.634: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:49.644411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:50.645482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:51.638: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:51.646191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:52.646450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:53.642: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:53.647553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:54.647839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:55.646: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:55.648828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:56.649110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:57.650006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:57.651: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:24:58.650225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:24:59.650911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:24:59.655: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:00.651586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:01.651754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:01.660: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:02.651846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:03.652298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:03.664: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:04.652331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:05.653395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:05.667: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:06.653676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:07.653974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:07.671: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:08.654226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:09.654563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:09.675: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:10.654675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:11.654907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:11.679: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:12.655080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:13.655380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:13.683: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:14.655410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:15.655531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:15.686: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:16.655694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:17.655899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:17.689: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:18.656048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:19.656394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:19.693: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:20.657626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:21.657748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:21.697: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:22.658604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:23.658746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:23.701: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:24.659191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:25.659487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:25.704: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:26.660231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:27.660544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:27.707: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:28.660725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:29.661112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:29.711: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:30.661791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:31.661854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:31.714: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:32.662499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:33.662740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:33.717: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:34.663684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:35.664334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:35.722: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:36.664436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:37.664601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:37.725: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:38.664807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:39.664916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:39.730: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:40.665903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:41.666224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:41.735: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:42.667129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:43.667264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:43.739: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:44.667678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:45.668681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:45.742: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:46.668857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:47.669096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:47.747: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:48.670030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:49.670330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:49.750: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:50.671005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:51.671618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:51.758: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:52.672386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:53.672960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:53.765: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:54.673567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:55.674251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:55.770: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:56.674362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:57.674655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:57.774: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:25:58.675040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:25:59.675137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:25:59.779: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:00.675308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:01.676022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:01.786: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:02.676744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:03.676980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:03.790: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:04.677262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:05.677629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:05.794: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:06.677856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:07.678155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:07.797: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:08.678350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:09.678527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:09.802: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:10.678783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:11.679046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:11.806: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:12.679112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:13.679444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:13.810: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:14.679682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:15.679933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:15.815: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:16.680980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:17.681317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:17.818: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:18.681529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:19.681928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:19.821: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:20.682565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:21.683130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:21.825: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:22.683762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:23.684334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:23.839: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:24.685218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:25.685305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:25.842: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:26.685480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:27.685708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:27.846: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:28.685856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:29.686141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:29.851: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:30.687054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:31.687351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:31.855: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:32.687827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:33.687993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:33.860: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:34.688455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:35.688697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:35.864: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:36.689044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:37.689137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:37.868: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:38.689388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:39.689682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:39.872: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:40.690530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:41.690680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:41.877: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:42.691031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:43.691367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:43.881: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:44.691723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:45.692534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:45.885: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:46.692697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:47.693087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:47.888: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:48.693177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:49.693461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:49.892: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:50.693685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:51.694025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:51.897: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:52.695045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:53.695473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:53.905: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:54.695616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:55.696120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:55.909: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:56.696348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:57.696636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:57.913: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:26:58.696674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:26:59.696931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:26:59.917: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:00.697583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:01.697805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:01.922: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:02.698001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:03.698955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:03.926: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:04.699049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:05.699846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:05.929: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:06.700798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:07.701271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:07.933: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:08.701577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:09.702391      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:09.938: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:10.703069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:11.703287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:11.942: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:12.703798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:13.703944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:13.947: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:14.704729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:15.705557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:15.951: INFO: Get pod test-webserver-bebee128-4509-445d-96db-1c3cc2fa225c in namespace container-probe-9250
  E0927 16:27:16.705723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:17.706136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:17.952: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: deleting the pod @ 09/27/23 16:27:17.955
  STEP: Destroying namespace "container-probe-9250" for this suite. @ 09/27/23 16:27:18.009
• [242.667 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance]
test/e2e/network/service.go:3142
  STEP: Creating a kubernetes client @ 09/27/23 16:27:18.03
  Sep 27 16:27:18.030: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename services @ 09/27/23 16:27:18.031
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:18.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:18.081
  STEP: creating an Endpoint @ 09/27/23 16:27:18.084
  STEP: waiting for available Endpoint @ 09/27/23 16:27:18.096
  STEP: listing all Endpoints @ 09/27/23 16:27:18.097
  STEP: updating the Endpoint @ 09/27/23 16:27:18.099
  STEP: fetching the Endpoint @ 09/27/23 16:27:18.113
  STEP: patching the Endpoint @ 09/27/23 16:27:18.115
  STEP: fetching the Endpoint @ 09/27/23 16:27:18.136
  STEP: deleting the Endpoint by Collection @ 09/27/23 16:27:18.138
  STEP: waiting for Endpoint deletion @ 09/27/23 16:27:18.152
  STEP: fetching the Endpoint @ 09/27/23 16:27:18.153
  Sep 27 16:27:18.157: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7646" for this suite. @ 09/27/23 16:27:18.159
• [0.142 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance]
test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 09/27/23 16:27:18.173
  Sep 27 16:27:18.173: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename pods @ 09/27/23 16:27:18.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:18.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:18.204
  STEP: creating pod @ 09/27/23 16:27:18.212
  E0927 16:27:18.706156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:19.706215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:20.242: INFO: Pod pod-hostip-a57d5f9b-373a-4c6e-93db-c15519923109 has hostIP: 10.84.220.167
  Sep 27 16:27:20.242: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3345" for this suite. @ 09/27/23 16:27:20.244
• [2.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 09/27/23 16:27:20.266
  Sep 27 16:27:20.266: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename secrets @ 09/27/23 16:27:20.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:20.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:20.313
  STEP: Creating secret with name secret-test-map-44f50332-ebe7-47b1-8fae-7e4a975fdd07 @ 09/27/23 16:27:20.315
  STEP: Creating a pod to test consume secrets @ 09/27/23 16:27:20.329
  E0927 16:27:20.706623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:21.706702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:22.706888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:23.707180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:27:24.352
  Sep 27 16:27:24.354: INFO: Trying to get logs from node conformance-1 pod pod-secrets-d092eefc-bbc2-48ee-b6a1-3c384f5796d0 container secret-volume-test: <nil>
  STEP: delete the pod @ 09/27/23 16:27:24.364
  Sep 27 16:27:24.404: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3319" for this suite. @ 09/27/23 16:27:24.406
• [4.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/empty_dir.go:107
  STEP: Creating a kubernetes client @ 09/27/23 16:27:24.42
  Sep 27 16:27:24.420: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 16:27:24.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:24.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:24.487
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 09/27/23 16:27:24.503
  E0927 16:27:24.707555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:25.707976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:26.708113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:27.708308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:27:28.534
  Sep 27 16:27:28.536: INFO: Trying to get logs from node conformance-1 pod pod-53c90898-7f36-46c6-a81f-bbd8dc29f237 container test-container: <nil>
  STEP: delete the pod @ 09/27/23 16:27:28.539
  Sep 27 16:27:28.582: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1072" for this suite. @ 09/27/23 16:27:28.584
• [4.176 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance]
test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 09/27/23 16:27:28.597
  Sep 27 16:27:28.597: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:27:28.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:28.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:28.638
  STEP: Setting up server cert @ 09/27/23 16:27:28.682
  E0927 16:27:28.709184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:27:28.829
  STEP: Deploying the webhook pod @ 09/27/23 16:27:28.857
  STEP: Wait for the deployment to be ready @ 09/27/23 16:27:28.884
  Sep 27 16:27:28.891: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 16:27:29.709685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:30.710097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 16:27:30.898
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:27:30.923
  E0927 16:27:31.710493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:31.923: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 09/27/23 16:27:31.928
  STEP: create a pod that should be updated by the webhook @ 09/27/23 16:27:31.948
  Sep 27 16:27:31.967: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4882" for this suite. @ 09/27/23 16:27:32.136
  STEP: Destroying namespace "webhook-markers-2377" for this suite. @ 09/27/23 16:27:32.161
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance]
test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 09/27/23 16:27:32.178
  Sep 27 16:27:32.178: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename csiinlinevolumes @ 09/27/23 16:27:32.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:32.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:32.214
  STEP: Creating two CSIDrivers @ 09/27/23 16:27:32.216
  STEP: Getting "inline-driver-18faf27d-4460-4cfb-a80c-f48cde798907" & "inline-driver-eda5d400-ab97-490b-9e88-b1a23aec7df8" @ 09/27/23 16:27:32.245
  STEP: Patching the CSIDriver "inline-driver-eda5d400-ab97-490b-9e88-b1a23aec7df8" @ 09/27/23 16:27:32.249
  STEP: Updating the CSIDriver "inline-driver-eda5d400-ab97-490b-9e88-b1a23aec7df8" @ 09/27/23 16:27:32.263
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-2820" @ 09/27/23 16:27:32.28
  STEP: Deleting CSIDriver "inline-driver-18faf27d-4460-4cfb-a80c-f48cde798907" @ 09/27/23 16:27:32.282
  STEP: Confirm deletion of CSIDriver "inline-driver-18faf27d-4460-4cfb-a80c-f48cde798907" @ 09/27/23 16:27:32.296
  STEP: Deleting CSIDriver "inline-driver-eda5d400-ab97-490b-9e88-b1a23aec7df8" via DeleteCollection @ 09/27/23 16:27:32.298
  STEP: Confirm deletion of CSIDriver "inline-driver-eda5d400-ab97-490b-9e88-b1a23aec7df8" @ 09/27/23 16:27:32.312
  Sep 27 16:27:32.313: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-2820" for this suite. @ 09/27/23 16:27:32.316
• [0.153 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance]
test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 09/27/23 16:27:32.333
  Sep 27 16:27:32.333: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename disruption @ 09/27/23 16:27:32.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:32.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:32.375
  STEP: Waiting for the pdb to be processed @ 09/27/23 16:27:32.388
  E0927 16:27:32.711091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:33.711233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 09/27/23 16:27:34.488
  Sep 27 16:27:34.490: INFO: running pods: 0 < 3
  E0927 16:27:34.712089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:35.712387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:36.496: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9774" for this suite. @ 09/27/23 16:27:36.498
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance]
test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 09/27/23 16:27:36.521
  Sep 27 16:27:36.521: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename webhook @ 09/27/23 16:27:36.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:36.559
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:36.561
  STEP: Setting up server cert @ 09/27/23 16:27:36.6
  E0927 16:27:36.712803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 09/27/23 16:27:36.756
  STEP: Deploying the webhook pod @ 09/27/23 16:27:36.78
  STEP: Wait for the deployment to be ready @ 09/27/23 16:27:36.808
  Sep 27 16:27:36.812: INFO: new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0927 16:27:37.713070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:38.713413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:38.819: INFO: deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2023, time.September, 27, 16, 27, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 16, 27, 36, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2023, time.September, 27, 16, 27, 36, 0, time.Local), LastTransitionTime:time.Date(2023, time.September, 27, 16, 27, 36, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-7646f658cc\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0927 16:27:39.713470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:40.713518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 09/27/23 16:27:40.824
  STEP: Verifying the service has paired with the endpoint @ 09/27/23 16:27:40.873
  E0927 16:27:41.713753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:41.874: INFO: Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/27/23 16:27:41.881
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 09/27/23 16:27:41.921
  STEP: Creating a dummy validating-webhook-configuration object @ 09/27/23 16:27:41.949
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 09/27/23 16:27:41.975
  STEP: Creating a dummy mutating-webhook-configuration object @ 09/27/23 16:27:42
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 09/27/23 16:27:42.039
  Sep 27 16:27:42.059: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1394" for this suite. @ 09/27/23 16:27:42.323
  STEP: Destroying namespace "webhook-markers-9627" for this suite. @ 09/27/23 16:27:42.369
• [5.883 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance]
test/e2e/common/storage/downwardapi_volume.go:69
  STEP: Creating a kubernetes client @ 09/27/23 16:27:42.406
  Sep 27 16:27:42.406: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename downward-api @ 09/27/23 16:27:42.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:42.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:42.5
  STEP: Creating a pod to test downward API volume plugin @ 09/27/23 16:27:42.507
  E0927 16:27:42.714789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:43.715022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:44.715399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:45.715642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 09/27/23 16:27:46.546
  Sep 27 16:27:46.548: INFO: Trying to get logs from node conformance-1 pod downwardapi-volume-9d105a11-d4d5-4436-9ad9-be73291a865a container client-container: <nil>
  STEP: delete the pod @ 09/27/23 16:27:46.552
  Sep 27 16:27:46.592: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4518" for this suite. @ 09/27/23 16:27:46.596
• [4.203 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance]
test/e2e/common/storage/empty_dir.go:227
  STEP: Creating a kubernetes client @ 09/27/23 16:27:46.612
  Sep 27 16:27:46.612: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename emptydir @ 09/27/23 16:27:46.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:46.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:46.672
  STEP: Creating Pod @ 09/27/23 16:27:46.675
  E0927 16:27:46.716426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:47.716741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 09/27/23 16:27:48.699
  Sep 27 16:27:48.699: INFO: ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5193 PodName:pod-sharedvolume-a0e9aec9-f8a9-4879-ab71-bce9339a0ee3 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  Sep 27 16:27:48.699: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  Sep 27 16:27:48.700: INFO: ExecWithOptions: Clientset creation
  Sep 27 16:27:48.700: INFO: ExecWithOptions: execute(POST https://10.152.183.1:443/api/v1/namespaces/emptydir-5193/pods/pod-sharedvolume-a0e9aec9-f8a9-4879-ab71-bce9339a0ee3/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  E0927 16:27:48.717747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:48.774: INFO: Exec stderr: ""
  Sep 27 16:27:48.774: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5193" for this suite. @ 09/27/23 16:27:48.778
• [2.190 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance]
test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 09/27/23 16:27:48.809
  Sep 27 16:27:48.809: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename watch @ 09/27/23 16:27:48.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:48.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:48.852
  STEP: getting a starting resourceVersion @ 09/27/23 16:27:48.863
  STEP: starting a background goroutine to produce watch events @ 09/27/23 16:27:48.866
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 09/27/23 16:27:48.866
  E0927 16:27:49.717834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:50.718426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:51.626: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7777" for this suite. @ 09/27/23 16:27:51.664
  E0927 16:27:51.719432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [2.918 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance]
test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 09/27/23 16:27:51.73
  Sep 27 16:27:51.730: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  STEP: Building a namespace api object, basename field-validation @ 09/27/23 16:27:51.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 09/27/23 16:27:51.782
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 09/27/23 16:27:51.794
  Sep 27 16:27:51.797: INFO: >>> kubeConfig: /tmp/kubeconfig-4223319720
  E0927 16:27:52.719666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0927 16:27:53.720067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0927 16:27:54.348511      21 warnings.go:70] unknown field "alpha"
  W0927 16:27:54.348719      21 warnings.go:70] unknown field "beta"
  W0927 16:27:54.348842      21 warnings.go:70] unknown field "delta"
  W0927 16:27:54.348951      21 warnings.go:70] unknown field "epsilon"
  W0927 16:27:54.349055      21 warnings.go:70] unknown field "gamma"
  E0927 16:27:54.720761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  Sep 27 16:27:54.921: INFO: Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5316" for this suite. @ 09/27/23 16:27:54.933
• [3.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
test/e2e/e2e.go:88
  Sep 27 16:27:54.951: INFO: Running AfterSuite actions on node 1
  Sep 27 16:27:54.951: INFO: Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
test/e2e/e2e_test.go:157
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
test/e2e/framework/test_context.go:585
[ReportAfterSuite] PASSED [0.055 seconds]
------------------------------

Ran 380 of 7387 Specs in 6169.337 seconds
SUCCESS! -- 380 Passed | 0 Failed | 0 Pending | 7007 Skipped
PASS

Ginkgo ran 1 suite in 1h42m49.934849012s
Test Suite Passed
